{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "68e0b640-dcd3-4f59-a80b-407beea0283b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "76cb1495-d66d-4431-812f-6ec7f4d51eb3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec91e980-5831-4c7f-bcf0-e158d5ad5ee4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a37ed40-14d5-4ed8-8650-f2e5d724755a"
                }
              }
            ]
          },
          {
            "id": "9f04a022-cc78-462e-914a-fbf56b44c474",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a93bc753-ea83-49a9-b2ba-eb7e390ef5aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d6153c2-c1e3-44f2-9c54-b742462480e9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "344abd19-f7f5-4e0f-b9d8-86693086978c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6f97a4fd-f075-48fd-81ef-35e7daed8edc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ae2ed91-29a4-4076-9892-3b1894ce8986",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e48b0a6f-2823-4125-9ffc-3181dfee4903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23285a69-dfb0-4edd-8bc9-cf52f968eda6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f45e0a5-348d-47fe-a330-17546368495e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86064be9-1cba-4f31-9a3a-57feb4dd6f69"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71eece35-ae0b-4fc2-9b67-fe25782040a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8df3f857-6ff7-4a58-b2df-cc0b3e228a8a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33ae564c-5934-4bd1-b781-1bac2db5060c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "605f245e-a2db-4a03-8742-d7d705f923e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19617626-83af-41ac-b111-79388a149995",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9312a24-a447-4251-b888-8aa7534bd63d"
            }
          }
        ]
      },
      {
        "id": "8d4c5443-f8f1-4c49-beb0-29baa225c487",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aa48daa0-48e1-44b6-8803-07cddd76758a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af799c1d-3bd1-4487-a57b-d41acf1588ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38a6f442-a497-4891-b242-430a7d77dcbf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb484dd-b948-4d48-ab2e-59f1e45771c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5a41169-44eb-4030-b101-aff2e9c4776e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da81486b-ebaa-449b-b9cf-c407c036a869",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c361b4-7a33-4314-9536-8c59612241f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80af7ef7-b83c-425a-b642-4061ac679088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f60d62-76ed-45a7-bb70-85a908a91c3e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df7101c-993a-4f1b-ac5a-d62605c643a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acb0a44a-0919-4d08-a170-1f4b612b095a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d86bde51-128c-4d52-ad81-a0b7a9afca55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32c5b5ce-879b-4081-b8f6-934e402576f0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6827eb41-55ca-494d-8f5e-e24d3b07f878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1917f00-e737-42e5-b9d4-9cff6731d6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7872c78-3669-48da-bd71-fa308d678e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84eb1130-b765-476c-ad29-2ef2982110a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43e4ded-eefa-43ed-b775-6ab469eb09d7",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a1994b-20c6-46a3-befc-284fc75e89b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0a11b8a-bcec-47fd-8b17-5e9debfa6293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84a9fb6-60c9-4228-88e4-4747a99f1143",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5abda6c6-4afc-40ae-b5b9-c66d14181a7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d7c6f357-7057-4f83-bed9-ddebd3fd4ec1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d37860e0-2844-47ab-a40d-7af61d031dfe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc0b7e49-5527-4a93-b677-8fa275fd9c94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "64b4f543-856b-42b3-a980-b5df7a2eb703"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f4bb639-b4bf-4b20-ab3c-9cdb776bb044",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a5ab947e-c146-4738-abb9-d13632587baa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bdfd625-76ce-4073-a547-a0b7f90ad681",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04d1223a-cdf3-49c9-86c6-5607a5c8d774"
            }
          }
        ]
      },
      {
        "id": "09bda89c-c9f2-4573-8530-5ad2bb4a903e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "31c47cea-0c12-4b29-b98b-857c07a9865d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "035eee16-ebd3-4348-867b-f042f86d71e3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f9f2db7e-34c6-40cc-a66c-8114c2621e9a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af67f940-004c-4372-8bcc-5ad3fd3611b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53022dee-de37-4a1d-ae89-5ed63a156b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355446de-3269-4e7c-82a7-a86d6eb37903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94fe4759-81b2-4146-8d7f-129947b3369a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f615c3-1ac3-4be9-b3f9-cbf7ef3dfb21",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0c5d38-f89f-4bd9-9307-24cc08358518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909b483f-12f1-43f4-ad59-ded98f8bcd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81a989c-a052-48ce-a06a-3166c6ae916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab79171a-c62c-4cea-bf64-70262de2205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ca3f7c-5ae3-403f-86f5-86e8994d8773",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf14a8c2-03b6-4c5c-8e85-75aafe7f06bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d465fa2c-2b99-421a-9382-d9fab9caa797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e63ba9-b64a-4c94-903a-9158f95b04e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6771179-8040-4c5e-982b-9816c32f7460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad50ffc-765f-4b7e-9dfe-83affef5debd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e4bd69-5e8f-4301-936a-2c1c1e2d9da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0088c9-f22b-42c5-b7b0-7d2b15db954e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43a0039-9a5b-44c3-ae9b-4b6473da2e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1010842-b0e5-470d-bd76-9ba1f2de5d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249d2959-bd5c-4c7b-9e79-22c1f63ae739",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1367da54-9cfb-40d2-89a3-54b1d3b15804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4e491a-fef6-463f-a252-b669985b055f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3907c71f-983c-4db9-b3c0-9277c16fcc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a4706c1-4afa-43f3-870c-7f7ddc593f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1897da1-6937-48c9-b813-c7f75515a3f7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124eb756-856d-4e90-8241-70bd450cd0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d41b50-ed7a-4813-b0db-249286a58b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205b2249-409f-430d-8c00-a6821b48c418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71333b4e-45bb-47ea-a7af-8959d1496fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a68c8c-7212-40b5-96d1-8f7a44a10d07",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e5bf63-c894-4863-bb72-bad1b8c94d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeae387e-9983-4a71-9f91-0cb54533dd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddb51ad-f61b-4395-8de4-71ad59acdc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e28fc68-4dfb-46a5-a1ee-76f035655372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781f4740-67c3-4881-ae9b-4face5ffb8f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8963797-7134-47bf-acff-0189e9871277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c047ae-501a-488b-8385-f35175811542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2203a6a1-fd11-45d4-8f38-dd864acd9b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a77556d8-5467-44ee-bfc3-26a517362173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025c3bda-7e21-4ede-86fc-447c5bf8b2b9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b322559-cfd2-4dc7-96eb-ee51624fef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bbf12b-b94a-450a-92be-2df190b93c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67d84da-4a18-4784-90f7-a1316a79f7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98664f5f-acf1-4fc3-8ed2-aa2c4971d5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d7668a-3b34-499c-a901-3d4e34c7971c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079000cc-9025-4cf4-abc4-315d05d15340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e7279c-525e-4b45-b6ee-4ed85d47a22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886866be-f112-4c93-996e-1afc9deb7814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34c258d0-1ed1-4cbd-aa1f-bb962c033b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667dddc2-def9-4299-9a0e-5831bfa56dcc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc76a0d-c756-4aa7-9db2-43054cbb2262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f4cb8b-1d06-4e8d-81d6-7683691607a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b81b3c-1645-4024-b92a-972729963c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78e6638e-7360-4566-aed2-b4e74d4e6ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908a93e3-5b91-437d-b934-2f2424c3d9aa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1b7779-5b29-4a44-aad8-50ea05662542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baced8c7-dc03-414c-ab92-39072920cfee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dd8495-a528-4efa-a539-90eb75264f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02d7c94d-b389-4e10-a02b-b94c4aaa6997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94ac9b7-4c3b-4571-a480-08412f9bd26e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62601865-35fc-4d59-a337-b3164701a6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4995e585-1f3a-4210-9c0b-e9d0360ad237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50638504-ea2e-4d28-8df6-ad613ce61e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcc28d6e-ac4b-4ae8-b941-a24e45580926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36460db6-cdd6-4c00-944e-0cff71e8bae8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10039f5-e0fe-4be9-bce5-d2542f993ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3550b6ef-07bb-4c60-a7fe-747287bab051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98f192c-bac3-4e2f-a36d-7429845e5c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "586b99b2-2abb-4ac8-a91a-44fa75b48fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484f986f-6da8-4da5-a800-33bfdff69df4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815c2667-4c8d-4a07-88ce-433209b9ec86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36999ca-18a7-4472-baeb-b39dcc359721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dfa128-a42f-46b3-802d-3b25c6efe49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd225c3e-b548-429a-a5d9-b889ae8d2aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3744300-167c-4ce0-9d02-97dd1a404d42",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2516f99f-36bd-45ed-8891-12658a0b5247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f082105-3ae7-46ae-a114-d70e38e80a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45424ab-b684-4632-b7b9-112facd0a3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ccdad9a-695e-4a74-b366-22079c26ea1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb1d157-5862-48ae-a2e3-8dff3c3f83f2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544f7fb3-ffb8-4579-8853-e18f8f364a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c68fa3e-4dc2-40c3-8927-9e454a0f2732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e299fdc0-29ca-47d4-b52e-104a242a8784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f640e697-d690-4e7d-88cb-9aa9ec931be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6d9f65-7a5d-44cd-a31c-0dd9762ac55f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bc62d8-f475-4def-9740-f058bcea9fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0e5b87-dbd4-4f14-af87-e3dd72b14be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf73dc5f-d3d9-4439-9442-1afb1ff2e1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ea1c61-b14a-42e0-a6f8-04653049a826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b34dff-7449-4a54-be88-4e927f1e5264",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ecd045-3564-4e84-8c5d-c6a35308ed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5ea628-bcb9-4f34-93e3-990e368c2181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fde48c8-4df7-4b71-a3d1-5f3925856547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be87eb3-01a7-4b56-8f4c-f9319518966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94791f2d-e820-4402-a95d-90280de4f615",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7536d1-9b1b-4a6a-b0d3-1d4d1609469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75bd8bf-6cee-436f-b42b-a7f0db15109a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3716a7-c51e-44ef-9dad-ce904f482e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca7b045-79e7-4486-92e4-c5fc8c045e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd9ec47-c584-4eb3-846c-614fa262cf05",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa88fa7-38dc-4726-807a-676ed786f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80646f67-534a-4f9b-98f9-dcda80530ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cfe84b-1e2e-44f6-94e7-163cbfe647e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a92d880-bdab-4bb3-94bd-215b69a48855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382f0edb-0237-4f40-8749-dbc0b05ca3c9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52158278-5681-4b64-8cee-071c78c52d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5490daf9-bb32-46e0-b1ef-16a6d8dff03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebd1a68-22ba-41bc-be73-e99f667084c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b218b85-04e4-44e1-9ed1-1532a85854e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e59bf7d-a6df-49c0-8085-7310871e4b32",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccebe8a9-5538-44db-8a7f-fca9e8f12aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf010a5-2463-4521-860a-942e97ebb31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ebaa8-91d8-4408-ae3b-2aa85301673d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb8a281-2592-4085-afa3-c2a84ec403d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c94ef16-5ab0-4ad3-8e78-5c50b8319ad4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e099c1c-9feb-4545-bc0a-168d0da3402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff5afde-c193-49cc-9a67-a2a380015bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94417e44-14de-4d32-bec6-48a0e9452bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68098a0-46d2-41e2-9209-de4899289c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39b268e-cfeb-4047-af37-0f69f4cc0b86",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab97edb-42d2-443e-9d9e-d2578c82ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982e8bb9-5a12-4250-a5ce-95be84e12bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfc4f07-99a3-4a39-aa5a-3188360dcf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84745217-4379-4492-8f34-43f00d67e24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc487f8-bc92-4c47-abb2-246bd9687915",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a65809-7647-4418-ae15-43d8fbe19afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12ed0b3-df1d-4468-b6a7-d187f228f4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0b3aa5-4e2a-4e77-bd31-be060f4e5bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74ae4eaf-2dac-4774-88ca-853326894012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b06caf-0c95-429a-82f9-d2d6d1d2ad33",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea3a09a-408e-48d6-bbd5-ec7a0b5304ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a566003-0499-479b-b470-e7b6a91cea71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22460a6b-a23b-46aa-ad66-e428fc9569e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2b8b16-d74a-461f-a490-b14615e3fd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc6edd5-7cd2-44b2-944d-dfe7bf494900",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03a241d-8931-41c8-bc67-4ddb113cc250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e4312c-d772-4012-bce3-b76c33315805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bef109-d94e-4460-b1ce-fb1864bffb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4d456f-e60b-4f06-8e13-6589ccfa9306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605d5f8a-2df9-4e48-9595-1c94db22e53c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6104c353-503b-41f9-a02a-965854cbe2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6738cd-5311-4351-adaa-025e65bf4ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e20abc0-8ee6-4302-9c31-cae4f5dfb8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1389413-cccb-4db4-978b-d6597eebe3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0441dfcc-2946-413b-b3f6-5b9b67874018",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0567ec55-0437-4921-ace5-02f5d45b6587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6ba5a6-9e05-4d7e-bb44-ae0ac2add34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8ce865-94d7-436b-9c37-39c1de942394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "504d2104-cb82-4335-9acd-1948e598eaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbb8165-8bad-4138-b3ae-edbb6391d0a9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f8656-9961-40a3-a423-0a2154cbca62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e4385e-5ecd-413e-88f2-63c7ecf417ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062def3e-588b-418a-89c6-92cdfbb7fbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39338c38-f850-462a-9a6e-df22beb531bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c79b2f0-e481-4883-85e3-e98c38188826",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e55122-c6e5-4c03-a33b-8cdfcd0eee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab76ff7-e8d1-416d-b973-a28410f2b644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2d04c1-1b03-41f1-8dbc-5d440f447491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ed2a69-fbf5-476c-aa1f-22b8392c9fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ceee6fd-1ed6-4109-be6f-a673d80c3f07",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df64bce8-26f1-4a95-8b4d-fe008731f688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a888dad6-0966-4d31-b022-883f825f50b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a765e1d1-7ac4-4f1c-870e-e8d009a13114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "458c2100-21a8-4ea1-bae2-9efab968067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfd5650-417f-429c-acf4-aa9ed1653b39",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1bf829-ed12-43d5-8b38-d1a704a8ba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246194e3-ba14-4909-af20-e2a66af8f3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe61f1-fb61-4763-bb02-1b40539bc28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af157ed-6f64-4680-95ce-8cde263e1fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dc0fa7-f761-4935-b56b-6cd3f105dd13",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eef9ed-b8b6-4721-b36e-42205000f597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5886dc1-9746-4c88-a9f3-da32b619d011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc0f428-8c14-440f-9c80-d7d314d92e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "59f93c94-199b-41b4-8552-f60dcd39e325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e429bcd8-36d8-4d3d-8644-af797ac0513a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7097fd-2e37-43e4-a37f-f2661ad84a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44431951-0888-436c-b024-a2b19bd72999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8b3836-d28b-477a-baad-7afedf246e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8765e0a-cdf9-4639-9f91-7620fc69f49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb2b635-eac8-4cc4-ad07-fc992190a5e6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac93c421-8434-43fc-8259-7f6c72512237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee08bb9-c803-4498-907d-c01023b39ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df75764-0fab-46df-bb1a-456f70f08072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb62426-6d85-4a50-98e6-e1fc5198f46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40592fbc-4eb6-40ec-98f5-731b8afa854c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440a375d-7872-4a7d-bcbd-7f6165a48b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7871aa98-0251-41ff-a891-16ceddd21643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55d92a0-76af-4a37-9428-a6bc16b30926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "597fefcb-2626-4528-8037-74f5e340865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd938ad3-9988-4ba5-8adc-5b9574c73c9f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b29e19f-a8b4-407c-8917-a25528898a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1100ee3a-3ec3-4183-86cf-16aae71132ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2368ed-e1f7-45b2-b1ba-272e77c23e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "662ddae7-381a-4a4e-b5f3-f2bd87b3bc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999750f2-b8f1-42c3-b43e-f29c7573f7cf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97085782-15d4-491b-b5bb-4966755c2c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbb7e4b-2099-4377-87fc-c64d98bc3a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a584a293-3bce-49f0-a9c2-f25fd50c53a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b72e291-c437-4991-9342-db474cc8a108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b5241-7636-4041-a014-5db4a6cd5693",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fec3621-54d8-440e-957e-9bd1b4933d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c05a649-9573-49ef-8135-0d94ef2a91ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a02982-5269-4376-aae7-1aabb95c9143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3263015-5976-403e-9540-359873aa67e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c139a792-cdb8-4d94-82b3-6495a5bd3c24",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e481cc7a-8b76-40fc-820b-1da9a8e8d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff82f5bc-2550-4598-9736-a5fd7d5180a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf3e93a-71b7-4561-bb10-b777774faf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bb10d5cd-7803-457d-967e-5ea7a7daec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f769a95-e965-41ac-a3cf-8756a28ab710",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c2d2c1-3192-496f-bb63-1c58287a31a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69c6af0-6ef1-4dc6-95bc-22654358990d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed199d0-e8b1-40eb-8a9e-f42fc4431bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49a4db3-4379-4ff8-9c67-0324909300a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b8d897-2528-42c9-b7bc-be6bb92c8f85",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4977de0-1eeb-43e7-aec8-42b65f98bf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3581c4ab-9da8-45f9-9e4c-6ce6562ca279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b775546-2e30-49ce-a362-1cb72e2341c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c441e0-5543-4158-add2-cf5b3fb1af3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2559c14c-5d27-47a6-9959-3aac53443544",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5752951d-4e64-4374-8f69-89f5f8601290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f2421a-a87d-4c25-aa0e-2a860f7186bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb73556-99c7-40a3-82b9-9a8a686749d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec564def-8333-4c19-9c8b-bdb6ada8f7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9eb114-4628-4fe0-bc4b-48657dce1d94",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723f3d11-80a1-4a7f-901f-0869ad7b40ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3012fcd-f713-4a93-87f5-fd0c47ffe6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faa93e5-0794-46cb-9ed3-208fa2e0b772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3bce02-cb90-4511-9ce8-06b195acfd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36aecdf-0cf9-4993-a293-090eddd942ec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f272b2-5c93-4c2d-8912-ebc937e71adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac7e4df-0530-47b9-97e4-6de481eb4baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ad1a0-cfa2-42c9-a411-723acce8e11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d793a2b-3090-4454-b584-d748f0848b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af98e436-e06d-4c6d-b980-013a26802ade",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6947794-50ae-4bbb-99e2-24f8732d4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91d7018-4869-45c4-ad31-73db4d550480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bdc20a-2158-4778-8706-b36eb016d937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f550f6ad-06bb-451c-ad9a-f00dc551effe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe0e3cc-ac61-4e64-8545-8293f7140651",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb63d19-c316-4aa7-af80-96ad05afcf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed1dd16-5466-4853-9f25-71a3cbf8b1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5ec613-387e-4442-ab0c-167273b1dcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c537baad-623f-4839-8874-d2e7662df580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15508184-7a1c-42fa-8a54-b18d635a3a41",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41de4037-bb6a-457c-88e9-aef852add8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cbdab8-f161-4a0d-b21c-f72809a567f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6a7338-df5b-4676-95f1-34518da2aa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8e4650-c4f7-420f-98ac-26ef788b4ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4109ba-d953-4647-9d90-2bd574647027",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33478f05-754b-43ef-8a7f-73577bda607f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71eaa23f-0309-4a4c-bee0-fbbc867f0d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fc1da4-cec3-4e4a-97b9-7f9bad25eb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9dc774-86a1-41f4-88bc-6c9d32a65ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b4d9bc-1c99-4011-a6b5-590b368c761c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32552ab7-9b0a-4ab5-a4d1-59505ce35ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12f5005-d4d3-440e-a49c-9b222308f283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba5e76c-9edf-485e-b7ba-1c64ceec9d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "900ef523-3e5d-4533-9dbb-c827a99ae6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb77a4a-11ef-4bdd-8f1a-750ba8c5e8cf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd8832a-ec34-422f-adf6-de426dea5c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5da3b5-0e7c-4951-8fd1-e45d15998d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e0a7a8-33fa-4852-8d42-a1fb24a92966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93a43677-9652-4935-a86b-9d8255d7e6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec7e54a-a36f-457f-bf2b-5ed6dc103917",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36a1632-7f8f-4aff-90a1-c63a10cac3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f4027f-91bf-4e84-b6ae-e2367070ee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc23c59-209f-4467-b603-34b8ca9762ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b97e398-c78f-4f65-a5a1-d660590d5aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71e8f98-2127-4ebc-8a66-6441aea6aeba",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a72841-8ad4-4703-b9b3-3bbdbeeb1f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e03a22-ab2a-4097-8c5a-7c5f1b1ae525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e948168c-4e32-4509-9d5c-5ce525d91393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a037d332-76e7-4414-b24d-00e16f3ee152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f98141e-c88d-4c38-9411-0810c973679c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea71f78-30e8-4a62-9ca4-ceb75ca8e304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d59cb5c-f08f-4a9c-b892-0715d56ddbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f80714c-dae1-427b-a4a9-4be88d734226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9fff4f94-63cf-4e8a-abf3-b784192354c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62ba09d-31c2-42e0-8234-646636e8d768",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2012604b-5a75-4e24-8898-2818fbe76259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e198170-dba7-47a8-a89d-28623795a0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64aed97-14bd-49e4-9ade-a3ee7d53c392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e0bf30-981d-45ed-a328-03cf205100a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fae927c-240f-4c05-9185-e49e2d10803a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bd1fe9-d17d-4b0d-a55d-5046f2f526c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19a7f04-2709-442b-aa10-f7a76cd8b609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e0990d-0733-4fd4-906e-5a74adc38f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7d9621-22b2-4356-b56d-021059821bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7045f0-f09b-4767-858b-e71b7f040095",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66a4ce2-2b52-4dd4-86f4-494d424fa557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bba969-1301-4c2e-8466-233191f44ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afc9b1b-aa5d-4b94-9424-66806421e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a45fae53-8459-42b9-8ccc-99a3d1a26bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f76af04-8b6c-408b-a5a1-97038202f93c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f37cc3a-556d-4f2c-9b5d-8c0bd0d074fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32195032-35dd-43d2-a2d5-416dce06561d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18643d42-4ee3-4deb-9199-03a6a29bd70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "538ab48e-5840-4172-9962-80c9145e4dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dc391a-0ad3-4696-9d03-d49dac55fc8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75301873-8727-49ee-ac87-66d1e639d60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d0c135-16d8-4f7e-b818-2c4df4c40383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fed54c-14e4-4e84-bc2e-9d20bc6563d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4918d15c-bf26-4ec1-b4ab-ce92de1bb4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8f4d80-ef7e-42b2-aa1b-8df61ffa1409",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc550095-9a50-4233-a49f-8ea530e2a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e95603d-7655-41da-9bb9-9e20dfb204d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed63d41-1d12-4237-b656-7560db39a324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad1d730-b5ad-4ab8-b65d-5e5b8a9ab04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e90e092-d00e-489b-8dcd-358289ea0e04",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eaa6d4-ad78-46bc-ab45-e8e700fa7cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06757c0-0150-40c4-a491-ac182c0f0e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34328e28-d0ce-412c-8a21-f9d97dbf470c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db141c5-7f9c-4fef-80fb-4d97b8f36927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c9c320-6906-4f06-be5e-a0426979e2b1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e22e657-9aa8-4022-ace6-912655fca40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92382ef-cf3d-4b03-a91f-8fef0f65d675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd89ae7d-d3a3-4597-86f5-d98476f2250e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28aabdd-cd93-4592-9113-4b07b794f854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e67dbd-1fcc-47e2-a4c0-dab809149da4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02324c0-2370-4f72-bf6c-bb4ecb398d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5ab5fc-fb9e-4379-8044-8ca06cc645d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c79a526-e3e2-4614-b256-5e1be037361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64745e0d-13f9-4134-b73c-a4f2c37697bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e2a7dd-6df3-4534-8f40-ee79fe80a8bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99252c8f-9b6c-4fa6-99b3-1d6daa17a913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade3c4cb-2d05-43e7-84ae-5eb8f95746f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da25ab6-cee8-4c3a-9a47-a7221ca491a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84280960-83ed-4fad-a1e2-b2dd50f71858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051be3e1-706c-4718-8620-c3fe8afe4f10",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cb8108-423a-4f96-a6e0-5c73d88b6615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdff1b60-5aa7-4f48-a5a2-f65c050fd0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d589584-3393-43b8-9b7b-32d82ffdb006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2331bf7-383d-457d-b2bd-a7a489220178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543b4189-1db3-43f5-999f-8b487ff9f61c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3b43de-50ce-4981-b889-ef04f2bbb3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8cc514-37da-4668-97dc-bf410b358816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca65ce92-a51f-4502-9925-623f86601c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27207af-64b8-42b5-84c3-e3b56a885089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa92f02-9616-43eb-a9c5-2d5bf468c039",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ceeda1-9704-4b69-842a-b00e0e49e091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac5615d-30a1-481a-afd1-113df37c792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d202e264-2663-473e-ba7f-f9fc8115dd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f4e567-caeb-425d-b4a5-279e34a896d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feba6ee-9c8e-475e-9b4b-bfa42c10e10f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6601137-f7c8-4d25-ace0-1bb023503efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558915a8-8269-4ebe-b4b1-56b437023724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e868ff84-8e62-45eb-93fe-1e8a848c2031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea471279-eac1-4772-b840-364e5915580b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2cfc1c-f6a6-421d-99d5-629c868750a1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f611906-3691-4cbb-ae1c-0323f9fa1468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f6e2d6-16e9-4ee6-b6ba-b6afa8cd6429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe613f9-3490-4e49-b3c7-140d8d425097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8083fb8c-b954-4b0c-a374-f9871adb555e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee630cea-0435-4936-a26f-930c75c9ddc5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf6a7fb-4bc5-4d55-aed3-a3413d84028d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bef1e0-f257-4e70-9fb4-6e8756d5ebc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e998e09a-adba-4bd6-b434-4c0274ccf6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7836d54-48c3-4b80-af93-06aaadc40614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb619f97-7672-4b7f-a2d0-ccdb94c241bc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c914d7c-1f42-45b2-b220-9a8bcfbd89bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a18bcc-9fce-4a1e-af1e-cb39bad04891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22110c8c-fbf3-44f2-9220-8c9fcb16aded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02f3a698-66fe-423d-b766-f3ce7a67fbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8686ebc-2943-4017-8c24-89c4517350b9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d2462d-802a-443f-993b-f59fa29fc9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e685676b-8857-4121-92af-b01fc7bdd039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf40dd9-3008-4fbd-9b84-90a842e45b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b669376-481e-4847-9be9-3862cadbf4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b85ca5-c05c-40b0-8d2b-421069089ba6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b65b4f-5966-45a8-8efb-1b4f65780a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f061edd-1930-4984-b809-a12bd1a6f089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2f6532-c9e6-4e31-a933-9d1df73c4e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f47205-ac38-4d26-99dc-14a32f70e33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d8d68-0a6f-40bf-8fa6-ca602a7279a2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0270083b-414b-4658-92eb-e7f1ecc281fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac73113a-982c-427a-be3a-19866faff007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139fe4e0-33fa-414b-b8a3-e48208a99609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6431e86-9e45-48ff-9463-fd17b24bca64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1da6e4-e9c4-4f61-abb6-4221778e49be",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f4eb38-09e7-4d09-90bc-2dceb3dcecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b1793d-8506-4c15-8a25-3b62b696a889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa266cf8-d52d-4432-880f-1a39d1c74c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2aca3d7-ec1d-40d3-bf7c-d6e289743857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e41ec96-33d0-4cea-b069-3730ce4e4732",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64784a0e-3f2c-4593-a198-de26bf5df523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274deb0c-0460-416c-bc0b-f28f14913153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0455ed-850e-40d1-9914-8ae78d8bbc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "305509bd-cb8d-4133-9cad-3cc03cb20631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e44f13-d4af-4e1b-93f0-e35532382ce6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8ced16-6566-41dc-b6b3-c4300c650b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26adc08a-e54d-4e78-97c4-0af3e71c7028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d89bf4-6762-4f89-865a-0124e88af7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62317270-5d2d-4e22-8a8b-75d4b1fe0c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66fcb03-d39e-46ab-8504-9a1e12d3e264",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be5d2cf-fc29-4511-abd1-698b1ca0e5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461c1ccf-bbcb-4b87-95bc-41550f1a1e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca8430f-7d6e-4b7d-975e-12e34b5e7c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a27491f6-9975-4df8-b7f1-ff52fc24ac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c35f1d-4885-4df7-84bd-c207502936c2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80006cc1-6d3c-4742-90bb-6bdf5c36b281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6770b029-1447-4582-a578-7a2ad5f652d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a945fd-9b70-4c93-96da-f57423dd1f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ebc8df-ab3e-4573-ab8b-0bea25a1986a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e25092-652b-4c36-b128-e5dfda51b245",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9421c25-9287-477d-a2c8-bb71f9a01827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03de7219-0430-471f-b3f7-c789c8cf89e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba18bc2-41bd-4143-bf9f-a674087cd079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d94cddf-3abb-489e-ac20-c5edb6e323a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d48b7da-4aed-4af4-9d29-6fb08adfa448",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4026b4bf-65e1-4c55-832e-191123bb8fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d6c78e-fd13-49b6-8e44-b3b944c677f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeb67b2-95cb-44df-83f0-1f5a53b4e841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f7e068-6681-4b2d-9ca6-4828b7399d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b32e48e-feed-418e-b56c-60c8eb5b9c8c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb835b3f-9ed7-4566-a2e1-9a520b99d1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99bc8d3-67ed-48ce-b69c-5d945c99df68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3432e6d-aaae-4005-aff5-62468272fcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a718641a-60bb-43d4-ac10-27b24673d86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f908e5-75b7-4fad-83e8-154ed6c36d46",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d4306e-2823-4435-96fc-4e00f74838e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643f2b27-14c3-42a6-ad76-df4030568696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e321c5-c4a2-40ac-8686-c749deb3d377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0af4be6d-e328-4414-b8a9-1ebb9390646c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dfc200-95a7-4544-b2b2-dc2ccd877942",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91e5c63-c058-4ba4-bf8c-cb2b90746b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f787e6a-8881-41ce-918e-12249b90ed40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89940d5-b2fd-4730-a07e-9aee6503da6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9b3504-b9f0-45dd-88fe-2ebaa8c9d819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f297b9c-bd23-4751-90ed-9c1cdbe50b31",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e893798-aeca-44e9-b2d6-587774b55722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ae6a5c-aa36-4b25-91ae-8ddbe75e7726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8fc5aa-401f-474e-bb0b-39a448aec79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bbfdfb-d0f6-4cc7-a61d-a44f82544253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb73f99-c92e-4a24-9aec-c9959b0a45ea",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd862e0-0ec0-4662-8819-855b0747c9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c781bb-3964-4185-9cfd-d0b27ec8f282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5488c7-42de-4a90-85f0-c06d3dc77413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df8dfb88-7fb2-4689-b062-ab28d9142b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251a51ed-d8a3-4460-ac63-e9611b4ca6f0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e894c4-61f3-480a-873d-de10b3182434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c41df8-8977-4ac6-90c9-227ed3db4777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca69225d-e531-4047-8c9c-cc7a274df819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bec8a4f-1194-4083-9eae-6679c799eb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff19e5-dea4-4cdb-b380-4ae7a165e60c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbcc0f2-dd33-422b-977f-aceb21065bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812e261a-199c-4b63-b198-287f485dd614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a005089f-6522-4f46-bcc4-44f907582010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef07cea6-f7a1-4895-9a82-f52e8428f7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6fed40-4a83-4cff-9ee8-ada162e99a14",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7a4a24-dc37-4883-a8bb-36f6163bb30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96b658b-2cb4-4053-913d-ff3a5a115027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecabcd48-18cf-4cd1-9e18-08a99e817add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a06f4ef-980b-4652-8231-d420bf2b20f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eac756-2247-47c6-9750-0f5998e4a857",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbf2742-06ac-454c-bd55-e2d51bf81732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eeb5562a-4d2f-4439-b85c-ba0ae041ae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dee5c67-0f32-438c-801a-1db4b1c7dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3475190-c70e-455f-b246-6fd85a1a61d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e43b0cc-5a97-4bba-b147-7c3008b72b73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c28ce2d-402b-4653-8ae3-24409288b828",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d521bcc-c42b-4617-9298-aa890a68e72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ceaa4b1-4528-4cc3-88d8-084cb5031859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5589532a-ee6f-469e-b0c4-3845f310adbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "da0a83c1-24f3-4606-91f5-cb2500b6af7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a76a02-cd71-45aa-9876-eb0a9e36e063",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c72d96-9c5b-4a63-8a56-3fdfc3f4a2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "567b1c4a-8bc9-4fd0-9439-ecd05205a638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb33334f-0d55-4468-a406-95a56e2f7758",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "884ffcff-1329-494c-ac8b-1b1af41c8c53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4729cbec-0514-418e-a833-6dd8b7db4678",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f13fd40-1107-4280-a0dd-75fa7367b166"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bbed3a1-709f-42f8-8575-354d31a26442",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c1c3b6e-a20c-4b70-a3c9-2ec017826010"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c250c13-63cb-4cad-8184-fc65c2c57b76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2064230-741a-4032-aa96-5808f714c772"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aef7d9b1-6168-47e9-9634-ed6ee2d185fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6e5ba2d-e5fb-4cad-a78d-0722f0361496"
                }
              }
            ]
          },
          {
            "id": "97b4926e-2dcf-4fc4-b0cb-1e805c1683e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee7f8d5d-2934-45a1-bd1c-71aed45f9515",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41dd22d0-2e3b-417d-a7e5-f95071d33cbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "317fc358-d019-41cd-9c86-03937c91c538"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d301295-ed91-4add-8ee6-f3522368445e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56c3d578-4e82-47b9-8fe3-4d5cc81e7b66"
                    }
                  }
                ]
              },
              {
                "id": "88ddf268-b08c-415e-be65-693d72c97d04",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a1224f1-7144-4585-bbdb-620f5c3db81e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4ec67bd-5769-451c-af9d-e86c4273c389"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e25a5c75-75ea-4706-9f00-062bf6cc6bf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bf5e347-0557-40b5-9573-d96dc855356e"
                    }
                  }
                ]
              },
              {
                "id": "26bf56b7-5113-432e-85b4-7df6ee203027",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00a57605-e890-4d8e-8dc5-e2fb6904585b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "949f9cd8-1bdb-4c12-8578-662c7a407c4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53b085f6-18be-4ece-9221-04b00cf1fd32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5a509bb1-1bd4-48d9-b012-33f7ac582474"
                    }
                  }
                ]
              },
              {
                "id": "f619a570-a618-49aa-b81d-8f01ebc10d41",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6748874-e6b1-4540-a1a2-0afc1367b18a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d777fa35-6e89-4a6b-b158-c1405b9270b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31106969-21c3-41a2-91c2-304e80b88b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2a53f124-184d-44bc-8dc1-30541fb5e3d6"
                    }
                  }
                ]
              },
              {
                "id": "d72c803d-7534-49ee-a24c-c0131555cb55",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2ee4c49-ed56-4c4d-95fb-2a211a195fda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61c1ad9d-a149-4ed2-b6b7-f6e39d45d233"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e7687f3-531f-44bb-b767-8d8a76147f13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1fdad31-8294-4fdc-acba-bacfa383ec68"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69e09438-da75-4a90-9141-dae959bf4f34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8f670f4-594c-4dd4-b257-65eb5d714581"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9be8c56f-82cd-485b-94ab-0c98286b0c06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d5429aa-ba49-465e-89e6-645cbf04372a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16e727c1-2e7a-4332-9614-c6a64e45dfd8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f15bef0-62ca-4d99-8cc3-92b5025b1b9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be816c33-c112-4e3e-8e5f-3d527fe34ddd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29bc42a1-af32-4577-88dc-c03ecbb78340"
            }
          }
        ]
      },
      {
        "id": "77a91559-48fb-4d0a-9713-c24aa9d7c5a5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d847dd1c-8a73-4268-8906-eae23eda34c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd58db2c-6e19-49f5-812c-60022e8f3b38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7486d9c6-3538-4bd0-b8cb-4bc0220e1d87",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c03a4b-ad51-499c-8eaf-39c3895b6150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd2b47d-0565-42bc-8638-f8ec08bdabdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6d5ed3-2421-4c56-9351-430e5ff576c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "36fd8d44-4bc5-4da8-9c61-fb0e4e5fa311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6143faa-5d99-4c98-84e6-f09aa52b310a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7137028-04c9-463c-aa0e-8e76bec5fdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318c801e-6996-4b5b-81f7-0d0c84954647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40336ff-6502-4f63-84a4-b743d8833d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec41c106-397e-4437-ad12-a7d34a06e413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e797d0d-62dd-40e1-91d7-7d908fe87ad0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bc99d8-f25b-43cd-89f3-be444ec170df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc8bf68-01ab-4a08-90bd-97527eecc2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffbbfb2-4c92-4f7a-9ae4-c82cb9f03e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05375b83-c327-4903-8e9a-71ef83c735eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873cc682-b7b9-4323-828d-e08bd5c2de7a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b9501b-c53f-4564-bd9b-23d8bd82adfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0560bf8c-ca56-4d28-8208-cd54fba6d64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75806db2-5c94-4474-8efd-96cc28754939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f3ec15-a59e-4246-80c3-9b95cc02b690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c156b1d-2306-4af1-8faf-81eccd9a64c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f5f59c-fcd5-4b4f-8c9d-a5c3b88532a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6786838d-ca71-49f3-8493-d24cab4e3a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85907ee1-1828-45cb-b50e-29e766dc2918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "216ef068-b503-4c26-8d02-6707840717e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bbd745-096f-482a-9d97-9ba01b30a085",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132eb5d5-f6bc-4de4-bd5e-99e0053ee591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b413b6-8b35-4f1f-9622-85878a81c564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9f2b0b-be0b-44b3-ac0e-321e8efdc0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68b43063-04f0-4ae5-a115-804bc218ddb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5859001c-7b4c-4c82-8e3c-2968a9584300",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec55d376-0b6d-49a8-bef1-8abc52b33013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0ec8d8-b99c-45ef-ab51-1c6eb3232a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5490f8b-0422-47a5-bae2-ddb39f9c3d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac864279-d961-473f-a844-ca08472b338f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6a3bc1-3c49-4a75-8878-0cccef31fe0a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071f2870-d868-4937-a253-401adf4b0662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e5c096-0524-461e-b874-36fd9a1c81c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1372a5-ba59-4db4-b4ba-80b2bbff75dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34586c89-e09f-4769-a4af-e563cda7b396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10fcba1-36a6-41a5-9796-ed2645f727a1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7714cf1-42b8-43a1-bb5f-3b918c95e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4237e5ac-4a71-4134-8a4b-d06fc4901e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bfca66-f353-493d-8186-d875352989f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b04d11c4-6fdd-43ac-ac5e-b001db0ba21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d928c7-9aa8-48f4-9be4-9b7f5a524258",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b109eb-5529-459d-b3f4-4bc6c5fb0ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26644677-fc74-4ea5-9299-88f8d11cd139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b32f9b1-ecb8-46cc-b77e-2782f4cadbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "260633b1-e353-48cc-b45f-3b146b6161c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3bd785-8a88-4f4b-9e3c-f2e2107d7589",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0939907c-ab22-4d33-98a5-c3f4c12f11a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f8480d-f33e-420b-9bdc-cfd758d58417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ffd51e-b929-433a-8c8e-774fbdfdaa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e039b9ac-c5b7-41d7-89c8-5613fdf3788b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcf857f-408f-47af-a9d2-fcdc6d8c32a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4f78b3-a411-4752-8d3e-1460710ccdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4d0e3d-e3e9-4cbf-b8b3-3546bef5a722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d683b32c-2538-41a9-83d1-8470ab388873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8109996-a302-45c7-ae57-4c6aa4494cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6657e9-ff66-4ab5-b684-fa07052add66",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c0c61a-7aab-452a-b9d1-2c5129f27ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089932dc-f3a6-4b20-b961-ac05e39b50c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ee7294-1357-4f25-b5cc-6db11a91a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "921522ab-a640-4a44-93e3-eaae10a24924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8e2809-5ab0-41aa-bac0-0195dcb6aa8e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa174f83-7847-4bfa-9a05-396fb9338113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a637f39-be62-4697-82b0-d114bfffd60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3771bfb6-a685-40eb-9ed7-3a9ebd74748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f99a5d4-df94-41c2-a93a-2ef27bc57177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503a1af6-1117-431b-b8bf-e28ef3b1d661",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff3eb5f-5ab8-4873-a2e9-2a64ebb3b6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac38ec0e-1211-495c-88ea-9b741ccf7cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e62b9fa-0d4e-4f92-9f4e-6ef4ce56ab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c08235f5-2ca7-443f-90ab-9c94999c331c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4562a73a-995e-4aed-8850-978803d31dc2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082c3d92-5d9d-42ff-a06c-c3800b5c06d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c05f77-16a6-43d1-bed8-051f0aff95e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2428aa6b-f933-4792-880e-3811103b3f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f44fa7-b711-4a35-bb58-8f5bdcd4329a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd6fb34-23df-4a46-a1df-0f653c19ffc3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be07a36-ef91-4c54-845c-91b35b685d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7287271b-f134-444f-8c03-ef3960c446d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fe0480-61c1-4c52-ba3f-4a187854639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "115c531f-3a0a-4379-b6cf-e40cb0f3452f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ae0ed-e00a-4146-810c-010131893104",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edac7447-2bc8-4d4e-8b20-f04d815e6823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f7b75b-156d-47db-932a-7af1fd814bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95de73e5-d4fc-4f06-9eb2-6e4bf7b37500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "290d9209-b3bd-4270-a25e-394ac3695bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c1808d-09fb-4932-b6b0-7b60a9f84fd0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7d4da1-bdf9-4ce6-9950-3c55c1d3865b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fd3488-17ad-430a-94de-cb8468b89f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73705305-d174-45c0-8e0a-ad8052d47e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd7bd99-ae35-4893-bcfb-dc899951f6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7501742a-480c-4b5a-af11-b8a75f89c2ed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a60150d-5e29-4674-9a43-23b2962caee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6970026-677b-4bbe-b7d2-977421db6ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3de8e5a-6b84-4de0-a9fe-91a586764c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf4b8a6-dc14-467b-bda1-6459a0c33c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6baa100-4a8e-4c63-9d48-fe6d0a89f7a5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bd1ae5-21b9-40b3-ae1a-87804d584f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356365fd-9d63-4b1d-a8bb-062ee4fe744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f293594-142a-411a-9899-df005fd4ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdaf4480-63b7-49a8-b517-c6197993ba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3299f6a1-470f-4591-9de7-6419525bd956",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff036d7-4995-4e0c-a5f4-0313bd8fece7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67c32aa-d505-43b6-af43-bbb509fcc3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38ee31f-26c4-493e-ad4d-bf0dbd72958f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60a8fc9-4883-4e90-ade9-06d3d09b0d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93188e9-8e2e-4475-a521-121d9720555c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dfcad4-59fc-4bbe-b334-f7e6c0f4df52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d027fe66-0e1d-47c3-87c4-15c7398cbd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbaaf43-545d-4a1d-b85a-8c27daec2bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a806875-fc22-4778-9f1b-b9f2cb2566d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c294fdc-ea41-4bd2-b643-1aa9c24cecac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dcbbc9-be87-4447-938b-7670ae8c8fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711f7ccb-068d-4857-bc00-ec748ff75332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4677107a-2fb6-4e8f-a3ab-6bbe5c73d39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b4cf54-5951-4def-aa2b-cdc70391771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191146c0-c677-48a0-a15b-8b9e8dbd0872",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c08ac9-e20c-4705-9090-749aae648e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9654f089-a339-4bc8-a373-c5aed6e3ce46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa83d74-72b5-4300-9fc7-7f9b9c196c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "129a6550-1999-471e-a390-39aeceed0e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944a82e4-09ec-402d-bff5-9e3e63e83829",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ffe552-fe41-44cf-8e43-def81bfe6dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c8b70a-c1ef-451b-98d7-c73175c73a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df6cda-d5b9-455e-a4f1-ea48cd897c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d89d8c-3b8b-46bd-8e2c-204a48993080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77f1db7-4a4b-4f56-98d4-e5b86d264f9e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce5fa5d-d3bd-4bf6-a2e4-8086862d9f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e466b203-4817-4408-ae6d-e3d6321dd1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb675498-c483-43eb-b988-bbf8e7585522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60618798-3adf-4cfc-a0aa-b263d8bfd924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464973dd-9f0e-4132-973c-65b5f00d2f91",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d0bbd5-92d2-4ff2-848e-7076543a0cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18d6d8d-184b-4592-97c3-dbb91c9298c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b65ad7-999b-4155-83c6-2ca085996f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d77493-2aea-4f52-9669-a5721a580e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532c5ff7-3bd8-4930-8021-09abb735c0f2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2255567f-1e6b-4172-b05e-1c32d6477b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8311c6c5-ed1f-4b93-873c-13067660a8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac56b53-92de-4142-8f82-2ead9dd712b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69428992-b8ac-4a7b-9f92-c811adef5dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6f37a3-ee25-4803-98b4-dbe137f5a5a9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9080f5ff-20ef-433d-8aa5-987f168da34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d9c514-72e5-4ec8-9116-c4e5140e5126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68bf992-5f8f-46e2-80ef-523a83a15380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f97a4c40-b80c-45a7-b15a-6afc442ecd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca693c3-7f27-41e6-9fae-7e37642829b6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7ba67d-9d70-4dc0-bc1d-53069da636f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02360225-4a00-4d59-8d8b-cc865dcfab91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e4943-8729-4097-9f26-08263a2f3b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1721d3c0-b282-417c-bf34-63b00af0de2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be066493-01da-4b40-9445-4f92533b76f3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71768b9-eb3e-4035-b534-b1832b096989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3037643e-7eb9-4a06-8d3c-becc666e1742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7a0438-f9dc-40b6-af40-841b316262f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7a0d77-9545-47f8-9668-4da0f20bdbf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "501f6475-e217-412d-b706-12f3168175fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9adcd964-feda-44cd-a5d2-9e63207ec055",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a027a889-4e2e-4f17-b496-747c582626fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37c3a9b-0269-4c0d-a413-6a93a1c7be6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e5a979-adb2-4465-802a-8156a840493a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cf5e6ce-0a05-4374-b049-62c1523e722c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da70d235-014c-4072-82e2-1acd65a948cb",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11ed211-df39-4feb-92a3-1ab09cc16b41",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c6ea72b1-4e31-41c3-b59d-66523e141399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2386764-9c32-4fc4-a013-d748a90ffb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06519d2-7bd8-4b8a-bdac-23be4a46e750"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1402b2eb-b62d-4d00-afec-2122a7516b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a8f705f-09f3-43d3-a09a-f29b44dc2bf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19127b68-6d15-44ee-a880-ca4358b831c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28f56d04-0061-4206-a302-bb30855786d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c86cd27b-e359-44e5-979a-65201cfdf164",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "607d8022-e17a-4751-adb4-9bf1652ee011"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f694e65-8cfc-49b2-b7c8-80dd4b6f33f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6585bb12-206b-4d51-a1e6-f06fd8b2a7cb"
            }
          }
        ]
      },
      {
        "id": "dbf32a63-c09f-426d-b80c-772c7cd32353",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1654d5ff-c7dd-4354-a643-9d48a9e718e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68dd84cb-8c86-4299-bcec-9a28456d2e38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b229d2c8-df16-4c54-a935-b24e0b29c559",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe7bf86-1c74-449f-bc8c-89d6036b85b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dc02ba-d479-41b7-bdf1-6d36d6a72a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acd05a8-a046-43f4-8e5e-9d542b18a6a3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229ab90-b5b7-4d75-8d5e-e020346dedef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d987c5de-1908-4d75-a1de-315e3bfe8f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f955971a-0eef-4ca6-8478-f5a6b3b7adf1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f39d2-54d4-4e3e-805c-b655c6d5039e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f692b4e-5e2b-4b3d-91b1-f0615499a4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b82236d-7d40-4fe2-87ac-2cd1470ca4d0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3b8f37-a8d9-4554-9fb5-4879a93f7b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c0d891-564d-4f29-a2ca-fe80b50a465c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a199757-a014-40d8-ac8a-0819919dc4dd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e9a01c-38cc-4a17-bea2-96d1231fbd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6af287b-fd07-453f-8969-85bef09e4c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c86a53a-5c86-4311-810f-c6474fd98566",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9cf8bd-b095-46b4-a06a-ebec1246d700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1604c4bb-0dcd-4170-b06a-fa9215cda3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913ce81c-c0af-4ee9-bd85-a5091e87dec0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c762201d-3a47-4433-bcdd-2e570fdd85a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6aa60ff-2ddb-4546-8d71-43ae4ef1ab9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2923464-c7e2-4a5e-a489-4df246c50a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcea835-593d-42ec-8a52-b40392b5bc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41616456-dc53-4f1b-af86-05e7a85c7fab",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a766aebc-ae14-4620-ad88-900cfeb50a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e6d9bf-6edf-4893-8072-ebcf1367e1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b5667b-090b-447e-a850-9ea987f2086a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c18155-bd62-432b-b518-27842dfd91da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c7fbe0-5fe8-4d74-9669-bd543b38ad31",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e201b699-ccef-46a5-91bb-10b9a1e453a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6faf6742-72d4-45f5-a1ce-c9f5d5612276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8f3dbb-9e62-42dd-9f99-e784b9cf538d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73bb5f3-4d50-40af-aa9f-7e4b19930605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a07acf-98d7-41ab-a94a-1609bb0a510d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145873a3-3c2e-4ed1-b402-3893d47e281c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7609d02a-26a3-410b-95cc-bbc3e077f1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc79f22d-f9e7-4d5a-9ac6-c230eda51f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cff3ec8-1acf-4f58-8c29-ed9b50bd7885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6777cd85-c6e4-4a70-abcf-e50583c5a379",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8fb272-4508-44df-9045-9454119ca682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404373d5-d1d9-4490-a668-dc4dcd4ca3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc1dcc7-ba6b-4910-a737-794154af70a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c075fd-f998-4766-8ded-5e080c2074e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d64df3-c3be-4011-a9bd-9720f1be9e9c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5488822-9a9a-4986-9c5c-9adc6745eb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8601c480-5c89-4624-b032-7859ded0797a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c70362a-689d-49d8-b7df-80895325bbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69157ad6-3492-43c9-8db9-57de2dba5b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3424783-989c-4551-8dc5-1faa559f720a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe02fba-59ee-47cd-b51f-70216d4b4379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0d9a9e-aecf-4fa4-8958-efd8e3e05ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9ce6c6-a7bc-4b60-8bad-7ca9a6e34456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ed0e8c-7934-43ff-9cd0-9e0a315c3539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f90ef9-8eec-45c3-aeb2-326413272573",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b89582b-b6e4-4177-879a-83d9292da6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d402b1c-b9d5-4968-9dc1-2d2dd0a49f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79c5cdf-40bc-43f8-8530-0099b9431e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bfb980-8a21-48dc-be26-eb7c69d64e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2328ad-037b-41a9-93ad-ca609d1c9c6a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc401e04-1511-4ce0-92ae-808d08af5c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830a7e25-fb90-4a3d-8d90-68e4975ffbeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a68615-601f-4641-a784-69b5dac6eae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16cd22d-04a9-4b30-a9a8-e1201c2a8ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f054ab5-6e31-4b07-8b7c-f778906b3de2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb688f69-4145-41d8-8fdc-73700899ac59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421b15f9-b94d-4313-9690-5d487ad6cada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9757ce-e2ac-4786-91ce-14c9ed29f040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6323ddcc-6db5-42f2-9f2d-57b5fbcbca30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc54e4c-4be1-4cc5-9c5e-2e1a8f1737eb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b1cb71-6b47-4d4b-8380-71eb5dd5b074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ec7945-5f1c-4563-bf3f-608703bdb359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c579cd5d-7905-4e3f-8435-1ed9a588bde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3f61a8-ed3c-4442-9362-5a992fcc0ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b899b98-7160-405c-b7ad-a5f642d402ef",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab208e6c-a6a1-4d08-84ac-05a24597debc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a536154d-44c4-4a3e-8a97-0d76e6a075e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e56fb46-17ba-42ea-bff0-0c3439171a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e88dff6-4dda-40cd-9642-241df6d2e4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab248fc-c364-4bdb-b3d6-5a867949794b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eb91f9-027f-4cd7-af38-ace5100531ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7ee39b-7a1e-4b99-8ad6-7d7491c2e63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d84cd-4ec1-49b1-85af-9543f7a5c3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aeb46c3-3d85-4f08-975b-eef87f4dc448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158f5fff-10c3-4438-bd82-03d04441cd6e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810da13c-c700-4212-a3f8-32a21008869e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4662368d-c8cb-442b-ba4c-aa24e15f6218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97cedbb-0c6b-4102-a2ef-3430a091573c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694494e1-153c-483c-a734-fe62d1c60c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f75ca9-c1fe-4897-98c8-33962c77bbb0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c687bda-df1a-4f8b-9dd9-fea4843c154f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44294cf1-b5b1-4185-8f0d-c27c75ba133f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da37ff6-5f7f-408b-88b1-c9ae37923b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d23bf99-ede1-4031-bd65-80b424073bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9d61a-a98f-4c0f-a24d-890895d5ca0b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972c0001-c670-4a0d-ae59-a009a6a73cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cdf236-fd79-4649-ba44-8bfdbb9028e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ac1676-5529-4a95-8f65-a7bf35cec8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5814ef-5f51-448d-a37c-ab0ed3672bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033df800-36f6-41c7-8455-e81b970c949f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc36ada6-125c-49b6-a5d7-e30f3ef052b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4162d909-19b2-4177-886d-baf4c8f89642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9a1407-96a7-493c-9c41-c8c8c6f4d21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d6d348-55c3-497e-b8f1-bb269c3c73ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fe399b-5190-411b-b7ce-7434cc4ec086",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ece592-7cf7-4b33-a512-ec8664d6a2bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df544a8-d20a-4457-bf4b-5206129d1134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b830671b-b91b-4514-97b9-51ea71b3a3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cf4c52-b24f-4129-bec9-1b857a79dfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fd72fb-a58c-4c20-915a-8b3990061a6a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f470995e-5ca8-41ab-9831-41f3e3f28731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0a37c2-f91e-4090-9f08-84cbb52afb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aa404c-cbc9-410a-9558-73ed05f7d549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e483ee-ee10-4113-b6df-60efb1ee6404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d137201c-5abc-4e19-acf7-34f55695b940",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea04fb1-1aa3-4792-b4e1-cf17169d78cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddaa750b-acc3-4846-9df1-dd859f2249d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ff6146-db18-46ce-97f4-a282e6ab670e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189d81ba-85bd-4885-b1bc-e633c9e0b402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491bdd39-ad1c-44a4-ad02-2ce06200f2f9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd680876-2d74-46fa-a7e4-d31835610632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db9e8382-9c76-4409-abf5-07dff1313e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774d9d79-3fe8-415f-b589-41b4dc3bb91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a5ea17-8a55-4600-98a2-d4f55f3d334e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d011f0-b810-4605-a1a3-a9e106425e40",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2425e90-406c-426b-94dd-97264b88edf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d09833-49a6-4ea6-b095-81ef9ad04bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7701a656-5530-4ff2-9d2d-aad840b6bff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bed4ea-b803-4568-b5bd-bf106f58c2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e919909c-484b-4940-bfe9-9de592d3bddb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441fabeb-5e0f-4f54-b0c1-c9a7bbca518a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72abd778-120e-4f65-86e0-202958b269a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d63d06-c1ac-447b-9fed-8ff7c6549db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c34c94c-fb8e-4e2e-8aae-3b586158e587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247866e3-3ecc-4002-99ef-3b3ed879bafa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70509010-4eed-4741-9ecc-65b7b14a44b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86033592-ad69-4b1f-bc59-53a97a398231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991fcd78-64fb-45c0-9ed8-5c8aa19e1d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f51293c-6f32-4f4f-8dee-0e78a3fa8dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c1209a-289b-44c6-a81f-ccdb3d1e8a74",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a839da3d-9a32-4b82-99c1-c431c7a9d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb9f73f-3488-4e80-8a1e-6fb4c78fd165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3b4738-7f89-46c2-a1ca-45ee4e3a1350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8800ad82-9a23-4c63-a95f-b5545e410a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891b939c-ae77-4612-abb9-86ba1f20328c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0a6b34-67df-4d5b-a570-61fa223ddd66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14909c06-48b0-47ac-9371-bfc3b2fc002c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe89784-98a4-418c-a083-6fb03a1775c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ff98c7-6692-46df-84b2-076a83b9590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eecdd4-48a4-4a6b-81dc-e842778e5d3b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676b636a-0b91-44f1-9926-21ad5d119b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1cb28a-5806-42ce-98eb-bcf2e3c11d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae05cf3-cee1-4c64-a36c-bc3b9f13f3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77af36c-9d5e-43c0-90c0-369e924433e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5225d47-a48b-4d6c-b9b4-8aaadd25daf3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0207b30-3ed7-4e1b-8488-7dd4a5d66a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9119570a-a3ae-4559-afd3-462b4b4a73f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ee92d4-2367-493d-9c57-a68a7cad1bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd3b251-af25-4287-ae97-a33523658620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f2c4d8-6565-4194-8ae1-9acc097130f8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5bb558-83a7-4943-9532-dbf02cb1318e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e314e1-7feb-4727-ae2e-b6ad024cc0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4d452a-266c-4099-93ad-946d292774e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575f1156-3c82-496c-bbcb-8a66567f49a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1552d33a-8919-4554-aa0d-3edbfc3d377f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e81a3c-8eee-4add-90bc-c149ee8c1371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf507177-079a-403c-b15e-1017205ec5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb43e91-762d-4459-8a9a-95c63e17ffb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4fab68-9a88-4db0-9b40-6864f63de17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4572c437-d9ed-43ac-b1d2-cb99b0826952",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5ed70d-a327-4fa8-bf3f-ea23aa3d9376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c375fd23-2385-4f63-bc23-0625e11684aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db54ca8-b0da-4123-991a-0c182c0de997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68134b8-31e9-4340-b4a7-e77346c1233a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b197417-328a-436d-9f73-d16d6ff62cfd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de7605d-f9e8-4d0a-9f74-89b9b80632e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9df7d7-aea4-44ab-9a58-8b43a57e10a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ee0593-9a83-4fd0-b375-55ecd921e239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72dc32b-9cc5-463d-9122-647b8f471290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086cebbf-d66d-490a-910e-bc44db1968a3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80315a5f-70e9-46db-b60b-28e6a9d99741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a93231-fe1d-4b6d-82c9-5ec884cd00b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989384f5-54dd-4430-a354-c5930e333b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b854fc24-e62d-45e7-8191-fd8d305b4127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989cf90c-8ca8-44f4-9a21-2733fa06fb66",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18cab0f-510d-46c3-a611-d02ba2a993a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7d2a8e-3f32-4f3f-91e1-f325cec32c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ecc8cc-c3e8-44e5-9dc8-3efa5e316e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea0568f-f175-463d-8d4c-4afdcee5b6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a75f6f-2b55-4a6c-ba73-bd78f20515be",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79cb202-5288-47c4-9648-f045b6777342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a94fff-a92a-4a83-9f3f-ffa6a6662084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52416b87-76e4-465d-93c9-5b76dcbc2a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b14516-45af-442f-9cee-291c510647c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c84739-4c1d-432a-a91b-500b917de725",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ed6f6-80c3-4b6a-852a-2e5bb1d223e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a9a4d4-d583-4d1a-b71a-93ceae136c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad320361-632e-47da-bc9e-aa7c64fbaf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84a8533-1a29-45f8-9929-13684da8ec94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f2c181-5ece-4ce5-805e-146d48cee4fc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1f1256-0f19-4f16-be46-ce84eac25768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67b502c-c5df-47a0-9e26-c619924c09c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc44946b-666b-488f-8b57-ae41fec3ec81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c83f570-b338-4a5e-9ccb-75ad29e8312d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dfd16d-62eb-4384-8f54-5895f112b995",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d3c2e4-11e7-447d-9d64-cfcb75dcffe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c75ba5-5190-4d87-bba4-cfc957e96b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f544f7d-e124-49c5-acfd-6684e7f0fc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08196e49-ed57-4e7e-9198-fd6ab237deaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d8f3b8-1e77-4380-9e1d-d48630624ecf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b1cc0d-dcf1-4e9f-9de4-b8cae0d8a8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9379f9db-e9c1-42a5-8880-6eb81a77eb4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1eb0f-145e-4d73-b076-05362afa5c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc25fdef-7603-46bc-ac88-e49b6a6b9ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b59a135-777f-4ad5-8d98-88c03e4a2fa7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d97e93-0648-457f-9f31-a24fd946b926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a1a58c-2f5c-4ab2-a01f-aade45ca03b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774183e2-32f8-4194-aa76-be5b35cbe3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c4ad1c-a80b-478e-9152-000b55178017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b094e9-da35-4292-9e91-c101b51f84ed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd4184-ae20-46a2-aa75-86b4a866a365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b378d96-362e-4cb0-9e59-01464757462d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b693ab0-9514-4c85-9998-2aa5d9a68094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0b0cba-e174-45f0-93a8-ecd4e32c7493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88e1233-f36f-4a20-9be9-f1656ac1c74f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0630ce-ed2c-47b6-b3ab-0c638716f804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc3b98c-26a5-4b21-ba4a-510ef78789ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c537b704-e81e-4465-b17a-ff0af87c7a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20293a79-36b5-427b-930d-b7852d2e32c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f271fc-8171-4f15-9eae-4ad989660db0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409b077-f907-4c4c-8c87-ee1acb649ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50d2560-39fe-430a-acb0-93ff355a12e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e15286f-d0a6-45d8-8ab2-7fc6405600b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b42b888-f270-4c0e-af39-ba667bbf2cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95631523-df12-4b28-87ef-7085f01bf939",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d003a6f7-31a4-4ee0-9b8b-827d47828587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6cd91c-111d-4b6b-ba66-48c403a8c315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9980fd29-d035-4cec-a50a-43d20214615b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f538531-9183-4a2b-874b-5ff816f61398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c486ca-48ea-4832-8d7f-6f5a37ead27a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24c4af7-4548-41ae-a992-bd196e842baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c15ac5-a237-42fa-859d-670e58721c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ce128f-2f90-4b80-a0d6-80982c7b80ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4556a2-5f7e-4edd-a89d-e7290e2975eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21b323b-79fc-458c-b147-7139ed49dfdb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b39c2f-2b1e-4167-869c-c092fc438d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4490153-4972-474e-b82e-5cbe9f28df65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f10ed15-1615-477b-9aaa-7b388a1d2d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c8e0d0-b651-4292-9b24-811e3a058f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e0dcb3-c547-4517-80ca-b2a4ae4b9300",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4add015c-aa61-487a-9590-1b4a1eba3ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fed0ba0-c6f1-4258-982f-e0fb4cd6e26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c8e3e3-3c35-4bf9-be3a-94a04711b258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9221f21-e988-4e71-b2a8-85288517861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6c2852-63f9-4269-884d-0a2d592c8701",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7f8e03-18dc-4564-8573-fa8f0a8fba16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d252fca2-65d4-4fd6-bac0-3a725256653a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bb3b86-b633-4740-855b-44358a2aa2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908a43c8-a9b5-42c7-b241-157a838eb614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83df28e0-280b-47f1-856f-7e00e6327599",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2e5536-48b4-4572-89bd-55c6f02d99fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c1c81a-dbee-4601-b9e6-b4c83f516d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e9616d-0173-4b77-8e57-685bc25d53a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f204202c-f14a-49c9-b977-cf3d5fee3010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8dde23-f839-4863-a673-bf431526b9d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ec78b5-d9a3-4258-91c5-5097fe2ef0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb1e1f2-bb61-4ab6-b366-5fd7082d664a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409723b1-2071-46a9-99ba-2fea8b9224ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d99c8e-55e9-4f56-9be3-6e486df4a0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e489e27-9cd9-4064-8178-e264a95482c1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6ff888-680b-4a46-8878-b03f2c41ead7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acc38e1-5a45-44af-a3a9-5d4344185f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2dd850-2801-4e40-a1a1-c3b556194516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e25b0e-53f3-40f1-b929-4eae84aa8a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef97ac1-b550-4d23-81a4-a6fc845eec3b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1869cdc5-e5f5-474f-a3b0-979270f22078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d90f8e-2644-4a20-aefe-c9fb46c3bd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd48b70f-9086-4ac2-a75d-6b259a351e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be0076e-b6b4-4c24-9fab-f6c076ebb161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8faa6fe-d143-4510-b324-f9c32cdbfb4f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bbebc9-a61e-42f2-975d-6dfecd2c8b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10975b92-525b-4263-b01b-fc422c48ea19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34065b8-d191-43c3-9820-c22793be1d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528fdc2a-c2a1-4249-bd33-7393048a8808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d0b911-5201-40d8-b35a-cc01d4ced5e9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942742e7-c66e-40fc-b730-778b5ea7490a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a8832f-9105-43dd-ac6d-61de92325c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96aaec3-2484-484a-a206-2dc86e2a4328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43488f8-314f-48bf-ad86-1560e03cf7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd08b28-b222-4ded-b298-e3ac2ca9d8cd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca577b9f-c83d-4b23-8034-e9e30db88f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a42d4d9-031f-460f-abc5-58adbde96372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12279efc-2952-46c0-9b9c-cba472c4b07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee263bd9-6829-4475-a0bc-f6393a567685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54753edd-bdfa-4eef-b2ba-15b43d858284",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46243d9-8b30-4728-b363-2c266adff652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5fef18-de12-4579-9d8b-6c6da0537b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69f0352-0d50-4e8f-ba50-435b0ec8e3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9a4880-d44d-4fb6-ac0f-f238189a7853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30fbbba-3358-4b91-9d7e-63adbcf5576b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040d210c-996a-4ce3-a864-5c7f7c527d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adad915-d3f4-42ae-8fce-d1a55d4ab7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0679ae48-0061-4221-a70f-29c0068d2987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb85cfff-120e-4cc1-b2c8-876f21bea52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e24d55-8d59-41a4-bc92-aae6ac7a6fac",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca56e5da-5799-443a-899b-1f1f54f73a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f087e910-1005-4380-80e2-82dab35e4f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7ab9d4-f27f-4231-aeab-02fc7834b217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e95a23-5086-46d0-af0d-b48cd7aa94e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e12bb5a-11d8-413c-9043-dd3b1a21575e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270c5cf6-f4fc-45af-a035-743242dbad17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ef1290-0142-49fe-803b-51c0c8f8dc35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe0132-4670-4d68-a533-3a66f21b60cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd37c20c-162e-490b-9de6-e6c916f85feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eeb6bb-e170-4d81-ba30-c92021762892",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96aa3cb-b2fa-4b66-94a7-e7018d484401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d88553-9a5b-4a2b-80e6-5a6344062570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1af8ce-b520-4977-9656-92088caf2147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed50e242-dac9-4a8e-9830-049e7f285ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b4ae57-d896-476c-b2bd-3fcf6ee13676",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a44737-7715-4f3d-84b1-04b7dfe06fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "820616b2-a17b-4346-a2f7-f6621f94d4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad5c07a-fb68-4634-954b-4e44959a93c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b9914a-d428-4468-ab45-83675288106d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ecb0f8-8e7b-40e3-8892-255a919a3031",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b6087-adfa-4108-af24-1a6fca47b05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d9c487-1e83-4765-bdaa-5171ee24d829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207e3290-2899-46a1-be4a-2daa8baa5374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2d21a1-3b01-4f91-af96-696e1c550b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ba25ef-bf11-4488-bf6e-a5976c09613b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c9eb80-b2be-4a14-af69-e65f65779b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbb21b2-c970-466b-a88c-fdf0a5ff441b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bc4119-f307-4bd5-8876-a522f41455c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6f28e0-5b83-404d-adc2-9c0b6cf5eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30221b0b-3f90-4334-a7a1-2c046e7a2b1d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb21e99a-0887-4544-ae72-21b633cf543e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1934da28-d933-4409-8c6d-9300f0b14411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd9681a-6200-424d-80e4-aafb6e623f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7ad690-8d4b-4381-9506-c9bc0fb83421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0465596-65ad-4e75-b9ba-22ec9ac82674",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746ea7f7-0b45-4d6a-a019-50eb09dee3b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73eb1167-f9db-4894-b212-a1699e7dcc2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f59497-bc1c-4750-a4b6-690b4cca08a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006b4da8-3421-4275-a438-e07c057c3bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88a6de9-23c9-4bd8-827c-4f7e67148fe3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc0262b-36ef-4b55-bed0-3fa373e88b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2975fac6-98da-4ed2-896d-b6da05bdfeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee786f-455b-41cf-940a-f9ae28519203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e16286-3923-41d8-84a7-2028b0a951ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8945f8-9c48-4c61-a4c5-805b4f6a4537",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f639ff06-53bd-4f5c-b816-9182f597094a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6906a48d-ca80-402b-827a-10ce809d8ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f2bf9d-fa28-41c1-b462-6ef968a7e11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c1aee0-09c8-4049-a5c7-6529a720be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90956a33-dfe4-4c52-adbe-49fcc469d3ce",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02121f8b-4a32-464f-b9bd-7db542cc4da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76590a8d-223d-4324-87bb-229d0d534958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6398db73-21e4-41c0-9fac-734e24e740bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab61f2db-ea5f-4e53-ae27-712dac133432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d3e7d7-2a2c-4e6f-a006-37c069d4b37c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772e9d33-481b-44d5-a2e4-026d8f5c88cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04a2e3d-b1b6-4480-83e6-37c70414eee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b84d0b2-8594-4f47-8ad6-0672bd2299d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ec7187-82fd-4d85-82ce-9fdeb21a4009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc897773-564e-47af-9037-558f185d4c1f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f434a5-bdec-43ab-a647-ef89e2d857eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd14b304-2218-4e2d-93a6-93521d0f2d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bf5c06-5577-4c8b-b4b6-7119b926fa98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba766770-3b7c-48b7-be2e-6f1904cad54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890b1761-1497-4690-b8a0-0a14ce4c406b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1305dd-cdb3-4b22-89c1-d952d3256512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c724c8ca-48e3-4586-a7f5-2e3d1ce021b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb14651c-4a67-41bf-a61a-be620f15ed12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257b328b-4dd7-452a-8877-18777d189755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b6645b-078b-491b-abe4-65f64a90ac29",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f184ee93-6c2e-4049-8187-b9002f2112e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8cc7456-634f-48b1-826d-43b90462c14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c4fd8f-892d-468c-b069-3ad5b47b4913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11239299-4e3a-431e-90b1-c40240dd086e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27763bb6-ba00-4f57-b7f6-e54b41a4c0b9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636dd9eb-d298-42fc-a958-d7d91783f319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd839b8-a7e6-4bbb-96a5-d9a5f9658532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74fdce2-7f7a-459e-a180-51b0f797c21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26422792-3a20-46c2-baa9-a0182c57f7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95ca299-66b0-45ed-ba6c-7b4fc454c178",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c93a00-e876-4ee5-8a00-0a7ed4b2ad43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6efc0843-10f5-4286-87c9-03ae1ab82631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f859afe1-2ff4-46a5-be8a-4d832bd6bd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1316fc06-c7c1-420a-8767-8d8478acf58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f10d20e-ae7a-4f9a-b3a3-83b5973801d0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286898d2-84be-4d6e-b15a-5cebb3e349ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c3b7f9-ee50-4c3a-a188-fec9c6075890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503950b8-6388-4123-9ce9-150f1040e60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5e79b8-253c-40fc-bcdf-dd1457403f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27917cf7-31f8-41de-aac6-06d49249247a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b82fe6-1aec-4edb-accd-9e6d5aa32652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cdd03c7-e613-46c1-915e-ca7497aac40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efc2e38-adc0-4ab6-90ad-32fee6fd242a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6566e1-58cf-4032-b9d2-b47fbe3d0286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae0e36b-105b-426a-9d9e-230caf894e26",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4462c2b5-bcab-42be-8b6b-13bb39191862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3744d4a-e56e-48ee-b6a3-d7860415f294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2b83b8-7695-44d5-b6f6-3dab22b1fe5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60e025c-4e30-4ab1-973e-4d213c8d58bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beea651a-f85d-4668-8767-f8fcc8feadaa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf706847-6e8d-4128-a2ff-fff9c331970b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fd9ff0-6915-4f94-ba3f-b5c379f8906e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e7620c-5a28-48e3-80f6-99958568d4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193cdf17-76d0-4589-bff8-3826bbed8eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca2dc0b-7174-4ceb-8ad4-795083828368",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3983b316-0fc8-4023-b476-1350dc1b046f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03fd7ba9-ca7f-4394-96f0-183bff96ffa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c26626e-80c9-4c1a-b061-a0713e8cc2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822373c1-0156-4db0-8cc8-a40360c4c02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83bc0a6-240f-4fc2-844e-d5077f95f311",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e454e007-308b-4036-96cb-4d67601f33d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6938550-b28b-4dfe-8049-59ee25c78ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa840008-44c2-492b-9b98-ec92e6392351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa8478b-981d-4657-9cc6-50c919d423a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113a3536-9d46-4616-845e-2d93e5034b46",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a826c4-1803-485e-acfc-6e0719b3bf05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f198d4b5-1912-497f-b46d-8da1171007ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7787192-e2f4-4403-a39c-b6d5f6ce222f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59413cf-82cf-4d00-9cb2-085d57e0eade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8315795e-c961-41fb-8ad0-c26b63563b1e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dc725f-580b-47ec-8c08-ee6d225beaa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1215e65c-1d12-438c-b466-ae1bd0b60b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2085a6-f014-40b4-9248-ab92aa128466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64505278-c4b7-46dd-ad6d-d3140abb5995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf06293e-e3d6-42fe-a6a1-330e147581ab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1ace5d-fdd2-4b66-94d3-5f2977073450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35a97f5-377f-4fa1-8a68-5cd504bbb6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fbe653-2371-4c4e-9422-44cbe7bffbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcf7ee5-3cf0-4d6b-81b7-eca875bac806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e00232-4795-443f-9f38-cb3420d6a3b7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4760571-b855-4887-b9be-bec87c0e683d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94432e7-18ac-46ec-b8d0-614d125eb404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfd9334-249b-4a85-a40d-a79e494286bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25321aeb-b325-4a8e-8054-e148267ca52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a4ba6a-296d-4a1a-ba70-b2d576359e7b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f915b825-0922-4f72-ac42-1795718f298a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5d35fe-9ee7-4b90-a5a6-9d01e9c09863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ccce56-e19b-47af-910c-de6addf22135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd4ca42-302e-4f23-8af4-5b2c9e567202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c90617-46b7-4cf7-addb-ecbe2bbf9794",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c63cca2-7814-41c8-bd71-398a37b60814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e09e8f7-c10c-41f4-a60c-aece55c0acaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3033f8ae-81d6-4f3a-901a-a6663ef8c76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8ebccb-a70e-4eaf-9461-fcb527a0f36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ff64a1-0003-4958-b33f-cb650b1ed6d0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e705a5f-462d-47e1-bd57-920ea08dc7c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106616fc-1a56-426d-b68a-f4815b2a85b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60c2ee7-2419-4df3-8e43-f48da81278c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3655ad3a-bfd7-49f2-bc4c-e338d9640514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e1815b-fb24-4b42-9336-0ef49137a58a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1590e4-5c1a-45fc-81d9-bda9c0fa05a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73b0700-7794-49e7-a9b4-4805323ea0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf03fda2-f4b8-481e-80d4-0c37dcdee16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ab7cb7-d058-4e9f-a491-5b0f3026dadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfb9e8c-87eb-4ab2-a7e3-7b4a41b12ea9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2740e054-2782-4764-96a9-5db2f8b0325d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9fd69e-0c3c-46f6-8fe2-80f8d065af93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b044f6-3e24-441b-b5a9-e24d6183d974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f692f6e-aaeb-4476-b043-fe00b01279e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a0dbe7-7ac7-4502-bd02-b955f9046360",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0877c2a4-d3c0-4c82-aada-7553e93a49ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833a5544-9930-46b3-a5d9-d75c76db01ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4de667-3dd2-46f2-95fe-2506d7e2ee99",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1597d20-eae4-40b6-9f5d-41202565bf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b81e39-1429-47a8-8fc5-384d11330e37",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5ec0d1-04ef-4f3b-b9de-59e84335f412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f478478-470c-4c55-b77d-26af261e1c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520353fe-e18a-40a4-bc71-4f32ec57db84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67556a3-44b7-4784-a0f3-12d0c0e0c0f7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "869de6ca-c44a-4c5d-bcc5-115020ef2a34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a30e314-c5ac-40bf-90f2-fd5632eb2493"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfe5f00e-8885-462d-8bf0-c8a9fd92cb1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afd35ece-1271-48d5-94cf-86b0053c1ea7"
                    }
                  }
                ]
              },
              {
                "id": "1a0454d7-cc76-4cde-add9-f9cde8367229",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1ebe09e-4213-4e38-aba1-d5d2b0176e4c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48da1cc1-8593-40b0-a856-83bf85b2cc93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "894acc8d-c938-4d75-b1d4-06e34fea0c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6c5cdc-745e-4973-9240-053c9503ecdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d803b3a8-2364-4e33-8805-5a5a66a594d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900f52f-eeeb-4e98-a66c-f8c887e4c9bc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11ded70-242f-4036-a2de-fbab419e0e2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2541a717-0f47-4021-8580-4066c08a4e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cb2338-dfab-4f1f-9250-19d4bd1da6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72655627-cd3a-4689-a563-bfa8ad54d484"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "398793e4-b768-4e09-ad86-f0dde7655151",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b91de6e7-7936-415b-b719-fbb668633210"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae01407c-9811-4ddf-a552-568fcf7ae6b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca1b65f7-3d42-4112-827c-e4e137205432"
                    }
                  }
                ]
              },
              {
                "id": "e2e71e29-a194-4cb3-9ac9-e9d9b1b6431a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4bf15832-b2b4-4af7-b35c-580c6fe9d36c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530e204c-6034-4a23-958c-3bf53b56007c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ac427097-15db-424f-be68-b9244069b48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3cbc8f-7a0d-456b-8e40-deeaade2eae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca65f55-f4bf-413f-b605-bc742c5a40d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c370aa1-e552-43a0-9d32-bdab268f60da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bac4af47-38bd-4e86-a5d3-b94caadb9ad7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f85a7a45-bb68-4095-ba9c-b27df1c9fa74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4e3fc917-a74a-4ecb-a63d-4af2e3258f30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2354c40a-7259-4249-b678-a2ea3c669b5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28c6908f-cfe3-4d1e-bc1c-e9fb1165262d"
                    }
                  }
                ]
              },
              {
                "id": "1f4204d1-9db2-457b-8c59-5c5a1166df04",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "938ac126-b05c-44f7-b175-090598937af2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0d6a4a68-1b08-44f2-8be6-63ede72a94c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f5c6605-9e9f-4e83-ac3d-024b8ddadb9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b20677ee-2f32-43b9-8297-f3261da5c61e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54c3965b-3ce2-4a26-8845-a4fdadba6a5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "37fc4469-ed23-440e-a717-3ac15ef34617"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4274916c-44df-4e07-9245-c142cd45ad12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af5dbc1d-ecf3-44ef-8826-b229b7e96321"
            }
          }
        ]
      },
      {
        "id": "9049e828-5609-41d0-9a41-7697ae6c6eed",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "40baff31-f030-432b-b546-27126b1ed28d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3044995d-387f-4d81-863d-cf5ce9f833f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7c5c9d8-b3a9-4c49-ba38-39ec4184d848",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76fee4c-068b-4cc9-89ff-7c375e6b28be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6c97bf62-8830-48cf-abf9-35c0cf00fa6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71680ab7-4e16-4c35-b796-e5610763bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3ba59da-0731-4840-8d0e-b3e5477ce91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1e82d5-7961-4c29-9272-614cd540c5bb",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e20e3c-3fdd-4584-911a-e41ae68686a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "64cbc1bf-d1de-4b39-a235-98ffc426bee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f796c87-b17a-46de-84f3-21544a1f7a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ec24acd-0da3-4202-886a-ba76a432b3e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44a1d996-8271-4627-b706-af4641b1af6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa1d88f2-d74b-4f49-b56c-9127df6faa7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91be9ae3-b096-4877-b18f-921ffb26cc61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dca506c0-33c2-4d0e-bfee-2e27a4224576"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60f3f100-671e-4e2b-8a7a-7d2d3e964132",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a8fa41b-0d7c-4322-ba73-10e6eee66bec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc704642-0623-45f8-b9fc-7a7fc13fee87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d92d8b22-959b-4b96-b36b-35721785c3c1"
            }
          }
        ]
      },
      {
        "id": "99da7381-b348-4251-8cbe-d60ef72544dc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cb46e12a-bcfa-4f75-abe7-df043d744cdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d050db01-7dfd-444b-b822-e0a3c53f6e5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51e55d33-9e65-48ee-acdc-1575976e7cbf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de422f47-c6aa-496a-95fb-d5c3066897e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4c29db23-9e83-470b-87e1-e6fe1db21533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027ecef6-d502-4110-b64a-27bebd7523da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5140447-e754-4ce4-939b-e71ef5cb41be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc49d405-6525-44c7-9343-d2988dd81d96",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50460eb-46d2-426d-9bd1-c1efc0a23455",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6faa1f38-89db-4f2f-8b02-3e4fb1b9170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9961ffe-8029-409b-bd9b-a7468eb893b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "543fda18-50ad-462d-bbbd-271af7f1cacd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7839a102-08ab-4ebb-867f-4c391d8b5ce1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d467b9a5-1c8e-480c-911c-8c3b758439a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "967c7eca-4b68-474b-84ae-b4012b28c935",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8958acd-6f0c-46f4-b67d-b130e6a18921"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b8db65c-c99a-4331-9dc9-fe2f24faf450",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a4bba484-9362-468d-b953-7d43dc5f465c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98e9c5ef-5030-476b-86d9-960a1e84f99c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6dbe018-6410-46a0-83b9-d36132d233c1"
            }
          }
        ]
      },
      {
        "id": "61b48f54-ad0c-4762-8950-d54bd5264404",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "110b4ab4-f30d-463c-86e9-0b200c333b40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e13b5d3-3ed5-4b1d-9631-f5c230e5dc90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae08aaea-4043-44ae-941e-941395c7c46f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c6ab9c-824d-44a9-bc7c-b77c931e8837",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "66b67094-8d85-4ad4-87bc-bec5782dccb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf6dbfe-7ac2-42ab-8715-7c6b47a45327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e35ea921-085b-44a3-9816-5f98809f0da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58705279-cd95-4cdb-8928-8b74374cd106",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18485f7b-2041-46da-9bb2-f5aa558d4053",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a2d4178a-a06e-45bb-b46c-b06cab8c8b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0968abe-c1a6-43a5-a16e-d808ddfb8c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6308b221-570b-4436-bcc9-c83c650a4b50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61b73e13-b2ff-43a1-96de-b36978bd2551",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b9cec62-2eb8-4937-a09a-29049dd00975"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "806e06b2-58bc-494e-8938-c917f5481ee4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a2e26ab-2704-4c0d-aaad-7b8a16b52856"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a042ae4-f3da-473b-b417-ae8edfc6aee3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e6ed6286-66dc-4661-9640-96566a16797c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "194cb6f4-b7a8-4c73-8f8d-712de9973e6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b16c4f00-af89-4eb5-80dc-f876b80eabe3"
            }
          }
        ]
      },
      {
        "id": "1f36e8cb-e804-4e8c-8c4d-6de529056a1f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63ef6c96-1ed2-40d9-8e48-b3f5441984e6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bafed70-32c7-4d75-82d0-34efc167098d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5f60ffbb-4141-4875-b3aa-bca7ffa8440c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5328084f-92d9-4e34-9e11-175c64f93eb0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89162679-44e5-4c3f-8c5a-6b2a951578c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 753.1544401544402,
      "responseMin": 19,
      "responseMax": 9634,
      "responseSd": 905.0412474279408,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677544875373,
      "completed": 1677545081210
    },
    "executions": [
      {
        "id": "76cb1495-d66d-4431-812f-6ec7f4d51eb3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "db1f2704-b201-4199-8e64-33df76314765",
          "httpRequestId": "255bd649-d87b-405b-aa5d-42ef1e2dca07"
        },
        "item": {
          "id": "76cb1495-d66d-4431-812f-6ec7f4d51eb3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fcdbc68f-c0d0-4b2d-ad22-2ae7f3d59855",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "9f04a022-cc78-462e-914a-fbf56b44c474",
        "cursor": {
          "ref": "4899fe75-0922-431f-bd56-e33ccf1b318d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "706e69fb-96cf-4cc3-b939-274a456ec9f5"
        },
        "item": {
          "id": "9f04a022-cc78-462e-914a-fbf56b44c474",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "74d9393d-73f9-4405-9a93-358ebc774ea6",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "7ae2ed91-29a4-4076-9892-3b1894ce8986",
        "cursor": {
          "ref": "d3487a81-4570-45e0-ac66-a7fd8de79d47",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cb9c2338-93a0-49d0-8853-8c023f1caf3f"
        },
        "item": {
          "id": "7ae2ed91-29a4-4076-9892-3b1894ce8986",
          "name": "did_json"
        },
        "response": {
          "id": "1c0db6b7-7b5d-4d66-9072-d31e9c763408",
          "status": "OK",
          "code": 200,
          "responseTime": 1176,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6f442-a497-4891-b242-430a7d77dcbf",
        "cursor": {
          "ref": "7a25fa85-2810-4be7-b44a-c3f0791dfa32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "83090eaa-43a5-4d07-9316-6079172c2bc4"
        },
        "item": {
          "id": "38a6f442-a497-4891-b242-430a7d77dcbf",
          "name": "did:invalid"
        },
        "response": {
          "id": "8b193dff-466f-4828-b082-190287a09dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6f442-a497-4891-b242-430a7d77dcbf",
        "cursor": {
          "ref": "7a25fa85-2810-4be7-b44a-c3f0791dfa32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "83090eaa-43a5-4d07-9316-6079172c2bc4"
        },
        "item": {
          "id": "38a6f442-a497-4891-b242-430a7d77dcbf",
          "name": "did:invalid"
        },
        "response": {
          "id": "8b193dff-466f-4828-b082-190287a09dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da81486b-ebaa-449b-b9cf-c407c036a869",
        "cursor": {
          "ref": "8094da99-4738-468a-9fb3-90aa9a56dd9d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "24e93faa-e7bb-4b98-99b4-043efe52879d"
        },
        "item": {
          "id": "da81486b-ebaa-449b-b9cf-c407c036a869",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "84a3e75c-76a3-44eb-9af8-3c4a70764c8f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 751,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f60d62-76ed-45a7-bb70-85a908a91c3e",
        "cursor": {
          "ref": "572b327f-e30d-45ac-a433-152624f9ffb5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e3cf65f9-9ab9-4809-bd73-b8e330f2b9e0"
        },
        "item": {
          "id": "e6f60d62-76ed-45a7-bb70-85a908a91c3e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a45a5e07-1c95-4582-a482-ec9f17264830",
          "status": "Not Found",
          "code": 404,
          "responseTime": 675,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c5b5ce-879b-4081-b8f6-934e402576f0",
        "cursor": {
          "ref": "48b9a9e3-eb3c-4522-98c8-47459ade8621",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "82a427c7-0732-4fde-84bd-0151324fc8ac"
        },
        "item": {
          "id": "32c5b5ce-879b-4081-b8f6-934e402576f0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6fe8f54f-58ed-46e2-9759-d9573615031d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43e4ded-eefa-43ed-b775-6ab469eb09d7",
        "cursor": {
          "ref": "58958faf-1359-403f-8841-44b16b4f9e8e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a43f9e3-0056-4d33-9b83-cfe4c9b3f60b"
        },
        "item": {
          "id": "f43e4ded-eefa-43ed-b775-6ab469eb09d7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3c4e01dc-e662-4824-b2ca-005aa77a5afd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 629,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43e4ded-eefa-43ed-b775-6ab469eb09d7",
        "cursor": {
          "ref": "58958faf-1359-403f-8841-44b16b4f9e8e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a43f9e3-0056-4d33-9b83-cfe4c9b3f60b"
        },
        "item": {
          "id": "f43e4ded-eefa-43ed-b775-6ab469eb09d7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3c4e01dc-e662-4824-b2ca-005aa77a5afd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 629,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37860e0-2844-47ab-a40d-7af61d031dfe",
        "cursor": {
          "ref": "2c7513fd-de83-4f21-9842-1bd226438ab0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d516af01-c427-482e-8423-8567f96a003f"
        },
        "item": {
          "id": "d37860e0-2844-47ab-a40d-7af61d031dfe",
          "name": "identifiers"
        },
        "response": {
          "id": "f21ddd60-7ae4-4b19-9ae7-4d9ae9e4be89",
          "status": "OK",
          "code": 200,
          "responseTime": 1056,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f2db7e-34c6-40cc-a66c-8114c2621e9a",
        "cursor": {
          "ref": "ac7080ba-24fc-4f37-988d-df5a07394c88",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f82b979a-b7d0-4c91-a5c0-9ac6a251b3a0"
        },
        "item": {
          "id": "f9f2db7e-34c6-40cc-a66c-8114c2621e9a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9b2eefe0-f37e-4b49-bdd3-9b059fc26893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f2db7e-34c6-40cc-a66c-8114c2621e9a",
        "cursor": {
          "ref": "ac7080ba-24fc-4f37-988d-df5a07394c88",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f82b979a-b7d0-4c91-a5c0-9ac6a251b3a0"
        },
        "item": {
          "id": "f9f2db7e-34c6-40cc-a66c-8114c2621e9a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9b2eefe0-f37e-4b49-bdd3-9b059fc26893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f615c3-1ac3-4be9-b3f9-cbf7ef3dfb21",
        "cursor": {
          "ref": "33f3843d-5fad-440a-ae7f-45a30376be8f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8be86cab-69bb-4e5c-80bc-978755167d70"
        },
        "item": {
          "id": "74f615c3-1ac3-4be9-b3f9-cbf7ef3dfb21",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e619cc92-7d7d-4603-9a1f-7757eb5225d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ca3f7c-5ae3-403f-86f5-86e8994d8773",
        "cursor": {
          "ref": "4da7a645-db36-4dd2-9a34-d27cb2f883d4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86a762d6-2948-48bc-b93f-c9e1453f3dcd"
        },
        "item": {
          "id": "b4ca3f7c-5ae3-403f-86f5-86e8994d8773",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fa6bc26f-a3e5-4a05-96c3-7c353b710c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad50ffc-765f-4b7e-9dfe-83affef5debd",
        "cursor": {
          "ref": "6b4a4086-6efe-4f24-893a-eefada28f818",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "443f95c5-86ce-49a6-9fca-37a561bee476"
        },
        "item": {
          "id": "fad50ffc-765f-4b7e-9dfe-83affef5debd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9be54cf2-47d0-412b-b703-a97de27c78fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249d2959-bd5c-4c7b-9e79-22c1f63ae739",
        "cursor": {
          "ref": "3eb1d1a0-ba11-4e3b-aaff-2d79e8288a12",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aa123405-c224-4695-8be7-425a8865aad6"
        },
        "item": {
          "id": "249d2959-bd5c-4c7b-9e79-22c1f63ae739",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f28f6c91-eea9-47d2-a4e0-e5dbdc746377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1897da1-6937-48c9-b813-c7f75515a3f7",
        "cursor": {
          "ref": "4e1cde99-f3fe-4e76-8da6-40edf3e7fa16",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2139bbf9-31a7-49d3-9083-5a15174dc2e4"
        },
        "item": {
          "id": "a1897da1-6937-48c9-b813-c7f75515a3f7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fee7456b-fd5d-4baf-830b-0a4fb173b8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a68c8c-7212-40b5-96d1-8f7a44a10d07",
        "cursor": {
          "ref": "d4f0aa88-ff7f-4a02-a39d-f32e2add956e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "54dfb2b5-6247-46b1-ba87-ccc4e4a6350e"
        },
        "item": {
          "id": "b6a68c8c-7212-40b5-96d1-8f7a44a10d07",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e132e852-6d67-424b-996e-c76621bd3bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781f4740-67c3-4881-ae9b-4face5ffb8f3",
        "cursor": {
          "ref": "0e00a94c-f2d4-488a-b86e-b6d704bd4475",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6f794599-ed61-4bd4-b392-892b9fab0058"
        },
        "item": {
          "id": "781f4740-67c3-4881-ae9b-4face5ffb8f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1892765f-cdfd-4cbf-bb4d-9e4048c01009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025c3bda-7e21-4ede-86fc-447c5bf8b2b9",
        "cursor": {
          "ref": "d92538ea-fc88-4fd1-9385-1b7b3662fd73",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7d32bcbe-7a97-4bd6-8152-0e654a2599df"
        },
        "item": {
          "id": "025c3bda-7e21-4ede-86fc-447c5bf8b2b9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "98875c3a-2a12-41b8-a4f1-f09ff1e1bfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d7668a-3b34-499c-a901-3d4e34c7971c",
        "cursor": {
          "ref": "31cbca78-81e6-424d-99bc-0094611cc6ea",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "50c811f4-33ed-47db-8eea-4351fcf52628"
        },
        "item": {
          "id": "83d7668a-3b34-499c-a901-3d4e34c7971c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2289a483-8129-4d42-886b-1955ec107f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667dddc2-def9-4299-9a0e-5831bfa56dcc",
        "cursor": {
          "ref": "b3f9e4d3-a608-47b8-815a-52a308043c91",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e3ce10bd-47f5-4686-8b4d-1c63a80cbae7"
        },
        "item": {
          "id": "667dddc2-def9-4299-9a0e-5831bfa56dcc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a47f4139-9480-41fa-8f76-8e738126e937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908a93e3-5b91-437d-b934-2f2424c3d9aa",
        "cursor": {
          "ref": "aaca00bf-a9ac-42e8-9639-dba51eed7489",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ec4078f-e935-469e-a5c9-1759d77f9d34"
        },
        "item": {
          "id": "908a93e3-5b91-437d-b934-2f2424c3d9aa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3b15ba57-a637-47cc-8509-165a28d96ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94ac9b7-4c3b-4571-a480-08412f9bd26e",
        "cursor": {
          "ref": "89af1c76-6800-48e9-9ad5-6be11b2fc832",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d1cf7853-7f1f-4b5d-9aaa-5a4ad5d8d2f7"
        },
        "item": {
          "id": "d94ac9b7-4c3b-4571-a480-08412f9bd26e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d07af5c1-f3a9-4469-a6ae-702b691709ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36460db6-cdd6-4c00-944e-0cff71e8bae8",
        "cursor": {
          "ref": "3df43810-25dd-4a36-8bab-fffaebffacb6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0c211c7-c9ca-4f39-9898-99c3361e5345"
        },
        "item": {
          "id": "36460db6-cdd6-4c00-944e-0cff71e8bae8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "93cdf40c-9a6a-424b-9808-9104abbf947c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484f986f-6da8-4da5-a800-33bfdff69df4",
        "cursor": {
          "ref": "f4622f51-626b-4ac0-99ab-ecb37860d386",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f658b751-72ed-4ee4-b098-424eb196c7e4"
        },
        "item": {
          "id": "484f986f-6da8-4da5-a800-33bfdff69df4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "83fb2d36-eee5-45a0-b34b-ac5d03068f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3744300-167c-4ce0-9d02-97dd1a404d42",
        "cursor": {
          "ref": "e732f286-da66-46c7-927d-73cc5622e373",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "14bda9b8-d117-42a2-bf21-a7c36f8851c1"
        },
        "item": {
          "id": "b3744300-167c-4ce0-9d02-97dd1a404d42",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f3d2e93-a7fd-4434-a515-1828a357a9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb1d157-5862-48ae-a2e3-8dff3c3f83f2",
        "cursor": {
          "ref": "8ea7d979-8750-4be7-88cd-5ed8e71a8c00",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ad9856e5-0897-4f0a-9e94-e08c56fec3a5"
        },
        "item": {
          "id": "4bb1d157-5862-48ae-a2e3-8dff3c3f83f2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9c77edd4-96e3-42a4-baf6-7fc7b3145b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6d9f65-7a5d-44cd-a31c-0dd9762ac55f",
        "cursor": {
          "ref": "3254d579-04d3-4893-b5ef-671d346edf4d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2245dd55-d7e5-44a9-a291-17dbabe2d8b0"
        },
        "item": {
          "id": "3b6d9f65-7a5d-44cd-a31c-0dd9762ac55f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "90b96dbe-3775-4a39-83b3-1bce61ab8e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b34dff-7449-4a54-be88-4e927f1e5264",
        "cursor": {
          "ref": "fbcb0e60-e181-4983-a868-e50649121c62",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9311ff66-8d2d-4acd-9571-54e22f611d4a"
        },
        "item": {
          "id": "43b34dff-7449-4a54-be88-4e927f1e5264",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "240a5e78-afec-4cad-862e-f915fa98509a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94791f2d-e820-4402-a95d-90280de4f615",
        "cursor": {
          "ref": "72399258-011e-4f75-a75e-1e3ab09b1778",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ec80f228-64e8-47bf-ac7a-0a3edf4bb7f0"
        },
        "item": {
          "id": "94791f2d-e820-4402-a95d-90280de4f615",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e56cb9d0-7f0a-415e-8e69-87289c6766cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd9ec47-c584-4eb3-846c-614fa262cf05",
        "cursor": {
          "ref": "7155a016-0b81-4f92-8cbd-7c77ab662c09",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "388abc6b-af3a-479d-ad00-4a5080b65026"
        },
        "item": {
          "id": "dbd9ec47-c584-4eb3-846c-614fa262cf05",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c71d4ca6-ccc7-4da1-91dc-1ac0f38bad1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382f0edb-0237-4f40-8749-dbc0b05ca3c9",
        "cursor": {
          "ref": "d5bf95cb-4833-489c-bc07-d048b0a5ad6a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b4b7721f-fb6e-429c-bc8a-1302f3230a2f"
        },
        "item": {
          "id": "382f0edb-0237-4f40-8749-dbc0b05ca3c9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0b8b003e-27af-44d3-9eba-eeb6d39c497c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e59bf7d-a6df-49c0-8085-7310871e4b32",
        "cursor": {
          "ref": "0e1cd303-e2c6-4f26-8c84-36e44acaa0ac",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "28b0ae56-a536-4184-b042-f345538695ff"
        },
        "item": {
          "id": "0e59bf7d-a6df-49c0-8085-7310871e4b32",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9caecd41-e82e-4811-9f7a-3c19fa4bc614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c94ef16-5ab0-4ad3-8e78-5c50b8319ad4",
        "cursor": {
          "ref": "3afac9be-1a72-4129-b3a3-f41341d43d98",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f61688e4-8fd3-4707-9bc7-c7d36f34780f"
        },
        "item": {
          "id": "5c94ef16-5ab0-4ad3-8e78-5c50b8319ad4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9f7bf766-9b31-49d9-a335-fb06fa451b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39b268e-cfeb-4047-af37-0f69f4cc0b86",
        "cursor": {
          "ref": "d5c6c42d-5409-4f49-a922-16490d35b3ac",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6d44ccc8-3ddb-4120-9c25-828409dabb29"
        },
        "item": {
          "id": "f39b268e-cfeb-4047-af37-0f69f4cc0b86",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e7485082-ec14-4917-bd0d-9d376a84ba9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc487f8-bc92-4c47-abb2-246bd9687915",
        "cursor": {
          "ref": "2d8b382c-e841-4796-88cf-f96eb91692bb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ff3ac37f-7280-4236-9128-4c9089b30b99"
        },
        "item": {
          "id": "abc487f8-bc92-4c47-abb2-246bd9687915",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "39932593-e338-4429-bf51-0323f2449902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b06caf-0c95-429a-82f9-d2d6d1d2ad33",
        "cursor": {
          "ref": "c7169d8e-5c0e-4ce7-953a-3255aa1ef880",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "72f9d48e-8a82-481e-9f0e-2b7673f51b1a"
        },
        "item": {
          "id": "a8b06caf-0c95-429a-82f9-d2d6d1d2ad33",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "574b5aee-70b7-42cc-98a3-39459a042a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc6edd5-7cd2-44b2-944d-dfe7bf494900",
        "cursor": {
          "ref": "1ff27982-1aa9-4a07-a288-30c74919fde7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "07b4b726-9120-4d05-a15d-5ad106754780"
        },
        "item": {
          "id": "0fc6edd5-7cd2-44b2-944d-dfe7bf494900",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3f236ab2-a58b-4455-83e6-43ba64450f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2222,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605d5f8a-2df9-4e48-9595-1c94db22e53c",
        "cursor": {
          "ref": "4e445c66-e28e-4f21-bf8f-5bfdbe03af04",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1aa8c095-0fef-4ec6-ad86-5d9e39d87b67"
        },
        "item": {
          "id": "605d5f8a-2df9-4e48-9595-1c94db22e53c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "82428d89-bba6-4ca6-9ee5-6345f820c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2203,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0441dfcc-2946-413b-b3f6-5b9b67874018",
        "cursor": {
          "ref": "289e3b0f-36cf-42c3-9ec5-868cbea29967",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f630243f-1779-46e9-9a2e-c2bb03dc6bd7"
        },
        "item": {
          "id": "0441dfcc-2946-413b-b3f6-5b9b67874018",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "665d5da8-b8a7-4438-a646-99ab8326f646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1899,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbb8165-8bad-4138-b3ae-edbb6391d0a9",
        "cursor": {
          "ref": "aa6e42df-ab45-4baa-940e-3cb6bd75772a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7a7900e5-d565-4002-9d3f-b7fcc5ce94f0"
        },
        "item": {
          "id": "2bbb8165-8bad-4138-b3ae-edbb6391d0a9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "56b96490-6c4e-4196-806f-fa388304c85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1803,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c79b2f0-e481-4883-85e3-e98c38188826",
        "cursor": {
          "ref": "f2d45ec2-eb9d-4ddb-a0ab-417b68fcbeb3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0864922e-0ac0-4fdf-afde-7f93ce1799a2"
        },
        "item": {
          "id": "8c79b2f0-e481-4883-85e3-e98c38188826",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "50695a7b-3274-4985-88ba-3dd0bc0d8caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2427,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ceee6fd-1ed6-4109-be6f-a673d80c3f07",
        "cursor": {
          "ref": "e292741c-05a7-4500-b3f9-2a8937ad0af4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c07700bb-7a64-4adb-b60f-e4b94fecd713"
        },
        "item": {
          "id": "2ceee6fd-1ed6-4109-be6f-a673d80c3f07",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7bfbd9fd-bc60-4812-bff1-cc315785f8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1616,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfd5650-417f-429c-acf4-aa9ed1653b39",
        "cursor": {
          "ref": "10abba2a-8d5a-46cf-b02e-422c61de67af",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "425760e4-e1c3-4248-8704-4c038d1ec501"
        },
        "item": {
          "id": "8bfd5650-417f-429c-acf4-aa9ed1653b39",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "72da04aa-1e3a-4835-93af-612be9c11d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1365,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dc0fa7-f761-4935-b56b-6cd3f105dd13",
        "cursor": {
          "ref": "ee673caf-59bf-412c-9bd3-ead46a270af5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f426f227-5c06-4862-ae7f-24b896d4c2a5"
        },
        "item": {
          "id": "a5dc0fa7-f761-4935-b56b-6cd3f105dd13",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1caf038e-94a1-4b04-b3eb-f528503af111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1133,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e429bcd8-36d8-4d3d-8644-af797ac0513a",
        "cursor": {
          "ref": "900c558b-4ba1-42ff-85bf-d5765df45065",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8e6ca39c-679e-4c90-b0d9-4dc702143c5f"
        },
        "item": {
          "id": "e429bcd8-36d8-4d3d-8644-af797ac0513a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8fef5e37-50d9-4546-9eb4-ac22bc9a0069",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1062,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb2b635-eac8-4cc4-ad07-fc992190a5e6",
        "cursor": {
          "ref": "50b2b295-4bb3-4c5a-809d-66f97b612fe1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "90c95eac-3ed1-41ea-8fad-8ff5bfb26f5e"
        },
        "item": {
          "id": "7eb2b635-eac8-4cc4-ad07-fc992190a5e6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "241c6568-812e-475f-bacb-a86c7eb75c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40592fbc-4eb6-40ec-98f5-731b8afa854c",
        "cursor": {
          "ref": "1c110d4b-81a3-4484-9214-412e807b2c1c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a984cb62-22b8-404e-ae29-c35b531b0fcd"
        },
        "item": {
          "id": "40592fbc-4eb6-40ec-98f5-731b8afa854c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bc8034bc-3c26-4842-aa41-77f28ec52c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd938ad3-9988-4ba5-8adc-5b9574c73c9f",
        "cursor": {
          "ref": "2f6d831e-b2f4-4595-8757-fec33150713e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2b38c6af-b5fd-43cf-89e7-badc038112a0"
        },
        "item": {
          "id": "bd938ad3-9988-4ba5-8adc-5b9574c73c9f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4528c02a-53a0-4f79-b86f-d367f8f89d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999750f2-b8f1-42c3-b43e-f29c7573f7cf",
        "cursor": {
          "ref": "94cf8e53-8c15-40d1-9fe4-381b9582da3e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2918755e-85ed-4c0d-b61a-f749dab226d4"
        },
        "item": {
          "id": "999750f2-b8f1-42c3-b43e-f29c7573f7cf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1ec5494a-0f4b-44cf-8070-424a75f39cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b5241-7636-4041-a014-5db4a6cd5693",
        "cursor": {
          "ref": "76477736-8fb1-433c-a852-2c61d95764bd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "391e6729-9b0a-4e31-91d4-fd0d9c70155f"
        },
        "item": {
          "id": "9c1b5241-7636-4041-a014-5db4a6cd5693",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bf2df773-3037-462b-88d8-e746b875828a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c139a792-cdb8-4d94-82b3-6495a5bd3c24",
        "cursor": {
          "ref": "83790c6d-bf96-4f67-b0de-8973b1e3305f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "66c03af6-b9aa-46c0-981e-b5733cf2d141"
        },
        "item": {
          "id": "c139a792-cdb8-4d94-82b3-6495a5bd3c24",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "524e285c-c54d-4025-853b-2f901e7639cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f769a95-e965-41ac-a3cf-8756a28ab710",
        "cursor": {
          "ref": "9348334d-5ccf-4c86-bae0-1ac84ca27964",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d350607b-c107-450e-9dbc-3f93b2cc3c41"
        },
        "item": {
          "id": "4f769a95-e965-41ac-a3cf-8756a28ab710",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "597d7b80-248e-43d6-b3a0-32f11b103e0f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 751,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b8d897-2528-42c9-b7bc-be6bb92c8f85",
        "cursor": {
          "ref": "86a994d7-0dce-4433-9f84-1587ee814959",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fdb7a0be-96c7-4e10-bdf8-d7e60dd073be"
        },
        "item": {
          "id": "41b8d897-2528-42c9-b7bc-be6bb92c8f85",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4400ccb7-4142-4f32-8a26-91e2360f0374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2559c14c-5d27-47a6-9959-3aac53443544",
        "cursor": {
          "ref": "60925067-e625-4fef-ac8f-b287db39989b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ba162a39-93ef-4570-9244-3a057b9cc908"
        },
        "item": {
          "id": "2559c14c-5d27-47a6-9959-3aac53443544",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e43c865b-ba0b-4759-a184-055de5ac3293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1772,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9eb114-4628-4fe0-bc4b-48657dce1d94",
        "cursor": {
          "ref": "8774cfd9-469b-43f5-96b5-5abe4858569d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b39b22a8-7ddc-4b79-9ea2-8155d7d751b3"
        },
        "item": {
          "id": "ce9eb114-4628-4fe0-bc4b-48657dce1d94",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "76b8a210-690f-4fdc-9a49-962768a0a542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1324,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36aecdf-0cf9-4993-a293-090eddd942ec",
        "cursor": {
          "ref": "343badfa-de11-40aa-b290-07280447a021",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3b6da6a2-8d83-4a26-a5eb-efcd170354a0"
        },
        "item": {
          "id": "e36aecdf-0cf9-4993-a293-090eddd942ec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d0afe48f-724e-4634-8eb9-2ddbae6be365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1417,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af98e436-e06d-4c6d-b980-013a26802ade",
        "cursor": {
          "ref": "fe646146-fe12-4367-a561-1036ae93fc68",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b8e9f8f7-d4fb-44e5-b229-b1563531f595"
        },
        "item": {
          "id": "af98e436-e06d-4c6d-b980-013a26802ade",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fc483888-1ced-4e64-8e1a-35b77d4cb5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0e3cc-ac61-4e64-8545-8293f7140651",
        "cursor": {
          "ref": "d8174a91-5092-4d3f-9608-4ed55ecc1ba9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "84ec9c5e-437e-49ab-93ba-06b913bfd9b8"
        },
        "item": {
          "id": "cbe0e3cc-ac61-4e64-8545-8293f7140651",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2a3b00e3-04ef-490a-9839-ef14d7b02f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1405,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15508184-7a1c-42fa-8a54-b18d635a3a41",
        "cursor": {
          "ref": "b6cb157b-7a8c-4c28-b107-185e068568b2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "272c6f1f-9106-45a9-a24a-fb2e340cca6e"
        },
        "item": {
          "id": "15508184-7a1c-42fa-8a54-b18d635a3a41",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6fac6308-f260-4f0c-9458-fd61ce1360cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4109ba-d953-4647-9d90-2bd574647027",
        "cursor": {
          "ref": "c4d694a5-28f9-474e-b272-d3c9523b13af",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "944398b6-a63f-4788-bf74-db1e8a272c73"
        },
        "item": {
          "id": "ed4109ba-d953-4647-9d90-2bd574647027",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c25c076f-ef8c-44e3-abfd-75e4d9dfe1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b4d9bc-1c99-4011-a6b5-590b368c761c",
        "cursor": {
          "ref": "736c0906-396e-460d-b8fe-9f2b2ee9e2ab",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cc1403c4-9007-4233-9f7f-03dbb2951536"
        },
        "item": {
          "id": "31b4d9bc-1c99-4011-a6b5-590b368c761c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "49a1fe23-d0d6-4fef-a1cd-ac0491f9c6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb77a4a-11ef-4bdd-8f1a-750ba8c5e8cf",
        "cursor": {
          "ref": "a42d3b7a-0fc3-4dfe-8c35-074212da4caf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "28222514-35a2-4f8c-9663-a3530ba5536b"
        },
        "item": {
          "id": "3bb77a4a-11ef-4bdd-8f1a-750ba8c5e8cf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cad5b93e-1450-47eb-a04c-0ee6590679e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec7e54a-a36f-457f-bf2b-5ed6dc103917",
        "cursor": {
          "ref": "6898d44c-cf99-489b-adf0-39536711b070",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "80a0ed9c-6883-4fac-a90a-c46d1ff7a74b"
        },
        "item": {
          "id": "6ec7e54a-a36f-457f-bf2b-5ed6dc103917",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0cfa9820-7314-4c84-888c-f5dda6d61671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71e8f98-2127-4ebc-8a66-6441aea6aeba",
        "cursor": {
          "ref": "726d1723-f120-4bc5-b547-9451c17d2e14",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "428dfbf1-7d7d-4536-b926-9a39d92b7f97"
        },
        "item": {
          "id": "b71e8f98-2127-4ebc-8a66-6441aea6aeba",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c5737f98-c1b0-424c-9f17-19c322f9838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f98141e-c88d-4c38-9411-0810c973679c",
        "cursor": {
          "ref": "78d56ba4-c489-4d86-aaa5-55c88bd5e965",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4a81898e-df09-45f7-8353-dfa3da6e9463"
        },
        "item": {
          "id": "7f98141e-c88d-4c38-9411-0810c973679c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bf583486-fb61-4550-8830-2226e1d51036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62ba09d-31c2-42e0-8234-646636e8d768",
        "cursor": {
          "ref": "342b4348-e279-4ae3-9b04-559afe999209",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8b8e6856-9ac1-44b5-808a-c52627d4880d"
        },
        "item": {
          "id": "d62ba09d-31c2-42e0-8234-646636e8d768",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "362b5446-f71b-4fae-8999-91a820f62166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fae927c-240f-4c05-9185-e49e2d10803a",
        "cursor": {
          "ref": "286fc8c1-6c60-4f1b-a937-8d638038ad07",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e623a9f6-5837-4841-9f7f-73923a68242a"
        },
        "item": {
          "id": "1fae927c-240f-4c05-9185-e49e2d10803a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7906a491-b314-4b40-8227-5a99286f21f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7045f0-f09b-4767-858b-e71b7f040095",
        "cursor": {
          "ref": "b30d6684-61e8-40f4-9ecb-97a42f7b5277",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f94a81b1-aba1-438d-8225-cb36083745ab"
        },
        "item": {
          "id": "0e7045f0-f09b-4767-858b-e71b7f040095",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "17f71873-f1cd-4d3c-bcc5-dd9469c30691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f76af04-8b6c-408b-a5a1-97038202f93c",
        "cursor": {
          "ref": "a4e9b33c-e047-4cc5-b236-20a4dc4be2d5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "60a3989a-c9ec-4202-b766-692f257745ab"
        },
        "item": {
          "id": "2f76af04-8b6c-408b-a5a1-97038202f93c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "13ddb3ce-e9ce-4cee-97f8-ed2dd66a8b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dc391a-0ad3-4696-9d03-d49dac55fc8e",
        "cursor": {
          "ref": "31edcf4e-d60b-45ef-ad62-35a60ebd1dfe",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1bef802a-82bf-408b-98c5-eed3709da306"
        },
        "item": {
          "id": "78dc391a-0ad3-4696-9d03-d49dac55fc8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "965f861e-df75-420d-907f-c2195d81fa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8f4d80-ef7e-42b2-aa1b-8df61ffa1409",
        "cursor": {
          "ref": "33d96b02-3011-42b9-b408-ff2e3e4306df",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5ae1e8b5-8259-4263-a291-46ecca9cb81e"
        },
        "item": {
          "id": "6f8f4d80-ef7e-42b2-aa1b-8df61ffa1409",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2f391769-5df4-407e-9e2d-fc5fe03e8fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e90e092-d00e-489b-8dcd-358289ea0e04",
        "cursor": {
          "ref": "c6f1ca52-7fc9-492e-acf7-e7a792cd151e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b9a02989-df0d-427d-8d91-9d285bdb67bc"
        },
        "item": {
          "id": "8e90e092-d00e-489b-8dcd-358289ea0e04",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "30f29f9b-4304-4d95-bf9b-8f63c3f5750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c9c320-6906-4f06-be5e-a0426979e2b1",
        "cursor": {
          "ref": "76d0853f-8702-49ed-a878-eeb32390cf45",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "561e6dfc-23e8-4608-bcc1-fb6934e2c221"
        },
        "item": {
          "id": "24c9c320-6906-4f06-be5e-a0426979e2b1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a490d90-a791-4a57-8411-4ed39f289157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e67dbd-1fcc-47e2-a4c0-dab809149da4",
        "cursor": {
          "ref": "2705d790-6f44-4af9-94d9-899f3a314c19",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9e23e7b5-e0db-4c28-a1af-3c54efb688c5"
        },
        "item": {
          "id": "76e67dbd-1fcc-47e2-a4c0-dab809149da4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a2a55d31-1f86-4cf9-9b2e-0fe11131126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e2a7dd-6df3-4534-8f40-ee79fe80a8bb",
        "cursor": {
          "ref": "df294a4d-e065-4c32-955a-a98f322d6324",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "59aad1ac-fb05-4ae0-92c3-6f44c46618c1"
        },
        "item": {
          "id": "88e2a7dd-6df3-4534-8f40-ee79fe80a8bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "61a0c857-5fa1-4c1c-87be-21ad8db4244f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051be3e1-706c-4718-8620-c3fe8afe4f10",
        "cursor": {
          "ref": "eaad9708-9b32-4265-a9ef-57d45e09c4c5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "95178931-9e84-4d35-8a60-5a1f0c254442"
        },
        "item": {
          "id": "051be3e1-706c-4718-8620-c3fe8afe4f10",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6bd58ddd-09dd-475e-a5cd-beb1e52019df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543b4189-1db3-43f5-999f-8b487ff9f61c",
        "cursor": {
          "ref": "55a2af5e-d4fe-435d-bdc6-9f122306a9d6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "655b21a5-7e01-4d91-9a3a-0f05a71bab7b"
        },
        "item": {
          "id": "543b4189-1db3-43f5-999f-8b487ff9f61c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "81b2fe4d-a645-49ee-bc7d-017e8580cd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa92f02-9616-43eb-a9c5-2d5bf468c039",
        "cursor": {
          "ref": "b8c522d3-432d-4dd2-a996-c4cafc1abd01",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cee4dc1b-cbd3-4221-a59e-1297b503b39f"
        },
        "item": {
          "id": "bfa92f02-9616-43eb-a9c5-2d5bf468c039",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d3ea7986-0265-4d12-8efd-40711476f1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feba6ee-9c8e-475e-9b4b-bfa42c10e10f",
        "cursor": {
          "ref": "5e03c3e1-404a-4efc-8010-d0cc77ecd207",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3a77fd00-cdf2-43f2-ba64-0040d229349d"
        },
        "item": {
          "id": "3feba6ee-9c8e-475e-9b4b-bfa42c10e10f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7e77c378-8b05-4ab6-97e2-ccf3a3b144ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2cfc1c-f6a6-421d-99d5-629c868750a1",
        "cursor": {
          "ref": "e90a2fff-6498-4e9c-a5cc-80d2212ac551",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99a72f7c-1122-4270-8271-2dc8c6187d98"
        },
        "item": {
          "id": "4c2cfc1c-f6a6-421d-99d5-629c868750a1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4ebfb465-b389-4269-af90-1b8373b47812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee630cea-0435-4936-a26f-930c75c9ddc5",
        "cursor": {
          "ref": "96b2232b-91eb-450f-b0f6-500e59c7553a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b82584f1-980e-4596-9212-6b5f5d7234d5"
        },
        "item": {
          "id": "ee630cea-0435-4936-a26f-930c75c9ddc5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d28d39b4-71d5-45cb-aa64-611bd316b44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb619f97-7672-4b7f-a2d0-ccdb94c241bc",
        "cursor": {
          "ref": "5f4a59c7-4e0f-4f5e-841b-fd1e8d32e00e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ad2923d1-1ed3-4eb3-bf68-ef58d7a8ef3d"
        },
        "item": {
          "id": "cb619f97-7672-4b7f-a2d0-ccdb94c241bc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5a353ba2-de5b-432f-b0a2-4cf131db3b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8686ebc-2943-4017-8c24-89c4517350b9",
        "cursor": {
          "ref": "58bbf8da-87b9-41ea-8770-0caa7dabaeb0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cd3dba18-c6e9-417f-b814-7d6a2412cd6a"
        },
        "item": {
          "id": "b8686ebc-2943-4017-8c24-89c4517350b9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4e900100-b9a6-4e5f-bb3d-5490cfe2dd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b85ca5-c05c-40b0-8d2b-421069089ba6",
        "cursor": {
          "ref": "9e91f2a7-0abf-44c0-a2ac-03aff0c7eec0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "53472be3-3659-4086-8efe-cb30ac388a91"
        },
        "item": {
          "id": "f9b85ca5-c05c-40b0-8d2b-421069089ba6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fd15be7b-f04e-4638-ab8d-50c96966f0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d8d68-0a6f-40bf-8fa6-ca602a7279a2",
        "cursor": {
          "ref": "e61aae2f-cd1e-4d86-afdd-9eae6ae15ae2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d5183215-1668-44c2-be1c-4cd1ad738ccd"
        },
        "item": {
          "id": "358d8d68-0a6f-40bf-8fa6-ca602a7279a2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e7848bc1-7904-4fb4-b346-cba140959bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1da6e4-e9c4-4f61-abb6-4221778e49be",
        "cursor": {
          "ref": "26a8a3ca-01c5-430a-9911-a2fba17f6826",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b184fe26-4376-4635-9051-34942f2f757d"
        },
        "item": {
          "id": "6f1da6e4-e9c4-4f61-abb6-4221778e49be",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "59a3927e-5987-49fd-a853-217b218f9692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e41ec96-33d0-4cea-b069-3730ce4e4732",
        "cursor": {
          "ref": "ff72e8b1-046d-48e7-b7a9-bc2debe32a5a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8a8e730e-7314-4d2f-b6d5-590d6749d6ce"
        },
        "item": {
          "id": "6e41ec96-33d0-4cea-b069-3730ce4e4732",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "592254ef-8dfc-469b-b7f4-1805cd229ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e44f13-d4af-4e1b-93f0-e35532382ce6",
        "cursor": {
          "ref": "693d8593-e969-4d58-912a-3c05696eedba",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cfea17ba-1e62-42fb-b961-a2a354f7f1f9"
        },
        "item": {
          "id": "e7e44f13-d4af-4e1b-93f0-e35532382ce6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1a35ec38-d9d2-45cc-b708-3d575cecb240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66fcb03-d39e-46ab-8504-9a1e12d3e264",
        "cursor": {
          "ref": "fb18356e-516b-4089-9304-b225fd3e51fc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc26a07e-ab35-45d0-b302-80309cf42213"
        },
        "item": {
          "id": "b66fcb03-d39e-46ab-8504-9a1e12d3e264",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bf5c486e-48a4-4c27-9472-2f0160ce2f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c35f1d-4885-4df7-84bd-c207502936c2",
        "cursor": {
          "ref": "fd81d3df-cc37-45d3-bffd-94fbd0003d3b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d6118827-2295-48b9-86ad-ae2a6d466e33"
        },
        "item": {
          "id": "b5c35f1d-4885-4df7-84bd-c207502936c2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "92151350-43ad-42de-ac7e-ca4a72f476f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e25092-652b-4c36-b128-e5dfda51b245",
        "cursor": {
          "ref": "46972159-1a62-4adc-b151-b22aad637eea",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "abc049c5-bc2b-4254-8b97-af0bf8fb5ddc"
        },
        "item": {
          "id": "93e25092-652b-4c36-b128-e5dfda51b245",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0df11e93-fc8e-4d47-b660-9de8e3ce863c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d48b7da-4aed-4af4-9d29-6fb08adfa448",
        "cursor": {
          "ref": "9a1a6fe2-1bbc-4282-b779-686098fe89c6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "abe8949d-69ce-4964-a020-6eb90205bfc7"
        },
        "item": {
          "id": "0d48b7da-4aed-4af4-9d29-6fb08adfa448",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ae83a4c7-72e2-407a-90a1-3b648744ac5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b32e48e-feed-418e-b56c-60c8eb5b9c8c",
        "cursor": {
          "ref": "40bb5d68-8f91-44a1-aec4-3331b3848ce8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "15885a7b-09a8-4b2f-965b-1c142e1d8ef0"
        },
        "item": {
          "id": "6b32e48e-feed-418e-b56c-60c8eb5b9c8c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "14f68ecf-cd76-441a-a320-683576a273b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f908e5-75b7-4fad-83e8-154ed6c36d46",
        "cursor": {
          "ref": "b0431231-6f20-4556-9a5a-d777a1c3dee0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "025b9d2f-20ab-42a3-8356-de6318b09829"
        },
        "item": {
          "id": "b7f908e5-75b7-4fad-83e8-154ed6c36d46",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "561a5af1-3762-48f5-b9b1-e168d1279717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dfc200-95a7-4544-b2b2-dc2ccd877942",
        "cursor": {
          "ref": "dc47c335-9ffb-4ecd-8cf3-b0319ccb2b9b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6184c624-4447-44cf-9883-820e08e7a8cb"
        },
        "item": {
          "id": "17dfc200-95a7-4544-b2b2-dc2ccd877942",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "209132ba-74d8-4652-8c90-30c7610f02e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f297b9c-bd23-4751-90ed-9c1cdbe50b31",
        "cursor": {
          "ref": "e64d767d-1222-4eb4-ae28-7376305393bd",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "41e74c1e-8a97-4784-98a9-ea13ee1fa596"
        },
        "item": {
          "id": "8f297b9c-bd23-4751-90ed-9c1cdbe50b31",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a0eaeb54-c1b2-477b-b007-5ebf86bfd9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb73f99-c92e-4a24-9aec-c9959b0a45ea",
        "cursor": {
          "ref": "b1d46837-b5f6-452c-a0a2-15057853711a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d1feb228-f40e-4fe1-9408-c7ff6fc6d448"
        },
        "item": {
          "id": "9cb73f99-c92e-4a24-9aec-c9959b0a45ea",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0b11e2d8-a0cb-4503-bcf8-aa8e4e09d138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251a51ed-d8a3-4460-ac63-e9611b4ca6f0",
        "cursor": {
          "ref": "5a0c68ca-ec14-45e7-b960-0aefdefb79df",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ffe99e42-79e8-48c5-9120-d6ab1df2d57a"
        },
        "item": {
          "id": "251a51ed-d8a3-4460-ac63-e9611b4ca6f0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "18e436cf-5ca7-48da-a763-155067d235e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff19e5-dea4-4cdb-b380-4ae7a165e60c",
        "cursor": {
          "ref": "ed076d6c-6b9d-4b0e-910f-874c938efd4d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a0d3f021-4a60-4497-b3a1-fc6a5663e4cd"
        },
        "item": {
          "id": "8cff19e5-dea4-4cdb-b380-4ae7a165e60c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "62e6ca45-7a25-437e-bf62-5dcf96c64c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6fed40-4a83-4cff-9ee8-ada162e99a14",
        "cursor": {
          "ref": "e78f3d27-a7ab-4188-9f38-dd808c373f11",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0d4b4234-4719-400f-9486-c60d4341d6c8"
        },
        "item": {
          "id": "7e6fed40-4a83-4cff-9ee8-ada162e99a14",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c35931f9-aa22-4544-9ac9-34da60b1ddb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eac756-2247-47c6-9750-0f5998e4a857",
        "cursor": {
          "ref": "4c86a09a-f986-4dc4-9d39-be1e76296df6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4f0c4e0b-7835-4487-9037-9e9eab3f266e"
        },
        "item": {
          "id": "99eac756-2247-47c6-9750-0f5998e4a857",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b50b4d1-2bef-4f32-9ae2-6583ea2a7971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c28ce2d-402b-4653-8ae3-24409288b828",
        "cursor": {
          "ref": "a8f51a73-4a0d-47bb-871e-3edcff535b58",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e04f392a-9de9-469c-9e71-7b65b4e3f640"
        },
        "item": {
          "id": "1c28ce2d-402b-4653-8ae3-24409288b828",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1cb4140d-2012-4e16-bdd2-00c770d0c64a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a76a02-cd71-45aa-9876-eb0a9e36e063",
        "cursor": {
          "ref": "e343be23-d323-46c5-9394-645c7acfdc33",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e1d4a683-d024-4873-b853-d9e54095a7a5"
        },
        "item": {
          "id": "55a76a02-cd71-45aa-9876-eb0a9e36e063",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "6277af6d-11c4-489c-844b-075816fc6160",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7f8d5d-2934-45a1-bd1c-71aed45f9515",
        "cursor": {
          "ref": "e94a654b-5b40-447b-bffb-c500868f0e21",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ad8d5c11-829d-41c5-8592-53c797f2f65d"
        },
        "item": {
          "id": "ee7f8d5d-2934-45a1-bd1c-71aed45f9515",
          "name": "credentials_issue"
        },
        "response": {
          "id": "79c3d8ba-99a9-4219-b590-5215ba56efd9",
          "status": "Created",
          "code": 201,
          "responseTime": 4726,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ddf268-b08c-415e-be65-693d72c97d04",
        "cursor": {
          "ref": "cf7c6cd3-0a7d-4a5d-b3a9-b6cc2eff1788",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c9f98536-1461-4b16-bc1e-eacbdf4e780a"
        },
        "item": {
          "id": "88ddf268-b08c-415e-be65-693d72c97d04",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1faacd40-cc37-4165-b24c-f74a03b5108a",
          "status": "Created",
          "code": 201,
          "responseTime": 5281,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf56b7-5113-432e-85b4-7df6ee203027",
        "cursor": {
          "ref": "c27e5dad-c7b3-4190-87c2-bf22e1d7d95e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "02e86d14-5e3c-49a7-be5a-dcfc489690ba"
        },
        "item": {
          "id": "26bf56b7-5113-432e-85b4-7df6ee203027",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b829b7ff-5ec8-4ff5-9f06-87e9df0f8e59",
          "status": "Created",
          "code": 201,
          "responseTime": 4650,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f619a570-a618-49aa-b81d-8f01ebc10d41",
        "cursor": {
          "ref": "918fe26f-edee-4689-a8af-840b64740321",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d1a804f7-1af6-4a36-a6ce-24aa3c3fad48"
        },
        "item": {
          "id": "f619a570-a618-49aa-b81d-8f01ebc10d41",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b95c97d1-5ba1-43fc-ae07-3ce056625d2e",
          "status": "Created",
          "code": 201,
          "responseTime": 7561,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72c803d-7534-49ee-a24c-c0131555cb55",
        "cursor": {
          "ref": "4da3e92e-e189-47c6-abd5-702ab4eb8705",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "06e5a6c9-7014-436e-a20a-9f48ba12e228"
        },
        "item": {
          "id": "d72c803d-7534-49ee-a24c-c0131555cb55",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a52b0779-d1ba-4c51-8eea-0be3f4652148",
          "status": "Created",
          "code": 201,
          "responseTime": 9634,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "7486d9c6-3538-4bd0-b8cb-4bc0220e1d87",
        "cursor": {
          "ref": "9a656eb2-2b4b-4dee-8ce8-c99aa904e663",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ce2297fd-5989-402b-ab90-dec8e7407fe5"
        },
        "item": {
          "id": "7486d9c6-3538-4bd0-b8cb-4bc0220e1d87",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b3697b3f-c0e3-4429-8e39-f66f96fc49b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7486d9c6-3538-4bd0-b8cb-4bc0220e1d87",
        "cursor": {
          "ref": "9a656eb2-2b4b-4dee-8ce8-c99aa904e663",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ce2297fd-5989-402b-ab90-dec8e7407fe5"
        },
        "item": {
          "id": "7486d9c6-3538-4bd0-b8cb-4bc0220e1d87",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b3697b3f-c0e3-4429-8e39-f66f96fc49b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6143faa-5d99-4c98-84e6-f09aa52b310a",
        "cursor": {
          "ref": "02a08a19-3f77-4e53-afe3-6fd787e7d0c3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "864f98bd-349f-4d27-b92a-8c9c6953b577"
        },
        "item": {
          "id": "d6143faa-5d99-4c98-84e6-f09aa52b310a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "edebcffa-2acf-409d-8a0d-7e807cceb936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e797d0d-62dd-40e1-91d7-7d908fe87ad0",
        "cursor": {
          "ref": "3e950f91-04d0-4754-94c7-db5101386236",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "155f0a29-54b2-4dc7-9398-d5dfa637bbeb"
        },
        "item": {
          "id": "9e797d0d-62dd-40e1-91d7-7d908fe87ad0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0a1735f1-9118-4bfd-87e8-6f876e030f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873cc682-b7b9-4323-828d-e08bd5c2de7a",
        "cursor": {
          "ref": "fc8c3a27-0d8a-40d2-96d1-af2517a686dc",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cd722df0-90e5-4595-90cd-4fa8ac8556af"
        },
        "item": {
          "id": "873cc682-b7b9-4323-828d-e08bd5c2de7a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e6776da3-4b55-4439-b7b0-9339c06392c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c156b1d-2306-4af1-8faf-81eccd9a64c7",
        "cursor": {
          "ref": "552dea1d-18ea-4aab-9e38-5132aeae79ab",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e0cb00fc-005a-4648-9c37-f77cf2c75165"
        },
        "item": {
          "id": "6c156b1d-2306-4af1-8faf-81eccd9a64c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1d12c527-2a65-4e6d-8f03-a0d2f9756f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bbd745-096f-482a-9d97-9ba01b30a085",
        "cursor": {
          "ref": "e648aff0-9c65-4993-af90-3310f449df3f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9d0e8cb3-9dec-4fb2-ba7a-d1b67dc82759"
        },
        "item": {
          "id": "38bbd745-096f-482a-9d97-9ba01b30a085",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a30f2bd6-09c7-4ed3-b0a4-881d25d12a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5859001c-7b4c-4c82-8e3c-2968a9584300",
        "cursor": {
          "ref": "b9ef8aee-ac61-468f-847c-ebfd0248802c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "24715000-4b18-4d06-b95b-71afc3efc3b0"
        },
        "item": {
          "id": "5859001c-7b4c-4c82-8e3c-2968a9584300",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c24da8b-9940-40e7-9144-53fb1ecda216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6a3bc1-3c49-4a75-8878-0cccef31fe0a",
        "cursor": {
          "ref": "cf83a979-af0c-46a7-bc27-ba5b36ae6394",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc643893-ac50-497d-86da-5430a08fa241"
        },
        "item": {
          "id": "cd6a3bc1-3c49-4a75-8878-0cccef31fe0a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a9b8a917-c649-4df1-9d6d-6598347355ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10fcba1-36a6-41a5-9796-ed2645f727a1",
        "cursor": {
          "ref": "0d76cfdb-9fc9-4d22-86f4-e3e6f655326c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6c2cfeb4-366e-49b7-889f-0cb0dc98fba2"
        },
        "item": {
          "id": "a10fcba1-36a6-41a5-9796-ed2645f727a1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fe953031-d26b-4d17-a9f0-eff861b67be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d928c7-9aa8-48f4-9be4-9b7f5a524258",
        "cursor": {
          "ref": "403eee14-1ecc-4ee7-83d2-cf52a840698c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d35a783e-e527-4882-9242-934f141cada4"
        },
        "item": {
          "id": "d0d928c7-9aa8-48f4-9be4-9b7f5a524258",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bed4372c-eecd-4ffd-b458-5b31a2f98a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3bd785-8a88-4f4b-9e3c-f2e2107d7589",
        "cursor": {
          "ref": "304113c8-d855-446f-99aa-f8d29f335f96",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "83b6a5e4-d7e2-4e10-b719-da30bab3e5e4"
        },
        "item": {
          "id": "4e3bd785-8a88-4f4b-9e3c-f2e2107d7589",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "015af78c-8fe6-444a-8662-82ad5b5b3f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf857f-408f-47af-a9d2-fcdc6d8c32a3",
        "cursor": {
          "ref": "f6f47df8-e2fd-45c8-b8a5-0a46e5d545bb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72ab9f3e-7189-433c-a72e-0ca75073a4c7"
        },
        "item": {
          "id": "8fcf857f-408f-47af-a9d2-fcdc6d8c32a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53765ad9-5749-4a33-a388-9ea9464d39e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6657e9-ff66-4ab5-b684-fa07052add66",
        "cursor": {
          "ref": "29766e07-0744-4cca-afc8-ef3724d911cd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b9486dce-2f32-473f-b3f7-3c5a75c522b5"
        },
        "item": {
          "id": "8d6657e9-ff66-4ab5-b684-fa07052add66",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "83c49d43-3aba-4996-a34a-915ac517ace1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8e2809-5ab0-41aa-bac0-0195dcb6aa8e",
        "cursor": {
          "ref": "1986a34e-1710-4acb-8ee9-06ec619cb629",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "687c82ce-e2ff-49e6-a7ab-d84ba418af64"
        },
        "item": {
          "id": "7d8e2809-5ab0-41aa-bac0-0195dcb6aa8e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28801b3f-68ef-4f67-aaba-26dedec8003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503a1af6-1117-431b-b8bf-e28ef3b1d661",
        "cursor": {
          "ref": "ecf9a861-8b7f-4853-9fc1-1c92b6b9456c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9585986-f905-4920-9d88-f347a7fc55b9"
        },
        "item": {
          "id": "503a1af6-1117-431b-b8bf-e28ef3b1d661",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "91a56fc7-a564-4f6a-a62c-96375983ab33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4562a73a-995e-4aed-8850-978803d31dc2",
        "cursor": {
          "ref": "9496d7a1-6db9-4af9-87c4-bd41a9dd7f9d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "663f6dde-71f8-4c9e-8801-9215bd8c1970"
        },
        "item": {
          "id": "4562a73a-995e-4aed-8850-978803d31dc2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8bd3ad2a-99a5-448c-bf8a-a95b894930a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd6fb34-23df-4a46-a1df-0f653c19ffc3",
        "cursor": {
          "ref": "2231a17b-a726-4f30-b059-17da2d8c6baa",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e56e8fec-71fc-404b-b385-274d453c4453"
        },
        "item": {
          "id": "6cd6fb34-23df-4a46-a1df-0f653c19ffc3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2f7a8044-e6c1-4aaa-934e-76b64592d5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ae0ed-e00a-4146-810c-010131893104",
        "cursor": {
          "ref": "3f771f78-aa0e-4b18-a3fd-98bd6fed21fd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "26ca64fa-1a19-43d1-aba3-d53e4e631f26"
        },
        "item": {
          "id": "e07ae0ed-e00a-4146-810c-010131893104",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f3d8d9c8-10a8-46ad-a675-55a1db8e66b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c1808d-09fb-4932-b6b0-7b60a9f84fd0",
        "cursor": {
          "ref": "b4a7a89c-7052-4a49-b815-ae54cfc84dcb",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5c08acd3-dc6f-4542-834b-10fa3750bdca"
        },
        "item": {
          "id": "f7c1808d-09fb-4932-b6b0-7b60a9f84fd0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "05ec7bd4-8626-41b2-af60-ecdc10c21cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7501742a-480c-4b5a-af11-b8a75f89c2ed",
        "cursor": {
          "ref": "3fdf6388-8269-4975-b640-77ab5a266c2c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3e209564-b525-48b2-a280-651abc1a13f0"
        },
        "item": {
          "id": "7501742a-480c-4b5a-af11-b8a75f89c2ed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1369d05-b30a-4664-87ca-e58fb92ed43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6baa100-4a8e-4c63-9d48-fe6d0a89f7a5",
        "cursor": {
          "ref": "1157bf96-a90c-40aa-a9ce-00eccf4d3494",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "066e4480-ade4-48e4-840a-b4f78d0588e0"
        },
        "item": {
          "id": "f6baa100-4a8e-4c63-9d48-fe6d0a89f7a5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "698c07f7-a854-40b4-8cd3-8485be875e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3299f6a1-470f-4591-9de7-6419525bd956",
        "cursor": {
          "ref": "3e6dc5ec-86e2-46af-aa19-add43a8067aa",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "73ac7e89-d127-4798-86fd-c0c659e5123f"
        },
        "item": {
          "id": "3299f6a1-470f-4591-9de7-6419525bd956",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dc215408-e797-400b-9e6f-88b274afd4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93188e9-8e2e-4475-a521-121d9720555c",
        "cursor": {
          "ref": "7989eed2-f35b-488a-ad30-2418861546e9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ba567542-60cf-45a0-b333-b4e1be48e33b"
        },
        "item": {
          "id": "f93188e9-8e2e-4475-a521-121d9720555c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4dbef348-f264-4503-9040-362cdf3c5e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c294fdc-ea41-4bd2-b643-1aa9c24cecac",
        "cursor": {
          "ref": "1c33c8b2-ba88-49f9-8a1c-8967b3ade551",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0d040a34-155d-4fd1-8665-cf4c08ba2540"
        },
        "item": {
          "id": "3c294fdc-ea41-4bd2-b643-1aa9c24cecac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "911de39a-9401-4ec9-b430-7d0107032533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191146c0-c677-48a0-a15b-8b9e8dbd0872",
        "cursor": {
          "ref": "3eec5a8a-4bf9-4eac-8075-d7564d714674",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7249eda7-f2e1-40ce-b1bb-3c8bc55aa81d"
        },
        "item": {
          "id": "191146c0-c677-48a0-a15b-8b9e8dbd0872",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cc82137c-065c-4e98-b957-369d5cfbb966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944a82e4-09ec-402d-bff5-9e3e63e83829",
        "cursor": {
          "ref": "91d3d4d8-742b-458a-bc25-85775fcf75b0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e93f9cfa-ded0-42ee-b90e-380fa9cde68e"
        },
        "item": {
          "id": "944a82e4-09ec-402d-bff5-9e3e63e83829",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f372a4a5-e155-4b59-b0e3-9cf5de5f4b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77f1db7-4a4b-4f56-98d4-e5b86d264f9e",
        "cursor": {
          "ref": "9aac6aa0-3ba3-4a5b-8ad7-87d69764a47e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "da86facf-d14f-40b7-964a-eb5cb8655beb"
        },
        "item": {
          "id": "f77f1db7-4a4b-4f56-98d4-e5b86d264f9e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "21a8774c-3e1e-4174-9aa0-a6d87a96c30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464973dd-9f0e-4132-973c-65b5f00d2f91",
        "cursor": {
          "ref": "f9cae305-91ae-4d01-b1a9-4bd8240f89f0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "01584343-c64f-4bd7-b544-9891f4111440"
        },
        "item": {
          "id": "464973dd-9f0e-4132-973c-65b5f00d2f91",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17457e61-fc24-4c3b-bf3e-3d75e33f2616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532c5ff7-3bd8-4930-8021-09abb735c0f2",
        "cursor": {
          "ref": "c051a411-440b-4d62-8cd8-1ca0aeb62f14",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a15e871f-c4e8-4cfe-a651-127b4b88ea94"
        },
        "item": {
          "id": "532c5ff7-3bd8-4930-8021-09abb735c0f2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbe9d3b0-cca7-4233-abf5-992c2abcf246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6f37a3-ee25-4803-98b4-dbe137f5a5a9",
        "cursor": {
          "ref": "9617ff42-d749-4bd9-babb-8527c74c957a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c8af939b-3d71-429e-8913-769514699352"
        },
        "item": {
          "id": "3d6f37a3-ee25-4803-98b4-dbe137f5a5a9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "50e0221f-a1f7-4613-ba7f-2e0af2bc225d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca693c3-7f27-41e6-9fae-7e37642829b6",
        "cursor": {
          "ref": "8e1af331-35e4-4eea-a43e-376895452aa0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b018eda5-bc14-4402-bce2-8a807d5d092a"
        },
        "item": {
          "id": "bca693c3-7f27-41e6-9fae-7e37642829b6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0987103e-53d3-45c9-9c2f-708e629dc55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be066493-01da-4b40-9445-4f92533b76f3",
        "cursor": {
          "ref": "2d44a144-1f41-4b80-985d-a81ff3e31b2a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c609c09e-4add-4883-81d8-ebdfaa82998d"
        },
        "item": {
          "id": "be066493-01da-4b40-9445-4f92533b76f3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0c729bb9-4d92-40f6-a747-d45e3e360612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adcd964-feda-44cd-a5d2-9e63207ec055",
        "cursor": {
          "ref": "a50d764b-4088-4baf-8175-f22ee7bf31fe",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "13c46cb2-fdce-41cb-9719-8285219607de"
        },
        "item": {
          "id": "9adcd964-feda-44cd-a5d2-9e63207ec055",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a20ec674-819b-4d7a-8403-2b54890df34e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da70d235-014c-4072-82e2-1acd65a948cb",
        "cursor": {
          "ref": "387a88d2-9f16-4b8a-951a-80fc014164fc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6dbede59-be60-4890-9bb8-50a862f5c2bc"
        },
        "item": {
          "id": "da70d235-014c-4072-82e2-1acd65a948cb",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "17f913ca-5fe1-4c8d-9b47-872b0fb84df2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 680,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b229d2c8-df16-4c54-a935-b24e0b29c559",
        "cursor": {
          "ref": "5b49b1fb-2871-494d-af63-ef30a82f4b66",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f1486f3a-ab72-4874-bf8d-360abfe201cd"
        },
        "item": {
          "id": "b229d2c8-df16-4c54-a935-b24e0b29c559",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ab678b18-1acf-4af7-8fb8-982404171d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b229d2c8-df16-4c54-a935-b24e0b29c559",
        "cursor": {
          "ref": "5b49b1fb-2871-494d-af63-ef30a82f4b66",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f1486f3a-ab72-4874-bf8d-360abfe201cd"
        },
        "item": {
          "id": "b229d2c8-df16-4c54-a935-b24e0b29c559",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ab678b18-1acf-4af7-8fb8-982404171d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acd05a8-a046-43f4-8e5e-9d542b18a6a3",
        "cursor": {
          "ref": "8773b448-d54d-441c-b59b-d8379be92aa0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e4ad1bb6-c38a-4dc8-8fec-7839c8340442"
        },
        "item": {
          "id": "8acd05a8-a046-43f4-8e5e-9d542b18a6a3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ce827ccf-1f37-42aa-94f9-6bf9f89c2907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f955971a-0eef-4ca6-8478-f5a6b3b7adf1",
        "cursor": {
          "ref": "5bbd1eab-c495-4b87-9487-213250643439",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "31b5084b-c557-4b89-b716-4141b771d3b8"
        },
        "item": {
          "id": "f955971a-0eef-4ca6-8478-f5a6b3b7adf1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d62a33c1-7cf7-4f8a-acd0-4281542c005f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b82236d-7d40-4fe2-87ac-2cd1470ca4d0",
        "cursor": {
          "ref": "9b42a80b-d933-4094-a57d-6c82cfd96721",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0769fc06-b6f8-4d16-88e8-2de5a6468714"
        },
        "item": {
          "id": "8b82236d-7d40-4fe2-87ac-2cd1470ca4d0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dabbe53a-638f-442f-95b5-e95dc4559c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a199757-a014-40d8-ac8a-0819919dc4dd",
        "cursor": {
          "ref": "81dc4b8a-f3be-42a7-b7b7-8a285bf1a658",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f9461666-d632-45e4-82b2-224fb1eb3417"
        },
        "item": {
          "id": "6a199757-a014-40d8-ac8a-0819919dc4dd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e0bdd9ec-d135-4242-a5d1-e7943afa240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c86a53a-5c86-4311-810f-c6474fd98566",
        "cursor": {
          "ref": "f706652c-def8-4e5a-8c77-e4fdc0f1c41d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6ba40c1f-27de-4d56-b69c-ea4fbe959de7"
        },
        "item": {
          "id": "0c86a53a-5c86-4311-810f-c6474fd98566",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dfb7ebba-c834-45f6-8dc8-6379ac057fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913ce81c-c0af-4ee9-bd85-a5091e87dec0",
        "cursor": {
          "ref": "84eabfe8-26f8-440b-81e7-6a209124c146",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "817a82a6-98e6-40aa-bb40-e88f95fbecea"
        },
        "item": {
          "id": "913ce81c-c0af-4ee9-bd85-a5091e87dec0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d19ad076-c2ea-4e72-8976-d8101c1afa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41616456-dc53-4f1b-af86-05e7a85c7fab",
        "cursor": {
          "ref": "09de7cb3-bfaa-4776-9d22-da5e00aae4a4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b812d2b0-e7f8-4b7c-81f6-32bd3c2f4a84"
        },
        "item": {
          "id": "41616456-dc53-4f1b-af86-05e7a85c7fab",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3db2a075-f4fd-4fc2-8788-05d9b828dd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c7fbe0-5fe8-4d74-9669-bd543b38ad31",
        "cursor": {
          "ref": "f54cafd5-95d5-44ad-bce3-ae1eef6bea4c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "efc4ea4d-18c7-4580-9156-33654030d2e6"
        },
        "item": {
          "id": "c5c7fbe0-5fe8-4d74-9669-bd543b38ad31",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "12269636-3af5-4f9b-be0e-b20b34617f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a07acf-98d7-41ab-a94a-1609bb0a510d",
        "cursor": {
          "ref": "c2274e08-9f93-4f08-a9c1-0a71481ee578",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8f22d33-6703-44ca-a676-302549a42dbd"
        },
        "item": {
          "id": "26a07acf-98d7-41ab-a94a-1609bb0a510d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3a46b2db-3743-463c-8e1a-fc43d4a7e9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6777cd85-c6e4-4a70-abcf-e50583c5a379",
        "cursor": {
          "ref": "66c95fcc-453e-404c-8bfc-4b94217ad7eb",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dbebf2d6-a649-42ad-ba8e-ef9dec1e2d85"
        },
        "item": {
          "id": "6777cd85-c6e4-4a70-abcf-e50583c5a379",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1e56114a-2786-4479-aa01-558ffef79817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d64df3-c3be-4011-a9bd-9720f1be9e9c",
        "cursor": {
          "ref": "cd4ccc68-2f3e-4b3f-8352-243543f1cac3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "57a6e8fe-1789-4d49-93ed-f62134610b8e"
        },
        "item": {
          "id": "67d64df3-c3be-4011-a9bd-9720f1be9e9c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d9442522-c18b-45e5-a920-7b5b046de1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3424783-989c-4551-8dc5-1faa559f720a",
        "cursor": {
          "ref": "554b2695-793d-4269-9410-3b1ce7ce7e1b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2826163a-1583-408f-8c7e-3e3451d0e4a8"
        },
        "item": {
          "id": "a3424783-989c-4551-8dc5-1faa559f720a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "65e9b01d-c016-4766-b128-12579e9eb50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f90ef9-8eec-45c3-aeb2-326413272573",
        "cursor": {
          "ref": "04eacd7c-0f67-4cae-a116-5849641b0c5c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b04f67f5-9243-4507-9afd-df8dc02913d3"
        },
        "item": {
          "id": "e3f90ef9-8eec-45c3-aeb2-326413272573",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d31056f1-519f-47d1-a063-1ffe066d73aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2328ad-037b-41a9-93ad-ca609d1c9c6a",
        "cursor": {
          "ref": "e8a41a97-309d-41b3-b80b-faddb640ef0e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "168766fc-1a01-48ee-a13f-959776d4db0d"
        },
        "item": {
          "id": "ae2328ad-037b-41a9-93ad-ca609d1c9c6a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "50b4afaa-04d6-4e3b-a3c7-e25307bb20dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f054ab5-6e31-4b07-8b7c-f778906b3de2",
        "cursor": {
          "ref": "1b3d6055-d537-4118-880d-5c807573c10e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e612ab84-1d8a-4ea4-bbfc-053f996ad24d"
        },
        "item": {
          "id": "5f054ab5-6e31-4b07-8b7c-f778906b3de2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e39156fe-7fb2-4903-93ca-73d5e82e8c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc54e4c-4be1-4cc5-9c5e-2e1a8f1737eb",
        "cursor": {
          "ref": "8739de40-3579-4dff-8391-28208d712fdb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "190d0945-ddf4-4770-80c4-093a59c13886"
        },
        "item": {
          "id": "5cc54e4c-4be1-4cc5-9c5e-2e1a8f1737eb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bdbf5a8c-633c-4375-a3e1-642d619b239b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b899b98-7160-405c-b7ad-a5f642d402ef",
        "cursor": {
          "ref": "530af8ec-f573-4f6f-8c70-b6f53addaec9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f652556d-5ed7-4628-a29d-febfe9646377"
        },
        "item": {
          "id": "8b899b98-7160-405c-b7ad-a5f642d402ef",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5ba89d3f-2ceb-4f08-be69-b03a70f629db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab248fc-c364-4bdb-b3d6-5a867949794b",
        "cursor": {
          "ref": "32eadbba-4f25-4f4c-a5f2-e6ef0af69a64",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1120d4ca-733b-442c-b9f8-f567c0dace37"
        },
        "item": {
          "id": "1ab248fc-c364-4bdb-b3d6-5a867949794b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4c567fba-2426-45ce-8e0e-3e869367326f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158f5fff-10c3-4438-bd82-03d04441cd6e",
        "cursor": {
          "ref": "75fb9154-96bf-4d99-86d9-6273a11d8990",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2bf45256-c69d-4fc8-a505-13ce43618edd"
        },
        "item": {
          "id": "158f5fff-10c3-4438-bd82-03d04441cd6e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a5ca7c8f-d040-4fe4-879f-0b4bc6ec6231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f75ca9-c1fe-4897-98c8-33962c77bbb0",
        "cursor": {
          "ref": "65d0761a-951c-4724-a66c-2bc5fa26ec6d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "22bcbf75-4f96-46e0-9e0a-51a2fa2a3aef"
        },
        "item": {
          "id": "89f75ca9-c1fe-4897-98c8-33962c77bbb0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "25932dbb-f13b-470f-9581-8651e387fd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9d61a-a98f-4c0f-a24d-890895d5ca0b",
        "cursor": {
          "ref": "5dad3029-2af3-4af7-a293-496e2b1be76a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "41d15d6e-ad2d-42e4-92fd-4a0c6606fc0f"
        },
        "item": {
          "id": "6cf9d61a-a98f-4c0f-a24d-890895d5ca0b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f1f2bfb8-1e48-4e39-8eb7-70885871fb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033df800-36f6-41c7-8455-e81b970c949f",
        "cursor": {
          "ref": "a308005a-c465-4363-8e28-87f9bbde02a8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7b17faf9-847c-46f8-8c59-1e5ffa63764d"
        },
        "item": {
          "id": "033df800-36f6-41c7-8455-e81b970c949f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4e49cbff-7706-41cd-8e37-b23ed916ec40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fe399b-5190-411b-b7ce-7434cc4ec086",
        "cursor": {
          "ref": "eb4288d7-af08-4a95-81ea-bbe30be7530a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e1bbed1e-0f41-44c4-a027-617d3fa18717"
        },
        "item": {
          "id": "c2fe399b-5190-411b-b7ce-7434cc4ec086",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e0516f1a-59b5-494f-bcee-da2ed0c58aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fd72fb-a58c-4c20-915a-8b3990061a6a",
        "cursor": {
          "ref": "fb46d884-6913-41a7-ada1-3f985fd4676d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "507564fa-cb4a-4fdd-afd2-67a3d0d61bfa"
        },
        "item": {
          "id": "a1fd72fb-a58c-4c20-915a-8b3990061a6a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ebe5f321-8311-4b4a-b060-5461e962bec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d137201c-5abc-4e19-acf7-34f55695b940",
        "cursor": {
          "ref": "a78f4b9d-fae0-40f4-9aea-fc653cee77c3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "11626a0f-1bda-4c35-8fd7-be892027a73d"
        },
        "item": {
          "id": "d137201c-5abc-4e19-acf7-34f55695b940",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dde6abb1-bc2f-4fc8-8049-db91a5c26dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491bdd39-ad1c-44a4-ad02-2ce06200f2f9",
        "cursor": {
          "ref": "fedadb9c-becc-4d32-8687-7109cf4b8838",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "65309f20-689d-4245-8bd7-4d6258f98e37"
        },
        "item": {
          "id": "491bdd39-ad1c-44a4-ad02-2ce06200f2f9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4b021ff4-c718-46c1-b5ff-28b60e63db4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d011f0-b810-4605-a1a3-a9e106425e40",
        "cursor": {
          "ref": "42caacf8-2c2c-479c-ae65-0ad76e9b9d0a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "76d8df26-86bd-42d8-9925-86aad3e7d165"
        },
        "item": {
          "id": "09d011f0-b810-4605-a1a3-a9e106425e40",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "270854b5-73b9-4853-ac2f-a3847eafd366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e919909c-484b-4940-bfe9-9de592d3bddb",
        "cursor": {
          "ref": "7dd42147-1c54-45f0-b821-b66cde2b7df7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "885bc44d-6a90-4933-83b7-b07c39b93c4a"
        },
        "item": {
          "id": "e919909c-484b-4940-bfe9-9de592d3bddb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a423edbe-4247-407a-87c9-9903e92e558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247866e3-3ecc-4002-99ef-3b3ed879bafa",
        "cursor": {
          "ref": "e2fa9150-7e63-41ba-b02c-1c06d678416a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "172dd49c-2a24-43bb-8826-efe6f3ccdd30"
        },
        "item": {
          "id": "247866e3-3ecc-4002-99ef-3b3ed879bafa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2a280032-38a9-4de3-b095-e3de82f621d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c1209a-289b-44c6-a81f-ccdb3d1e8a74",
        "cursor": {
          "ref": "99349bd5-2b55-4236-b4c1-b30770fe5d38",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "200b1f29-3222-4b7f-81a0-bbc98dd9712e"
        },
        "item": {
          "id": "25c1209a-289b-44c6-a81f-ccdb3d1e8a74",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6689b9c2-65e0-4ff9-9b00-bad4c1dd174c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891b939c-ae77-4612-abb9-86ba1f20328c",
        "cursor": {
          "ref": "baa570d1-fe42-4801-9807-ae97ce534da9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f0493701-30d0-4681-a711-a47228f2551a"
        },
        "item": {
          "id": "891b939c-ae77-4612-abb9-86ba1f20328c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0e19eff8-36dd-4f76-b6ce-0d65be9df5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eecdd4-48a4-4a6b-81dc-e842778e5d3b",
        "cursor": {
          "ref": "7ddc0e41-e25b-4673-9dfa-e05c47c03918",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "87cf3789-5e2f-4916-8d93-1d1996212e80"
        },
        "item": {
          "id": "72eecdd4-48a4-4a6b-81dc-e842778e5d3b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8b88ea40-ed59-4fd3-9dfb-21e0a0a49e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5225d47-a48b-4d6c-b9b4-8aaadd25daf3",
        "cursor": {
          "ref": "e33c447a-ab57-4ef8-a0d2-1b2d21a4d6fb",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1782f7f8-aabc-4044-99aa-42933f1e37c3"
        },
        "item": {
          "id": "d5225d47-a48b-4d6c-b9b4-8aaadd25daf3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0f246c11-a2ec-4a23-a293-8ce5ec8d5217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f2c4d8-6565-4194-8ae1-9acc097130f8",
        "cursor": {
          "ref": "c6950c2e-158e-4704-8f0c-783a7a2a2991",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e6370051-b1b9-45ae-91eb-87a8d7edf8ec"
        },
        "item": {
          "id": "98f2c4d8-6565-4194-8ae1-9acc097130f8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "73407c1a-462a-4be3-af71-d7dbfc1cebfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552d33a-8919-4554-aa0d-3edbfc3d377f",
        "cursor": {
          "ref": "9aad91ee-1ffc-4310-b5ba-67cc6e84ea05",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "67f86346-3ed0-4759-b870-dfae93be776b"
        },
        "item": {
          "id": "1552d33a-8919-4554-aa0d-3edbfc3d377f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e81e375c-dfd8-4080-b45b-31c6ec240a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4572c437-d9ed-43ac-b1d2-cb99b0826952",
        "cursor": {
          "ref": "ffd7f6ea-5d3d-4ec6-998c-98a5ab0f47d0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "535f346d-067c-4616-8e25-71f75527794f"
        },
        "item": {
          "id": "4572c437-d9ed-43ac-b1d2-cb99b0826952",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d3d74471-fb73-441a-a732-33af2744748e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b197417-328a-436d-9f73-d16d6ff62cfd",
        "cursor": {
          "ref": "29907671-0220-43eb-95be-e8170ce781a3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "798f4049-d829-4c03-83bf-1f8d4ebffd55"
        },
        "item": {
          "id": "3b197417-328a-436d-9f73-d16d6ff62cfd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "de5b3531-598e-49b5-bcb2-93cdc1deb1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086cebbf-d66d-490a-910e-bc44db1968a3",
        "cursor": {
          "ref": "62cb5341-68ce-42d2-a848-c38983e2f277",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fbf85a92-4f44-41b6-ba6f-d495bead479d"
        },
        "item": {
          "id": "086cebbf-d66d-490a-910e-bc44db1968a3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0cd4a18c-f5aa-4ea2-9781-e9fd92fe4748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989cf90c-8ca8-44f4-9a21-2733fa06fb66",
        "cursor": {
          "ref": "f87d2c2d-3bc8-4105-9c0e-36b5d5a41629",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2707f3f5-dc03-4262-9f2b-525f09d7fc4e"
        },
        "item": {
          "id": "989cf90c-8ca8-44f4-9a21-2733fa06fb66",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bb562368-bf60-4299-b50c-522d67d25953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a75f6f-2b55-4a6c-ba73-bd78f20515be",
        "cursor": {
          "ref": "d60b1815-3355-4f1c-8e73-79cd78d39b0a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0bb2bfb8-c9d8-45a3-8a35-f8b0aa3e3ba7"
        },
        "item": {
          "id": "d6a75f6f-2b55-4a6c-ba73-bd78f20515be",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "03f7ae0d-2251-463e-afec-63eb52609dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c84739-4c1d-432a-a91b-500b917de725",
        "cursor": {
          "ref": "5d0340d1-2731-43bc-8ef8-e628dd7fd366",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "da020fe2-8528-40c5-8d27-07b2088d7030"
        },
        "item": {
          "id": "85c84739-4c1d-432a-a91b-500b917de725",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ad566484-8960-4b6c-a379-5f7b4656fdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f2c181-5ece-4ce5-805e-146d48cee4fc",
        "cursor": {
          "ref": "36eddfea-3259-4ab7-bdd2-5806e632d54f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f213c4c-1838-4e7d-affa-692268cb3129"
        },
        "item": {
          "id": "77f2c181-5ece-4ce5-805e-146d48cee4fc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "390885dd-c415-4dfd-9750-ca592607dd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dfd16d-62eb-4384-8f54-5895f112b995",
        "cursor": {
          "ref": "a41b31ed-6366-4e7d-8782-21bc73d9f1b0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c80cbd2e-e3aa-46d8-af29-ec2501565371"
        },
        "item": {
          "id": "f0dfd16d-62eb-4384-8f54-5895f112b995",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d1929969-779b-49c3-a863-bf0cb85daf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d8f3b8-1e77-4380-9e1d-d48630624ecf",
        "cursor": {
          "ref": "2b46b4b0-3e4d-4552-aeff-f78fe8bd7f0b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e8198c51-ca15-46a2-8e29-c9a22e86cc50"
        },
        "item": {
          "id": "37d8f3b8-1e77-4380-9e1d-d48630624ecf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ef4b7865-84b2-4688-9437-590ec3af055a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b59a135-777f-4ad5-8d98-88c03e4a2fa7",
        "cursor": {
          "ref": "b3fc4acd-edd6-4bcd-8453-bc35b2f1d2c4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8fa6c1d4-a03f-4665-95aa-c3bff6d84e9e"
        },
        "item": {
          "id": "1b59a135-777f-4ad5-8d98-88c03e4a2fa7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e2f45729-94d3-46fa-b3ad-68db24dee2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b094e9-da35-4292-9e91-c101b51f84ed",
        "cursor": {
          "ref": "64362ce9-75b7-43d4-ab8b-fd83cbb96fd6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c219a226-608a-46ac-9b06-c7ca6525d87f"
        },
        "item": {
          "id": "96b094e9-da35-4292-9e91-c101b51f84ed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "59bfbd67-bd29-4f80-a536-f90cb4677f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88e1233-f36f-4a20-9be9-f1656ac1c74f",
        "cursor": {
          "ref": "65dc82e7-0269-495d-ac2e-e8304ad94b17",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a9eadc0f-8afe-4886-84d7-abc19247ec4e"
        },
        "item": {
          "id": "a88e1233-f36f-4a20-9be9-f1656ac1c74f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1447eee8-c04e-41ea-bbb5-b73bcf59038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f271fc-8171-4f15-9eae-4ad989660db0",
        "cursor": {
          "ref": "b717ce72-16ec-4090-8ba9-536b1f1614e1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3ab77e86-1c1b-45de-99f7-aa7f5b56af5f"
        },
        "item": {
          "id": "85f271fc-8171-4f15-9eae-4ad989660db0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fdf59898-ab17-423d-97de-7a76e720721d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95631523-df12-4b28-87ef-7085f01bf939",
        "cursor": {
          "ref": "cc67f837-d195-4a3b-8692-0acff18bd028",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "760ed921-4927-472c-8eee-cd1fb73633ae"
        },
        "item": {
          "id": "95631523-df12-4b28-87ef-7085f01bf939",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1d344f0e-9562-4c43-9e49-a4e1322e1ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c486ca-48ea-4832-8d7f-6f5a37ead27a",
        "cursor": {
          "ref": "e45f2779-0603-4d2e-8a92-fe97d212283a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c47bafc0-1da6-4f48-a743-cd322aa09619"
        },
        "item": {
          "id": "21c486ca-48ea-4832-8d7f-6f5a37ead27a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0c51a6ec-4ccb-4038-8e67-a6745dd9ff88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21b323b-79fc-458c-b147-7139ed49dfdb",
        "cursor": {
          "ref": "404b7235-e51f-4ae4-beeb-ea37dee5d49f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ecf9ab27-fa45-4227-95f5-878020284716"
        },
        "item": {
          "id": "b21b323b-79fc-458c-b147-7139ed49dfdb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "971c7ad2-0850-40e0-a5cb-6f63e803132c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e0dcb3-c547-4517-80ca-b2a4ae4b9300",
        "cursor": {
          "ref": "77d9ccf8-f709-4fe1-93ba-89f6bfe1fdcd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8196733a-9454-4412-815d-0417d436ab24"
        },
        "item": {
          "id": "c1e0dcb3-c547-4517-80ca-b2a4ae4b9300",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a3f46bac-6d62-4e81-b71f-2613f85d2f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6c2852-63f9-4269-884d-0a2d592c8701",
        "cursor": {
          "ref": "293fc167-9ff8-457f-9697-c354bfa42cfd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cbcab097-5643-4efa-b0b5-8b3f45978cf9"
        },
        "item": {
          "id": "cf6c2852-63f9-4269-884d-0a2d592c8701",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "085f5931-3861-4070-a59f-0c5cdeaf6d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83df28e0-280b-47f1-856f-7e00e6327599",
        "cursor": {
          "ref": "ce42956d-cb6f-4411-bd5d-9dd4cde508d9",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9a8351b5-8b83-479c-a584-1ff56a17ea20"
        },
        "item": {
          "id": "83df28e0-280b-47f1-856f-7e00e6327599",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1416bb18-b208-42dd-80d4-6ce6085e041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8dde23-f839-4863-a673-bf431526b9d7",
        "cursor": {
          "ref": "8a84e365-e052-40bb-8f8b-c4d732168c12",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e6330279-0cfe-4c0c-9c14-22869aac199c"
        },
        "item": {
          "id": "7f8dde23-f839-4863-a673-bf431526b9d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6d6b355e-c601-4130-843d-3f3dd82c642e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e489e27-9cd9-4064-8178-e264a95482c1",
        "cursor": {
          "ref": "caf956d4-f745-41c7-ac85-fe6197ea73b1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "897c9c26-29da-4959-9f43-26e65b72f9f8"
        },
        "item": {
          "id": "8e489e27-9cd9-4064-8178-e264a95482c1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "df64382e-c653-4d45-beee-069e43762b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef97ac1-b550-4d23-81a4-a6fc845eec3b",
        "cursor": {
          "ref": "364718f1-15d1-48e3-b345-95f63ca9c73f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c40f75ee-e260-45cc-8d94-39941f2d7f66"
        },
        "item": {
          "id": "1ef97ac1-b550-4d23-81a4-a6fc845eec3b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab309802-e832-4854-8944-6b5664ad2e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1335,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8faa6fe-d143-4510-b324-f9c32cdbfb4f",
        "cursor": {
          "ref": "eb14730b-ab04-4dc0-854e-cb44682a472e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a448038f-cb37-41b4-94dd-5daba27d5762"
        },
        "item": {
          "id": "a8faa6fe-d143-4510-b324-f9c32cdbfb4f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "928abb5c-826a-40f1-ad8d-77987fdedcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d0b911-5201-40d8-b35a-cc01d4ced5e9",
        "cursor": {
          "ref": "04dc0da6-6224-45d1-8d11-faccc9593a3d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a032fd8c-c1f7-46e0-a4fc-50ad74b9dda2"
        },
        "item": {
          "id": "c3d0b911-5201-40d8-b35a-cc01d4ced5e9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "67effb6f-7bd7-400e-9075-c6be465022b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd08b28-b222-4ded-b298-e3ac2ca9d8cd",
        "cursor": {
          "ref": "70f99e97-5f17-43c3-a855-48b19afe64f4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "135eccd1-7110-4b44-af25-4a47eae688af"
        },
        "item": {
          "id": "9dd08b28-b222-4ded-b298-e3ac2ca9d8cd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f21331b3-263c-4729-b46c-b67df469d587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54753edd-bdfa-4eef-b2ba-15b43d858284",
        "cursor": {
          "ref": "b39f7a25-2d14-4e87-9ffa-2e568cad1d27",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "265cce42-715f-42d8-b5b6-d6ec7433e723"
        },
        "item": {
          "id": "54753edd-bdfa-4eef-b2ba-15b43d858284",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6c5df042-fda5-41e2-b021-ff3bc96438bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30fbbba-3358-4b91-9d7e-63adbcf5576b",
        "cursor": {
          "ref": "b33e2d21-4d3e-4481-8f05-7a3fb3d92496",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "738bf083-2f78-472f-ab6c-891cd67d54b1"
        },
        "item": {
          "id": "b30fbbba-3358-4b91-9d7e-63adbcf5576b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0e8aee13-1f8a-4f02-b7ac-ff99382e1e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e24d55-8d59-41a4-bc92-aae6ac7a6fac",
        "cursor": {
          "ref": "cbc8d4be-36f9-4c83-ba5e-011943861a67",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "16c0d06e-4ebf-4295-b8d2-3233ce016a2e"
        },
        "item": {
          "id": "06e24d55-8d59-41a4-bc92-aae6ac7a6fac",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dd5076d6-ce53-4f05-89f2-6c0a135b7277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e12bb5a-11d8-413c-9043-dd3b1a21575e",
        "cursor": {
          "ref": "15a2bba6-36d6-4087-b53e-0b0608777b73",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "456af5ab-6de0-424a-a739-fe12633a34d5"
        },
        "item": {
          "id": "5e12bb5a-11d8-413c-9043-dd3b1a21575e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cb0194ed-4692-4edb-9ab9-6622f6332be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eeb6bb-e170-4d81-ba30-c92021762892",
        "cursor": {
          "ref": "fe052ab0-2243-4a09-b484-6221fa3645ab",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0343cb99-f75a-4b7e-8e33-38556c9c239d"
        },
        "item": {
          "id": "d9eeb6bb-e170-4d81-ba30-c92021762892",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "760f7ab2-c10e-43b4-aebd-0dcbaf37e593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b4ae57-d896-476c-b2bd-3fcf6ee13676",
        "cursor": {
          "ref": "18349ca5-aab2-4c52-8bbe-217acb1cf616",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0088f05e-5234-4f31-8e0f-0eb99680b1cb"
        },
        "item": {
          "id": "66b4ae57-d896-476c-b2bd-3fcf6ee13676",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cba40fe1-cd6b-4eba-bdee-b0bd4d1c5fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ecb0f8-8e7b-40e3-8892-255a919a3031",
        "cursor": {
          "ref": "e5c4728c-d7fd-418a-87eb-c7929cf4e370",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b95940be-4f31-4adc-81dc-feed5e04d921"
        },
        "item": {
          "id": "03ecb0f8-8e7b-40e3-8892-255a919a3031",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ce0d633-d44a-4b6e-8b08-3125243c6dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ba25ef-bf11-4488-bf6e-a5976c09613b",
        "cursor": {
          "ref": "4f0e61dc-9022-4989-8c01-34be22daa0c8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dfa9c2de-9ce8-49e2-8b00-ffaa5f538a38"
        },
        "item": {
          "id": "63ba25ef-bf11-4488-bf6e-a5976c09613b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4de291a1-842a-41df-95f5-5601b6334cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1264,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30221b0b-3f90-4334-a7a1-2c046e7a2b1d",
        "cursor": {
          "ref": "0dd8a56a-3769-49ec-bd3b-0a637545a9c2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "02f15080-9fc8-4dc9-96d4-3d4f1a889ba8"
        },
        "item": {
          "id": "30221b0b-3f90-4334-a7a1-2c046e7a2b1d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2d1d8b90-012f-42cb-8c09-0a25c175d70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1439,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0465596-65ad-4e75-b9ba-22ec9ac82674",
        "cursor": {
          "ref": "d478289d-837c-485f-bf99-dd94ac2ea12f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "20cca9f4-862c-4429-ae2c-457694388cc2"
        },
        "item": {
          "id": "e0465596-65ad-4e75-b9ba-22ec9ac82674",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "71bc8537-29e7-43a5-a597-75d9d5fe5e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1667,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88a6de9-23c9-4bd8-827c-4f7e67148fe3",
        "cursor": {
          "ref": "76dcb5d9-88f6-4b8e-8402-79dba3e284d5",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "66661c22-4778-4730-b2be-851982fee9a8"
        },
        "item": {
          "id": "d88a6de9-23c9-4bd8-827c-4f7e67148fe3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0db45ca1-697d-4402-95a3-1006748df88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1278,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8945f8-9c48-4c61-a4c5-805b4f6a4537",
        "cursor": {
          "ref": "03a290fe-9c56-482c-b61c-372cae062d38",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1928ee79-4e8e-45e9-80d4-ad91b1bb70f5"
        },
        "item": {
          "id": "4b8945f8-9c48-4c61-a4c5-805b4f6a4537",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cb55dbd2-b1e1-4c10-835b-f3ceda3fdc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90956a33-dfe4-4c52-adbe-49fcc469d3ce",
        "cursor": {
          "ref": "82fb3376-6381-466d-a651-f314eb13f2b8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "26e8699d-a74c-4e86-a99e-c2316e057550"
        },
        "item": {
          "id": "90956a33-dfe4-4c52-adbe-49fcc469d3ce",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a1d9a9e4-0e1c-497a-9d8a-d97fe0e55cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d3e7d7-2a2c-4e6f-a006-37c069d4b37c",
        "cursor": {
          "ref": "21d2738a-b467-4ae4-8a84-74b368404f23",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "30b93665-dba9-426a-b4fd-3673666d3db4"
        },
        "item": {
          "id": "41d3e7d7-2a2c-4e6f-a006-37c069d4b37c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "af608705-95b0-477d-8bdc-77fa378ae26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc897773-564e-47af-9037-558f185d4c1f",
        "cursor": {
          "ref": "0d269343-1e66-4280-93ea-8e0ebaef7ce1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9981b043-69c7-4cca-8125-0a9b9ae3fe64"
        },
        "item": {
          "id": "cc897773-564e-47af-9037-558f185d4c1f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7fd196ce-6b76-4d83-9687-36b9c78e6ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890b1761-1497-4690-b8a0-0a14ce4c406b",
        "cursor": {
          "ref": "90d204ed-ac59-47a8-94f1-9feb8bd48c25",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01d18a87-1a41-4f44-95e5-810d0f87a6c9"
        },
        "item": {
          "id": "890b1761-1497-4690-b8a0-0a14ce4c406b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b6189f4e-e31c-414a-8f5a-fdaa8b1b08df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b6645b-078b-491b-abe4-65f64a90ac29",
        "cursor": {
          "ref": "661e2dbc-b38a-47ea-af7d-bd50d00299f7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2471fc52-a542-4e37-9c06-18b8ecf400eb"
        },
        "item": {
          "id": "e1b6645b-078b-491b-abe4-65f64a90ac29",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b69df044-c7af-4032-980c-0766f0294d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27763bb6-ba00-4f57-b7f6-e54b41a4c0b9",
        "cursor": {
          "ref": "7f131acc-173e-4610-96d3-333760bab48d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9a9d4ead-fde0-4f5f-9d92-4267bd4bdbc8"
        },
        "item": {
          "id": "27763bb6-ba00-4f57-b7f6-e54b41a4c0b9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "01e96583-c957-4551-b4a5-f59d44a17cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95ca299-66b0-45ed-ba6c-7b4fc454c178",
        "cursor": {
          "ref": "5a092660-9edb-42a7-877c-d9b487d31acd",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "db913542-2381-4d67-8f5c-a670cf479384"
        },
        "item": {
          "id": "c95ca299-66b0-45ed-ba6c-7b4fc454c178",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7a5d7d11-8b87-48f2-9234-ae9a8e698cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f10d20e-ae7a-4f9a-b3a3-83b5973801d0",
        "cursor": {
          "ref": "f6e518c5-5fcb-46e0-bca9-b3721ad6744f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a0560af1-3555-4a2b-96a3-9a412c3f5258"
        },
        "item": {
          "id": "1f10d20e-ae7a-4f9a-b3a3-83b5973801d0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d7e31f35-ea03-4353-99c9-c15d454845a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27917cf7-31f8-41de-aac6-06d49249247a",
        "cursor": {
          "ref": "e48231a8-dc96-47c5-b937-728ffe52c84b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5f4eebca-2582-4ad0-9f82-dd4f3b773ec6"
        },
        "item": {
          "id": "27917cf7-31f8-41de-aac6-06d49249247a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "db28b8ef-3060-4984-88cd-05a14ee36c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae0e36b-105b-426a-9d9e-230caf894e26",
        "cursor": {
          "ref": "83b3cf9a-6ed9-491b-a75e-98162cc785f3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9f1b8188-2a5f-424f-9e10-9a1969c1539a"
        },
        "item": {
          "id": "2ae0e36b-105b-426a-9d9e-230caf894e26",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "181b782b-096f-4671-bf94-3297013f7773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beea651a-f85d-4668-8767-f8fcc8feadaa",
        "cursor": {
          "ref": "9e89f06c-70b3-47d1-a2e2-4c0ecd964ab4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f4c43420-278d-478a-a392-53b192f6505e"
        },
        "item": {
          "id": "beea651a-f85d-4668-8767-f8fcc8feadaa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "03344871-78f6-47df-a54b-dcfea7041e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2dc0b-7174-4ceb-8ad4-795083828368",
        "cursor": {
          "ref": "58b5680a-deb0-4819-82b1-9b45c8c6d759",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "41f37cdf-1e5d-482c-8402-e26e8372fedf"
        },
        "item": {
          "id": "1ca2dc0b-7174-4ceb-8ad4-795083828368",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7ae3de1e-2557-4bed-81f7-6c058b00b058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83bc0a6-240f-4fc2-844e-d5077f95f311",
        "cursor": {
          "ref": "ae0e1e4f-6d0e-4adb-a726-b42ab2e9a1c7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f04fede2-29fa-4b01-883e-1ba2037255bf"
        },
        "item": {
          "id": "c83bc0a6-240f-4fc2-844e-d5077f95f311",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b78e188d-de82-4fa5-913e-f407ad5edf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113a3536-9d46-4616-845e-2d93e5034b46",
        "cursor": {
          "ref": "2bceaed1-fe4a-48d2-b143-e416e8f8b58c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "54d2f9b5-c177-4621-85c3-ff2edbde3dc8"
        },
        "item": {
          "id": "113a3536-9d46-4616-845e-2d93e5034b46",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1f8c22bd-a3c9-4a2b-9816-aee04794e59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8315795e-c961-41fb-8ad0-c26b63563b1e",
        "cursor": {
          "ref": "c6de1c63-958a-4e93-b9c4-c3cc2a61ffb5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c0db060b-c5a5-4d63-89b9-96a9cb58fc67"
        },
        "item": {
          "id": "8315795e-c961-41fb-8ad0-c26b63563b1e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cd062346-e174-4542-8ac9-d6cfc1e33db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf06293e-e3d6-42fe-a6a1-330e147581ab",
        "cursor": {
          "ref": "450a5bf4-7408-447a-a700-963c64620f7c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0b948a63-61b0-4d99-80d6-c79831d38cce"
        },
        "item": {
          "id": "cf06293e-e3d6-42fe-a6a1-330e147581ab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "74c0f0c2-239b-4c79-b802-a3a8a2a2f4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e00232-4795-443f-9f38-cb3420d6a3b7",
        "cursor": {
          "ref": "cf8d5ad7-26c8-4d13-baad-0ddb3eb94fa9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bbfe1c66-1403-4b2a-a1c1-3edc0e18763c"
        },
        "item": {
          "id": "30e00232-4795-443f-9f38-cb3420d6a3b7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "06e3539b-a49a-4c02-9f17-1ada50b7714a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a4ba6a-296d-4a1a-ba70-b2d576359e7b",
        "cursor": {
          "ref": "d46e6acd-9eb0-49e0-8791-219493dddf95",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a18d1a00-4ac7-45fe-978f-13acd85c43b2"
        },
        "item": {
          "id": "c7a4ba6a-296d-4a1a-ba70-b2d576359e7b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eb3cee23-4d1a-4c0a-b101-5683d43d07e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c90617-46b7-4cf7-addb-ecbe2bbf9794",
        "cursor": {
          "ref": "5ffe6f1f-de84-4124-9091-de04dd13ce2e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "64d8c888-7a10-4f76-81b9-2e9227558807"
        },
        "item": {
          "id": "19c90617-46b7-4cf7-addb-ecbe2bbf9794",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ccd9bfa6-ac37-4973-a0e1-90c77cd9fa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ff64a1-0003-4958-b33f-cb650b1ed6d0",
        "cursor": {
          "ref": "c2e30eaf-0132-4512-90e4-4527e9ee8f8f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3d25bea5-438f-4831-bfb7-1d85da1faeb1"
        },
        "item": {
          "id": "22ff64a1-0003-4958-b33f-cb650b1ed6d0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "186ac523-6928-47ae-ac05-4cb30f0ba4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e1815b-fb24-4b42-9336-0ef49137a58a",
        "cursor": {
          "ref": "88b39182-0026-49c0-9893-3a04314bd789",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fba053f8-5296-41ab-a7fd-fae94f475895"
        },
        "item": {
          "id": "b5e1815b-fb24-4b42-9336-0ef49137a58a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "44ccfbe8-a0fc-4455-b44d-7493f13b89a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfb9e8c-87eb-4ab2-a7e3-7b4a41b12ea9",
        "cursor": {
          "ref": "49a01ad4-cae2-4309-a1d2-c065f7decd56",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c1cde6fa-6ec2-4b8b-a27f-03e71be69c00"
        },
        "item": {
          "id": "9cfb9e8c-87eb-4ab2-a7e3-7b4a41b12ea9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a61e9449-b0bb-4918-967d-60b72e55c10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a0dbe7-7ac7-4502-bd02-b955f9046360",
        "cursor": {
          "ref": "1337e3c5-0447-4692-b8ad-34e3963a9721",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "65c75feb-f77a-4af7-a356-6b5d5a61ea9d"
        },
        "item": {
          "id": "d1a0dbe7-7ac7-4502-bd02-b955f9046360",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d8c5a935-bd53-4ebc-887a-3aacc31821a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b81e39-1429-47a8-8fc5-384d11330e37",
        "cursor": {
          "ref": "721e0962-b1d3-4ab9-bf56-da49f1f7beee",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fc042077-31ad-4acd-a77c-51e2fa1ad599"
        },
        "item": {
          "id": "22b81e39-1429-47a8-8fc5-384d11330e37",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "54cb379b-5afb-4730-98c2-5403a101ea93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ebe09e-4213-4e38-aba1-d5d2b0176e4c",
        "cursor": {
          "ref": "99c1ff96-ad9e-4b34-8e2a-9295acc8910e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "05a48013-9a38-426c-b170-2352db7a8377"
        },
        "item": {
          "id": "f1ebe09e-4213-4e38-aba1-d5d2b0176e4c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9ed1c011-1ff2-45bc-8404-f67a6ec5132e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900f52f-eeeb-4e98-a66c-f8c887e4c9bc",
        "cursor": {
          "ref": "173efa8a-f933-4822-a2fb-23587f20d8eb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0557dad6-a47a-40c2-bc14-94101af49458"
        },
        "item": {
          "id": "7900f52f-eeeb-4e98-a66c-f8c887e4c9bc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "389cba75-90bb-4c91-a428-31f048bd3561",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 373,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf15832-b2b4-4af7-b35c-580c6fe9d36c",
        "cursor": {
          "ref": "6b3992f1-d694-46e4-80aa-b2d4c1ad57d4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "72cef382-862f-4ac9-ad34-6ee09b02904d"
        },
        "item": {
          "id": "4bf15832-b2b4-4af7-b35c-580c6fe9d36c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "28f4c30e-720f-4cea-acb0-0b04f2efdfcc",
          "status": "OK",
          "code": 200,
          "responseTime": 452,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac4af47-38bd-4e86-a5d3-b94caadb9ad7",
        "cursor": {
          "ref": "88e45bd7-eb8c-499f-973e-103874cfa05f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8f9a1277-b39d-452d-b478-a92f991e4162"
        },
        "item": {
          "id": "bac4af47-38bd-4e86-a5d3-b94caadb9ad7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "252bbce2-ea70-4837-b698-5cb4366bf1a2",
          "status": "OK",
          "code": 200,
          "responseTime": 2019,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4204d1-9db2-457b-8c59-5c5a1166df04",
        "cursor": {
          "ref": "ac920dce-3e5e-4f4a-b067-b1409dbc67d0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9f922533-885b-48b9-9485-1d60e93fe06a"
        },
        "item": {
          "id": "1f4204d1-9db2-457b-8c59-5c5a1166df04",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2a05fe4b-d498-4476-a62b-a8340381d868",
          "status": "OK",
          "code": 200,
          "responseTime": 1845,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c5c9d8-b3a9-4c49-ba38-39ec4184d848",
        "cursor": {
          "ref": "42f957c7-0ba2-4aec-bbe5-1be46bb37952",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a31f1b78-1e23-4360-a2b7-14344029d081"
        },
        "item": {
          "id": "f7c5c9d8-b3a9-4c49-ba38-39ec4184d848",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c15b614-bbb7-4f43-8338-d976ca1915ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c5c9d8-b3a9-4c49-ba38-39ec4184d848",
        "cursor": {
          "ref": "42f957c7-0ba2-4aec-bbe5-1be46bb37952",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a31f1b78-1e23-4360-a2b7-14344029d081"
        },
        "item": {
          "id": "f7c5c9d8-b3a9-4c49-ba38-39ec4184d848",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c15b614-bbb7-4f43-8338-d976ca1915ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c5c9d8-b3a9-4c49-ba38-39ec4184d848",
        "cursor": {
          "ref": "42f957c7-0ba2-4aec-bbe5-1be46bb37952",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a31f1b78-1e23-4360-a2b7-14344029d081"
        },
        "item": {
          "id": "f7c5c9d8-b3a9-4c49-ba38-39ec4184d848",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c15b614-bbb7-4f43-8338-d976ca1915ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1e82d5-7961-4c29-9272-614cd540c5bb",
        "cursor": {
          "ref": "42db6ebd-1b22-4d5e-af3f-05d6cf70cf12",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5c140989-ecf4-4cb0-991f-a95de4f8d0cb"
        },
        "item": {
          "id": "6b1e82d5-7961-4c29-9272-614cd540c5bb",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0206e659-e9ef-4eb4-a845-8d58c7087cc6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 359,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e55d33-9e65-48ee-acdc-1575976e7cbf",
        "cursor": {
          "ref": "4d69d9a0-2af6-4ae1-9634-b6dd8ec6bcae",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e042955d-acdd-4a09-ad63-41bdd6bc0cfa"
        },
        "item": {
          "id": "51e55d33-9e65-48ee-acdc-1575976e7cbf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9fe0f97e-f35f-4623-83b7-0d70a01ebdaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e55d33-9e65-48ee-acdc-1575976e7cbf",
        "cursor": {
          "ref": "4d69d9a0-2af6-4ae1-9634-b6dd8ec6bcae",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e042955d-acdd-4a09-ad63-41bdd6bc0cfa"
        },
        "item": {
          "id": "51e55d33-9e65-48ee-acdc-1575976e7cbf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9fe0f97e-f35f-4623-83b7-0d70a01ebdaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc49d405-6525-44c7-9343-d2988dd81d96",
        "cursor": {
          "ref": "9a845660-a9ba-40fb-b4d5-5c63c6e53a33",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "93e82152-fe1a-4126-a662-03b4a0f0d53d"
        },
        "item": {
          "id": "bc49d405-6525-44c7-9343-d2988dd81d96",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "58c0fbd7-de71-47ee-ae2a-36178072201a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae08aaea-4043-44ae-941e-941395c7c46f",
        "cursor": {
          "ref": "bc4c2474-90e5-401b-92b1-73a96c9f339c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e4f3a632-b25e-4c34-88fd-26ffedad4c28"
        },
        "item": {
          "id": "ae08aaea-4043-44ae-941e-941395c7c46f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26679d77-cd3c-49bb-9ab4-673734bab725",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae08aaea-4043-44ae-941e-941395c7c46f",
        "cursor": {
          "ref": "bc4c2474-90e5-401b-92b1-73a96c9f339c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e4f3a632-b25e-4c34-88fd-26ffedad4c28"
        },
        "item": {
          "id": "ae08aaea-4043-44ae-941e-941395c7c46f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26679d77-cd3c-49bb-9ab4-673734bab725",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58705279-cd95-4cdb-8928-8b74374cd106",
        "cursor": {
          "ref": "000ad13b-b294-46a3-b054-b4ba848f4c3d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d1f745f3-5103-4d9b-a22f-e5aad44fb0c8"
        },
        "item": {
          "id": "58705279-cd95-4cdb-8928-8b74374cd106",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "65b9d1b9-ff59-41a0-acd3-6189e9b1d8a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 631,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}