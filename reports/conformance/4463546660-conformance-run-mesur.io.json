{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8be80f8a-680c-4a64-b212-925122f14bbb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "071232d4-1c75-4cf3-b929-d81d250a25ac",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af5d1697-e097-491e-b7f7-97b1ed681aa8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a93bcf1-1ea8-413f-a28a-03bb9831b54b"
                }
              }
            ]
          },
          {
            "id": "3a5aff27-0913-47be-b6c3-64b861427481",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d8cc547-a312-4f0d-b47d-5ea7340e9991",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b8a84455-0d92-404c-b7e1-ae818ed6b319"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1bd33ee-ff6e-409c-9cbb-6fd8aef7e084",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "41016094-aab5-4d13-b2cd-b1c79abb1cc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74b09bae-5496-49c1-8bc8-c9b34e41c186",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0165979-4cde-460d-8f48-9aede29c8956",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96f50aa1-ddc1-4ecc-adf7-de3b335583cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e02c42ee-e2eb-4ae3-b0ee-d52bb81cd67e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3a89ac8-66d2-4fbd-85a1-8132c244688e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14a90f0c-15c3-4483-baa1-8ee4309b53d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c33dbbed-2c7e-4993-bd5d-077bd7197b72"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "729e6ad3-86ba-49c4-8227-8626548771cf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d9028fb5-096b-40b3-b15f-4f500c0a4d36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01e3d0d4-9fb7-424b-a807-e2044245c70f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9e98960-b134-4420-80b6-f862bfb53da6"
            }
          }
        ]
      },
      {
        "id": "7fe51726-18bd-48cc-ac5b-30ec36b9035d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4a581bb1-81e3-4754-86dd-76cf074c8a72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd858cab-def0-44b8-91f7-8421970eddc8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7209f3b7-975c-4b0e-b43f-3330fef7950d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517b53eb-9703-465c-8b6e-0432818cca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d12de363-5a33-4f09-b063-232301369b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5498a789-a66a-4256-8e17-7009ff91575a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a7c0c0-faf4-4370-a15b-cdc58e42df00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fcc4f47-47c3-4fb6-99cd-9730fa1f0352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18491b9a-9605-452a-b134-b1b796334843",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5913b42c-03ed-447d-ae36-a391062d6cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "089a1f7a-b7d5-4c7e-b1f9-56fd71d7fe1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e7b99a6-4652-487a-9f71-a6106a5f3f82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af96f3db-3095-461e-aaf9-7c74586d50d0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772e3a00-2894-4df4-b678-b329cdb95cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "519f44a4-34a9-4d24-8dbe-5e0207fbbed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cffb9c6-5cc5-4df2-bc1f-4b232a254dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495ee6f1-d62b-4015-a274-e5c12ca93ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070d1180-0fd3-4430-a011-1e97b2132b0c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3f3bc0-4b76-44c5-84c3-ae1b8d222019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5a02374-e1ff-48dd-a76b-6ce7b2d278b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2394bae-8a57-4cc9-a686-24f9f313a7ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "337519fb-bab6-45d1-89eb-e1794bd9779d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "12e2e2fa-924b-48c2-a7f3-ce2a7d11bb80",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9618a5be-4960-4e98-88a6-40879df4ea8b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39ee4301-65a1-483d-8617-01d5949697ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "38ae71a3-aadb-44ff-aa8e-1d48ecb7ed93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d812a0a-7c02-44ec-a801-612f33962de9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b1a850c7-d9bf-453e-8a1b-a56ac6bad5af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a80ced-1030-4f29-b187-ac83980b6c97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd1097f9-4e7a-41fe-80ae-072e1ac7a0ee"
            }
          }
        ]
      },
      {
        "id": "06f6246f-1225-48f5-bd21-9f7d04e924a3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ef66d6ed-b2e4-433c-a840-3309a42d9648",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20567a25-8549-4f17-acac-80f42c9801ef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6b008027-c59e-493d-83c5-7a5a2e54ce31",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f151651-6c27-4189-b724-4977e3baac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16729403-1b52-4a2b-86a9-b6425b857104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab5f43a-a33e-4ef9-a8f8-180a83bfa788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf8ae4dc-57dd-4b81-a9bc-eb395352b1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87a4cf5-4ad6-447d-8a03-7d0346ce9b2c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9449f9b-9014-43c1-8e8e-63c3b5a259c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82216dd-537e-46b5-9842-22e915acef83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41a490c-6a04-4057-ba81-ecba32045817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd1532e8-d0d4-4c83-9f0b-21eef60fbf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27868d98-f966-4ca9-84bb-fac7089a844c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df939d2-eb13-4c4f-9fc6-6cc317c3e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c34974-f470-474d-b68d-eaf4a8653a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68b3998-9b0c-48e5-a904-5949cfb212e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca4ca902-739e-4930-ba24-c02c56970dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e39e6a-3d04-49da-be0c-14dd663319e1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0885868c-f891-4a9e-9935-401582d53be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1e7fd9-43ae-452f-8c7b-d026d6d23adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5884d8bf-7a8d-4a74-9970-a28268c50796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "328bada4-108f-4d2b-9aa7-ddce34ac0cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9221c6fb-36ac-4bae-91c2-45b9c0ed8463",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781372f8-d75f-4881-b3ae-3d69e2a67d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afb04f5-f38f-47ae-bfe0-1e71003fc3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e698759d-36f5-4be7-8094-4f47760e1ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bdfbe93-e6dc-4579-99c5-5195b5f064a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6cae4b-9b18-4f89-b461-bb80b4a5a454",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d6d2e3-eb9f-41d7-a83a-62487b36b682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a3f056-28c0-4574-9168-a06ae6260099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8275e384-5fe9-44f1-84f6-5031a4a45af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "118292e2-6aa7-462a-898a-79c902a170fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182fd2f8-7ff4-4bbb-a94d-3ca2c552a3c1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bba096-0ed9-427c-bf99-eac76cfbe50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68030f5-a501-4738-8f84-4201c06ba565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7386e99-9b25-4784-bab2-007a09b31369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f6bfe10-e885-41a9-873e-764e79b08998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f62f23e-cb2a-4ed1-8bba-6d1abfb62d29",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad54f35f-d049-487f-9356-85f01638b37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a41a1d4-b8c9-4601-a7e5-e3cb2b8e8c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60efcc6-a6db-4294-a71f-7529d06c4005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9815ed88-4e72-42be-bfed-94ea43542493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2247ac99-cd3c-43b5-bf65-c070a49c2b70",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d01df6-65d7-4a25-8e81-6f7db652fcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2520f93d-1e43-444b-9a0a-f24bdcc3cd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f800277-cada-4ac8-908f-184df00c5c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb8d1d58-7172-467c-a402-08f783859444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47758539-1d17-4f4d-a9f5-0343bd903e51",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f529e4d8-f67c-481a-8e9d-38fcc9dbcea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd814f5-9767-4107-9aa1-7e42969ca24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966e9530-6018-4faa-9adf-c1d3730f0b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ebdae7e-5ba8-471b-8174-22d0d674b2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00268342-2c75-47b5-a6af-7e6a02e02301",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43af11ff-41eb-4609-8807-f14ae944718a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54fc1a7-08df-43d2-a4ef-41135d779664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ac8520-2e76-43ef-9671-567cd262cdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b094573f-a284-4952-a220-39b6f7035a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6e595c-8a27-4560-8dce-ea4c2e822a99",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec43c0e3-ef7c-47e3-ad3d-8e73d359774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45414519-59b6-4d9e-b600-db7df41d2f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc96572-e763-4cfe-b83e-015a63b0a5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86cc0d42-3c84-4dde-a0a5-a08934e9f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbba82b-e680-4b91-a403-4790b28cb784",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30da7c0-0f4d-4da5-8380-583541b3a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84f81c0-8df9-4f1c-8d11-1c8da76e02a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ad3104-2e63-489f-a60e-8bfbbe84d0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79c0a7c9-a38a-4f6c-bb75-8021a8d012e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeda7e21-88af-4d42-869d-aba3453ee3d0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55f56a7-1807-4d72-a304-3c47d30bdfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48780be4-245c-4130-9de3-e29588322350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13da2c33-9a54-41cd-98ee-7819bef8ee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d968c639-d145-4387-b260-7758400a2539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ef9cf2-af31-41ff-8c3a-b8e165ab0c6a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb23313f-81d5-4043-83c8-f5c1eade13b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244f85fc-7cb7-40e6-b4e7-4f365137510e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aa747a-ce68-4f8e-9637-743190a6cde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ef0e0b9-ade8-4279-86a7-94405917b145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed420dc6-f752-4734-a3ca-1f21963c4d7a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71c8468-f122-4538-9abe-861d9bea5cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429b5b85-ef85-40e9-8408-1ba0e9eb3e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bed5902-ddca-4805-ab08-9c152f5de4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56b0151e-a0df-48b4-92af-869ffa0ba762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f4505d-fc3a-43cb-9289-39f4270a47dd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d51f856-5acc-49d4-b8a5-78bc2722310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce6f4d1-d3c1-4675-9b68-5f2ac1397d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c20bfc-a843-42d4-8f47-659c11084abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81c51e0f-04bf-49e7-88e2-2be528836f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf66be70-b5c6-485f-a2d2-945e7ae9d154",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beec891c-05ce-4459-a879-6720acc1fca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f05082-fd4b-4696-b11b-32ce231c587b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad89858b-d122-47cd-b372-094691889496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c797d70-61e5-475c-b165-6a1216a83cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5a836c-e0e0-48f8-99a5-245f940601b3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9fcaa2-4f1c-4f90-9ab0-9fb69081bb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7252e9-d284-49d8-a426-ead3f7a2797a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4cdc09-179e-4b4f-bfd0-b36b9fa86166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e1fd99-7625-490f-95a9-e1661b905421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e897814-3ade-48a1-8eaa-2d49ed150f57",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84457610-8b62-4b26-ae71-d953c23be579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89f362e-b746-4621-ab76-cddefb92db0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c465657-a428-4b19-8182-3bb5fa8ffc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d8ed25-0823-405b-bfc0-fe02bc02af03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e68b2a6-d34b-4d82-94ed-ee8e09825848",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffbc78b-15ca-4e18-af1b-2e1a742d2b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0441aedd-f9dd-4919-814e-3bd70e9ae058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5bacb6-d478-4693-b43a-14bffe49cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a027422-850c-44cf-a0b6-be18bc98b582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5009419e-3c8f-4e8f-9978-ddc5b05dbdc3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a1fe77-ebba-496c-855e-9af84458a0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1feb748e-8287-4fca-9522-d6ecaba3e387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090a9108-849f-4290-9a37-b39f60aff625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1afb0242-25a9-4ec0-ae54-1b2f77fa50f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22407728-0854-46e1-bf44-e587abf50ac7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8162438-d8cf-4294-82aa-59f96ef23614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b23759-9a3d-4740-8afb-1a97880b6df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53675259-e233-48db-ad98-347df3d8adb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7269e285-f3f5-4024-bbd4-b705183849a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02043b25-738d-4ece-9cad-580e754576e2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee473d0-6927-4c57-a2f1-7e0baa26a99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a7405b-a6d2-4067-be60-9589f1a42872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e30e99-67c2-42e4-af3e-21145625096b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6c4045-477a-4e22-b1ca-e40ffef50f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e776eba-96b0-4d27-bd0b-1df79c4c8fb3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c1480a-4bf7-4166-9c45-0626637c060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ad3c44-b8b0-4234-b16f-65f203fd60e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45420e93-4b6e-487a-9d03-81dfa9eebcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "637447ce-3d52-4600-8a97-f3a451a9dff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72e9584-9f65-4c59-a90f-341cc6c33aed",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28364ead-e9c1-4ee4-abd1-11c02a278a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4782b0fc-64c0-4792-a110-7d2c352a436a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5dbe2d-3c88-4ea9-b47f-1f7956f6f4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd888643-ed00-4703-81e5-1a4e8c665d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9847e915-d4a8-4386-b042-7a8c25a26a83",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279414b3-fbcc-4ce2-aa03-97d132d2c6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00894007-c569-42de-8743-3beae743bd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d8620c-065b-4362-a32e-bbc16f3dc47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1179e4d-e2ef-402a-8088-f090d99d4005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf727cb-9c95-477e-a41a-63b4901364cf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a463b55d-d95e-489b-bfae-3a38b454ebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852e0bdd-ff38-4a09-8e9d-8d63e5bf14a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57e4707-7f00-45d2-bcb5-be53eb923fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46c70a1-2e0d-4fc7-869d-6106beaa3622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8162466b-2ef4-430f-b4d9-e191fa374465",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c56b1f-b791-4942-a113-6b1b140b6bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dd76ef-0fd9-4312-954c-a94cfeb560b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df00e526-be4b-4e55-aabd-c3fa78e6debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a01e8c1-75e5-449d-b150-bb60681d6972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e85fbe7-e580-4350-bf68-dfb8d0a33c36",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedeacbd-c8cb-4369-a990-fb0e37219e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d50987-29fc-4c8f-a791-cff21648c094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13671f8a-a8b6-4d72-a860-ba7e9e356cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "38320bb0-df2e-4a9b-a91f-766aaf82653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28704128-8b45-469a-a6b2-f423a4885703",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1686046-9224-4c08-a1ba-003e2c7a8210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a8b907-57b8-4370-aae2-d428b430e4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c9c6f7-77a5-4130-bfd2-610eaf159503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d83ea1d6-1085-4051-9ad6-f9ea99a806a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c77958-9a6d-43d4-ba6d-b0782dfaf5e4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b235a9b-fd29-4317-8ee1-14e868ffba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e0d4ce-b77a-414e-a387-2e57db1d9d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43016051-04de-4cb0-add6-fe3df0cc911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44767629-a7e8-4d25-a4ee-235baa966007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fbccfb-fc9e-4f5f-beb0-2ac29d1c1a54",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7bb77a-81e0-4ac1-b23a-c0bd4b5d5bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a19f0e-140b-47b8-bb21-5743fd69e3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa0d4d8-89ed-48af-9e80-0740ff1a0d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f386644d-03c1-4202-989e-4b4051b1cf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f51b9c-9b78-45c9-8fa7-28d886e9cab0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5a872c-e7e4-4274-8399-dadcd7e68044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccbc252-fe98-4f74-8f65-f5b89ad5c2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2612005b-b7ca-4880-8424-6bd9a0628342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0e966d-8d46-4c77-9cd1-95f0ec58d7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3581611b-0b1e-472a-858a-0753d98012b7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823817b0-844c-4e93-bccb-1dcf946bc6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dd0ffd-3701-4cc6-80eb-dae5c14b053f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdec6717-04aa-41ec-970a-3436dfc2796b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "62cc25a4-c9f4-4c6c-aab1-bf02ddc50195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a412e82-9056-44d1-86a0-800021516f7b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4560e7d9-2bc8-4f0c-a750-63f40039f87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4660927-f529-4c97-8bc0-d7bc5df77ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3ee2ae-6a78-433f-af7c-fb51cba0e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0a6612-e5f3-40a7-8f12-8aae9220df0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790fd73d-f425-4612-9746-a3b9c7f164e1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4603a28-19be-4314-8c55-3a825bf2b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc32921f-b176-4b73-ad33-baf8586f8b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51cc634-1180-40b9-ba08-0ee5d17c3d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "469febe5-a3d8-427e-975c-9cc93bedc896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c9c4b5-5f9d-437c-90da-b92a132161ad",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a34b67-3b01-40fb-a8c8-270b449035e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966a6f49-d296-492e-9146-0ee68489172b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6165101a-d47a-4786-b4a0-ea661d327543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b953b119-6e53-447b-a3c8-c17d1123fee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530b2f68-a796-4621-a23b-fadf1931fad7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078a9952-d07e-4091-a0a4-a831c038a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081a707e-8f6f-4cd8-89cb-d9c5adb8991f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997707ec-b9e6-40fa-917a-d0879d832a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa62247-4c01-4925-9708-3f66e9d6d3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d9ab86-65e1-47ef-b567-d8eadeb31241",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da85695-1b24-4c17-8a83-e16027cbbe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64699a59-6a58-4e18-9cac-e3ce5c48638b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd89879f-1278-464e-aef4-81061455133e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19c93325-5b2d-4698-ab7a-240e48735a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ac9125-fea3-45d5-9202-970b2c501afa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080975b3-665d-4161-861e-bf8b6a7f042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2122850-a735-44a8-99ad-e67d5aac25e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4d6b48-6803-4698-99b7-bb62f65db35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "927a71b1-c2ff-4e85-9c15-16c181f6ddc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76ea5c4-1e96-463e-a431-2552939a1f95",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f084c5-6294-4785-b3bd-c1213c418698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8864f0c9-3e52-4d19-bfa8-e9239c24ab61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5730e50-9213-4feb-b7fc-6fee8099c57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "41f765d8-365a-4fcf-b0e2-6aa35702fb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36afa4a-8289-4c47-8255-dbcb82b94d9d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdedc531-a65f-414a-8429-d6ce11074e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec9d462-bd81-4bd7-8cd1-fe853e02159f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ab7076-bcbf-444a-acdc-c5f0a6d6fd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea95e7f-c2ff-4041-8546-5fc06854c600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a27ae7-3fe0-4e1e-ae40-6b1c0b0de145",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bff3448-2bb1-4914-b411-87e9cb7a7fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591abf29-6fa1-4151-baf0-848447f73325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bb2ee5-9ea0-42e7-ba01-a8413bf60f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "336b6f7e-b3bd-411e-9c6f-c6b358ada906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffa0dac-fb70-43a5-bc9d-acd28c93b2b6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53f8bc8-78b0-4d9b-b949-973ebf0920b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38405312-5855-4c14-b3d4-3ebf3f9b2b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafa2929-2f02-4d43-8f4b-9c66f70f72ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d12ece7-8de5-4136-898c-461000efdb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1442bdfb-d910-407f-b049-0d67a87e5501",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792487a6-c749-4608-b4f5-00bf289696e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9528a6a4-7d6e-4274-b9a9-3d85f421001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7213bbf5-4cd5-4208-8a8d-397d4b9212d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fbab2b-9b19-4fbf-936e-57f303f6a9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bc005f-1140-419d-ba6b-a192ad46e9a5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331db750-a009-4084-a09f-45b529b131aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31ce23f-0ec9-4b88-a855-081e88c0404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3b7914-961e-46a0-b7ac-97d67c31af44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0091d7d1-ffb7-4c9f-9793-07b4acda537d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d74c75a-469b-4c58-ad1b-cd2f7cb02bec",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c76ed11-9555-4194-a3fb-61e3b1e85301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f5a0b9-0f05-4304-8066-1deed4de7fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65aef03-df54-4a6a-b620-890278d65d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c76b3fb-c78d-41d3-befe-99a488c4043f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb48b29-3b31-4734-9c32-2cb4b2df0a95",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a994d7-ffc8-4f9b-a09d-61c1094f93c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f7c380-152a-4998-bfcc-b87c14132827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91eabb19-9e6a-4cb5-bcea-96c6fc670145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "919d5cc6-b16b-4070-8acc-ddd38a8a3ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3210145-a1f4-4de9-aadb-04b492b1ddd9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1462b80a-bd55-4f17-ab5e-ffc68ec87708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d64553-c0df-4e11-a953-50206ab8e7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700c0ede-a61a-45ba-a476-bb462a3ded4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c774f20-cbd9-4337-8a97-819510512867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd93359-317a-4d9f-8fc2-cf02a151f85d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febc7fef-66e7-4242-9818-1fb1491c8839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdbfef0-e86d-4826-aaac-7089627b04f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31311ade-3c5b-466b-8e56-c9ec6d599245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb00f1de-be40-42ad-8497-3ba1d2a0ba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2ccce5-2d37-4f40-8f65-3216b8061050",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41df7b7-6710-4978-a426-5cf19aa73b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72686ca-c580-4cd1-a6ab-2312eb046fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68aeda9-617c-4510-8edf-8d66c343f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "682ffef4-4e00-4862-b1a8-9691fe207150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b4ec26-dd24-4580-b0f3-811159d5ed26",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5bc8e2-4625-40a5-9122-678951df017d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ec9764-1546-4982-bb18-36f9cd18c585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016eddfc-3fd3-4bd8-b3c3-00c9857d282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b4f595-f834-43fd-99d9-791c6d322c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a6cdb1-9211-4199-b558-aac63fe73f21",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bea3cc-a68b-4dc6-80eb-dac492feedb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097a6b2f-51ef-4441-a8ef-0f2fc95ae6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2913e6e6-3428-4c8c-962d-3da8ba721eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e48f4e-c203-43ab-af43-adace196b7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f037301-e82a-40fe-8ac8-cfcd7bb56288",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957f8692-457d-46b0-9aa3-34c4e9fe5cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a558e74d-9fbd-4084-8517-1baced01f9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62484ae-cbb4-4cba-931a-81df1de9647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce21be56-2cc6-4778-8cbf-d5a58397c36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c245819d-4457-4e2c-b797-81c0cdbcfbc6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02928ce-81a3-4bf3-aafe-8494ea9149e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd16dd3e-f374-4e93-a998-b8042e6b3038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8589c6a1-aedb-40af-aa05-78fef4cce360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3178af-7413-4d42-b8a8-cf420b9ef19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2406ba-34a1-4714-9d2b-01cfbef66142",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a404655-71ac-45c6-b011-cfa16662b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b30d5c8-bb3c-4fe6-ac71-c20df2dcb5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a114c3ca-8642-437a-ad90-b99e1b31ddcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "48444bd0-43aa-411c-8bd8-a1cc985264ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb88d8cd-19ff-47b8-b8f3-cce214e3f103",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e1d1ba-1ed7-480f-a0a3-cac3f49701d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644dbdbb-d229-4b56-ba92-3cd811228daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a06579f-e3d1-4f96-900c-272edd386b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c94e290a-712c-4428-a057-cd14d659564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d70e2f9-df58-4a9a-8db1-5642ba5479e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc2d77b-4671-416c-922d-7bb86259fbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b49baf-2c76-45aa-add7-2c2b9e797181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ed355d-d814-488b-93fa-477516810ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d424be4d-fcf5-44cd-8a04-3687364499d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b74095a-832b-4e80-980f-6d2eb9aee096",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccecd3db-408b-4079-ad00-6930cb8a4a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a870ed8-f777-4cc0-adcb-5bb8d35b58d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6f9aed-f411-4dbc-ba30-24575fb85886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d708f43-33e9-4268-8931-eeb382a67d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a2175c-c7d1-42f6-9573-c977fc782d93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5079e006-c76e-4d84-8331-e7162a974876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bd5c05-37d6-4fa2-a819-ad5596331a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd437e3-d72e-4474-9a0b-c4479d705970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a7aa47-f73a-4c6e-996d-3a749771779c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f9129e-5a47-4df0-857e-5405c8bdd0cf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53ebb22-b46a-4856-87bb-568988cb2c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8780f463-5637-46f2-8ddf-cae8b03ef147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cfd32d-ef75-45f3-bcb1-c94040a8eaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "19d9f7e0-6a1e-4323-a87b-dd00e192d8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b45fc1-0874-4eb7-9e30-9fa2d2352198",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a758fed5-81e6-4340-b48e-c43005ee4af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf9748b-4c4b-4d78-8985-b0ce34792396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40c2355-6183-4952-ad39-8871904d1c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b5666f-b392-4640-b4dd-ba86553194f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c74e5b-8419-4a05-a826-4ffde0ef68b6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b95fb1-255d-44ca-9786-1660484b4cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873e3364-d657-4c49-ad0a-5686f28a6fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b200b1-c88e-4447-9584-07a73e6aa7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eb6de4-96be-45a6-932a-5016f996ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac924bc-c550-4794-8586-73dd8155f2a9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b33069-c8e5-44ae-bb53-6594774d44ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b77dc87-c325-4227-9ca8-7bf713bde192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4615e779-b211-4c60-83f7-6b2fef2c8912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d713600-5913-4f39-975c-d4be2a9d85fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d003d669-a2ca-417b-9d32-c2192e9b4f59",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a71a54-7abc-40e9-9d1d-04716c66168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dcbc84-4d0f-4a76-ae6f-5d4327fdf164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d9072a-4fcc-4d8e-a99b-129adecde600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b24e756-377e-4e76-8604-df5df55b5dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c714fa-4fbb-4e93-91c2-4400e91617ec",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d266660-b630-4978-8b08-385be9f5de2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea2bd65-e798-4096-991e-fe0a4eef1961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9565e0ee-6bdc-488d-ba8a-433a6ba712ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdbde27-8684-4703-ad86-191b2ef21922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc89666-25b3-45bc-9178-2f63f323c5d8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17816fe4-aac7-4dae-839b-1ad5d3a619aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372f2c41-867d-47e3-85a8-22a7971f3d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c09d69-7c91-43ee-8158-72b906e05952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf5695d-39c8-40ee-a464-7e11998979ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a116d7d-3b1e-4d62-ac60-de094f1ad385",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71113df6-2768-419b-8cac-c6471b3cd55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e954af91-8bce-4ef3-8c8b-5b10b23cf190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d377ae51-82cf-48cd-a0d3-60b18d1826c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8d4bce-ddcb-4588-8beb-57173d262fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bca264-9ce4-4f7b-8f6a-8b95e3994aaf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d7be71-8143-4fe8-b54d-bfbc4cb142c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d07d3c-72de-49a9-bc44-9ec89a309e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b05c0c8-e609-4ad5-837a-4a072add4ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ba051b-64e3-46ae-9fac-85d1206ae945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a098bf-7a04-4a09-8f30-a1a5d2d08c9d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a45123-3267-4cb8-805a-282231865c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e1a1f9-8591-45cb-b1c0-157e351ddbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2341027-d4f3-4d87-ad5c-35756d0cdd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b88ee0-1b5b-4b03-b94c-7c18de99dac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8851221d-39db-4b2e-87de-e8f321333ace",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c4f83b-45ae-4fdf-8485-edb5bd1b5f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dac108-894c-486d-86fc-60489e8dcb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4745ca-445e-4a5d-bba0-3b823ee2ac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "485d5f77-d09e-4f5a-8ddd-73d8fd8de6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20cca84-6390-44e3-bf32-9cd87a16a75e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394f18a8-15c2-4a50-aad9-aa10395111ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4088202-bb7d-40bd-97c3-3e32c40f6e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5ba73e-bc02-4cd0-8ae0-ea58ede79b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "049fd0c2-b3d3-4209-90df-816beac121fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3129b7-93c8-4102-9aca-f157c59e3905",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0c9a2-7a13-4606-994e-6e6c03c40f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d5248e-9943-4859-8b6b-91fc55ec25a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cbeacc-4529-44c4-9146-272e2766df9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e28a864-6a59-45a4-882c-8f0ac9a27536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd8918d-2ee8-4087-8324-d3c8f0ea9aab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f9e168-e05a-4257-9503-eb4d7a89789b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff752c4a-0558-41a1-b308-3d6a3b05fe8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c745352-c51b-4916-8880-5deba9d8608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2419db39-6828-4ba1-a009-59d36eaba120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bbbe04-fb20-43c7-b044-bf87e3e284e3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e4829e-3f97-4972-9e2a-fb63554d1254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d744c1c8-56ca-4fff-a562-55af6ee55040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b06b6ef-71c9-4b46-b512-ef4ef5f39d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "984eeb7c-931b-4ea3-b6ff-b42dbbb251e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d8ff9b-0f2a-4d3a-9757-d6b3b58c3380",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f172c-5ea7-47ed-9508-f5901849e387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9783f67f-c567-4c30-9b63-c762d6d6d97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a8cc43-5dae-455c-9030-10d6015fcced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b425f8-e6f2-4ff4-bdea-bc082bb91024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5186e6e9-c470-4138-9404-d02a61b12df1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddad2ee-4c2a-45c4-82c8-21897db82e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52adb594-bd9d-499c-96c0-98be45199230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd25477-79a2-40da-8bbb-621d8041eef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf84e309-8bce-451e-b4a3-8639fbdba20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71be35a-2fe7-4531-b25b-db3cee725077",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb607394-ccb0-477a-bcfc-4eb67cb5f1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04ab570-3416-4364-a13b-9028bd7e38d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048e8ba2-6c2e-486b-90d0-4ccaaca43748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "295fab47-665c-4ee1-8b52-1cfb1c09a301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a717187-032a-414f-bc35-9d377f80d8df",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b427c8-8d20-44a4-8c12-7228b139f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356e5245-7fb6-4d8e-bf69-1d1dbcb2093d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0659a97c-bc01-49e4-bf31-e6eff2ff9e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11a9ccb2-8ea0-4dd3-98d7-134b1487c3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe6068e-1468-4ec4-a10e-7a84f9c0c5a6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aeeb2f-4491-4736-9cda-abff8546f0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abe1a7b-6643-4e8c-addb-16d2a68b8287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8df8eb0-905f-473a-81fe-e2182afe5857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b41b21-5124-46de-af07-1de6a7dc89e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc71560-9100-4533-bcb6-a0081c337f71",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a76e5f6-f3d2-477c-a683-9b4ed08f612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df46797-2ef2-4fa6-af7e-8cc2fb721666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1e6464-9d15-46ad-9729-e84e6b4ae1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03cd0ed-3841-41b1-aad4-3023d5aff326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66286d2d-5b10-441d-ae16-b74f22908015",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5750dd89-d082-4880-adcf-4b88c3cf0104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b7aa86-33ef-4c1f-92cc-6310dca6a1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffac2f4e-9567-4044-b12b-87b9873fc4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75cd020b-ecec-4fb3-9956-4c4cccc9e0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4052457-5f69-4bad-9762-c090c44395d1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4368b0ff-6265-42e9-9a80-97fca78c812b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b4ff69-d02e-4dc5-904e-5f656e753053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3286058a-1128-4719-8444-bb07fb496a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71fc2c4d-fd41-4e77-9c42-ed3811224edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9abc8f-fbf1-4700-aa62-39d5485dc4b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41ed135-24ac-468d-afc6-b6022969bd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5654bc3-e959-4bee-b96a-8a50f0d888da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63017578-f91b-4a88-9633-8371501f0627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0166d6ba-e264-44a3-a671-5961c8c099fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7630a0a4-df79-4d49-ad78-45e2a9585f70",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91895da5-333c-4364-b5c0-7e1eba665f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8546033-ceea-4268-b9a3-bfa224a34285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f74838-2677-4727-a9cd-524653dfe649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f04babdd-47e2-48e1-8e1f-95e3d9f3118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7618df-9d03-4e9d-95a4-16b5c908279d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232c0dcd-55b4-43f2-9131-9c39ed8b792d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2964ef0c-ab13-4236-b31a-d106d7faa00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3bf644-a3c8-428b-9362-489dbe4739c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "460f26db-cad3-4e7a-aa49-b30e360ef107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca5b80c-0333-4910-adaa-2ed8b55180b3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a43e5d-c941-4a5a-b541-34c5accd2961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d83b50-6eb7-4116-a8a5-3883a155bb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5272c482-889e-4461-9bae-e1fddc6871d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeed2eb-e65f-46b5-876d-b7d1f505a08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503e5f66-9ba8-4fda-9585-070f8d5ef417",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc52726-15cd-4593-9794-df6ab568ebc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea77255-1ccd-48ef-be1f-9e3fe2bc0e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4d27e6-32c5-4a20-828d-0583ebb87fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a43803cd-00cf-49ba-a813-aae1a98fa100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b84815f-d851-408b-bee3-5b59fb6c82c3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7e0cb8-15b8-433d-9b3f-f02c0b1492c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a6de17-57a9-48b6-902b-b29fc677e598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced69bf9-138f-4fbc-b9a8-c1a8d39b509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "145f7485-8ef8-4d6e-8558-01f6239f368e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1222c1-5a76-457e-9e93-fa2c23f5fcf6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e0161-b445-40f7-a661-bda5993c9799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082b4d35-d4bc-4ccd-830f-f0a3ba0755ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38785ea-8e5a-4175-a416-ede6739f4249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "18820600-3aec-4df0-846f-42068d4ec0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429bf835-257b-4c42-80ef-da18203e79ea",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40874425-50aa-4890-a6fc-5d844d9c875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "76f2d6ab-7af3-407d-8467-69687377b525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4f1fb0-5582-4ee0-9fdf-d3a2f3331919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73461fc9-9823-4688-9506-72f6fa67696f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f73c69d7-9df9-4726-87b9-fd5eaf64d910",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cc80f2f-246c-4dc4-93ba-2e65be5c1a60",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcc267c-0a2a-428d-b277-5517ba0ee422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "297cbf59-d3b9-4b86-a86c-6764d91c9575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab005a70-6bee-48a3-ac1d-accbc5952382",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28de3c8a-b8f5-476d-a9b7-a03b8efa3d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be7b319-b9ac-42ad-844f-faf192cac062",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfdda17-4bec-472e-82b3-f83a14037d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "329f4a07-38cb-4d96-91aa-ad2b609ef036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba7f41b-6639-46b4-88f7-1a8cdc4a49d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f294d676-e4d4-4fe7-8eed-d96e566c0366"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b9d099d-207e-4810-b7e3-b3427a0c7672",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9210d2e1-c14e-4811-b9c8-da7d66b2c87f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a4ea80e-9ace-44fe-80e1-b603696ee2c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "358e5928-cb5c-484e-aca7-daa608b5445d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c38b7f1c-f221-4f4e-a4a7-041c01502e38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67ccfc56-bcc3-46a5-9531-6b14588f36b7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75241539-7f49-448c-9cb1-ed059d55730a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47ac0e16-fba5-42df-a290-74124d83c87b"
                }
              }
            ]
          },
          {
            "id": "069cbb1a-b08d-436c-bbaf-a19e792ef724",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f805142b-3223-4c4a-bd10-6adf565b183c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f883b7f-16b8-4a90-a722-754ef7635180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ce58be9-5eeb-44dc-9009-7dca67383615"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38566250-7b26-464c-ab51-59b0e20d2895",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1074cc9f-4752-4d2a-a046-b09dbf4b1b32"
                    }
                  }
                ]
              },
              {
                "id": "49116733-3027-4d49-97a6-7aebbe270a88",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e093dda-dc77-430e-bef7-d71f82e833ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "580eb886-15d2-406b-9b45-1fb7c9a6b84e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "333d6b12-1d4f-4156-bc2c-ca1b19e8f4d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6a0d23e-46a1-4635-9c89-da5f5219d1ed"
                    }
                  }
                ]
              },
              {
                "id": "b58c2d69-09ae-4d99-9235-3e9216b59982",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffeb9533-18d9-410c-ae8e-561135f71061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf3ca507-c5f1-415d-bd6c-e2fc5cac5ad1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09063c47-d430-4b5c-945d-a2dacc54c5c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7a1356b-2225-418c-babd-512fa7edb67f"
                    }
                  }
                ]
              },
              {
                "id": "148dfda2-4cf1-4af2-9da0-b6c5def914b9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5824342e-0d87-4238-8815-a46df97c5bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6daea316-e526-4c86-80a4-5eef1b50ed63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3b36c88-2b27-4fe5-8e9b-14d0b7fcf4e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "31c1ed99-0540-4a23-bafa-f9ec7787ca76"
                    }
                  }
                ]
              },
              {
                "id": "2a5103c0-019f-4363-ba6d-71b0f360ac6e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7526279b-d1c1-419d-ab44-43c41d16bf5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f6677cb-179c-43f1-9127-929d8b6ba810"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3ef6426-0fd5-4da5-8026-8b52681c19d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "98e147a9-94ff-4bea-bea7-379b058db46f"
                    }
                  }
                ]
              },
              {
                "id": "9b833d19-42ae-48cd-8f13-5fdfcfa1ad74",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "408a6f7c-0192-4215-b60e-b6b7f2bf912b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e196160-3f8b-4c91-988b-8965106be463"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67de0e5b-b006-4f79-ac9f-d9e0ea30bce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fa8d71e-58b5-4e2f-bd58-2838298fa89b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a33345b9-6908-408a-8bc3-9a0dff5f146e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "429554ca-fd22-4af2-9e3a-0b9a1041f8a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "749cea6b-b1f5-4c2b-818c-f18bd74f4de6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5840c4d7-03fb-4830-b0be-ef2ab0f1bcf6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db758aad-bc14-4f41-b808-3ec7ab6ede8f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6eae017f-44e7-42f9-b787-dcb10fcc1f29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4677419-db9b-442c-9d64-4c780de8be7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ad5e9b6-ad21-4001-892d-902f29d86c21"
            }
          }
        ]
      },
      {
        "id": "f9e73b4e-463f-4471-8551-70eadca5b035",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "95cce762-8203-466e-a25d-3c03216d0048",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dcf5153-1e7c-472a-adf5-6f97003332b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca3b12ef-88ad-434f-bbcc-ad51c3447a8d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998de073-98ab-4e58-90b2-2bc8d7787890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e07d26a-9c5e-470b-9bad-28e6c6eaeb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa42c57-8bad-414c-b057-2e705002b39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3900d1-08cf-4525-9191-28c49f707b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3116a839-3ce1-4deb-b153-e4c79fa9fb29",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4f250b-76ec-48a0-8b75-f1332ac02a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f153d3e1-535d-40ac-9068-d2e09f1fb68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48e291c-3731-4f4d-b796-d9869a13d1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e25ba1-3813-416d-887e-1e1bcc375452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912ebe54-ef50-4a21-a029-36850a122366",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8b55c2-4aa6-4636-9746-a26e10a964a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9a8272-17e4-447f-a323-b346b2a2f872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03159282-e8c9-4a19-a05b-7014f3310940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a45ff572-8e41-4343-a74a-f0aaa0bf7c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9477277b-7c97-4b9b-8218-43fe0022febb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8f3e97-d00a-414f-8d53-4248c9e839be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dfb997-3752-4a56-83fc-a1a0e5fdf738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527e7a50-32be-4975-943b-7e2449f731cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85eb6f56-1f1b-4705-a9fd-686744b45acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2178d2-1675-42ac-8ddb-4231b7a09f73",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b79bac-932c-457b-b707-e50c6e108e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c427ef-7e4e-4784-9368-0b6feb746542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae449b8f-0a45-453b-a3d4-ec62f77cbb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2410794-da06-45c6-8291-7e56f2b54a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eb4e87-6ded-437d-b8ca-0ff227f04c1c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ead01a1-ddcb-4259-895a-17da299e8d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f64940d-cd8e-4dfe-902d-6c4721297045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749dd3d1-c835-401d-86cb-290c8b3fa701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72b7707-724c-4891-bf35-5fc7be91601f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7065197a-5554-4a6b-9971-c1beae426a6a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5dc8d8-2bcd-4610-b587-96229942aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d304188b-bf23-43fb-beee-688fcce84e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857bfbce-2f35-410e-888b-283f0547b950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce928580-c535-4a77-b583-9ae4e25389de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e170cfda-6c68-43d0-8e7b-3d3c4316ec73",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abe54be-ea97-47d6-b7ef-2b34d99b883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d738178b-e55f-48d1-b8e7-158d871b63de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30577d48-7a5a-481e-9680-fcd3a220423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1654b43-727f-4416-9199-aa94ca39fea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c71c6cf-3017-4a7e-a088-31358cd96abe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438630f6-371b-4920-902f-655ca9d2653d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821137c5-3b2a-44c6-b89c-3390dd91d631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420d5980-e674-4854-ba54-f2a103548268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c6ffb0-67fe-4207-9264-a7a7d04d80d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3641b3-94b3-491f-bd19-c06ee27e64db",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213e2906-0bad-4a35-85c7-131c25d17c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf395c6-6273-47c9-9463-bd6c5449490e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9fd24b-0e4c-48e3-9309-6f6f66f70352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "426bac26-654a-4711-b71f-ddab05e91441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe32c4c-6ce4-4320-a34e-60cffacff258",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9519b2-a406-4048-bca3-94073d845bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1497346c-25ce-4762-9eff-5bc1f0ebb07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240245db-c847-40c8-b1c3-4f7b57b2ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "24debfbc-cd28-4379-86a9-e0a983884d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce70422-7d91-4d53-bc0b-9d5f9ea2d4d8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29979bf7-f41d-4824-b9a9-5a89afd41fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3d40c8-7ddd-49de-9aa5-921b2ae78cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24469a01-7d3f-43ca-a535-bf9cc1ef2eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d98846ca-7641-4210-8539-fb8c07207470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df451c86-c1b8-4400-b8a9-d8afd09ba89d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b1b5b5-93f7-4244-b1f0-6fad690af9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4539d0-436c-47e6-9ab9-3ef56836125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406fa02e-a139-4f81-a426-860bd059fd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64163906-d017-43ef-bd27-95f30dabb447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d93adba-49fa-4f2c-bd50-63d6da6767cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e92342-6152-4e2b-b15c-21c0a3f6f578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5936bd47-c599-4597-8c40-327fb7d21420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb747c2-990b-47a6-a781-450cf08d99bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "005388e6-afea-46bb-ba57-2c9b7ccc8087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880fe9e6-e1d4-4b9e-baf8-24b8cf8044b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876ed618-55b8-4e30-ae95-c3f41eb24dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa2ed84-68d7-4fbf-a5a2-24f7932e628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd41d63-9662-40bd-a283-f3dc4c2999c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3320c5-5bb4-4178-b016-05cf638aad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1b8ba2-0c02-4777-90b9-745561ae6587",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0377850-a08a-42db-b1ed-6470b1981b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f548cc-2d77-4f28-862d-fab3bfb74f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ca019a-1929-456a-a2d8-2e8d390f485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba735fa-68c3-4660-8963-39626036cf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cb659b-ffc7-462a-bc47-b6a9c0ab5f16",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926b4578-5d98-4ca7-9f65-0cc94b135c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4242540f-9edd-4715-b6d7-1ab379272db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488dbb7-c8d0-4db5-bbc4-5928e78d3efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f34264-11b0-41e2-86f1-f384c7d8e88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74fd954-c341-4bef-aa8c-de65555f60ca",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cfa5d3-4a26-468d-ad59-c034767f8026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0498fcc7-da12-4374-83a8-7f6f66dc5680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddaf1ee-0e74-41b0-aa97-f6c7a5864713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5b0cf4-f166-4ad7-ad18-b23f98000e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dee3d4-9294-47c5-ad16-4d1382150074",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73db634c-9c06-4159-b2cb-d6737722058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7f78eb-814e-41a1-a9c2-f7413a34c039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6735a9ed-a113-48e8-ab09-330ab47480ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0602589a-8d82-43c0-8730-9cf28d18333d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140b166a-d4b9-4e92-8cb9-d782de1d554d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843f6d87-bc84-49ba-afb1-648e1ef63af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407c60d0-fcee-4e5b-bf4c-72571b0a9bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d9c418-d774-4fc9-9059-0f79fdb1d034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40de2de8-496c-4c7b-8022-6c30a7588522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1214875a-2035-43ce-b97b-5042b7205b6a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229bcd7e-2243-47d2-a177-ba1feac2d1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b347aeb8-5c6a-43fa-abd8-cc14c10b07dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03febb83-566a-49b9-ad94-7e4065e039f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2777f7a-b70e-4d74-9a69-59321333b657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7991ce90-93fe-4d86-9a68-34518c4c7c45",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce172ac-cdab-4724-a64d-1b23ccc016dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a06652-8c6d-4e24-81a8-d26e8e60ec72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c61230-9b55-4cfd-938e-fd99f743e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da422b5b-d2ea-4417-8588-a4fd8285b7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25858e69-2be3-43d4-ac4a-73cb2910ba91",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebe4dd6-8eb5-46cd-8558-d9d3e3c29879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c58566-7a31-490c-a9ca-a0b46fe4a504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c8fefa-db9f-4a0c-9c56-616d0c7dbe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a61d006-4cdd-4a39-867e-cc4b2fa2d9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef0d998-f082-4e68-ae5c-4a8a73a46084",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee6d950-9798-42bf-b4a4-b752346ad276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3559b544-149d-4b4e-9487-af4fe2ce33d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c222a23a-4968-44ae-b856-49c0e38ed379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f568561a-65e7-4d0f-8b02-740f46ef55dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8b2dd3-2df1-443d-bb00-b24f3de79f98",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45b9fbd-8cd8-4b10-a584-7246f4325de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44656376-c55e-435a-9ad9-a80d49fcfadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c48e66-76a8-4a91-9ffc-bed5e007dcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb953e1-fa71-4d34-bd46-3c4917e19653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946b4c83-ed06-429f-a9c8-2960f9a1b402",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d234af18-fb8a-4331-a54a-c02b55bf1d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c471ac-8c4c-4378-9822-ed990c4ff202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f86274b-4dda-4d5b-b19c-a05ee870ab31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cee3e1-ffde-4481-b8da-9277005a9f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577db9b2-5e17-4c89-98b7-ac993e3d9adf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b666d6-8538-48e0-ad0a-467811c2c9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6956f787-53f7-4238-9872-377ef6ff503f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175ee29f-fdf8-42d2-a9c4-b5da71ac75ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf6995b-25cf-44c6-a95a-5bbb363349f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dc96ac-82c2-4e64-b614-562015c88cdb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b3ac21-451f-4f76-9b11-ac9f0b08a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f7b2ef-d18a-47f5-b896-60ba8beb97cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd2c0e3-ee8b-4552-996f-f4a17ca1ee97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbd2253-80e2-49c1-878e-0a980b5eadb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199b714f-b286-4473-a142-2a2f9e33511d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f033ed-58c9-461e-9dbd-9815a0ea511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d9932f-03a0-4109-8af5-34b8ca95b69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbba54ae-d69f-4d4e-bc58-79f39b8c8204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1da5d1-1e27-4993-8a11-209c2937cbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53101e4b-65ff-4aac-b522-47280416f3a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1146ca67-b56e-492e-9fa4-7b56b9cdcb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993c4687-085d-4948-b8e3-b58b9090d442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5991021-2983-44a9-a3ad-0d5c740ebbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "030dbd72-2be8-4fc0-b433-6420c0f261cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de346081-5e17-466c-b3ad-8393d5ea693b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04310b66-1dab-4c1e-a4f5-158ee1be34ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa82890-b494-4d62-a1b4-d21b92773803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4588ec61-935c-4eb8-a177-19653c6297b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a28acbf-1b08-49a0-ac3e-7a84f2de2847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072d85d8-eea9-4c88-a886-a3170cfcd783",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aca435-211b-45b9-be35-b61f1084c1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fee3886-7135-45e4-854a-1b8238baefd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d2d050-eabb-4374-8364-42a73e9d6356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c149b6a-b33e-4392-babc-3927634c56e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "568b0458-b2fb-4b78-9ed5-f8bdbfb887dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02b8c9e0-73e1-46f4-a030-6e35400e38c0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882100f1-0772-4ee1-bfa1-35de166d2e01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "98a85129-02d1-40b8-8f24-3467b8b5ca6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cbd223-393c-4cd7-9b8e-51bb25e1a2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2478d2c-41c1-4fdf-860c-6eede3077823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ecedd3-6ec1-458c-b929-be8ac17b628e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ca760b-d1b7-4bf0-b47d-c01171a85f34",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc0c0ed-f126-47ae-b29f-9f377b0d20dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b680e1d8-8162-4742-a128-e9ec514f98cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5912c8c-ddf1-4bcc-a5e1-bf1fa3095675"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6772ae9d-fa25-463b-bcca-378ea708d54c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd7a26fa-f92a-494b-9e99-4f264f43a203"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21aff3a1-7d2a-4702-90e9-740f983ad55f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa5ba7c8-0f81-483e-b76e-79110fd5d77f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97d10d89-ad01-46d4-bec2-6bab3e40f291",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a933553f-1271-409e-8032-2bf1ca9c490b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70000958-6bc0-4cc6-aaf1-7f48be59b1f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26c34ef6-2190-4337-8cb3-182457645f0b"
            }
          }
        ]
      },
      {
        "id": "9183e5ec-8acd-4477-92e2-590eb82a400a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c516b021-8603-4906-b519-f1e8e30ae3ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d08f9561-86b7-4dc1-aa35-35dfd65e5f74",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a15383c-a48c-41ba-ae80-2779b2852ddb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9bc3bd-639d-4995-8f32-061c426056a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c189e417-446a-4b8d-aa11-316d14655545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804f6041-a7b8-4b63-ba97-9df4ef8015e9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5da0fe-efed-452e-ae96-d08bcb2c9491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11186ec1-3ac0-4b0b-8e69-d4abefa9a48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07664eac-2d04-42da-ae7f-f404dc172c61",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7279e99-c94d-4a25-afc4-181baa25531e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3516971a-478e-4284-894d-f97c144ae8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95174cd7-0cfb-4d18-a90d-2958f64a90d7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9877734b-6127-48d4-94c4-4655263c4afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cda8b9-3470-4194-b136-1beba6394842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d8d7ff-e6d4-493d-a437-2ae20da4e951",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff34205-187e-4ee4-884b-94faade1f972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8a9de0-9b51-48ff-8b3e-7c197db54e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147e52ab-3f82-4000-9265-c8ceaf1858de",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d9081b-c0d8-43dc-bda3-e6116b8fa644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ece3a78-f548-450b-b388-0e917fbda1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc87843-75a2-41a9-8ea9-8f6b03f9bfdc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fe45a5-4eed-445a-ad9a-92abd97f3972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c498eef-5744-4b3b-af5b-2649d0643c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e69f3d6-a717-4741-b5ee-a65b17b66cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b873693f-c2a2-42e2-b412-c0e9f9d3c733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65402a1-fb94-4228-bb85-e9d4a73e9931",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7909aec-866f-4960-bb50-3926b69abd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735cc975-ea9c-4e99-8082-7d9f6ab10e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3902c07-9a23-4234-90a3-b43313e1c3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aadc34-b86e-4079-a647-c083ccb9da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace7d5d6-c56b-41ed-ad21-01ae531490c2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aee1a7-2845-412b-aaf6-21a054ed53a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1bbe38-4e68-4f14-93f6-7b894577448e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7147d9-c3b7-4847-9b42-f4036dd74c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc899989-f55c-467c-8e66-e08da9376544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cb7f9c-a314-42bf-a061-27ae0940599e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f908426f-3f8d-40c4-b698-418ea4e1ecb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5249987c-5f5e-492a-9291-34848ddd2e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5944357-73d9-42a5-97a0-d8ef8f3f94b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a90f9e-f855-43fa-bb5e-b7824af2565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582d1f6e-8391-4f3a-9df2-274c2c06a212",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9ea50e-7033-4e36-a25f-5fd95cd18873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ee35a0-75f2-4e15-a040-5fe14cde1398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd91dba2-9c36-4e35-8dff-fd1202b96652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c12e0bf-7460-4d9f-aca9-6f4459946727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38057363-c8a1-4255-a967-b0c0b1ab1be5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5dcbeb-11c9-4d34-8378-e773379c5ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b69149f-b1b1-4ed7-88e5-88be5b4f77fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a4bacd-bdc1-4080-8a3e-e40539b0c35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6611259-5645-424e-aa76-9c09f840d1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b893998-af35-43dd-8b9b-ec1530aa0912",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775400d8-d3df-4cff-aa27-b5e80740e94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ecde0f7-9c46-46bf-aa12-2fa61952aae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9234439f-8aa8-4d9e-b29f-8591a74bc330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39bee28-9ea5-4856-8601-7b57cb2e0b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722c6d25-184a-432e-84ea-c3d6b6ad17b8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ed8944-ce8e-487b-91dc-13750696f6e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba1a4f5-68c1-4b52-8ac1-3dcbf879973e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845efa2c-d1f2-4aff-b45c-a22071ec77fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3121b7aa-c295-4883-a7c1-6dc3f4b675b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06d1959-9ac4-45ed-8f3b-320494480099",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c210c5-c0b8-438d-9e80-44c38c5abee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502f958b-40c3-49a8-93fd-8c4196725175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2162db-2bb8-46d6-9e3d-f2a80103e2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deedeabf-bd55-4b36-b0f5-796fb2571979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e86aac-6f49-44cb-a6e3-11efaa234354",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34af8dff-4ad1-40eb-b81f-ac3a01467247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbcb6978-2e58-4f70-a2f4-c4756ef3f75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e075ffb6-9b29-4244-b97c-a68e66a47b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e620d420-44a2-486c-8d27-b20516024f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ae64d1-21b3-48bf-a818-fe8802e9a596",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f221535-e3f2-48db-ad11-a2693f47d0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edba285-d316-403d-80b1-f7f6fcac7b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45c05cc-d59a-4bf6-8e9b-e724849ccad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2d0db7-3f29-4136-9962-e4c876cb868d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddab9b2-3107-4d5d-ab45-d947217d55bb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f620037-8fb4-43b3-9b30-cacec2a27658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828ad634-2ca2-4011-8e14-b2c411130f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf492cd-bd90-40f3-a413-d6414a9e67f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22347abf-ad2d-4939-8a08-1605aea1b2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb60366-feef-4b2a-b4a4-2d929c5301b3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519147b-9056-4370-823c-113467bb62a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f991093-acb6-4c87-88e9-b03a5aa37a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854754c4-85ad-4cb4-82dd-a7b355ac3171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5fe945-6b6c-4dce-ab43-2ddd36c4c674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f437aac-6f65-4e74-9d34-e97dc7c8030e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4aaef3-fe8b-411b-8418-a07390b564be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c32e69f-d219-41e9-8df2-e9a7a32012fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f991a-2a67-40f5-84ef-f5bf64c9c55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40a2a7a-e63d-45ee-941d-2b46d81e091d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ec25c2-994e-42e6-919b-dd15b716160b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d639ef19-41e9-4d29-999c-479c1c101593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b99b16f-d408-45fc-afbe-b446b99370e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505fcf2f-138a-4b98-b511-ac6b17c97e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b0d645-96b7-4627-afc9-d9b77b9525b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085c05b0-27a9-4d86-bf18-9aea6902902e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a25369-1b06-498e-be56-b245c16b3c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c0475e-e80e-4179-89db-e73f096286eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c4b7ef-de68-4332-a57c-bd76528d2350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eadd48-b273-406d-9561-9c41c492f63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5dc6b2-117b-4f77-9499-072b6ecc92ed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518ef09c-eb14-4305-a9ff-621311350509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49faef1-c215-470f-a29c-5371e511cc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93e80d0-2727-4480-934d-48d1267ff7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec11651-268d-4783-beb9-cd46fe484623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1e4968-a3ec-4860-9e05-6297405fe821",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb876a2-a08e-481d-a233-be6da6f57a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1131a97-28ca-4273-a545-396134160e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1f7775-bda3-4b2f-a160-a1904b2787c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0979c430-eee8-4e36-be85-35cad0f7c9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a793a774-0489-4979-9cbd-0cdfe1ae09d8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914b29c7-755d-4336-8c4c-def394aac9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e7b35da-1264-4acb-852d-1878facce764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd05d340-6895-42a7-942a-91c785f35e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da21c0c6-2644-4806-b14b-70b5d21ee48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2f241c-16be-47dc-8119-ef97a0aa89de",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a24d35-238e-49ac-a0b1-74de5f986c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eea56dc-c19a-41ae-aef9-41af3601b702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fbc400-cd48-4d5e-b5a4-e28e0632a249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e1a6ce-acb9-4562-8fbf-0943bc5d316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6026220e-8006-42e3-9e28-843d44ec8c11",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8494440a-5819-4999-a17c-b348fe29bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29ac3bc-a2fd-40c0-bb6a-c7723a40ae0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9dcf14-10a8-4603-8552-8807e125c384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b780778c-8903-41df-9c96-1cb5c33b2103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d62f71-7295-4dad-98ab-6cbc7104e885",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e99a594-5022-4b3c-8ecb-b083278d5423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afc2d98-376e-434f-8265-349b4c7106db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc99ab4f-d23d-4666-a61a-d709c5442a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b593296-bea8-4ddc-a668-a55afacb6e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e248d2a0-d1f2-4816-b775-c4cd05b5091c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9075846d-cd15-47c5-bac2-3171f33714e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed22030-1c79-4d02-9ce4-68af714d377a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6bcdc6-1358-467e-9c46-d8b2dc2c6218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaf7999-21d3-4e75-91aa-62f05724ec00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f94caf8-71df-4437-92d8-3551904a127c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e8951e-3c5e-4e45-8b59-2f1ca6ae5c06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff24fca6-22c8-4df6-8c72-324d096fb542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3625f5c-5693-451e-a84c-0cc8b948d684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46ee22b-5d90-40aa-99fa-81e252b64139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f51fe4-ca3a-420f-a98d-53bc32012471",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516c78e3-e2fa-406c-a15f-6c06f5a37bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791a610d-721d-4da6-9014-156b5edfc500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea0bdcc-3f4c-41e8-96c3-16767fa8f425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e965948-9110-44b9-a66d-bd9788f6367f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d29cbf-1523-4496-a046-698d6ba63a47",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5b76d3-c856-4fa2-b6dd-6417814f2980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f97577-e05f-4c37-a694-fec08a404ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10267cd2-4209-4a79-be4a-5e196bb063f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a89dd8f-9364-4344-9190-d2691ead90f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93816c59-0244-49fe-b6cf-4ac8c96d9140",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b9921d-fee1-4a46-b94c-4a0239794dd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4bbbf4-a6eb-4b33-afb1-f63524bc9d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f55927-7f7a-4f40-9455-229da1c34f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d72d9b6-f3d1-417f-9bf1-69a1e58a7613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2247cd01-a642-4597-af12-81a55f6d2375",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112acd33-9243-4672-875b-07fa0e23bb6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb8a226-4038-44f2-8ab1-690fa4306176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926a176d-3ef2-4d90-b1f6-926db23c7199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7ad90e-b462-40ba-b13e-75adf9fd2d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b65271c-24da-48e2-8faa-981df60a3380",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db662df-c11c-439b-acdb-38d6a3cbd1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12f93a0-ac18-44ef-b4d8-62d55df2c7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b50b51f-fbc4-42b6-9281-c13b9ec04f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3159c042-08a9-4d61-8339-0e9647bef6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462a73d6-9cc9-4c2a-b852-7da0f69d4b52",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720c7024-bd15-46d8-abff-2a847d1f2093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2a5895-73f9-4486-a2d5-270e5b719319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b154e4-4d5b-47ec-9233-494b5f61150a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faed4c4b-e9bd-4abe-8761-dd231bc088f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84f7fad-96f5-480f-924a-f71f6f2b8e2a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f90e9b-dbd6-49ba-89f1-85b551395bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bdac2d-6a17-4d80-89e9-21cd7ffb1692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ebb020-bb66-426c-a2d3-6b3e3111989a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8202e0a-c04e-41f9-a723-243ab4ad7990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995ebad2-a823-490a-8007-901b8941c49b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2945ea20-b287-409f-9af9-2939859c7984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ea310f-708f-49b6-b14c-e7701f30ce0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24417fef-1941-4064-9cea-1ebdcf2f6a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7013e3a-8b06-4dd1-a85d-f0b10120cc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ce3d14-ac8e-4927-8fd3-6f3dd7eb5bf0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fbfc06-b649-406b-b7b6-1eecf9582b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1491f14e-a876-4831-88f3-e51a19034314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7731706a-b079-4243-bd50-3bf11f6da3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c729daf3-9763-4c38-aa55-ebd79d014db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aceb6c3-6d88-491f-b9ec-3c1379683d48",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f751fe1-b5c3-43a9-81b2-8fda6cfcb923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851a154f-074f-4ba1-9006-2af2edf74b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c25e5ff-3d54-45dd-a33c-bc273343ef72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f15625-25af-4a04-bf49-55890db9cdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a9c5d3-9eff-431d-a18e-d333eaf5b133",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a018dd-650a-46d9-89f5-5c34b39e83d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3cd9bb-5d35-4c94-b0b2-3c7bc10a7947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3754175-41fe-4908-9976-5d065c6fd4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a63880-aa28-4b29-81c5-0072ccbf8b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd37f9d-3a4f-41a4-b26b-558db6f18eba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f72822-0543-4e5f-b7d0-bd09ea48406d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abea8d29-9765-4c9a-a243-50606374d02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cfb120-cedd-4e1b-b370-607fd33bd50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5737fd-2b06-4299-b138-d39072a64b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dfbec6-893f-4259-8182-2070ab8e4d1b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4aa3bd-c719-45dc-801e-493e3c14abbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97856df5-b9e6-403c-876e-a3155b8310f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d66f4f-7ae1-4bfa-893c-3c692d012c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee5dc9e-69b7-4b05-93bb-54ce8e3a3f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7e7ecd-cd48-4d41-8fd5-2035e16a1eb3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b5d0d3-dfa3-45d7-b6f0-03a71d5e0b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5281350-1031-46c5-984a-09d335a17775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d16899-7c00-4a36-83eb-834f0d31fde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de05290-6bba-4111-b5e7-9dd23bd29b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872a5fa8-18a0-41bc-bb8d-e9a77626edb6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d019322c-9c56-4465-bce9-e47a56797966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6868b24-eea7-4c0b-bb8a-74b1c55f40d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e99ad77-6b90-4364-a40d-0308fc9490de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8db1c13-a60d-4111-9dc5-b98595268662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5970d8f7-8fb6-4aa3-bac3-554783163789",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f690b8f-3489-40c0-b2ff-9cc93d35ec8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfe651e-7e47-4830-8481-80901782fc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103a41a5-1dd7-4e4f-9352-e880c99f4c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48c8757-3e2e-4260-a1ea-a64ad6ac3900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f845927-521d-448b-8f02-afe234b0d9f9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ff0eb8-8d03-457b-917e-dc8e8eef61ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8515ea0-5c29-4d19-814a-0aca1bb06431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c48533-4c82-46ac-a5f1-f29b36be3e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c149dd-3fee-4e75-8c73-685db0b8f831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b737284-4a25-4d76-ab74-f4891feb2922",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1480d7b2-6f9d-4d8f-84a4-92798ac3d0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2872da8-14dd-4c4f-bc12-ac957e29d6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de4c03e-87bf-4b71-88df-5c73484dc6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310796ea-5350-4911-aabf-6391d9a74b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04901022-d0e6-437b-8886-734709f4b976",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc70863-9918-45f8-b826-4ef300d5c18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d9aac8-9033-4c5f-a385-fccd6f4c2a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7de257f-dcf3-4c85-ae33-54d6276c2d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c546274f-9ba8-43f1-b8e3-f133225ce15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf2e595-a39a-4fb1-94b6-2b053a7d05be",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c32bce0-75ce-4104-b12d-5ec7829463bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037b1f28-0ab9-479a-991b-37276f9d545a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035f1a4a-7912-4de8-9bc6-c9dacf964708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71b8dd8-c9cb-444d-9635-1f3f9551bfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a92d18d-59b6-4c92-9a1e-425a67707511",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5892b9f0-7285-4fce-a09a-45aa43655ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db56adc-d4b8-4476-9674-c3c19dd23f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec1962c-f0d8-48ae-8c87-191c3fee1b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3168eecd-852a-4f39-a080-f01fac1652d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c026906b-fd91-4e3f-b7e7-5507a4dae17e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc56fc4-4a82-4c71-8a85-2d91a1a3a762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064422b3-fde4-4b35-b977-045422fe5528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5168d9a6-ac99-4d05-869a-827d05842c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2725c9-c35e-4cf3-b7a9-fcfd83b47139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9d67e0-00a2-4669-bdc4-3068de991dcc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0448ab-a777-4719-9df6-37f76e4a9cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb808fc-646b-4b4e-ae13-8c3e1fe7471e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f47ce7c-2caa-4e12-b4c5-a1a7a3ac31a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f087ea9-7964-4c13-95bc-8c758a89773c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c06cf3-0829-4b63-bd6f-88465108ef37",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d29c261-3a55-4072-a256-98b980b0a927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a923c248-ce55-4dd1-8fb6-28ba7158eb14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35373827-851d-4562-8056-f8ecbe625246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7281ddf8-8601-48f0-a2f4-a1e5da08b4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab5bac-e0cf-43a7-a29c-c8c2d953ad8a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8d00e1-58c6-4fa5-a11f-dca208d09394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c16dfd-6670-40dc-9172-4684d332dbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74c0c73-affa-41bf-b446-811c1175fa19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606f8252-5f3d-4ac2-a5fc-ed88817faa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e741247-306b-42b8-bbcb-dcb62465b0a2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8438e6-edef-4e98-bbc6-61d6a5e0807f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de39bb0-7b10-40f5-94c3-7efdb9ed60d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8679c5-7e4c-4dd7-853f-0dd159573f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09d336b-5dff-4cc3-8dea-7f3df301ebe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5570914-ac79-4e43-a81e-f5640d7d269b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a2c690-4ff8-43e8-9d20-edd2e4be44eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3006919a-a91c-4b1a-862b-b36bfcd1f761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71996161-2567-4e10-84da-59cdb71cc3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1049d7de-3270-4a90-ac03-385a4cb98c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c6135a-f326-4ca5-9f1d-94666d05174b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1e9323-e73f-4315-a7de-249b9539b3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647993d3-465d-4835-82bd-8e61d7235c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0601616d-7cce-425b-b0b1-8c651c0bd7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab9c619-8491-4892-bd9e-6e6097608904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2ae4df-aeb1-495e-a6c0-1b5ae2988b0f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d56e73-fd19-4918-9942-ef7b1b84741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe930074-746f-4854-be41-298302cbd351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf9243c-7d5d-496c-aef8-d8ddf8000667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1d7dea-42a3-4939-886d-f368ce00b646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c865006-33bb-4eb3-997d-f4affc9754ae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6634c7b2-132d-4339-8d4e-25dc47ebd748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62ce530-b00f-427c-8c3b-1a453bfb0d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf12b9f-178f-42eb-ac5d-c135b0b508e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1977af0-1ae9-441b-9288-378401b5c7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da81677e-bf92-472a-8c7e-54ac03c4a3ac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa456ab-3f63-422a-b3d0-61776b70fbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bef8cb-0074-4261-894e-a68af07164dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be61b5b5-4d3e-4c7a-a297-3c468677a0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f25d091-2bed-4578-8ef8-db1b2b5246da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9975775f-1820-40be-a72b-6234d4fecc1b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cea440-847f-4e4f-a6a1-0434f39b1b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c50f4c6-7052-409a-aa61-12020b8848fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b25998b-15e0-4ded-821a-bff9e0952986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a94cc6-0ad6-457e-93ce-827e840d5a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d463bdc5-2239-4562-b07a-2309ce8380ba",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0465dd8-d024-4735-b357-07893b503bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f0b66f-5463-4daf-8607-a08c991b706b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afc8b49-1331-4026-aa34-1e1840c5ac47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1c3b70-708c-4e95-9204-66e03213b166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63877e49-d128-487c-96b9-5762195442ff",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c14a444-3342-4303-8d70-67ee1d3d38d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ef2e57-8e3d-435b-95dc-f8d07da582b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f83c4a-5929-4cad-a5c5-8773152eb88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ddb54e-d2d0-42b5-a77a-3c07ed8c82a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4746be8f-d655-4406-9b90-c8d8d0b3fc5a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78359c5f-376c-4ded-a534-ccca01292e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3ce189-d856-4f51-9f8a-fb215fc5ed1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a9e5bd-d8e4-4eb3-8fba-0920131ee01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e19f273-ae53-41c2-b82a-0eb15528fce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852f1520-f7bd-4bf2-96d1-e56502891d6e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874a74ef-e30b-4c8f-baff-583eb1a4613c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bc6356-facf-462a-ab86-612a12f559f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a40282-ec8b-4d15-be2c-b49c26339e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136d9d18-7004-4350-94a6-c4b9fb584806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0dd173-5463-4012-a869-858d851f62bc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573571fa-a986-43b6-804c-036bb27ddf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618a81f9-01d6-4ab3-8888-3cf12c0dfd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55f8c48-26ee-40ef-83b4-b0c960e05a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8038dd43-255b-4713-8a3b-e6d36ab3cb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a6a470-a807-4908-91e2-bebc077c6c43",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73f1632-7db5-4e9b-95c0-dc454740819c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "728474c4-910d-49cc-9ecf-6fcb3c8dcb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0351ab-9a5c-46b1-a8a7-a3b32ce623f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cf60e6-4807-4407-b8bb-2b54ec175429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6097c618-f4b6-4b4f-a067-9b5eb833fd0a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1997d29-370e-4427-b6f5-30b525407319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da631588-2641-4683-927e-2e22f4d538e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942b1aeb-041b-4804-96c4-b24323d7ca7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a137dfc4-989b-4399-bb80-ca7d4d58a290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc725ec-24be-43a7-9cc5-b156e7ced4f3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d4e78b-04c3-4423-a69c-3b1d461b1220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37e9fc1-e802-4a52-b09a-32d98886d2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabe9739-c299-481e-a090-dd4940aea607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13521cee-de1a-4b2a-b6b1-58fffccd8a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e9285e-f616-4315-a182-486fcf3e905f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415174eb-b71e-4c6f-838e-d9b313e68c17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b687ec0b-a8ee-42d4-a98d-df4720996aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e2efde-0d39-4790-a3f6-cee09ec3a4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d892ab3e-515c-4683-8a11-7b8fefe7ed20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f395abc-6464-463f-a1c4-593408cc61fb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f02a8c-4b6b-4a01-8e11-6c46e67fef47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983d7934-dbb0-44b1-8d1d-9c77a988fc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf7c631-1884-4e3b-b8df-113af93fee26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f20af0-06b5-496c-918b-46dadd9b7886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2021644f-a868-48cf-82b0-bb3a34bca3f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27520cee-c36e-4c23-9b73-d2a7b4d44aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee74d59-3f7f-4048-8b2c-6fa2de9922d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a40083e-1abb-41b1-beee-dde8ac3e771e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c881cce2-4360-43f8-9b1e-ac10cb4b6119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d405afae-f818-42ac-bdc2-ece83c85d57d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46be183f-21ce-4042-bdb0-62b731a58522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b41bf1d-6fde-43c6-adfb-7213fee04ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70749cf2-9234-493b-9b7e-faf52e7e1919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a83609a-fb23-4a29-9288-64b53cdd8cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bb62bb-cc24-4192-a310-ac83397dbd1b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c6036f-6af0-4c96-a139-f6a44d2906bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c25d81a-b98b-4a06-9d93-1ac6b6921750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abffce5-3a9f-4769-b825-f13bf3f427ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9671876-dbef-4be7-b7e6-aeb46e6ec009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72ef3dc-982a-4acd-a705-d2346aa80df4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ff5804-deb5-4394-8994-399d5abdf3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b3a7f7-f3be-4e04-850c-fffc9e06cb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b273be-54c7-4a87-8d2b-ce08b0b1ff46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0affca-b7c8-4af1-94a2-8dfa18433f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fdab40-d079-465d-a221-57e3276583bc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bab822-389c-4851-b15c-3ea022979f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1a7bf6-f949-47cb-aa30-c0ab16535cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0676f83d-0c54-4653-a427-f933899fbfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c107d60b-7d87-4cc7-8d39-22bba5ba642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248cd7cc-365c-4d08-8cbe-530af6541fa1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19a2a56-db8b-4f0d-9c5e-0d0cd075ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae014d1e-4265-43f7-85b1-6c5c347d9c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a611d5-9e9b-4114-91ac-d83a85abc329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883bcd6a-b582-4a80-9c49-e4edba128505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3747fda-18a5-484c-b215-4f7dedf058d3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08650d15-cf5d-4eb7-8d17-0a902ee175ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82eddc4-1134-4dd5-8357-e641312e6ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231a28dc-314d-4478-9ab3-ea7f36dc82ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ceedb1-6b2c-4187-b50f-c0b3787ead67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8699756c-a48e-45e2-bb11-abe21aedb77d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c53934-4864-46fb-9ac8-cfff83a3dad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acfcd3ad-c4cd-497a-99a7-fc4833e61c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d74d96-299b-4144-bc23-cc32ea53ab40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908ec4d8-ecf9-4da9-a0af-b0a5ad459b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b47eef6-724e-4f45-8014-25d66cd8dce6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa1c985-d47a-4a07-abf8-bb7d87b7de91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd2679a-29b6-47e5-b4d6-9dd02abd95d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5227f4-e8fd-43bd-a0c7-97ef47b58944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9386b1-eae0-4768-8a8a-cf577b024f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abf919a-84ce-4706-9eaf-3a9333d81be3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e385d78-66c4-46b2-9a49-8a2b41b0493f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3330d17-5c0a-4750-bab9-9cdfc76d832b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ebb66f-e8e1-43c0-9115-af88e60e6335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47cec65-bf2c-4c85-a598-716d38c3afb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626904f4-b999-4905-ac13-df517bd4289b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c9aee7-9aac-4255-9162-88134dfbe42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30975815-cbf8-4d8b-898e-bd10c9a87625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aac2c66-54f6-4d93-bcab-1f02f332af81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d457b91b-8d73-4fab-b80e-341f492a082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a713dc-d01c-4a26-abe4-7650c878ce95",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24a73ee-2e63-4091-aa03-f968b9e36216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee6d95c-58b3-4a92-9f82-3ec87f5d2e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd3c106-b2ad-4cd3-8a2f-2893915702f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f6f560-9fac-4f70-8e1a-73217106052e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d234e6c0-a7b9-45f2-a7c3-cf0e67598b2b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f03351-38e9-4e37-acb7-639ce90a3020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8add7e11-0425-4edd-ae5d-217b5ee2d469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7e084a-2855-4e31-aa57-c764d468e26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da5c38c-3f3c-4ef4-97dc-72540991ce1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069f8e31-c8a9-4e32-ad1b-ee5b7e8798f1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a64026-7f26-459c-97b1-89ba44749b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3325f04e-ad75-43f3-8693-a6a3c45dd7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9152e931-75d5-4e27-828c-cb570cc2d198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85df722e-f435-4be5-8983-81ae62725e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e4a2b4-9781-4f22-8843-2d9014542b4f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d877985c-c3f4-4784-88ad-afc66ec48930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c672ed4-d709-45bc-9063-e20d6ac7f8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b987f9c2-1344-4b25-becd-8036e5bfb5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93c91a0-621e-457a-aafb-8fa31bf297ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadeff55-016a-4607-a142-dc1e854fcd91",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603cc8de-775d-498a-b553-3c5b91618ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393166d2-a0c4-4791-951a-7884db04f664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d753b5d7-098c-4712-b0be-521fdd94e6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7c970c-8c20-4080-80b6-b912725bfb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb111c3-e881-4349-ae90-2253c5663670",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bfe06f-5457-45f8-bae6-e87be12d47a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7873bd7e-3422-42f4-a1bd-63807de579d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f737679c-ec9d-4825-9069-1aef2f9c3082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135a7bcb-1ee9-48e3-8227-1bbbe85e589e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4300f90-910b-4077-ba00-011da7ccd641",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e13ff62-cffc-4938-8c79-53b9615492b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3519199-cf3e-42d7-b0cb-b43d3c52a424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eff6962-b46f-4858-91fc-c5cb99b4c862",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26a8a96-b32e-49c7-9a17-bbefda9dbc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cac298-cba3-497e-97ec-13791190e53c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbb1e75-b219-4bb6-8a9d-1326dd4478fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c282ca-588e-4b57-9c8a-c0f24652b9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771e58e2-a359-40ef-b5d7-62857b3a1c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf48400-b73a-4fe5-a898-39cba5aa3730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab8476f-d7fb-4f83-8624-43422b578c44",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5b76bf-5b31-45cc-94a4-d0b6896db491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29600c95-786b-4c14-b0f8-6774b9501685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df18cca1-01e0-49b3-b1d8-44583c6b779d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771b2bcf-6c37-4568-b9ce-9fcda06f3f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8ff90f-a2f9-4b57-9090-42307aa14ef6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f54bb9c-a0cd-410f-b244-0c0b7cdc912c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28bad71-6e13-4088-90cf-23fc21660966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262f3d16-9ef9-45c7-be13-7b49b5c001be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccaf96e-88a5-4421-b8fb-8b1b21c6cd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac8e0a5-0529-44ae-8429-c181647e9111",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aba0e8-0c4b-4a42-9f9f-f40e8f27b78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c8f773-9205-47a8-987d-c86a2bc143ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8ffc0a-691a-40f6-93b1-27de169c9b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4b5c5c-a851-495e-a5c9-12909ef7ce74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2130acf1-b67e-4c61-b984-503c7b2c3daf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea76656-ae98-47a8-8924-460cf5a9c9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c723eae4-4e6c-4a02-bb51-7e6d477a4b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c219270-2cf7-4fcb-b458-d6320e554885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7365463f-e4f1-4fc0-b658-8dbe5e818711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e545275-0e9e-4088-8882-36102b908096",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c195ea7-7bda-46d8-88eb-5fe1561d67b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759c6359-69a6-457c-8b1f-98e44e3344f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0462db4d-c04f-4faf-b9f9-541708ec0d24",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604244b1-2ec2-438c-b990-940197d1e126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d6677b-9510-4866-a68d-f455fa8b32a5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6180d1-4bd2-4b45-91bf-2e9411f0a524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df9a3fb-bf79-4094-837a-1d23dafe8cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1289bc-9061-432a-9a28-2f12d2853e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e376ac24-9793-46bc-9da3-1b0e3f99a5e6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc68618-22b6-4afb-a169-f57bce9ca51a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "261c386f-3fd3-4f5c-9f09-aba805b62f72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e27cf5c1-e6b3-48d6-b1b6-fac3d617af4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c133e95-a7cb-4b98-a351-ee30230bba32"
                    }
                  }
                ]
              },
              {
                "id": "4ae2a764-0433-4932-80cf-3853c6b3c5c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db3304df-3c56-4efd-8647-fe981df865b3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a403412d-38c6-40cd-b53f-9ade5b6c8538",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0ace1ef9-72e2-403e-be01-be18eb7bf9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a25bf38-f120-43ca-bfe3-685968c33da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02c84edc-3dc0-46c1-908b-f4f05db8b3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8292b8-3b9e-44b3-a381-3c4553d28683",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981cef93-1e81-4d74-ab60-d9d1609ba36f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "723669d9-9882-40a2-a78a-544fa1945229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3650c2d6-adaa-4d14-887d-cbb968e3ec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31472e8c-8b81-49b6-90ca-207471fc7b11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ad628a3-cf93-44ae-ac42-2e2f55bb637b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "694df47e-0f5d-4268-a17c-bd079cc6c313"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc6da4c4-e11e-4ec8-8e68-b34deb9e7622",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22eea3d5-2470-43cd-b1e9-bed03bcb963d"
                    }
                  }
                ]
              },
              {
                "id": "97fe9795-0d05-43a5-9e88-7b2c4d637a28",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "494da800-22c5-4ff1-b7c6-969cdcc08da3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f490ac1e-88d0-4b94-806a-6a340faaa950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3e7f6a8e-fe9e-4ae9-b88d-9a4916313e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74210460-b836-4f64-9367-75ffb15edeaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b290ff84-dbdc-4b9c-ad9d-f701232b9a6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04bb3c04-fca6-4612-91b9-e64ae72a26e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce6098d5-d516-4eb9-9df0-97ce06bacceb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc3291b0-7d61-469e-8c66-a6a25a293a24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d72e5923-03bd-4538-aecf-13da8e82f41d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2037176b-3a83-4f0d-a701-a94d61a57641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee04ec7c-a3f7-4104-9cc1-4eab8397950b"
                    }
                  }
                ]
              },
              {
                "id": "52916ff6-3a19-4568-a885-150f01454368",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b375e31c-9c65-4b5d-b4a1-bdaaaa368428",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2f3270fa-20e1-4e38-9ff0-b9fab31eaa98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a91e3e1-d782-4c89-85b8-9ae17871700a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f55d871-1db9-48ad-a89f-2f80585ef7ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cd2350f-20dc-4762-a169-f59b18339cad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2d7a93f9-cdc5-42df-80f1-c00e9cf4be5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62196179-328f-41c9-ae20-79ad15c97d1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc6908e2-5238-44ae-ae74-e9d24308883a"
            }
          }
        ]
      },
      {
        "id": "6c81f947-01e3-4718-9006-caef61ae141b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f37cb765-bcc2-4038-b68c-23d4a3ef55da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a4917db-e1e3-464c-ace4-d3ff8cdd414e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cc81ecf-9b17-40d5-90d5-d8f4bdfcc409",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3d4fdf-d5a0-4b94-a235-67f9cc7844c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dcd6c3a9-82fe-4b63-babd-d2c4f8005892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7361d4ce-edbb-442d-8a97-530c8f7edb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abd49f69-d0fa-4a42-a166-8e586c630d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b9c45f-5697-46b2-aed3-5ef8fe29b379",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d52d82d-e8d5-4b9c-8a4b-059ce266131d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f458e931-4d2a-4cd1-9bcb-aabeb1def5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3188c7dd-f67d-4382-b46a-4f30f75ec204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b25d76b0-019c-4bd5-bb6b-da41ff149a9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2a052c9-0018-4480-88cf-547615aa30a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a3d7331-bb5b-4e16-84d4-73f61bf00b86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2f78ee9-1ed1-4f68-82b2-2ca206d500cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a64be449-0de9-42a7-8392-077fecb6dc71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01276a61-64cf-4653-b402-4f15aa5195fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "021627a9-cc34-48bf-aa0b-53daff01b478"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08526dff-9912-4f3e-bfce-418fae0c2171",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7dc5bea-d74d-4e44-a4b1-28590e605bb7"
            }
          }
        ]
      },
      {
        "id": "29c6bcec-6aad-446a-8359-7a8ed4962128",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fac917d1-100b-47ff-9b31-b716553a73de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58ea560e-cde2-4da5-bd05-c382bacaa6c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "188a771e-fd8a-4c3f-92f9-2ce3e4c1f5bd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff636b43-b287-4b18-be05-0ebf22079a03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b795b69e-e219-4669-a436-5cfeba478845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61ea480-05e1-4f34-9a6b-f5c534446d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "266e7885-bd83-44a5-9fa1-d0728a30ef5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3334dcd-cb8e-4072-9f0f-ebec0387b82d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fe2e93-519b-40d0-aa6e-039692fe26a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7c3d98-8f3a-4a04-9280-5a76d5809eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f885d89-7553-457e-893d-13d346217b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef23d596-1eb4-457c-85fd-8b733459f243"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3d6337c-7ad3-4572-8aad-5b7bad5c4d56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db1fdbe7-0723-4e36-8cdd-888ea609f51c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b780618-57c3-407f-a17f-e6f75592f94f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "502443bb-5068-4f5a-a474-36e5e762975f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fa824c9-d982-460f-b5e8-cf504728d984",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45e0ee5f-8321-4bc8-a132-94d51c1f004f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d4335f9-2e5e-438e-bda8-0c18763aa60f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fba3e04-4e48-4312-9867-25df1f640ee0"
            }
          }
        ]
      },
      {
        "id": "a9d071fb-0076-4215-bbf7-ebfd38b86ec7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1ae323e0-424b-4829-8673-48eaa7c64415",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72c74d90-49c7-4322-833c-ddc63f90d696",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d29778e-c15d-43c7-92cb-e901170f5ecc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8cb5b2-3dd4-465c-ae9b-0d1297a11cab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdf761fe-1ff5-4b7a-9dac-a6f2b4defafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34e03f-6482-4544-8cf8-6ebd058edfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a291b08-b4b8-4a1f-997c-138ae80871cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544ad13e-c5d2-4c54-ae85-c95e165113c2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045abb91-7f60-4d1a-8769-0b7856ab061b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d46c8b48-0adb-4d5e-9efe-4e1f8b12c51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40367f00-7d71-41eb-972c-a6d7596259e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4206ac7-43d0-4d05-a585-90937150c15e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b9fba73-583f-4b56-8521-f59e0ee002cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a15de6c-4220-4339-a894-4ed4f59bb1fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6101672-473b-45c7-9602-7aca9d5944df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a905cbc4-bec2-4aa1-ab46-4842a2724ed9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c5d5a13-f807-4d6b-819d-e0d369f10de7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e306b9af-18ed-4cfb-994a-1a6758f95101"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20fc27e2-1abb-4d4c-8e14-4ee93243d6f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fefe367-923f-4b1b-b8c9-88d4e791d812"
            }
          }
        ]
      },
      {
        "id": "d98eb6cc-d361-4c8e-911f-6c1ed697576a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb960adb-270e-4cb8-a11b-78a922a46be0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7275f24-dc41-4011-a6b1-6135fcbab7af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b377657e-fb66-449d-91f3-5952f06079fa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ce0026e-f1ab-4a26-accb-43a92b335a95",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81264b54-bfae-495e-845b-83877cb86b1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 40.94230769230769,
      "responseMin": 13,
      "responseMax": 326,
      "responseSd": 35.20359108732785,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679272870338,
      "completed": 1679272893460
    },
    "executions": [
      {
        "id": "071232d4-1c75-4cf3-b929-d81d250a25ac",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80cd61fa-1d35-4b3b-a67b-234ec68bf9cf",
          "httpRequestId": "62b08da2-58cb-48c8-b4d7-d82f07489dbc"
        },
        "item": {
          "id": "071232d4-1c75-4cf3-b929-d81d250a25ac",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "90bc09d1-e4bd-40ff-b89f-dd508a3aca52",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 0
        }
      },
      {
        "id": "3a5aff27-0913-47be-b6c3-64b861427481",
        "cursor": {
          "ref": "4cff78d9-fb39-46bd-af39-df0bfbba92a2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ca784068-7f72-4094-a813-083d2ddfc9d0"
        },
        "item": {
          "id": "3a5aff27-0913-47be-b6c3-64b861427481",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "75a7ea46-96a8-4bd6-92f1-dbcc63cebb79",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "74b09bae-5496-49c1-8bc8-c9b34e41c186",
        "cursor": {
          "ref": "7138f9ac-f194-4e94-bf7b-2f14f0926200",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f079753d-5a03-43bb-a1db-30cc057097da"
        },
        "item": {
          "id": "74b09bae-5496-49c1-8bc8-c9b34e41c186",
          "name": "did_json"
        },
        "response": {
          "id": "8b5b01eb-4e61-442f-88d9-1b45b6331b28",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7209f3b7-975c-4b0e-b43f-3330fef7950d",
        "cursor": {
          "ref": "bd05fb2b-74b4-409f-b075-ee19f36c7506",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a47479f3-658e-4067-a160-c7596e4087d0"
        },
        "item": {
          "id": "7209f3b7-975c-4b0e-b43f-3330fef7950d",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e4bbe1d-3af8-4561-8368-fbb55e6c44b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7209f3b7-975c-4b0e-b43f-3330fef7950d",
        "cursor": {
          "ref": "bd05fb2b-74b4-409f-b075-ee19f36c7506",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a47479f3-658e-4067-a160-c7596e4087d0"
        },
        "item": {
          "id": "7209f3b7-975c-4b0e-b43f-3330fef7950d",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e4bbe1d-3af8-4561-8368-fbb55e6c44b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5498a789-a66a-4256-8e17-7009ff91575a",
        "cursor": {
          "ref": "845ca303-cbd9-4345-857d-753edab416c5",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2750feac-0d10-4811-b57f-30057b16b954"
        },
        "item": {
          "id": "5498a789-a66a-4256-8e17-7009ff91575a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f94951f4-bb38-425a-80f9-0d6f1b5ee120",
          "status": "Not Found",
          "code": 404,
          "responseTime": 133,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18491b9a-9605-452a-b134-b1b796334843",
        "cursor": {
          "ref": "75f5bc69-6f9a-4ff0-9824-fcc5564dea83",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "446e62df-d9cb-4cf9-b339-5819a0dda62b"
        },
        "item": {
          "id": "18491b9a-9605-452a-b134-b1b796334843",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8e712446-01c1-4273-86b8-03e3083b5fc6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af96f3db-3095-461e-aaf9-7c74586d50d0",
        "cursor": {
          "ref": "8c38a841-259c-4c2a-8a26-c94524342b5b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b0c6be8a-d7b0-4593-b9c8-eef093740bfc"
        },
        "item": {
          "id": "af96f3db-3095-461e-aaf9-7c74586d50d0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "258a84b1-a22d-40d6-b3a2-75d37bcde9db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d1180-0fd3-4430-a011-1e97b2132b0c",
        "cursor": {
          "ref": "0a045e12-5da7-4406-8cdb-7b7a257a3c19",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e5bd3bc-42ac-4ad4-88a2-18a1ea2877fa"
        },
        "item": {
          "id": "070d1180-0fd3-4430-a011-1e97b2132b0c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "60a7a092-ac22-4e4b-a2d8-5c3938ce5248",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d1180-0fd3-4430-a011-1e97b2132b0c",
        "cursor": {
          "ref": "0a045e12-5da7-4406-8cdb-7b7a257a3c19",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e5bd3bc-42ac-4ad4-88a2-18a1ea2877fa"
        },
        "item": {
          "id": "070d1180-0fd3-4430-a011-1e97b2132b0c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "60a7a092-ac22-4e4b-a2d8-5c3938ce5248",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9618a5be-4960-4e98-88a6-40879df4ea8b",
        "cursor": {
          "ref": "73a7ab30-7e32-423f-900a-3428e0f34cc3",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8661f70c-c827-44e6-8680-085a90010304"
        },
        "item": {
          "id": "9618a5be-4960-4e98-88a6-40879df4ea8b",
          "name": "identifiers"
        },
        "response": {
          "id": "6ebc0eda-0ce7-4d2c-b5f3-d768fbb00bff",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b008027-c59e-493d-83c5-7a5a2e54ce31",
        "cursor": {
          "ref": "ebe0fd45-c7c7-4154-bba7-95bb19d9d30c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6c946802-cb84-4d17-87d5-e204e0f64f10"
        },
        "item": {
          "id": "6b008027-c59e-493d-83c5-7a5a2e54ce31",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bfb5bac7-c5e7-4505-b33f-66b945eb8bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b008027-c59e-493d-83c5-7a5a2e54ce31",
        "cursor": {
          "ref": "ebe0fd45-c7c7-4154-bba7-95bb19d9d30c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6c946802-cb84-4d17-87d5-e204e0f64f10"
        },
        "item": {
          "id": "6b008027-c59e-493d-83c5-7a5a2e54ce31",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bfb5bac7-c5e7-4505-b33f-66b945eb8bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87a4cf5-4ad6-447d-8a03-7d0346ce9b2c",
        "cursor": {
          "ref": "c96b38f8-70bb-436a-9064-c6dd46840cf6",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fe81cf01-7a99-4058-8560-513e3bb9fcda"
        },
        "item": {
          "id": "c87a4cf5-4ad6-447d-8a03-7d0346ce9b2c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3d5fc631-c18b-4e9e-8d5f-e1598b2f25a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27868d98-f966-4ca9-84bb-fac7089a844c",
        "cursor": {
          "ref": "876be830-ec6a-4006-8d71-018747f4a428",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0d297914-7efe-40e5-9e1b-198b6725ce8f"
        },
        "item": {
          "id": "27868d98-f966-4ca9-84bb-fac7089a844c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1dd01a6a-e2f8-48db-a723-ec89eb39ffff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e39e6a-3d04-49da-be0c-14dd663319e1",
        "cursor": {
          "ref": "02dcdec0-77c4-423c-877d-e09a51280176",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "13a2f9eb-4445-4498-aa13-11c1db1464d6"
        },
        "item": {
          "id": "79e39e6a-3d04-49da-be0c-14dd663319e1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "662c4d63-53f6-472f-a7d3-e4b1ed7d1023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9221c6fb-36ac-4bae-91c2-45b9c0ed8463",
        "cursor": {
          "ref": "42ec76b5-0ba5-4baa-abcb-d0a3639842f2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b838d3e1-efa9-4712-a9ed-4782ac1e880c"
        },
        "item": {
          "id": "9221c6fb-36ac-4bae-91c2-45b9c0ed8463",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9c0c9f4b-e1a0-4965-ab49-f6cf28c58a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6cae4b-9b18-4f89-b461-bb80b4a5a454",
        "cursor": {
          "ref": "187650e8-0a11-4c5e-bd3c-56164f4e13dc",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9c50ae63-0bd0-4da9-a973-594cdc02c29a"
        },
        "item": {
          "id": "4f6cae4b-9b18-4f89-b461-bb80b4a5a454",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "120186fd-646f-40c1-a6af-560f92a6c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182fd2f8-7ff4-4bbb-a94d-3ca2c552a3c1",
        "cursor": {
          "ref": "9b1edd93-87de-4229-a691-df6551412813",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f0e87b09-7f95-4a2e-8b08-26694896ad8a"
        },
        "item": {
          "id": "182fd2f8-7ff4-4bbb-a94d-3ca2c552a3c1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "da4f3aa1-3ede-4de4-8dfa-75fcd1d36af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f62f23e-cb2a-4ed1-8bba-6d1abfb62d29",
        "cursor": {
          "ref": "5f897380-2096-4ff8-9385-70e938e0ef52",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e6c52928-6621-48e0-8beb-043215c847cc"
        },
        "item": {
          "id": "4f62f23e-cb2a-4ed1-8bba-6d1abfb62d29",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b9ce7b76-9379-4bf2-8448-337b26e93bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2247ac99-cd3c-43b5-bf65-c070a49c2b70",
        "cursor": {
          "ref": "677f23b2-a986-417f-9ec1-f4ceca81175c",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c5ad4106-6a4d-4066-9160-a3b71687898e"
        },
        "item": {
          "id": "2247ac99-cd3c-43b5-bf65-c070a49c2b70",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d17c0e00-19b0-463a-a82d-20242c831e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47758539-1d17-4f4d-a9f5-0343bd903e51",
        "cursor": {
          "ref": "7d354575-43f0-4147-a75d-a652521ef18a",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "89696232-1ec1-4208-9977-6c54d05a1678"
        },
        "item": {
          "id": "47758539-1d17-4f4d-a9f5-0343bd903e51",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "60862fad-f6b5-4315-90da-778bd37da140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00268342-2c75-47b5-a6af-7e6a02e02301",
        "cursor": {
          "ref": "5c53db8f-6687-4cf4-8a07-d7c81e640860",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "695efbab-aeb7-4eee-893b-df2d611f8721"
        },
        "item": {
          "id": "00268342-2c75-47b5-a6af-7e6a02e02301",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ce2f041a-0dc6-4412-a799-eee3dd17d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6e595c-8a27-4560-8dce-ea4c2e822a99",
        "cursor": {
          "ref": "d99cb320-4bd2-4cc0-a7bc-ae803a6e2010",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b647ea16-7a1c-4731-9578-8d6712e313d1"
        },
        "item": {
          "id": "2d6e595c-8a27-4560-8dce-ea4c2e822a99",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "50370f17-1095-4b78-9159-b35a56db3765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbba82b-e680-4b91-a403-4790b28cb784",
        "cursor": {
          "ref": "641d9fea-0f86-46c5-84ee-ad37c69a9358",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be5a600f-6886-423b-818d-21d4a2b6b036"
        },
        "item": {
          "id": "edbba82b-e680-4b91-a403-4790b28cb784",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8e3ad8a0-4383-4934-b47a-f50f2733c6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeda7e21-88af-4d42-869d-aba3453ee3d0",
        "cursor": {
          "ref": "2bc71cdb-2005-492f-b24a-12802a080282",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6f5bd3e5-689d-435e-8826-e60bd9e314d1"
        },
        "item": {
          "id": "eeda7e21-88af-4d42-869d-aba3453ee3d0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b6b5d5f7-c981-4f55-a769-babef0b30afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ef9cf2-af31-41ff-8c3a-b8e165ab0c6a",
        "cursor": {
          "ref": "72ed60de-5ad7-4ede-a205-ff9a98d11ab3",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "112be902-54cf-43e9-8bd7-2171f0fa29e7"
        },
        "item": {
          "id": "04ef9cf2-af31-41ff-8c3a-b8e165ab0c6a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d003dcbe-5d71-4478-917a-9a5815dd013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed420dc6-f752-4734-a3ca-1f21963c4d7a",
        "cursor": {
          "ref": "8fa12283-8e02-4fdd-9625-c1b04fd2a461",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "26197261-27bc-4f52-b1c1-66a7b4ddbb8a"
        },
        "item": {
          "id": "ed420dc6-f752-4734-a3ca-1f21963c4d7a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f3febe5e-8b75-450e-b8f5-0880b14659ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f4505d-fc3a-43cb-9289-39f4270a47dd",
        "cursor": {
          "ref": "3dccaccc-ae81-493d-856d-a2cfb52d7ed3",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e4a6ccbf-b7e6-4d24-bdf2-11ad0900b8d6"
        },
        "item": {
          "id": "f7f4505d-fc3a-43cb-9289-39f4270a47dd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "663d105d-d0f5-4fb6-bdc8-123d15cd7fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf66be70-b5c6-485f-a2d2-945e7ae9d154",
        "cursor": {
          "ref": "357e6727-4cb0-4a5e-9b70-4a36191d8c97",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cb72688d-78ae-4c6f-9407-1951472fc4cd"
        },
        "item": {
          "id": "cf66be70-b5c6-485f-a2d2-945e7ae9d154",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1504d447-7b87-4ad7-9fd2-75d0fc310a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5a836c-e0e0-48f8-99a5-245f940601b3",
        "cursor": {
          "ref": "ee683af1-b5c4-462b-83d7-55827954ca4b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ed0b994c-cacd-4e10-bf7b-b16062368da2"
        },
        "item": {
          "id": "ff5a836c-e0e0-48f8-99a5-245f940601b3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5de5a0de-e566-44a5-8f5c-ab63e473d553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e897814-3ade-48a1-8eaa-2d49ed150f57",
        "cursor": {
          "ref": "897eb146-88ba-47b0-953b-e5708d52f54a",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "851113dc-cf43-46eb-b209-918de54bb5ef"
        },
        "item": {
          "id": "6e897814-3ade-48a1-8eaa-2d49ed150f57",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c832ea35-d162-404e-b585-b19f5af6a98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e68b2a6-d34b-4d82-94ed-ee8e09825848",
        "cursor": {
          "ref": "1d05afe2-19c7-4d93-ae84-330da93930d4",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f2ee2777-543c-442d-85fc-4d34cd1a285b"
        },
        "item": {
          "id": "1e68b2a6-d34b-4d82-94ed-ee8e09825848",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "95910bf4-8cc8-4ad0-bad7-4748b453e76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5009419e-3c8f-4e8f-9978-ddc5b05dbdc3",
        "cursor": {
          "ref": "b4dc5d69-99d0-4537-89de-8b5eb05b7f9c",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4c83b47c-fdb6-445a-8ed5-1ad8b8c714a7"
        },
        "item": {
          "id": "5009419e-3c8f-4e8f-9978-ddc5b05dbdc3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "10b540dd-e23c-4275-bc31-7da9959a6200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22407728-0854-46e1-bf44-e587abf50ac7",
        "cursor": {
          "ref": "aa64cc16-980d-46fb-9b08-d1447be18287",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "80540161-8d82-4d84-bd2d-63c447faa478"
        },
        "item": {
          "id": "22407728-0854-46e1-bf44-e587abf50ac7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "151c03fc-0958-4902-ad2a-deca6aa83d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02043b25-738d-4ece-9cad-580e754576e2",
        "cursor": {
          "ref": "65cc51ec-122d-42ab-8ab6-b3b41860625f",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d67d4002-5884-4e76-b6b3-ffbfb1e98408"
        },
        "item": {
          "id": "02043b25-738d-4ece-9cad-580e754576e2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e0b04f7c-86c0-45de-a449-40006b9b144a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e776eba-96b0-4d27-bd0b-1df79c4c8fb3",
        "cursor": {
          "ref": "fcfbfccb-c5ed-408f-b0ed-1f5b3ceae4f3",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "076b49e6-1e50-46ba-8e53-36bfe338897b"
        },
        "item": {
          "id": "3e776eba-96b0-4d27-bd0b-1df79c4c8fb3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0e7717d6-f318-4669-84b9-0e7b6ca0183d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72e9584-9f65-4c59-a90f-341cc6c33aed",
        "cursor": {
          "ref": "7be96c67-703a-4920-a2ae-dc003361ae07",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1279c3b0-2c8b-4c4c-8c4c-1fa1995d7ddd"
        },
        "item": {
          "id": "c72e9584-9f65-4c59-a90f-341cc6c33aed",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0ae87bb8-3057-4671-8212-b7a3f6f5c85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9847e915-d4a8-4386-b042-7a8c25a26a83",
        "cursor": {
          "ref": "dd757340-7617-4019-83be-a8cd1b54fdab",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c0b9a83b-1bab-46b3-8a8b-422b5690a609"
        },
        "item": {
          "id": "9847e915-d4a8-4386-b042-7a8c25a26a83",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b73c2254-fa73-46bf-aed2-4cb53bfb0d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf727cb-9c95-477e-a41a-63b4901364cf",
        "cursor": {
          "ref": "8c479f7f-637d-4516-8258-59851b77cbe6",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dfacd82a-c67f-472a-89e1-8776cac26a62"
        },
        "item": {
          "id": "cbf727cb-9c95-477e-a41a-63b4901364cf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "322bbee0-64d5-49f7-9f70-2361a34458b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8162466b-2ef4-430f-b4d9-e191fa374465",
        "cursor": {
          "ref": "4994d543-c91d-4a30-a1d0-520c32e10a53",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b885c4ad-5d63-4e46-af01-d442a4e89776"
        },
        "item": {
          "id": "8162466b-2ef4-430f-b4d9-e191fa374465",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6dd69d82-d9b8-45b1-a4d9-07484ec3216f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e85fbe7-e580-4350-bf68-dfb8d0a33c36",
        "cursor": {
          "ref": "ca0f513c-6d2c-4bc9-bfdd-b3d2afcd0d0b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b0d1674e-6f2e-4dc0-ab8f-f629ef1c3745"
        },
        "item": {
          "id": "4e85fbe7-e580-4350-bf68-dfb8d0a33c36",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0ce9d138-240a-42f8-bddd-73cd73aa3081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28704128-8b45-469a-a6b2-f423a4885703",
        "cursor": {
          "ref": "631771a5-81e3-4a8e-b9a4-43e7ee83eaf8",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "43cd1b1f-2169-4621-98aa-1e655974117d"
        },
        "item": {
          "id": "28704128-8b45-469a-a6b2-f423a4885703",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "18aea97b-5d20-434f-a07c-590aa2b2fc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c77958-9a6d-43d4-ba6d-b0782dfaf5e4",
        "cursor": {
          "ref": "2d72cddd-32ca-40c7-859b-95b75240cc6d",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "81337d3a-71a5-4112-98cd-d1c65475f063"
        },
        "item": {
          "id": "d3c77958-9a6d-43d4-ba6d-b0782dfaf5e4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7c9c24d0-379a-48d0-b556-3b741b046fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fbccfb-fc9e-4f5f-beb0-2ac29d1c1a54",
        "cursor": {
          "ref": "15945535-5df6-4c04-ab0e-61a28eebb32d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "251b1167-f622-4eac-8263-9e4658f5f448"
        },
        "item": {
          "id": "07fbccfb-fc9e-4f5f-beb0-2ac29d1c1a54",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bcdadbfe-9b44-48d2-99b0-88298e3f22b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f51b9c-9b78-45c9-8fa7-28d886e9cab0",
        "cursor": {
          "ref": "d20e868f-6fba-476d-8ad1-cd290bd4ff13",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b4eb3d84-7c40-4139-9d0e-ba0fa3ba6346"
        },
        "item": {
          "id": "c3f51b9c-9b78-45c9-8fa7-28d886e9cab0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "32613144-9573-4de2-9b8f-05af11e2f335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3581611b-0b1e-472a-858a-0753d98012b7",
        "cursor": {
          "ref": "fbc0a66c-90e1-4ed0-ad4f-3a71f6e4fcc3",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9bf1b6ea-bcfe-4b2a-8ade-c400eaf445ac"
        },
        "item": {
          "id": "3581611b-0b1e-472a-858a-0753d98012b7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3c732b36-0777-48c3-8e39-391668192e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a412e82-9056-44d1-86a0-800021516f7b",
        "cursor": {
          "ref": "fc97f1d3-b835-43c6-8508-09fe083a5e19",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9c490c79-827b-417c-8414-5a1ead3ca197"
        },
        "item": {
          "id": "6a412e82-9056-44d1-86a0-800021516f7b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "286b759e-d523-45ed-8000-b4df26753ad0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790fd73d-f425-4612-9746-a3b9c7f164e1",
        "cursor": {
          "ref": "b3741446-257a-483e-a331-0f271e8745a6",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b64c0841-53b1-4afd-8377-3aad90ecef22"
        },
        "item": {
          "id": "790fd73d-f425-4612-9746-a3b9c7f164e1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "10f03d02-d538-4348-8e31-77361c642475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c9c4b5-5f9d-437c-90da-b92a132161ad",
        "cursor": {
          "ref": "ddfb2d0c-afbb-4ec1-b633-aae80b12f955",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b85ebb17-ce23-41f3-9328-884670467f79"
        },
        "item": {
          "id": "37c9c4b5-5f9d-437c-90da-b92a132161ad",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "89995e91-9330-4bea-a30c-fa85299a57d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530b2f68-a796-4621-a23b-fadf1931fad7",
        "cursor": {
          "ref": "93909e4c-5bc2-42e8-8327-16522c4ad44e",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "23518c01-d747-4fc0-b6b4-9010ba0b09bc"
        },
        "item": {
          "id": "530b2f68-a796-4621-a23b-fadf1931fad7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "49ded2f5-23bf-4616-8ce0-24e409973644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d9ab86-65e1-47ef-b567-d8eadeb31241",
        "cursor": {
          "ref": "0af4fd65-7961-47a6-8dd3-a858b8a67dc8",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ecb10f09-a523-40dd-ab4d-a4e7bdc64563"
        },
        "item": {
          "id": "97d9ab86-65e1-47ef-b567-d8eadeb31241",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "57a7df6e-233f-4020-8bc3-335dff0dcc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ac9125-fea3-45d5-9202-970b2c501afa",
        "cursor": {
          "ref": "6f2c0744-aad7-44f5-ba95-b2e1927edb29",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21585bd4-01fd-4ea1-8478-74352ec95fef"
        },
        "item": {
          "id": "53ac9125-fea3-45d5-9202-970b2c501afa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5977cdf7-b551-4e92-8490-fdc7351c36ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76ea5c4-1e96-463e-a431-2552939a1f95",
        "cursor": {
          "ref": "8b364202-72c9-4d36-9086-1dfc661759d6",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2d3599d0-7fc2-4c13-ac07-038720a16a0f"
        },
        "item": {
          "id": "a76ea5c4-1e96-463e-a431-2552939a1f95",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aaa28875-354e-441f-84a4-c43726147feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36afa4a-8289-4c47-8255-dbcb82b94d9d",
        "cursor": {
          "ref": "34da396f-2d7f-40c3-a8ee-30f2a1d9ed3c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4d4492fe-6196-4885-9a1b-553e5c883c8f"
        },
        "item": {
          "id": "f36afa4a-8289-4c47-8255-dbcb82b94d9d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "613d23d7-8383-46b2-b074-74b1e6b449f8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a27ae7-3fe0-4e1e-ae40-6b1c0b0de145",
        "cursor": {
          "ref": "e892c133-e260-4c5b-ac1c-a97972ac28f4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "608099a3-239f-49d8-9873-eaf9484b9aee"
        },
        "item": {
          "id": "82a27ae7-3fe0-4e1e-ae40-6b1c0b0de145",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0dfbcdb1-3a69-4087-b12c-f0cc476163d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffa0dac-fb70-43a5-bc9d-acd28c93b2b6",
        "cursor": {
          "ref": "ddc2a444-c24e-4e34-a2ba-ecceb00edcf9",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c0f89b08-20f3-47e1-a072-7b6644c0643e"
        },
        "item": {
          "id": "cffa0dac-fb70-43a5-bc9d-acd28c93b2b6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "094d66bc-a394-43ea-90e4-aa20305186b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1442bdfb-d910-407f-b049-0d67a87e5501",
        "cursor": {
          "ref": "dd698feb-f0e0-4deb-b62a-63edd2e8d254",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9b1bac79-097a-4c91-9d63-29fa585ce2c1"
        },
        "item": {
          "id": "1442bdfb-d910-407f-b049-0d67a87e5501",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "366936c7-aebd-4a7a-9549-6e158dad10b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bc005f-1140-419d-ba6b-a192ad46e9a5",
        "cursor": {
          "ref": "fa0391cf-a4bf-4084-aaa3-262835185425",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1a07cf75-3e1c-4fa7-9a7d-3ae43786e567"
        },
        "item": {
          "id": "00bc005f-1140-419d-ba6b-a192ad46e9a5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "63c6d05b-60db-483c-9c0f-d7e92e892bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d74c75a-469b-4c58-ad1b-cd2f7cb02bec",
        "cursor": {
          "ref": "853d24cf-1d4c-4c6c-976a-c72e8184abc2",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dc66334b-8b53-47e5-9f61-353c490c0946"
        },
        "item": {
          "id": "8d74c75a-469b-4c58-ad1b-cd2f7cb02bec",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9e4eaf0c-c792-4546-8985-ac24eaacfd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb48b29-3b31-4734-9c32-2cb4b2df0a95",
        "cursor": {
          "ref": "7e56bddd-463f-4de6-9ec3-31a2bbde25ce",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2a8a152e-f16b-4904-8819-1621056c2619"
        },
        "item": {
          "id": "0cb48b29-3b31-4734-9c32-2cb4b2df0a95",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5570a5d9-0243-40ec-97db-a132bf7cf2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3210145-a1f4-4de9-aadb-04b492b1ddd9",
        "cursor": {
          "ref": "f1030d44-78d2-4a63-9e25-7a98d0e9c5a7",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "af998699-d67a-4b59-80c7-3935ec6115e6"
        },
        "item": {
          "id": "f3210145-a1f4-4de9-aadb-04b492b1ddd9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "789da8f7-5cf8-40aa-9b0b-3689da0309ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd93359-317a-4d9f-8fc2-cf02a151f85d",
        "cursor": {
          "ref": "31c0cf6f-bb8d-4910-b0c7-af3a9a153670",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d4d0be4d-2a5a-4aca-9739-2fc22eb4650f"
        },
        "item": {
          "id": "ecd93359-317a-4d9f-8fc2-cf02a151f85d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3cae7f43-3bf9-4bbd-9cc1-a873678d1876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2ccce5-2d37-4f40-8f65-3216b8061050",
        "cursor": {
          "ref": "ada656ab-625d-468b-8097-b3896692bbb1",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1ce09ebf-1206-4e17-9b65-3e84d43621da"
        },
        "item": {
          "id": "ee2ccce5-2d37-4f40-8f65-3216b8061050",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7ca02353-9e4f-4534-8692-ef5312ee2194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b4ec26-dd24-4580-b0f3-811159d5ed26",
        "cursor": {
          "ref": "c7c462dc-7413-479e-8c0d-91d12a4c9c4d",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f320d031-8581-4615-abb3-676e36e90114"
        },
        "item": {
          "id": "65b4ec26-dd24-4580-b0f3-811159d5ed26",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ad697949-0a9c-4f5f-9b6e-5c1eeb3e92dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a6cdb1-9211-4199-b558-aac63fe73f21",
        "cursor": {
          "ref": "8d59d6dc-7508-4117-9696-67089644e72a",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4a091556-1a3e-456b-98ec-114effc7ceab"
        },
        "item": {
          "id": "39a6cdb1-9211-4199-b558-aac63fe73f21",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "00e64a52-7e2c-47c2-adfd-91b00ca0eb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f037301-e82a-40fe-8ac8-cfcd7bb56288",
        "cursor": {
          "ref": "075c65f1-c4f3-4fc5-a1c1-b17ac6ed70ad",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fa54fead-32b8-43cb-b4fb-bd3ecaa91ed9"
        },
        "item": {
          "id": "8f037301-e82a-40fe-8ac8-cfcd7bb56288",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "16ee207e-54b6-4195-8203-69abb9f5cb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c245819d-4457-4e2c-b797-81c0cdbcfbc6",
        "cursor": {
          "ref": "bd6f1d1b-5838-453d-b21f-d16450ef3cb9",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "334e931a-6547-4e82-b04f-99249edd8b35"
        },
        "item": {
          "id": "c245819d-4457-4e2c-b797-81c0cdbcfbc6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "acfe02fe-af00-4ad4-97dd-82b435a09167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2406ba-34a1-4714-9d2b-01cfbef66142",
        "cursor": {
          "ref": "6774b0ab-9d58-4a72-aede-19f80a79b1c0",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a86709b5-29db-45e2-b791-6b2ea438f8ad"
        },
        "item": {
          "id": "0f2406ba-34a1-4714-9d2b-01cfbef66142",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b3650faa-e0d2-4618-b287-78e492ca7049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb88d8cd-19ff-47b8-b8f3-cce214e3f103",
        "cursor": {
          "ref": "632b73cd-200e-48c2-8822-1bcd14fc0784",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b374d1ac-00d4-4a0c-a866-2af3abab64d2"
        },
        "item": {
          "id": "eb88d8cd-19ff-47b8-b8f3-cce214e3f103",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6d53af72-284f-4270-8383-b1708de2f576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d70e2f9-df58-4a9a-8db1-5642ba5479e5",
        "cursor": {
          "ref": "8fcbe255-4b55-4df9-84c1-1cfc5e912148",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5d37fc37-c8a6-4369-a36c-426eaa95cdee"
        },
        "item": {
          "id": "6d70e2f9-df58-4a9a-8db1-5642ba5479e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9e0a0c11-8f0e-4167-9f09-a77e90ee7175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b74095a-832b-4e80-980f-6d2eb9aee096",
        "cursor": {
          "ref": "8545f630-8a70-4c63-a8dc-4fa570dcaef0",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9a41cae4-f066-40c2-b0ce-47c09603e8d8"
        },
        "item": {
          "id": "7b74095a-832b-4e80-980f-6d2eb9aee096",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0c4d3568-d2a3-49dd-bb43-33141b79559a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a2175c-c7d1-42f6-9573-c977fc782d93",
        "cursor": {
          "ref": "41c75de8-fb90-43cc-a03c-64039e6254b4",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4927c360-65d0-4a29-a382-f1c118105312"
        },
        "item": {
          "id": "57a2175c-c7d1-42f6-9573-c977fc782d93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e0b07f13-eafd-4227-81db-dc45a386d9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f9129e-5a47-4df0-857e-5405c8bdd0cf",
        "cursor": {
          "ref": "b273392b-57ff-420b-9878-36f264a6c1a0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6c08ecb1-2036-472a-85c2-cfa86935f09d"
        },
        "item": {
          "id": "61f9129e-5a47-4df0-857e-5405c8bdd0cf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "35c33176-8f1b-4981-88a6-9488e621bdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b45fc1-0874-4eb7-9e30-9fa2d2352198",
        "cursor": {
          "ref": "5343bf13-1fe3-496b-b736-053591831ee5",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "708ec9c2-4040-4314-9911-7db4e46413e2"
        },
        "item": {
          "id": "38b45fc1-0874-4eb7-9e30-9fa2d2352198",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b9d5fd9a-9ab5-4854-bc6b-99fd7bcb4c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c74e5b-8419-4a05-a826-4ffde0ef68b6",
        "cursor": {
          "ref": "ab5288c9-9c6d-435c-8f6e-56a7c65da40d",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "13b3b467-b09d-4f66-8aad-b0ccfded8bd2"
        },
        "item": {
          "id": "62c74e5b-8419-4a05-a826-4ffde0ef68b6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f374a4e9-a713-4b67-8d78-770e464d9e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac924bc-c550-4794-8586-73dd8155f2a9",
        "cursor": {
          "ref": "a6714b91-10aa-4d40-ad53-2fe628f374f3",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5ac4f649-1823-4998-90fe-0fadfb63510c"
        },
        "item": {
          "id": "4ac924bc-c550-4794-8586-73dd8155f2a9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "993623e0-4a7a-4a57-8a19-f4c1b697213d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d003d669-a2ca-417b-9d32-c2192e9b4f59",
        "cursor": {
          "ref": "0d252d46-4af9-4150-921e-d7e2ba51a2c5",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "39f088f5-34b6-4b00-9aa5-b110d260a974"
        },
        "item": {
          "id": "d003d669-a2ca-417b-9d32-c2192e9b4f59",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4ec2c97f-bc92-466a-8614-70c6d24dea2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c714fa-4fbb-4e93-91c2-4400e91617ec",
        "cursor": {
          "ref": "d61a1593-17cb-43fd-a074-5f8d78c291c5",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1fd8ba4d-da58-40a5-97b5-027af6c63250"
        },
        "item": {
          "id": "82c714fa-4fbb-4e93-91c2-4400e91617ec",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1c736f0a-e353-4054-b582-7d8e69ce11b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc89666-25b3-45bc-9178-2f63f323c5d8",
        "cursor": {
          "ref": "fad04bf1-db03-4099-8806-4fde2511801f",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0cb53ea2-102a-4c27-af4b-d3fc59d9c2b7"
        },
        "item": {
          "id": "2cc89666-25b3-45bc-9178-2f63f323c5d8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "516d8ffa-b632-4f2b-b253-2b0492e0bfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a116d7d-3b1e-4d62-ac60-de094f1ad385",
        "cursor": {
          "ref": "5500c750-6166-469c-812e-48bfa6aa3cd4",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dda45b1b-a542-4582-ac71-3b49212fd5be"
        },
        "item": {
          "id": "0a116d7d-3b1e-4d62-ac60-de094f1ad385",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bf646a69-7ca7-4e1b-a12f-61cd3ac68fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bca264-9ce4-4f7b-8f6a-8b95e3994aaf",
        "cursor": {
          "ref": "4e24aa41-4893-4984-b1ab-50a66590feb0",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aba8ada7-0d55-4df0-9036-9314e751cf1a"
        },
        "item": {
          "id": "99bca264-9ce4-4f7b-8f6a-8b95e3994aaf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0e02dc2e-8d70-4c21-a2be-6e837ab3fb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a098bf-7a04-4a09-8f30-a1a5d2d08c9d",
        "cursor": {
          "ref": "f93d83f2-417b-4cc7-ac92-ff9b2ad4d249",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "587da85f-70ae-4c35-987f-2e5d74794e75"
        },
        "item": {
          "id": "b4a098bf-7a04-4a09-8f30-a1a5d2d08c9d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0b152379-d371-44ed-a8d2-aa070589f46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8851221d-39db-4b2e-87de-e8f321333ace",
        "cursor": {
          "ref": "85a7deab-2e52-4bba-9b52-7515cbbeb4c4",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aca4ce1a-2e65-4ce0-b8c0-155fcfe905f9"
        },
        "item": {
          "id": "8851221d-39db-4b2e-87de-e8f321333ace",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2d2ebc59-191a-424b-b1dd-8be44f12187b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20cca84-6390-44e3-bf32-9cd87a16a75e",
        "cursor": {
          "ref": "b7362cf1-b6cb-47fd-a162-140f7ca13817",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d6f67e02-957d-4755-b60b-b0bc4f03afe0"
        },
        "item": {
          "id": "a20cca84-6390-44e3-bf32-9cd87a16a75e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a721bded-d3e9-405c-89ad-ba9297ecd9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3129b7-93c8-4102-9aca-f157c59e3905",
        "cursor": {
          "ref": "f697f0fe-cc53-43ff-a7f3-1e34438a8709",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "990b305a-a5ea-40c0-a75e-87f41c1d6c09"
        },
        "item": {
          "id": "dc3129b7-93c8-4102-9aca-f157c59e3905",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dd94a73b-d030-4f7d-9d36-5bbe3a949a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd8918d-2ee8-4087-8324-d3c8f0ea9aab",
        "cursor": {
          "ref": "1ff8442b-0c8d-4eda-b90b-a40a38790b21",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "66dde66a-7191-42c6-88ba-127e77f24018"
        },
        "item": {
          "id": "8dd8918d-2ee8-4087-8324-d3c8f0ea9aab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cc4456e6-2a62-4ad3-b271-1f276b33e598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bbbe04-fb20-43c7-b044-bf87e3e284e3",
        "cursor": {
          "ref": "19cb40bf-dbe2-4e0f-b3e3-5b29e1a3782a",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9a90c7ae-498e-4171-91bc-abb39ed1e7a7"
        },
        "item": {
          "id": "e7bbbe04-fb20-43c7-b044-bf87e3e284e3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "879ded8b-01f5-4407-917a-32c7d741feee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d8ff9b-0f2a-4d3a-9757-d6b3b58c3380",
        "cursor": {
          "ref": "68dec506-27f0-4041-a3c1-73e232d59f7b",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "207d4f66-6e84-4050-9a45-da2de748e3ab"
        },
        "item": {
          "id": "98d8ff9b-0f2a-4d3a-9757-d6b3b58c3380",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d1f8f35c-a013-4fc7-98d4-b18edb56bd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5186e6e9-c470-4138-9404-d02a61b12df1",
        "cursor": {
          "ref": "fde43782-42ea-4210-a29e-4a3944972beb",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "66bd2295-991b-41fa-9833-dfa56b46b1e1"
        },
        "item": {
          "id": "5186e6e9-c470-4138-9404-d02a61b12df1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "665f5dcc-0def-4b3c-9378-59699d5e5d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71be35a-2fe7-4531-b25b-db3cee725077",
        "cursor": {
          "ref": "63f8cbff-7e24-4ed8-aecf-5ab11432ca02",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "80f98eb6-0946-4437-876c-296ffcc7416b"
        },
        "item": {
          "id": "a71be35a-2fe7-4531-b25b-db3cee725077",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c994ccab-5aa0-4e3c-a91f-1070b7cb953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a717187-032a-414f-bc35-9d377f80d8df",
        "cursor": {
          "ref": "4cfeaec7-227f-4dc1-b887-3c97ac2f0022",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c1bd9628-19ae-42ce-bf84-2c3a9b569e80"
        },
        "item": {
          "id": "1a717187-032a-414f-bc35-9d377f80d8df",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a5b493fe-c08f-481a-b66f-84d5fdddecd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe6068e-1468-4ec4-a10e-7a84f9c0c5a6",
        "cursor": {
          "ref": "d03839a5-6220-42ba-8748-0a3a4354a24e",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fa2731e4-0edc-4b7b-9b24-fe58725cb197"
        },
        "item": {
          "id": "3fe6068e-1468-4ec4-a10e-7a84f9c0c5a6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "293b476b-dc16-401a-91df-458f0463d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc71560-9100-4533-bcb6-a0081c337f71",
        "cursor": {
          "ref": "77076509-e79a-402d-aec9-5aa0234e9568",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8a43adee-220e-4001-8700-9d3f122748e9"
        },
        "item": {
          "id": "ebc71560-9100-4533-bcb6-a0081c337f71",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dd55c3f2-4bc5-4beb-bd10-547b485a9df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66286d2d-5b10-441d-ae16-b74f22908015",
        "cursor": {
          "ref": "c18ad176-1f07-469d-ad0d-fde89cb68142",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a6a6fcbc-997c-4c7a-bab8-60dcbfb61515"
        },
        "item": {
          "id": "66286d2d-5b10-441d-ae16-b74f22908015",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "549ad97f-31b9-48aa-93d6-96335b4fe5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4052457-5f69-4bad-9762-c090c44395d1",
        "cursor": {
          "ref": "81e30838-e9c1-40e9-8f58-d884fbd2f61d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e078d7b-2b0d-4302-b427-b1d963c4ca9f"
        },
        "item": {
          "id": "a4052457-5f69-4bad-9762-c090c44395d1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c02fbc38-e911-4940-82fb-151b56d1392d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9abc8f-fbf1-4700-aa62-39d5485dc4b3",
        "cursor": {
          "ref": "075fa6c8-d102-471d-a98d-06d5cde64c60",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "08da2dc9-978b-4a7f-933a-d047ddcd9c71"
        },
        "item": {
          "id": "1f9abc8f-fbf1-4700-aa62-39d5485dc4b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7dc59730-a707-4949-8499-bd11623bf4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7630a0a4-df79-4d49-ad78-45e2a9585f70",
        "cursor": {
          "ref": "bab06161-f3b4-4063-8a1c-4308e38e5ab1",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "acac51e7-77b4-4069-9e3d-51e29c9bee4e"
        },
        "item": {
          "id": "7630a0a4-df79-4d49-ad78-45e2a9585f70",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a070be52-fbdc-48d9-9b4f-a9371d419098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7618df-9d03-4e9d-95a4-16b5c908279d",
        "cursor": {
          "ref": "571bf367-93e0-4073-a1f3-fa9a94d2cfdd",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f5bbb20c-6bfa-416f-aa88-0032a4b9b31b"
        },
        "item": {
          "id": "3e7618df-9d03-4e9d-95a4-16b5c908279d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1f8836d3-b79f-4d8b-8e4c-63f5f6912d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca5b80c-0333-4910-adaa-2ed8b55180b3",
        "cursor": {
          "ref": "ac2eabc7-f539-449b-a68f-1df3185a4f45",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ff50db68-f781-4e8e-9649-92ce9c7223f2"
        },
        "item": {
          "id": "5ca5b80c-0333-4910-adaa-2ed8b55180b3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a11a71d3-58b1-459c-8e58-33e2d37ffb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503e5f66-9ba8-4fda-9585-070f8d5ef417",
        "cursor": {
          "ref": "14ff41b6-da73-409a-900e-8f8204a71911",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3acf9611-31ce-49f4-be20-9b4f2935cd86"
        },
        "item": {
          "id": "503e5f66-9ba8-4fda-9585-070f8d5ef417",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7c06ef97-6f3a-468d-bd7c-709c2f204ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b84815f-d851-408b-bee3-5b59fb6c82c3",
        "cursor": {
          "ref": "1a035c41-9f7c-4163-8d67-055dc57ca298",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a8cb9330-4a10-4d50-bbca-a45c87afa94f"
        },
        "item": {
          "id": "3b84815f-d851-408b-bee3-5b59fb6c82c3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5c87a2ea-0d93-4c73-8ea0-0eeee121cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1222c1-5a76-457e-9e93-fa2c23f5fcf6",
        "cursor": {
          "ref": "90e335c1-75ff-410d-ad8c-0436511ccfb0",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "04bc2c03-cc20-420a-b866-58c2e3694ee8"
        },
        "item": {
          "id": "7c1222c1-5a76-457e-9e93-fa2c23f5fcf6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "85a74124-2df7-4736-ac80-99285cf66a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429bf835-257b-4c42-80ef-da18203e79ea",
        "cursor": {
          "ref": "3b7334bc-ca68-4278-9c96-0490d0efe8f8",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1f976319-b4bc-414f-a04a-5db4b9a3e1f0"
        },
        "item": {
          "id": "429bf835-257b-4c42-80ef-da18203e79ea",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4be975f7-4469-4372-8d82-0534d30bc4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc80f2f-246c-4dc4-93ba-2e65be5c1a60",
        "cursor": {
          "ref": "f87acd10-4a72-4d18-bfa5-d6c198c1d810",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0e986ea0-df5e-4994-890e-80606f717f61"
        },
        "item": {
          "id": "8cc80f2f-246c-4dc4-93ba-2e65be5c1a60",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d9b4c0c2-23d7-4087-8dbc-157d2913ea34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be7b319-b9ac-42ad-844f-faf192cac062",
        "cursor": {
          "ref": "dbabaabb-3927-44ea-8a23-7f6c5658252f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "33bbef71-b572-4149-8d44-9f095e9c013e"
        },
        "item": {
          "id": "4be7b319-b9ac-42ad-844f-faf192cac062",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5c206863-bfe7-46cd-9aba-fd7a474c0633",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 132,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f805142b-3223-4c4a-bd10-6adf565b183c",
        "cursor": {
          "ref": "999d68da-e0a8-49c9-934f-951048a2336d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c99236bc-2671-44b4-9d54-108f14610ea2"
        },
        "item": {
          "id": "f805142b-3223-4c4a-bd10-6adf565b183c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6436d127-7cfe-4d95-93ff-6c26e8a8224f",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "49116733-3027-4d49-97a6-7aebbe270a88",
        "cursor": {
          "ref": "4846f364-bcc5-456d-86bf-a8f74adef184",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c45e0f5f-c73f-4918-ba26-480a910ad8b0"
        },
        "item": {
          "id": "49116733-3027-4d49-97a6-7aebbe270a88",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "afbbb0f1-10e1-4d48-81a5-762836dd245b",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58c2d69-09ae-4d99-9235-3e9216b59982",
        "cursor": {
          "ref": "854a5626-5d95-47b9-a0b8-cfdd8c3f4254",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "45b8d577-725f-4c39-8f43-385ad01393a5"
        },
        "item": {
          "id": "b58c2d69-09ae-4d99-9235-3e9216b59982",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0f1afaca-df12-458b-ae58-a30bae58ac76",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "148dfda2-4cf1-4af2-9da0-b6c5def914b9",
        "cursor": {
          "ref": "26f04fe8-6efe-4e15-9276-0e1f4acc855f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "db280a95-803e-464f-8b89-9dafd7ede8c4"
        },
        "item": {
          "id": "148dfda2-4cf1-4af2-9da0-b6c5def914b9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "12910553-d0ca-497e-82a0-56fbd814fbab",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5103c0-019f-4363-ba6d-71b0f360ac6e",
        "cursor": {
          "ref": "80812a79-b84e-47e3-a7c4-b013b77b1f9e",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c96349e-ffbe-4746-9622-5842d6d3643b"
        },
        "item": {
          "id": "2a5103c0-019f-4363-ba6d-71b0f360ac6e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c2525d22-f856-4743-9813-b9794a73cba8",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b833d19-42ae-48cd-8f13-5fdfcfa1ad74",
        "cursor": {
          "ref": "eaf58e2e-b8b1-463c-a73f-c5415593438e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "911a12c7-8dd0-4643-af2f-0899d4bc3228"
        },
        "item": {
          "id": "9b833d19-42ae-48cd-8f13-5fdfcfa1ad74",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b18d981d-d6eb-41cc-bfc0-c8820abfb7e9",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3b12ef-88ad-434f-bbcc-ad51c3447a8d",
        "cursor": {
          "ref": "0911e3e7-9815-4ba6-9a89-449bca3967c0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0785afbf-79a2-4427-8e4e-e98a559e949e"
        },
        "item": {
          "id": "ca3b12ef-88ad-434f-bbcc-ad51c3447a8d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3a7bc67b-8492-4253-9a7a-18453a171e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3b12ef-88ad-434f-bbcc-ad51c3447a8d",
        "cursor": {
          "ref": "0911e3e7-9815-4ba6-9a89-449bca3967c0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0785afbf-79a2-4427-8e4e-e98a559e949e"
        },
        "item": {
          "id": "ca3b12ef-88ad-434f-bbcc-ad51c3447a8d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3a7bc67b-8492-4253-9a7a-18453a171e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3116a839-3ce1-4deb-b153-e4c79fa9fb29",
        "cursor": {
          "ref": "a0cd871a-66cc-4e4d-a21e-9bf909bec304",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "64ffaa04-5102-4bcf-91c2-7996d2a63067"
        },
        "item": {
          "id": "3116a839-3ce1-4deb-b153-e4c79fa9fb29",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "961c2777-c373-4006-8d44-8bbe5a403d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912ebe54-ef50-4a21-a029-36850a122366",
        "cursor": {
          "ref": "5b02cce9-7fd3-4e5a-a3e0-32fef8bc5e39",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3bee3e48-57e5-41dc-91d9-75275dc54a4e"
        },
        "item": {
          "id": "912ebe54-ef50-4a21-a029-36850a122366",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ff68d9dc-bfbe-4d55-8246-a84983566c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9477277b-7c97-4b9b-8218-43fe0022febb",
        "cursor": {
          "ref": "ae98e481-de32-4565-93a5-18add6bd0b93",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dfad3a2f-af01-4471-a052-07c1c9a262af"
        },
        "item": {
          "id": "9477277b-7c97-4b9b-8218-43fe0022febb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "959f99ef-2291-4e20-9dfe-2e07947cb195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2178d2-1675-42ac-8ddb-4231b7a09f73",
        "cursor": {
          "ref": "f354d985-0e0f-4297-8627-3f077db41ea7",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2de51987-34aa-4b92-b3af-f3e9a3237c92"
        },
        "item": {
          "id": "9b2178d2-1675-42ac-8ddb-4231b7a09f73",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6cfecce9-935e-44c8-8eff-a28efe49e52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eb4e87-6ded-437d-b8ca-0ff227f04c1c",
        "cursor": {
          "ref": "aec453e7-96a4-4642-9ae9-c882ea408caf",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a59e967a-8c79-4800-b257-7d27d61c2042"
        },
        "item": {
          "id": "b4eb4e87-6ded-437d-b8ca-0ff227f04c1c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f87b3203-f767-406c-b3bd-94e3668f971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7065197a-5554-4a6b-9971-c1beae426a6a",
        "cursor": {
          "ref": "a7e76fef-3aca-4d98-bb46-becf3bbd7115",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f593d67d-e3ce-4849-8b45-0f14d4f3160f"
        },
        "item": {
          "id": "7065197a-5554-4a6b-9971-c1beae426a6a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6bc53a3b-67b9-4d1b-8467-a28efd5909b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e170cfda-6c68-43d0-8e7b-3d3c4316ec73",
        "cursor": {
          "ref": "89f791dc-21e1-4130-91f6-70cc239bfbe2",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9fc7ac8a-0fba-46a4-8e2d-ced7037a5cb8"
        },
        "item": {
          "id": "e170cfda-6c68-43d0-8e7b-3d3c4316ec73",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "639342b7-fda2-479d-b22f-80d72c9bce79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c71c6cf-3017-4a7e-a088-31358cd96abe",
        "cursor": {
          "ref": "eecc3f18-5f91-45e2-ae78-1b14e3bf867b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a65121c7-8d50-4740-93cb-d033cd29c60d"
        },
        "item": {
          "id": "1c71c6cf-3017-4a7e-a088-31358cd96abe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ecef9acc-c5ec-407e-8971-e854811cb6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3641b3-94b3-491f-bd19-c06ee27e64db",
        "cursor": {
          "ref": "10881707-927a-4b10-ad52-7500c4918693",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1f81ec61-0394-48a1-a2f4-ad28eab4fca7"
        },
        "item": {
          "id": "3b3641b3-94b3-491f-bd19-c06ee27e64db",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "680fd9f2-edd2-4497-b5e3-1e33c5cd7781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe32c4c-6ce4-4320-a34e-60cffacff258",
        "cursor": {
          "ref": "9f8e8f48-ddb8-4a81-89ab-db6ad69f37ed",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "80d6bb73-16f3-4f25-bf61-afdb27f91093"
        },
        "item": {
          "id": "cbe32c4c-6ce4-4320-a34e-60cffacff258",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c6f8fd7-04c7-4c13-9af1-43a723e42107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce70422-7d91-4d53-bc0b-9d5f9ea2d4d8",
        "cursor": {
          "ref": "572ba7d3-24c9-4d04-9509-fb8d75eaea07",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6bcc69a5-1ab0-4c7f-b6f4-07b06cddda80"
        },
        "item": {
          "id": "bce70422-7d91-4d53-bc0b-9d5f9ea2d4d8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "02d0e4d8-5045-43a8-b30f-30d86291bd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df451c86-c1b8-4400-b8a9-d8afd09ba89d",
        "cursor": {
          "ref": "bf0b2399-e4c3-4302-96d3-2b23a888b23b",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "45d8154f-39c9-40ce-853c-0093292b8bd9"
        },
        "item": {
          "id": "df451c86-c1b8-4400-b8a9-d8afd09ba89d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4896d1ee-f102-416a-8f5d-223273e12a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d93adba-49fa-4f2c-bd50-63d6da6767cb",
        "cursor": {
          "ref": "75c9e1b4-d950-4683-b454-16d08ce4269d",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d4a9f340-a523-4c4d-a17f-7c6343c572f7"
        },
        "item": {
          "id": "5d93adba-49fa-4f2c-bd50-63d6da6767cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a844c2a-e5d5-40c3-b379-0212d103f604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880fe9e6-e1d4-4b9e-baf8-24b8cf8044b7",
        "cursor": {
          "ref": "7a8447a3-f08c-4006-8b50-df9eb395d372",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e12de378-3f0e-4aa6-aec7-37df72490d74"
        },
        "item": {
          "id": "880fe9e6-e1d4-4b9e-baf8-24b8cf8044b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a7869fc9-1117-43b7-8563-99b60f366d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1b8ba2-0c02-4777-90b9-745561ae6587",
        "cursor": {
          "ref": "c1b0e4f4-bc0f-4b98-b55c-e02a69da516a",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f2c8e3ac-8693-42d9-9069-c1c1abed3713"
        },
        "item": {
          "id": "ad1b8ba2-0c02-4777-90b9-745561ae6587",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd63ca93-de9a-4f22-b97f-538a6721f917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cb659b-ffc7-462a-bc47-b6a9c0ab5f16",
        "cursor": {
          "ref": "de17f6a4-cf9e-47ce-b403-d1ed981f6b0f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b1baac8a-2c00-4cf2-8757-a186cc864e96"
        },
        "item": {
          "id": "f7cb659b-ffc7-462a-bc47-b6a9c0ab5f16",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d4d57865-0d78-46cf-83bb-f7fa1a99ecdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74fd954-c341-4bef-aa8c-de65555f60ca",
        "cursor": {
          "ref": "2f2d3263-f707-46ee-a29b-34180b2c872f",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a7a09283-2825-4070-b909-5c2d81a241a3"
        },
        "item": {
          "id": "d74fd954-c341-4bef-aa8c-de65555f60ca",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a087880a-9d82-40fc-ab49-822d99d515df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dee3d4-9294-47c5-ad16-4d1382150074",
        "cursor": {
          "ref": "1eb216ea-d34a-406f-a3fd-dd910e310252",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ae750f1e-9a91-4204-b057-db4c7c6ff662"
        },
        "item": {
          "id": "78dee3d4-9294-47c5-ad16-4d1382150074",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81cea087-15ca-4896-8969-0e198447198e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140b166a-d4b9-4e92-8cb9-d782de1d554d",
        "cursor": {
          "ref": "3972a9f6-943d-4c81-8571-d83ff06ed97e",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ab91d124-8a0e-4a39-b23b-6327ace6231d"
        },
        "item": {
          "id": "140b166a-d4b9-4e92-8cb9-d782de1d554d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "44b87316-c099-49a3-8a0a-4264ab99b12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1214875a-2035-43ce-b97b-5042b7205b6a",
        "cursor": {
          "ref": "412f2387-0335-4e00-b691-1ccf942ae642",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e4df778-3dd4-4935-b38f-84799cf182f8"
        },
        "item": {
          "id": "1214875a-2035-43ce-b97b-5042b7205b6a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "92aa4047-cd5d-45e9-91ff-6a4e946b15c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7991ce90-93fe-4d86-9a68-34518c4c7c45",
        "cursor": {
          "ref": "7ed7f97d-0710-4529-8eae-ac1e95ceca11",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2b47afa8-df16-4771-a48a-7e870931357a"
        },
        "item": {
          "id": "7991ce90-93fe-4d86-9a68-34518c4c7c45",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7b0fc408-52ea-450c-be0f-d41e0d9ba770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25858e69-2be3-43d4-ac4a-73cb2910ba91",
        "cursor": {
          "ref": "f113ce68-46ff-4f1d-8f27-183c4aa63eb5",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d155bce8-f5c9-45c0-8425-bfdb40976990"
        },
        "item": {
          "id": "25858e69-2be3-43d4-ac4a-73cb2910ba91",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a3af887-cb2f-46a1-a542-56430f13f97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef0d998-f082-4e68-ae5c-4a8a73a46084",
        "cursor": {
          "ref": "9329a01a-ca27-444d-aa16-6e7a382538e3",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2fc69502-f40e-41e4-a62a-dbc397a0fce5"
        },
        "item": {
          "id": "4ef0d998-f082-4e68-ae5c-4a8a73a46084",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cf7b3b9d-4e43-4187-96f4-c0e3cb9eec33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8b2dd3-2df1-443d-bb00-b24f3de79f98",
        "cursor": {
          "ref": "1603f392-2198-4805-aaac-352c21032875",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e5f81e0f-13b5-45f2-94f1-a3635488dd82"
        },
        "item": {
          "id": "ba8b2dd3-2df1-443d-bb00-b24f3de79f98",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ccf6d8bd-b025-43a8-9185-04a0e61ad40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946b4c83-ed06-429f-a9c8-2960f9a1b402",
        "cursor": {
          "ref": "44c262c5-a2e4-4715-a022-58ce096a845f",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d8fc150b-fe6b-44cd-84b2-522dcb7cc641"
        },
        "item": {
          "id": "946b4c83-ed06-429f-a9c8-2960f9a1b402",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "10a7d816-9cd0-40e8-b19e-399e755038c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577db9b2-5e17-4c89-98b7-ac993e3d9adf",
        "cursor": {
          "ref": "2377eb32-d28f-4912-bfc6-ac2f1fdef38a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f37b2a51-025b-4532-a65e-92baf0b87ad7"
        },
        "item": {
          "id": "577db9b2-5e17-4c89-98b7-ac993e3d9adf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b991c4d-7f5c-44d2-89bf-745ec36071e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dc96ac-82c2-4e64-b614-562015c88cdb",
        "cursor": {
          "ref": "d7d9f916-02cf-4cc6-b442-f8c3c45c206b",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "461dea3e-4b4f-46c4-84cd-630ca885406c"
        },
        "item": {
          "id": "f9dc96ac-82c2-4e64-b614-562015c88cdb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "630d28b0-0ae4-40b2-b9d5-227e83adab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199b714f-b286-4473-a142-2a2f9e33511d",
        "cursor": {
          "ref": "43487cc5-f146-4803-888d-ff080c05408e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4e328e9b-5411-4fb8-bef7-495d02ef471b"
        },
        "item": {
          "id": "199b714f-b286-4473-a142-2a2f9e33511d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2439684e-b117-4b41-b2d2-5d0bdd12e6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53101e4b-65ff-4aac-b522-47280416f3a3",
        "cursor": {
          "ref": "d5583a46-dd72-4a4a-9a42-1e9c5840b906",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5dddd654-dfc5-411a-a5f3-aeccf29eeed9"
        },
        "item": {
          "id": "53101e4b-65ff-4aac-b522-47280416f3a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8364c0ae-d032-4eee-a467-2d04ce05025d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de346081-5e17-466c-b3ad-8393d5ea693b",
        "cursor": {
          "ref": "080e1268-19e0-4885-85e1-84d74305b8be",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "32436551-06c3-4aa9-adb4-7c9f449ef671"
        },
        "item": {
          "id": "de346081-5e17-466c-b3ad-8393d5ea693b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5ac42f0f-98c6-47ee-aec3-3180e85df7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072d85d8-eea9-4c88-a886-a3170cfcd783",
        "cursor": {
          "ref": "148a0fcc-d56a-44a8-b247-44877e41fd67",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ac80c7df-26ce-49ae-95c9-d2332f302f55"
        },
        "item": {
          "id": "072d85d8-eea9-4c88-a886-a3170cfcd783",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c2e8871d-2cc2-4762-9a31-3aaa407fa6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b8c9e0-73e1-46f4-a030-6e35400e38c0",
        "cursor": {
          "ref": "ad4579d0-fff0-4e4e-872e-1755704e8628",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f971d24d-ecb2-4585-9755-d9346c038960"
        },
        "item": {
          "id": "02b8c9e0-73e1-46f4-a030-6e35400e38c0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e2dea058-e26e-4c4a-9f60-e2ec8844783e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ecedd3-6ec1-458c-b929-be8ac17b628e",
        "cursor": {
          "ref": "c4b02ffe-94a4-478f-a09a-b322fc912f33",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c50f2860-a481-4ab5-828f-6fd03c1f3136"
        },
        "item": {
          "id": "d6ecedd3-6ec1-458c-b929-be8ac17b628e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "715328ac-6af7-484f-ba5f-3368171b9c19",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15383c-a48c-41ba-ae80-2779b2852ddb",
        "cursor": {
          "ref": "7940c966-2a1e-4140-be01-cd8296d424dd",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9ee141b-2c75-4419-b2f9-639b96e92f50"
        },
        "item": {
          "id": "7a15383c-a48c-41ba-ae80-2779b2852ddb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4a5890b1-843b-46a6-af8f-d7bc27e84941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15383c-a48c-41ba-ae80-2779b2852ddb",
        "cursor": {
          "ref": "7940c966-2a1e-4140-be01-cd8296d424dd",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9ee141b-2c75-4419-b2f9-639b96e92f50"
        },
        "item": {
          "id": "7a15383c-a48c-41ba-ae80-2779b2852ddb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4a5890b1-843b-46a6-af8f-d7bc27e84941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804f6041-a7b8-4b63-ba97-9df4ef8015e9",
        "cursor": {
          "ref": "44f93be1-23eb-4787-8a97-881d668c2d3f",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4add2422-2f0c-4e2c-acbf-b128584fcb8a"
        },
        "item": {
          "id": "804f6041-a7b8-4b63-ba97-9df4ef8015e9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "86db8a48-8b80-4b9c-87b0-daa622e1f80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07664eac-2d04-42da-ae7f-f404dc172c61",
        "cursor": {
          "ref": "68678ac0-05ec-4676-9df8-7143790d6ad7",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7398a84f-e913-4f9a-adf6-9f94f7c2d7ee"
        },
        "item": {
          "id": "07664eac-2d04-42da-ae7f-f404dc172c61",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ea8f6548-5353-4f9c-babe-f7a8127c5ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95174cd7-0cfb-4d18-a90d-2958f64a90d7",
        "cursor": {
          "ref": "1823ebd1-eb4b-4bea-883b-d112ed7f1b83",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2f2e4783-91ce-4f9a-af04-29f1d7a3a406"
        },
        "item": {
          "id": "95174cd7-0cfb-4d18-a90d-2958f64a90d7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5cee939e-85ab-4e28-9ae4-c95efaa338e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d8d7ff-e6d4-493d-a437-2ae20da4e951",
        "cursor": {
          "ref": "72a07e9e-6d4d-4a88-829e-907665e4e5a5",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5e9a21a0-c682-4b1e-a7bd-184575dd9fd9"
        },
        "item": {
          "id": "b2d8d7ff-e6d4-493d-a437-2ae20da4e951",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "be3c3634-bb6e-499d-bf88-8c887d662e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e52ab-3f82-4000-9265-c8ceaf1858de",
        "cursor": {
          "ref": "9f37e289-712f-4923-bc8f-c8a3ac2fc6a2",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7967acca-85fd-4c38-9edf-4a891dc2e276"
        },
        "item": {
          "id": "147e52ab-3f82-4000-9265-c8ceaf1858de",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "76ca4d1f-8f47-42c5-a040-b299069b03e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc87843-75a2-41a9-8ea9-8f6b03f9bfdc",
        "cursor": {
          "ref": "3b6902f2-e530-49de-be9e-dec8e6a8836b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "33470166-74cc-472e-901e-b4e9f25219fc"
        },
        "item": {
          "id": "efc87843-75a2-41a9-8ea9-8f6b03f9bfdc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5c6375ca-a7db-4576-bf2b-2f03c9496990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65402a1-fb94-4228-bb85-e9d4a73e9931",
        "cursor": {
          "ref": "1b5ee3ad-7f2c-4ff8-a6b5-94a7945ffb1c",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aa5da892-3808-4ef1-901d-fa7e56fa5c4f"
        },
        "item": {
          "id": "b65402a1-fb94-4228-bb85-e9d4a73e9931",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fa2210e8-064b-4047-9095-12ec2c5bef17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace7d5d6-c56b-41ed-ad21-01ae531490c2",
        "cursor": {
          "ref": "2d4ffc38-b831-4f2f-a891-f5bf7d6b79b1",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "521398cb-b606-4289-ba05-4423f3c62a0e"
        },
        "item": {
          "id": "ace7d5d6-c56b-41ed-ad21-01ae531490c2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "adb53eac-0343-40c0-a250-e5f91952b2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cb7f9c-a314-42bf-a061-27ae0940599e",
        "cursor": {
          "ref": "8f6cd013-a186-4931-ae30-894582c37210",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7315b28a-013a-4214-b36c-4c75d99572d5"
        },
        "item": {
          "id": "e1cb7f9c-a314-42bf-a061-27ae0940599e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "269e68ae-9e55-4286-9c34-a94aee12e2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582d1f6e-8391-4f3a-9df2-274c2c06a212",
        "cursor": {
          "ref": "8a188842-a06b-4665-b8f5-b36d96ac1d5b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "55ee9f88-99bc-41bc-9209-28019af1e465"
        },
        "item": {
          "id": "582d1f6e-8391-4f3a-9df2-274c2c06a212",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6bd6fdaf-3a43-47fa-b4db-716915436e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38057363-c8a1-4255-a967-b0c0b1ab1be5",
        "cursor": {
          "ref": "1aa241c9-9c0f-45b5-b179-5d44e86b448e",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bfde5a5f-b07a-4870-a082-a78620f7d9f8"
        },
        "item": {
          "id": "38057363-c8a1-4255-a967-b0c0b1ab1be5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1a72348e-9b2e-4f73-8119-5e1806899d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b893998-af35-43dd-8b9b-ec1530aa0912",
        "cursor": {
          "ref": "12b4bd7e-e808-44ba-a11b-788a858633df",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "552b36ee-92ee-4e83-be80-89160e6aca9f"
        },
        "item": {
          "id": "0b893998-af35-43dd-8b9b-ec1530aa0912",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "723edf2a-a6d4-4f76-a474-371a9219f98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722c6d25-184a-432e-84ea-c3d6b6ad17b8",
        "cursor": {
          "ref": "c7b32bfd-a1c1-4273-bfcf-581e97e8fb94",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ef668f39-c25e-44e6-adb8-b7941b819f45"
        },
        "item": {
          "id": "722c6d25-184a-432e-84ea-c3d6b6ad17b8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "16af12c1-b7ba-4db1-8263-22dfbfb91d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06d1959-9ac4-45ed-8f3b-320494480099",
        "cursor": {
          "ref": "e5b8dd0b-8142-4b82-8a97-ca273fa9be03",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6c131206-0ef3-4549-b21d-93029c9f36ba"
        },
        "item": {
          "id": "b06d1959-9ac4-45ed-8f3b-320494480099",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9b12ea43-6e77-4ba5-ada1-5a70d62c09b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e86aac-6f49-44cb-a6e3-11efaa234354",
        "cursor": {
          "ref": "29fe9343-3f20-4c2d-a90a-15160d559f93",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4c39655b-3e27-48a5-b803-23b21ef342c9"
        },
        "item": {
          "id": "65e86aac-6f49-44cb-a6e3-11efaa234354",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "01e7635e-77b0-4402-a69f-a1045dfc2352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ae64d1-21b3-48bf-a818-fe8802e9a596",
        "cursor": {
          "ref": "eb116586-f11f-463a-aa8a-94f0823b4d93",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8acbb64d-bd9d-471d-911d-92a59ff4d978"
        },
        "item": {
          "id": "28ae64d1-21b3-48bf-a818-fe8802e9a596",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "26967650-d9dd-46ff-b72f-fe7a256bfd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddab9b2-3107-4d5d-ab45-d947217d55bb",
        "cursor": {
          "ref": "009ca7ab-024e-4dc2-bc12-25735ed0b8ab",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e9195b22-7f73-40e9-a8cc-3ce84ffd34db"
        },
        "item": {
          "id": "4ddab9b2-3107-4d5d-ab45-d947217d55bb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fb63a7d5-c4f5-4f64-bbc0-36aa00c7a310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb60366-feef-4b2a-b4a4-2d929c5301b3",
        "cursor": {
          "ref": "42f60de5-35b1-491a-8b70-e34d90a117e1",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0b063d33-2038-4b78-87a6-d92a9985dec0"
        },
        "item": {
          "id": "ebb60366-feef-4b2a-b4a4-2d929c5301b3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1b440e2f-d958-45d4-9dc0-cc85bcf05f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f437aac-6f65-4e74-9d34-e97dc7c8030e",
        "cursor": {
          "ref": "0a3f50a6-86a9-41c1-b1d7-13f87cc7d324",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18618dee-0a1e-453a-b849-d12bf528e457"
        },
        "item": {
          "id": "0f437aac-6f65-4e74-9d34-e97dc7c8030e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e95802b8-a6c1-4483-97b6-e3e189aa9181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ec25c2-994e-42e6-919b-dd15b716160b",
        "cursor": {
          "ref": "da45c085-4566-45ad-9f37-0c2db2feb669",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "eb5d68aa-afbc-4787-93d0-0c52cf12d605"
        },
        "item": {
          "id": "79ec25c2-994e-42e6-919b-dd15b716160b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "165c670b-a1b4-421e-9f61-d63b7cb38ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085c05b0-27a9-4d86-bf18-9aea6902902e",
        "cursor": {
          "ref": "5db45a52-f414-4b5f-920d-397cd97ff906",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "305b6a93-4efd-4852-8213-65d6af2ebce6"
        },
        "item": {
          "id": "085c05b0-27a9-4d86-bf18-9aea6902902e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a94235ec-15dc-4cd8-bd56-d3e5003ad6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5dc6b2-117b-4f77-9499-072b6ecc92ed",
        "cursor": {
          "ref": "cd72c2c0-3915-4f65-82dc-f92b385cb849",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9987098a-55db-446e-851f-c92f461abc1e"
        },
        "item": {
          "id": "8a5dc6b2-117b-4f77-9499-072b6ecc92ed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6bfb2d71-63e7-46b8-8a61-dd4bdc772696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1e4968-a3ec-4860-9e05-6297405fe821",
        "cursor": {
          "ref": "0b6dc6f4-dfab-4276-b0bd-399e9e7f96b6",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c56e921f-4484-434a-ad71-daacf460381f"
        },
        "item": {
          "id": "0b1e4968-a3ec-4860-9e05-6297405fe821",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "93b7c8a0-f6cd-4403-8276-5ca480b5ed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a793a774-0489-4979-9cbd-0cdfe1ae09d8",
        "cursor": {
          "ref": "5eb9acdb-3122-4a81-93ff-9a658ee8b8f1",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "17861376-e7cd-4a68-972b-c497c834d24b"
        },
        "item": {
          "id": "a793a774-0489-4979-9cbd-0cdfe1ae09d8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c6a0a540-619a-4f4e-9744-893c71133edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2f241c-16be-47dc-8119-ef97a0aa89de",
        "cursor": {
          "ref": "ece8f1ec-e568-44ad-881a-9d483ada5cd5",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1b9c24c7-9c89-481e-8f5c-a84262b9fa8b"
        },
        "item": {
          "id": "9e2f241c-16be-47dc-8119-ef97a0aa89de",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "64b276a0-a45f-4990-bedc-b8a12b74b62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6026220e-8006-42e3-9e28-843d44ec8c11",
        "cursor": {
          "ref": "05cb189a-af9a-449f-92a6-d0d11e58918e",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b6c68fd9-59a9-4b10-a7ac-1fc6acc474dc"
        },
        "item": {
          "id": "6026220e-8006-42e3-9e28-843d44ec8c11",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2a153983-66e7-4aa7-90cb-15e6b07cbcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d62f71-7295-4dad-98ab-6cbc7104e885",
        "cursor": {
          "ref": "8bbe6e58-98fd-4c9d-85d7-f27e5bc0528b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "86107e86-2ad1-40d6-812f-07134f24d578"
        },
        "item": {
          "id": "a3d62f71-7295-4dad-98ab-6cbc7104e885",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b5502535-5bc7-4b76-9309-64afbd7bbe27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e248d2a0-d1f2-4816-b775-c4cd05b5091c",
        "cursor": {
          "ref": "fc7f33f7-aff6-4886-b1a0-536b7d97f30c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "533d16c0-9a21-4079-ad26-9de5fefda8aa"
        },
        "item": {
          "id": "e248d2a0-d1f2-4816-b775-c4cd05b5091c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a8f966e5-deab-4cbb-bd53-8e71a900f77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f94caf8-71df-4437-92d8-3551904a127c",
        "cursor": {
          "ref": "edcde7cc-9fe4-4b5f-8e02-cd5cc1d5cb32",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7092cff5-d4da-4ca0-a320-7154df38aa22"
        },
        "item": {
          "id": "0f94caf8-71df-4437-92d8-3551904a127c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1b331567-66d0-49e6-b06d-06b36d23c321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f51fe4-ca3a-420f-a98d-53bc32012471",
        "cursor": {
          "ref": "c3a0abe5-0ac6-4a80-92db-cc234a080fa2",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "97fc979a-e298-4837-a007-f2cc59a1c955"
        },
        "item": {
          "id": "54f51fe4-ca3a-420f-a98d-53bc32012471",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1b0243d3-cb48-490a-9128-03a0dc4f9422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d29cbf-1523-4496-a046-698d6ba63a47",
        "cursor": {
          "ref": "de9dfa7b-679c-4a7c-93da-2690ebf1b229",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c67cde97-2f61-4e15-af85-9af15f2fbf78"
        },
        "item": {
          "id": "75d29cbf-1523-4496-a046-698d6ba63a47",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "12e1f2d0-4e3b-40e7-9c27-b9315d610adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93816c59-0244-49fe-b6cf-4ac8c96d9140",
        "cursor": {
          "ref": "493a76ff-734c-4c2d-a354-5b6721d1d165",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bb45bdf9-9b27-4467-9303-4ce88a5ad1af"
        },
        "item": {
          "id": "93816c59-0244-49fe-b6cf-4ac8c96d9140",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d5c639f6-5b7f-4d57-bf0f-9e151bfdd34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2247cd01-a642-4597-af12-81a55f6d2375",
        "cursor": {
          "ref": "4e74b845-137f-4ac1-8945-a3853919189c",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "498bf247-564a-4f2c-97aa-871d136e031e"
        },
        "item": {
          "id": "2247cd01-a642-4597-af12-81a55f6d2375",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "973c1967-e182-4615-ae1d-7a8051743e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b65271c-24da-48e2-8faa-981df60a3380",
        "cursor": {
          "ref": "24242b11-4e7e-4d88-84f3-b9e0b4a6e32c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8f8495e5-5507-43e1-9034-e0269fcdcd7d"
        },
        "item": {
          "id": "0b65271c-24da-48e2-8faa-981df60a3380",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d217622-f461-467a-8d58-3cc173875096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462a73d6-9cc9-4c2a-b852-7da0f69d4b52",
        "cursor": {
          "ref": "0dc051fd-4034-4bec-9379-62b573bedec8",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d816dc84-8746-4d50-9462-b0abcaddcd88"
        },
        "item": {
          "id": "462a73d6-9cc9-4c2a-b852-7da0f69d4b52",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "65422606-f368-475a-b8b6-fb78f3c5949e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84f7fad-96f5-480f-924a-f71f6f2b8e2a",
        "cursor": {
          "ref": "3a1f994a-df5b-46e1-8a69-2776fb066352",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4a2a8a36-c747-4346-95a9-fc4586707619"
        },
        "item": {
          "id": "e84f7fad-96f5-480f-924a-f71f6f2b8e2a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9eae2b9d-5537-4c92-bc71-caf648f69ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995ebad2-a823-490a-8007-901b8941c49b",
        "cursor": {
          "ref": "de05bf4d-357f-4298-a083-1aba3a79b5ae",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0167a03f-624b-466f-bd0f-c7b9e338942a"
        },
        "item": {
          "id": "995ebad2-a823-490a-8007-901b8941c49b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "341e488c-3347-4b2b-a44f-2ea4cdb03b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ce3d14-ac8e-4927-8fd3-6f3dd7eb5bf0",
        "cursor": {
          "ref": "320acdd4-9f02-4c9e-b422-b00b2f34cd51",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ac775fe3-0c0b-4deb-aade-5cce07591bea"
        },
        "item": {
          "id": "f1ce3d14-ac8e-4927-8fd3-6f3dd7eb5bf0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee3c2962-0cf0-4ee6-a017-795ac808675b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aceb6c3-6d88-491f-b9ec-3c1379683d48",
        "cursor": {
          "ref": "f5864653-7011-4052-ac43-a7edace77562",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9afdd643-7632-40a5-bcc9-e6100405caea"
        },
        "item": {
          "id": "6aceb6c3-6d88-491f-b9ec-3c1379683d48",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "abe25bc2-5221-473a-b216-ff083723d126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a9c5d3-9eff-431d-a18e-d333eaf5b133",
        "cursor": {
          "ref": "f19599b1-dd25-48df-a53b-4a9b5d2e3fba",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fa78e530-4270-4d3e-af62-4878489d45de"
        },
        "item": {
          "id": "d4a9c5d3-9eff-431d-a18e-d333eaf5b133",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "92abebde-a01c-45f2-960e-b5a84a8f12e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd37f9d-3a4f-41a4-b26b-558db6f18eba",
        "cursor": {
          "ref": "48bbd0b8-df17-4bf1-b38b-db11405c5164",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a03c2525-fc62-4962-9257-7195ef75eade"
        },
        "item": {
          "id": "fbd37f9d-3a4f-41a4-b26b-558db6f18eba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b9392b98-7d2b-483d-9527-18c233f90a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dfbec6-893f-4259-8182-2070ab8e4d1b",
        "cursor": {
          "ref": "fa7d402f-925b-4d35-bb7a-9ba24a77e594",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f428fba2-9792-43e3-9875-ea95342e2d1f"
        },
        "item": {
          "id": "34dfbec6-893f-4259-8182-2070ab8e4d1b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fb72696f-6166-46e5-a0a5-37744ac37c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7e7ecd-cd48-4d41-8fd5-2035e16a1eb3",
        "cursor": {
          "ref": "a9025b1b-ea25-4643-a88f-daf92933ef8c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dcc11d0a-9e18-4981-895f-b6a48187274d"
        },
        "item": {
          "id": "3c7e7ecd-cd48-4d41-8fd5-2035e16a1eb3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "373eb1ed-028e-4c05-8e68-8ffb3a584a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872a5fa8-18a0-41bc-bb8d-e9a77626edb6",
        "cursor": {
          "ref": "b7c7a87a-f31a-4eb2-8740-c2b823cb9e0a",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cdc33078-14ae-4fa5-b036-9b6a9118d88e"
        },
        "item": {
          "id": "872a5fa8-18a0-41bc-bb8d-e9a77626edb6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "97e3e4ba-0ca5-42b1-b309-18982aa0f472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5970d8f7-8fb6-4aa3-bac3-554783163789",
        "cursor": {
          "ref": "6b10be92-98b2-448d-b30c-f3a6a9139e94",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3621056c-0443-4a6a-8e56-b0fae1e9c479"
        },
        "item": {
          "id": "5970d8f7-8fb6-4aa3-bac3-554783163789",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ab44e2ad-aa60-44b3-8089-fc6e731f875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f845927-521d-448b-8f02-afe234b0d9f9",
        "cursor": {
          "ref": "8f51a5ea-b019-4d05-a308-f9871b2b300a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4f64a917-3df5-4b10-9d2d-e930afb06910"
        },
        "item": {
          "id": "8f845927-521d-448b-8f02-afe234b0d9f9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "856bfb30-6d29-411c-9511-88349ab05e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b737284-4a25-4d76-ab74-f4891feb2922",
        "cursor": {
          "ref": "988de18e-d919-4ceb-b9d4-169747c1454c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2ccd636d-dc54-425a-885e-60583517d43b"
        },
        "item": {
          "id": "6b737284-4a25-4d76-ab74-f4891feb2922",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7ebb994f-5322-4292-bd6c-6ee93e53575a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04901022-d0e6-437b-8886-734709f4b976",
        "cursor": {
          "ref": "1642d176-0c84-4729-adf1-925b8b378c6b",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b605722f-4fce-4a8b-97d7-52fe536d98fb"
        },
        "item": {
          "id": "04901022-d0e6-437b-8886-734709f4b976",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bfca1eee-951c-4df1-b461-bc84f4364618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf2e595-a39a-4fb1-94b6-2b053a7d05be",
        "cursor": {
          "ref": "e883d726-ad0a-4cb8-b09a-041997d5de13",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "94045c95-4215-4680-9102-feaec1e06815"
        },
        "item": {
          "id": "faf2e595-a39a-4fb1-94b6-2b053a7d05be",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c5bc51c5-6f99-4491-9f8a-c5d5102a223c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a92d18d-59b6-4c92-9a1e-425a67707511",
        "cursor": {
          "ref": "6fac50b3-eec7-422b-8282-bf5df0de2d8a",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8abbcc4c-eee8-48da-8d8d-c6ac25039d6f"
        },
        "item": {
          "id": "5a92d18d-59b6-4c92-9a1e-425a67707511",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9d32fe3b-fb75-4c44-b8d6-e6e15440f88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c026906b-fd91-4e3f-b7e7-5507a4dae17e",
        "cursor": {
          "ref": "1108b470-cc16-41c5-ba7c-58f18425cabe",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8b6b0a83-1f77-4cae-a78e-6cd66cdc3894"
        },
        "item": {
          "id": "c026906b-fd91-4e3f-b7e7-5507a4dae17e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6ab3e652-4c25-4ff9-a793-1128f58811c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9d67e0-00a2-4669-bdc4-3068de991dcc",
        "cursor": {
          "ref": "8d59e430-02b7-49d0-86ce-b3e5dbbe26e2",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d1bd264a-2122-4547-b429-5abaa4343f5c"
        },
        "item": {
          "id": "cd9d67e0-00a2-4669-bdc4-3068de991dcc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "42d18dcf-60aa-4472-af93-0fd12b54d4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c06cf3-0829-4b63-bd6f-88465108ef37",
        "cursor": {
          "ref": "1560832f-6266-45d2-b3ac-99cfbec1acbd",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9e023fda-4b6b-4ebc-ba53-cc88673186c1"
        },
        "item": {
          "id": "a1c06cf3-0829-4b63-bd6f-88465108ef37",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fd4b789a-a390-448e-8b03-48e07bf16268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab5bac-e0cf-43a7-a29c-c8c2d953ad8a",
        "cursor": {
          "ref": "10af1bb5-0402-4c1c-b9c5-13656898bddf",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "82126c75-d454-4334-ac8a-3980074c1d6f"
        },
        "item": {
          "id": "e6ab5bac-e0cf-43a7-a29c-c8c2d953ad8a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "715108a5-0e59-46a2-b1dd-0c6ab5e6ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e741247-306b-42b8-bbcb-dcb62465b0a2",
        "cursor": {
          "ref": "aa6901a6-8811-4d7c-8053-d9aef7d1b4d5",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5b0dcdd9-142f-4d4c-aa03-61f566629f04"
        },
        "item": {
          "id": "4e741247-306b-42b8-bbcb-dcb62465b0a2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "038ebc46-48a6-49b4-805f-807cfb428c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5570914-ac79-4e43-a81e-f5640d7d269b",
        "cursor": {
          "ref": "23992da0-242a-4822-bb84-a31dbd1270e6",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cc84011d-5d2f-4e1c-bc14-9fd1b6e061a2"
        },
        "item": {
          "id": "b5570914-ac79-4e43-a81e-f5640d7d269b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "50026365-5a19-4bbc-b81c-f8cd2f78b8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c6135a-f326-4ca5-9f1d-94666d05174b",
        "cursor": {
          "ref": "adcdeec1-3c19-4045-901e-d73e777be213",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b208463a-9d70-404a-987a-125b164f7d54"
        },
        "item": {
          "id": "b7c6135a-f326-4ca5-9f1d-94666d05174b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2a410318-4bb0-4bed-aa0a-7552187cd2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ae4df-aeb1-495e-a6c0-1b5ae2988b0f",
        "cursor": {
          "ref": "5d325320-0f48-45d0-9c0c-8ec6809ece94",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d1d94ead-6de0-4252-8420-85c824f32b67"
        },
        "item": {
          "id": "cc2ae4df-aeb1-495e-a6c0-1b5ae2988b0f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "844067d4-c0c5-4acf-958c-9e4848a766c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c865006-33bb-4eb3-997d-f4affc9754ae",
        "cursor": {
          "ref": "fed31861-1b76-43b6-a34c-94925648eba5",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b5e8663c-48d8-4321-85c2-2172b1fa6b58"
        },
        "item": {
          "id": "8c865006-33bb-4eb3-997d-f4affc9754ae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "db039340-0e17-4936-83af-3f411adb93ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da81677e-bf92-472a-8c7e-54ac03c4a3ac",
        "cursor": {
          "ref": "ddf0b7bf-5380-49d3-bb07-ed6200c26ad2",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b7444251-bf00-4b01-b0cb-5932e3aead95"
        },
        "item": {
          "id": "da81677e-bf92-472a-8c7e-54ac03c4a3ac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7c64cdb3-f89a-42fe-9dd2-c74688b5257e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9975775f-1820-40be-a72b-6234d4fecc1b",
        "cursor": {
          "ref": "041192d3-7516-4477-97f9-81fbdec8f438",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0883d4e0-42c0-4b12-b152-0006a6962d60"
        },
        "item": {
          "id": "9975775f-1820-40be-a72b-6234d4fecc1b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e142d508-4a18-4648-b7a3-34a07ef7e5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d463bdc5-2239-4562-b07a-2309ce8380ba",
        "cursor": {
          "ref": "4fb515b0-7ba5-4880-800c-81e89773d402",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "42c02639-444c-4960-ad89-29d2637dc706"
        },
        "item": {
          "id": "d463bdc5-2239-4562-b07a-2309ce8380ba",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4d8697de-cd13-46f8-bb12-d099334f6b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63877e49-d128-487c-96b9-5762195442ff",
        "cursor": {
          "ref": "2d0aa617-a984-46b4-a834-f3fd62cd444c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ee1297c1-9941-4cba-9689-6102b71c2201"
        },
        "item": {
          "id": "63877e49-d128-487c-96b9-5762195442ff",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "55d794c7-1b99-452f-9c1c-632263d769e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4746be8f-d655-4406-9b90-c8d8d0b3fc5a",
        "cursor": {
          "ref": "596d22ba-8b60-4bac-a931-36813513dc83",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c4c52364-6a09-492b-afb3-37aba727cbc5"
        },
        "item": {
          "id": "4746be8f-d655-4406-9b90-c8d8d0b3fc5a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7efe5354-315c-43a0-961e-9ce7942fb32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852f1520-f7bd-4bf2-96d1-e56502891d6e",
        "cursor": {
          "ref": "78859ba0-9591-41bd-bea0-10bc5163341d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0d50018a-981a-486c-b2cf-5c9042650119"
        },
        "item": {
          "id": "852f1520-f7bd-4bf2-96d1-e56502891d6e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2477d887-c2fb-4ea8-b86a-4d653c73ccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0dd173-5463-4012-a869-858d851f62bc",
        "cursor": {
          "ref": "e8637c86-ae84-4a99-bca9-5ce78a046457",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b2d6225b-59ba-47b0-a950-3b563146c345"
        },
        "item": {
          "id": "3e0dd173-5463-4012-a869-858d851f62bc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6a9059c-0868-4f4e-8d71-136ed5c619ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a6a470-a807-4908-91e2-bebc077c6c43",
        "cursor": {
          "ref": "8fb98bb2-1d8c-4d40-87fa-83bce03c0582",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "581373f6-88a1-4a41-b66f-ddf4707f3c60"
        },
        "item": {
          "id": "22a6a470-a807-4908-91e2-bebc077c6c43",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6d64871c-e8bf-4636-a890-0fe041a0a108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6097c618-f4b6-4b4f-a067-9b5eb833fd0a",
        "cursor": {
          "ref": "c5a39685-6ea7-4921-aa7a-abcbbfb10901",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dd0c3c53-4d98-4dfe-9cd3-5eb5459ccdff"
        },
        "item": {
          "id": "6097c618-f4b6-4b4f-a067-9b5eb833fd0a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c28fdb2d-562b-40d2-83d3-54dbfac51ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc725ec-24be-43a7-9cc5-b156e7ced4f3",
        "cursor": {
          "ref": "3137cb75-cb98-46e8-b539-fc3043ecc9b3",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "600ce89f-7019-405d-8d25-751acfeb1510"
        },
        "item": {
          "id": "8fc725ec-24be-43a7-9cc5-b156e7ced4f3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "91ca9667-66ed-42e8-8bf5-86da03440ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e9285e-f616-4315-a182-486fcf3e905f",
        "cursor": {
          "ref": "28f972ea-172d-4f73-bf15-df9009a235cf",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dc2587c3-9347-40e6-b01f-a047e3283d70"
        },
        "item": {
          "id": "14e9285e-f616-4315-a182-486fcf3e905f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e568d637-d959-4cae-bb9f-d519447c3b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f395abc-6464-463f-a1c4-593408cc61fb",
        "cursor": {
          "ref": "e0c322dc-687e-479b-8761-e577004df7d8",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "921f5ed3-d8fc-405d-8395-126467650787"
        },
        "item": {
          "id": "9f395abc-6464-463f-a1c4-593408cc61fb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "269f3ec9-e54b-4e2e-9a37-034278e91702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2021644f-a868-48cf-82b0-bb3a34bca3f8",
        "cursor": {
          "ref": "765ab65d-022e-45d3-9f74-58ea68f70e1d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "87c3b58c-7401-451f-b2c2-4fe84a7e78d6"
        },
        "item": {
          "id": "2021644f-a868-48cf-82b0-bb3a34bca3f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f7575e8b-81cd-4c1e-98cf-03545c5b0b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d405afae-f818-42ac-bdc2-ece83c85d57d",
        "cursor": {
          "ref": "2db29ca8-24b8-4aa4-a286-cda25afe7032",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8ddcd4a3-c1b3-413d-97ff-eb0bcb0c8dfa"
        },
        "item": {
          "id": "d405afae-f818-42ac-bdc2-ece83c85d57d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "73752687-db47-430e-b643-dddccdd9f5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bb62bb-cc24-4192-a310-ac83397dbd1b",
        "cursor": {
          "ref": "f680713c-c3f9-4f84-9d03-0fc741b0f587",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1737fd79-8f40-4d57-b1e1-b8ddae1b1a10"
        },
        "item": {
          "id": "00bb62bb-cc24-4192-a310-ac83397dbd1b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4afa5263-0ae5-4d79-9284-069e43dbb00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72ef3dc-982a-4acd-a705-d2346aa80df4",
        "cursor": {
          "ref": "383ce1de-aa95-4b82-ae50-2a1ad34297a9",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4e52001f-4210-4f1c-9a1a-529ca119a372"
        },
        "item": {
          "id": "b72ef3dc-982a-4acd-a705-d2346aa80df4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d007ce4d-812e-4f6b-a3e6-7afb26b659f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fdab40-d079-465d-a221-57e3276583bc",
        "cursor": {
          "ref": "1fddc8dc-f10d-4525-bff6-7f49e03b2d3f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d8c7414c-f326-4e3a-87e3-1a1485f17054"
        },
        "item": {
          "id": "d2fdab40-d079-465d-a221-57e3276583bc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bc79d712-13ef-4383-8c10-e314cea1e966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248cd7cc-365c-4d08-8cbe-530af6541fa1",
        "cursor": {
          "ref": "b188c2ab-11aa-4faf-9391-83a92532132a",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a5762a34-880b-4f44-9caa-43b022dc4e1c"
        },
        "item": {
          "id": "248cd7cc-365c-4d08-8cbe-530af6541fa1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "37fb4802-7fa4-45d0-9ed2-0e234792ec92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3747fda-18a5-484c-b215-4f7dedf058d3",
        "cursor": {
          "ref": "ff3b6e6a-49a7-49cc-8eb0-19b7ac48bcb3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e6545127-4c4a-41b8-953f-47f259cc4876"
        },
        "item": {
          "id": "c3747fda-18a5-484c-b215-4f7dedf058d3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "62dd5296-7146-4a89-893e-a8251bf648d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8699756c-a48e-45e2-bb11-abe21aedb77d",
        "cursor": {
          "ref": "b482d957-26fe-44d8-bdd3-50b53000371b",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4e76f4e9-bd24-4794-8b6a-966e072863dc"
        },
        "item": {
          "id": "8699756c-a48e-45e2-bb11-abe21aedb77d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "13c7526b-015e-4bc7-86e2-80f8ab2fe9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b47eef6-724e-4f45-8014-25d66cd8dce6",
        "cursor": {
          "ref": "4dda8db6-3095-4f0c-94c9-01f66a861372",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7f895031-4775-4d1c-8601-671fb8876489"
        },
        "item": {
          "id": "8b47eef6-724e-4f45-8014-25d66cd8dce6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "096e66c4-7a0f-4d93-bf57-8d99153d34fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abf919a-84ce-4706-9eaf-3a9333d81be3",
        "cursor": {
          "ref": "2635f5f8-66b9-45cf-952b-d40bdffffa47",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "33756af8-f58a-4c7f-af1f-c1fb83bb3ad9"
        },
        "item": {
          "id": "8abf919a-84ce-4706-9eaf-3a9333d81be3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1fff16f4-3a48-4c97-b4a7-6b2c1ce3e244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626904f4-b999-4905-ac13-df517bd4289b",
        "cursor": {
          "ref": "99da5a84-469c-443f-99bf-f7a722e570cf",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "669259a5-4ee4-4664-addc-8862395fa64d"
        },
        "item": {
          "id": "626904f4-b999-4905-ac13-df517bd4289b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3d13f1f5-e988-493b-b320-60b9444b571e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a713dc-d01c-4a26-abe4-7650c878ce95",
        "cursor": {
          "ref": "c529260e-333b-45d0-999a-86ae40e8a7db",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "69321e70-3c9f-46e6-a370-d75a72161ed4"
        },
        "item": {
          "id": "49a713dc-d01c-4a26-abe4-7650c878ce95",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4c64c865-851f-40cc-ac19-af2223615857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d234e6c0-a7b9-45f2-a7c3-cf0e67598b2b",
        "cursor": {
          "ref": "eff82c00-b6d4-41eb-a3ea-84a854a465de",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2037a90b-1e30-4618-a098-e5a7ffd82269"
        },
        "item": {
          "id": "d234e6c0-a7b9-45f2-a7c3-cf0e67598b2b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1471f568-0b9f-4f21-992f-e366bfdae389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069f8e31-c8a9-4e32-ad1b-ee5b7e8798f1",
        "cursor": {
          "ref": "87b96178-f3f8-4868-b609-0013c2d2080d",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2bff0f7f-d323-442f-a446-58b58316b267"
        },
        "item": {
          "id": "069f8e31-c8a9-4e32-ad1b-ee5b7e8798f1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "63e747ff-2bfc-41c3-adb9-38fa58313bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e4a2b4-9781-4f22-8843-2d9014542b4f",
        "cursor": {
          "ref": "856ffad9-b9d8-4e68-bb13-e89e4c4c89af",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0594b3ed-66c3-405d-ad06-535e1b1caa11"
        },
        "item": {
          "id": "60e4a2b4-9781-4f22-8843-2d9014542b4f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2ede76a5-0137-4853-94f0-40ec83b93068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadeff55-016a-4607-a142-dc1e854fcd91",
        "cursor": {
          "ref": "0ca4cc00-01dc-4486-9f06-9f981be5cb08",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "02f5900c-b3ed-48c0-88ac-e4d7ef8ee2eb"
        },
        "item": {
          "id": "aadeff55-016a-4607-a142-dc1e854fcd91",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fc82b139-0b07-4188-8a55-c122c525ef79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb111c3-e881-4349-ae90-2253c5663670",
        "cursor": {
          "ref": "c28b05d5-2560-4f33-a04a-3dd3eeacbd39",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "234aad96-7cd7-4b95-a111-c7e8c7ecf369"
        },
        "item": {
          "id": "7cb111c3-e881-4349-ae90-2253c5663670",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2e48115b-c37a-420e-9019-41548a67a025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4300f90-910b-4077-ba00-011da7ccd641",
        "cursor": {
          "ref": "df025bbe-44ad-4b99-bea0-e5c68c488200",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8a81e78b-95b1-4776-a78d-501fbc53a6a4"
        },
        "item": {
          "id": "b4300f90-910b-4077-ba00-011da7ccd641",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a08e8cca-ae76-44e2-8ff9-20ef18647622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cac298-cba3-497e-97ec-13791190e53c",
        "cursor": {
          "ref": "b32813d2-bda8-45ce-98eb-b24ed15204bb",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "69b528ef-6304-4793-871e-28fe8ac8e01d"
        },
        "item": {
          "id": "d9cac298-cba3-497e-97ec-13791190e53c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0fc0a689-0adb-4440-b134-f6b06ac68f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab8476f-d7fb-4f83-8624-43422b578c44",
        "cursor": {
          "ref": "b9fcd64e-a4dd-4331-958f-87816a5937e9",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "848c08d5-66ac-4ab3-9dcb-92b73be2cc78"
        },
        "item": {
          "id": "fab8476f-d7fb-4f83-8624-43422b578c44",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1607b9e0-0177-4f22-a78d-75d05ea2c5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8ff90f-a2f9-4b57-9090-42307aa14ef6",
        "cursor": {
          "ref": "2567e795-8991-40e8-892f-8b6886dc646e",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "34d8e4ea-0626-4655-a8ef-3353622cf7f1"
        },
        "item": {
          "id": "2d8ff90f-a2f9-4b57-9090-42307aa14ef6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6d18965b-6e22-499b-a070-83898285ce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac8e0a5-0529-44ae-8429-c181647e9111",
        "cursor": {
          "ref": "661ac78f-c461-47ed-997d-b1a2a938c4d9",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "008af9f0-8d91-4b66-8372-ee55e4371431"
        },
        "item": {
          "id": "5ac8e0a5-0529-44ae-8429-c181647e9111",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "064c5ac3-8525-4f5e-82ca-4ae70eeb3618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2130acf1-b67e-4c61-b984-503c7b2c3daf",
        "cursor": {
          "ref": "f747d501-7201-460f-a4fd-190dea5c8b89",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2c54dcca-f5e5-4b16-8fd0-1a85fec71c0e"
        },
        "item": {
          "id": "2130acf1-b67e-4c61-b984-503c7b2c3daf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f028093e-a8dd-457b-94cc-030abcd7865a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e545275-0e9e-4088-8882-36102b908096",
        "cursor": {
          "ref": "6ee7babb-a483-4250-b608-ffcc8ee8fede",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e8ee4f0a-3728-4ade-ad33-8375ec6868a2"
        },
        "item": {
          "id": "2e545275-0e9e-4088-8882-36102b908096",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "26e5be47-1964-4f7a-9eff-0a9bf34ea06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d6677b-9510-4866-a68d-f455fa8b32a5",
        "cursor": {
          "ref": "e1260731-1ab4-43e0-9fb9-7c21d5f73f5d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3844a1bb-eb33-46d1-9fb4-0c98757b19d5"
        },
        "item": {
          "id": "06d6677b-9510-4866-a68d-f455fa8b32a5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "50c97141-ad76-495e-953c-e8d2757f8fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3304df-3c56-4efd-8647-fe981df865b3",
        "cursor": {
          "ref": "7bb183df-dccf-49c4-bfe5-422f9154ff7c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "97f1eb20-4822-4e6e-af48-f7ae3253e3d1"
        },
        "item": {
          "id": "db3304df-3c56-4efd-8647-fe981df865b3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "67ebfa5b-30b4-4c6b-944f-39f4e954dd8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8292b8-3b9e-44b3-a381-3c4553d28683",
        "cursor": {
          "ref": "225d00c9-4230-4274-9302-151699e2713f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e57b6b81-a261-4055-956c-592a035f1797"
        },
        "item": {
          "id": "3f8292b8-3b9e-44b3-a381-3c4553d28683",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a70f5550-b371-45df-8dff-4b10c146b8df",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494da800-22c5-4ff1-b7c6-969cdcc08da3",
        "cursor": {
          "ref": "a54c4714-1f29-4ac4-a1c9-d35034e1b185",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1a51af17-be62-4d74-aac7-647f714cb351"
        },
        "item": {
          "id": "494da800-22c5-4ff1-b7c6-969cdcc08da3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cf05efbd-ea63-49a8-ae66-3ac6102bfe27",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6098d5-d516-4eb9-9df0-97ce06bacceb",
        "cursor": {
          "ref": "57090d1f-6c92-4128-8915-793c811b3abc",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cd3e0ac1-6ac2-4074-aa83-6bc767015e33"
        },
        "item": {
          "id": "ce6098d5-d516-4eb9-9df0-97ce06bacceb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2c8a53e8-4fc2-4323-b356-bfadc43aa7c5",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52916ff6-3a19-4568-a885-150f01454368",
        "cursor": {
          "ref": "b0402f9f-532b-4fcc-9fed-4cdbdf8dfda5",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "62fe22a6-4c2c-4f29-80be-b74975aa3f62"
        },
        "item": {
          "id": "52916ff6-3a19-4568-a885-150f01454368",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1adea297-b1fa-43e5-847f-2b322b01a458",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc81ecf-9b17-40d5-90d5-d8f4bdfcc409",
        "cursor": {
          "ref": "d5fd79b4-127c-4e41-b7f9-01a50dcc313e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d86d7358-bdfe-448c-8f88-86ecd92ad2a0"
        },
        "item": {
          "id": "1cc81ecf-9b17-40d5-90d5-d8f4bdfcc409",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "190dc42e-cb74-4ebb-813c-d4a49824bf3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc81ecf-9b17-40d5-90d5-d8f4bdfcc409",
        "cursor": {
          "ref": "d5fd79b4-127c-4e41-b7f9-01a50dcc313e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d86d7358-bdfe-448c-8f88-86ecd92ad2a0"
        },
        "item": {
          "id": "1cc81ecf-9b17-40d5-90d5-d8f4bdfcc409",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "190dc42e-cb74-4ebb-813c-d4a49824bf3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc81ecf-9b17-40d5-90d5-d8f4bdfcc409",
        "cursor": {
          "ref": "d5fd79b4-127c-4e41-b7f9-01a50dcc313e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d86d7358-bdfe-448c-8f88-86ecd92ad2a0"
        },
        "item": {
          "id": "1cc81ecf-9b17-40d5-90d5-d8f4bdfcc409",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "190dc42e-cb74-4ebb-813c-d4a49824bf3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b9c45f-5697-46b2-aed3-5ef8fe29b379",
        "cursor": {
          "ref": "65a88363-c9ac-4a28-ba5f-7e7401440a78",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cfdce5f2-ddc4-4505-9ff5-a71bc12b1cdf"
        },
        "item": {
          "id": "16b9c45f-5697-46b2-aed3-5ef8fe29b379",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b3e25450-4025-4429-8a83-e84c59e476d9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188a771e-fd8a-4c3f-92f9-2ce3e4c1f5bd",
        "cursor": {
          "ref": "4561b966-77f0-4d89-9af0-9c1f49e76bdf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1d4e1c19-17cb-4c28-9a1c-ed32d9ca2c57"
        },
        "item": {
          "id": "188a771e-fd8a-4c3f-92f9-2ce3e4c1f5bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ee3422a7-4eff-4953-bcaa-0cba85969f2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188a771e-fd8a-4c3f-92f9-2ce3e4c1f5bd",
        "cursor": {
          "ref": "4561b966-77f0-4d89-9af0-9c1f49e76bdf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1d4e1c19-17cb-4c28-9a1c-ed32d9ca2c57"
        },
        "item": {
          "id": "188a771e-fd8a-4c3f-92f9-2ce3e4c1f5bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ee3422a7-4eff-4953-bcaa-0cba85969f2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3334dcd-cb8e-4072-9f0f-ebec0387b82d",
        "cursor": {
          "ref": "650890d5-81cf-4e8d-9488-3fd29ed46920",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc416583-5cce-4944-909b-058f2b36a824"
        },
        "item": {
          "id": "c3334dcd-cb8e-4072-9f0f-ebec0387b82d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "9aba4f68-d73f-4250-87f1-e603d8a7e164",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d29778e-c15d-43c7-92cb-e901170f5ecc",
        "cursor": {
          "ref": "5e968e09-ef6e-41ed-bac3-9eedab4f6929",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "db8b7131-0812-4288-9c55-0e1375a5b5bb"
        },
        "item": {
          "id": "5d29778e-c15d-43c7-92cb-e901170f5ecc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "160829a1-96af-45b3-abb7-1291a271cf86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d29778e-c15d-43c7-92cb-e901170f5ecc",
        "cursor": {
          "ref": "5e968e09-ef6e-41ed-bac3-9eedab4f6929",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "db8b7131-0812-4288-9c55-0e1375a5b5bb"
        },
        "item": {
          "id": "5d29778e-c15d-43c7-92cb-e901170f5ecc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "160829a1-96af-45b3-abb7-1291a271cf86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544ad13e-c5d2-4c54-ae85-c95e165113c2",
        "cursor": {
          "ref": "1b449cfe-0603-4538-b4e9-2d4fc6b17424",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e0a127ac-a0c6-47e1-a6dd-dfc75e87bbca"
        },
        "item": {
          "id": "544ad13e-c5d2-4c54-ae85-c95e165113c2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "11c0faea-013b-4ec4-a829-3da783010153",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}