{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "05708052-0055-470a-848a-f10ef6b0bcb1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "261958e6-9133-4f4e-8f65-c782ffd5c41d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fabba313-4354-4fe5-8409-88bc701a39f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b58e2a0d-af9f-439b-8526-b7311f0be506"
                }
              }
            ]
          },
          {
            "id": "356ae88b-7f3f-49d5-88ac-db63941c54ce",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6989a12-4b42-4bd8-add2-961eddc57b62",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d2e9d0dc-2d33-4aa0-8b88-09e7b42389bb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fe0d2ae0-cc28-4cef-9977-609486945f23",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "605dd0d8-e30f-498c-b33f-5ad8d8c0a9b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08cf5f22-b68a-40f3-926a-f8a493384c9a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d747ed-7dbf-4665-93f5-41a8fe7a2224",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93b9e8ff-1635-46dc-8128-e79c39984dcf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06228e5d-1f18-4506-bf10-37d45649481e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ef132dd-9ead-4a4a-b78a-e56749e5988c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a71b1f2-d03f-4635-8f77-f425c844c7e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e63aaa1-3bab-4df4-af71-0be9da470a73"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34718a17-80ed-427a-9a04-8bc1656421c5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9d5c6bec-85a9-4c81-8cf7-d60da75bb0af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3db764a0-1b1d-4555-961f-78885d05f71d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1769ca1e-5e9a-47bf-9b4f-969644fb0ace"
            }
          }
        ]
      },
      {
        "id": "bb5f7369-78fd-4b76-8351-201124340696",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "da481a47-9c4a-41eb-84c2-9780598ca0c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8299f123-29cb-433a-ad8c-83ef3b3a4957",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e842dc2-322a-4455-84e4-38dca90594b5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d28eb91-1b70-448b-be0f-1348f464d5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3c287af-f64a-4449-a4dc-6eaf1e1720c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc5c0ea-fcd0-4679-8c20-2c0d5aa885ae",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7da2d6c-f8dd-4ad7-a4c7-b0121da4d55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f317847-2dbe-4c09-a9f0-5ea143593753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d606dc2-c554-43c2-923a-a836e83498b7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b775695-a9e3-40a4-90eb-1d41129feac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d24c65e-b68d-4bdb-ad4c-04adde5d18ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b6b0233-8eac-49e2-9712-ee172d3ea2dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e4c2f61-8b8b-47bb-a2bc-79e823c5953d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a8ca21-522a-4df6-a1a3-92ea94b48eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60432755-7728-4e48-805e-45569fe412ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71501e9d-4680-4411-8647-c79a013f6271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa18aae-c451-4f0e-a3a3-6d09f5a1e969"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c041f5c-a227-4360-af13-d8f22902214f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6fd74c1b-7818-4e7e-afb0-69d6dddad597",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89e2187f-d20a-40dd-a54e-f163ade5c917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "914b35b6-c3cf-42a5-baa8-83791de99b92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c02348d-198e-4e61-95f3-d116e54fdb0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "680a5165-e96a-44ac-9482-a3dd150f310b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a65e4e2-8f13-4ab7-a805-87b8ac975dcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "119273f3-c23f-49ed-83ee-478c47d2323d"
            }
          }
        ]
      },
      {
        "id": "6b694d84-7a4f-4365-a6e4-ece95da950da",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "54ff3646-365e-4e09-b4a2-23cf79fc87a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a733d863-037e-4697-b936-3ef95713c101",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2ac15bfd-a888-44bb-b0a5-427f9bd1dc2a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae7aa3e-cffa-4943-a299-e0c1c8dc2a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aee500-944c-413a-b4c6-bb6746723fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396f2118-e50e-48c1-9ce0-fd1703c37f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0169bf90-c49c-41bc-99a6-03d627ef3710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000a8e20-7f53-47c9-af51-2f2f467bbebe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37fdf77-da1a-41bc-bf95-8f8385938d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7264d8-3b64-4a79-8a98-403c73739343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd512d45-8626-4d4a-99f3-99783b6fe510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8edc6b65-01e8-493e-9cc0-7448f45f69e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e7e5a9-ab2f-4e20-a785-4294fd2c1449",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706f8c7d-9a63-4c10-a8ac-e04c28f10faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ceed99c-4c69-484a-ae7d-74ec2c9efb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84070be9-2f01-46fd-9de0-e0e746bb79e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32b15d89-9cc8-4370-9a11-8dadfed65907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39508b52-5f51-4024-875b-b537c0459dc1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cbdd8d-e0f1-4eaa-922b-df841a47c01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895812a3-34ce-4587-bf0c-2e7c2a6df065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0462142c-5e24-4098-97a7-4f9749704966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8dbbc5a-428d-4064-8375-a97ee876a124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ef714f-2455-4d0f-b3e8-ca02f1f8a1cd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625c9037-a15c-4969-b6ba-2f47adb8c5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9b0d69-a1b9-4b12-a22b-dab2ecd1fcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e7e12a-296b-4be7-a7fa-3aef37076f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9347564f-350f-42b9-9549-43846daec955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffccdbe-aebe-4cc3-804b-676281f0c534",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b1b3a8-7c0d-45f5-8640-46c3220c6733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7954502-31f6-4971-978b-a4409403f712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf9c924-6f92-44e6-8059-8e3b4c33e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05f7942f-1246-4fe8-92ba-ba8ba21d4523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce4c6e4-1a85-45a2-abd3-a16c1af49f84",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a57374-2dc7-4801-895a-31be078f0824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a68fc0-57b8-4607-a829-bf88fb7947a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5b5e98-fed0-43b4-a9ad-2ff380a4b25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a26f9914-4451-4705-9b87-2f92372ae2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10130a9b-884f-4008-878d-a2eebe1fbd19",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3f2bad-11af-4bb7-a540-a9836ae25a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4890903a-93e8-402c-8d22-030565433797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c571bc6-ec3d-4e78-8749-8c100b20dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba9089c8-3935-4eed-964b-bb220478d171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4acb9f7-2b35-4db1-833d-726aa16d3ae1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ee3179-cd3b-4b9a-b4e7-0c501c60e1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41012391-59f7-49c9-86f2-5a1d4f9756fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff8515a-2a1e-49ed-b32c-22f1c7f0db21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "652de338-c683-4ebe-9c6d-69a9e86b3e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c547bf4-ec4e-4d53-9860-ec17c36a3935",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d0775a-d91f-4c4b-ba76-d6f2b0b0953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf4d440-564e-493c-83a3-a669b9939e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6a90d4-103d-4dcc-a226-552817d0e037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a5074d0-5666-4313-8145-c209068351f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b8f474-5544-45c0-bb1f-0893a19ed5da",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8c231d-87c9-4e18-9aae-10f78ebd9184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa9b4f9-b511-4557-9891-8596cba85851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6588a5cf-c13b-495c-a443-47a40a18d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9368775f-084b-450d-b907-9d7a0f1b3b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65deb3d5-9697-4410-9f3a-3f0fd75662c2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18699924-f01c-48d4-8fdb-e596b02cbe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8fbac5-203f-49ff-9fd2-5a5264b9bf06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a16ad6-a549-42d9-acf5-58e865e3e001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3483bd4c-fa03-42f2-9796-c497d7901e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff814b2d-cfc8-4f8a-8e6b-6cba1d625806",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043a4f89-403b-4637-8425-f52c7028b973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f95cf20-cfaf-4c40-82d4-e5bf0699e26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246e8b37-6ba7-4145-8dfb-c9bc5929a22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd8c094e-bb7a-4db3-96a7-dc27d60c88fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e38d7f-ff48-4da7-b738-30a0af0592c4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7b6127-af95-4bef-8477-0cc7a57072c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f206e88-2d04-473c-ad8b-2f424d31bba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9275ea24-6e60-4243-b508-68c9fbe194f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "187d0921-05da-4ce6-bed5-af2d5dbaaf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9586e941-8e9f-4706-a0b6-c46d85fe6f26",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6afd16-88c6-4e6b-9ae9-6d697afbac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd74cbb-c184-4aea-95f1-6f376b228987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb88e9e-05df-4200-b22a-3d665f3ed19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "972b94fc-55f2-42a7-bfa8-64f3a00f466b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16432eb3-5d78-4c72-b0a4-ecfdfcd0c246",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6e4434-dbba-4609-bf77-bb3f202674db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720f3aea-150d-4f20-bd1d-a4b9fc535f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0439a86-705d-446b-867a-e890a88247a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53378777-2be1-4fdf-82ef-0d320aa6e97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d40a95f-d9e1-4989-85a6-044ae75c539e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d246aaf8-ddbd-440d-bb50-5d9c3bd25764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde54c54-17d6-4cc0-9b18-38b3fc66b172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6f0a99-fd15-4ba4-8355-7fa6c11f6302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bac1188-3d4e-41af-ae36-736eff91cf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506d187b-d560-4288-93f7-79fd9d50aa5a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80274e58-4919-4d60-81e8-ea5b3be9ed41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc34b54d-9ded-4514-8fe8-db149d88a89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a0aa86-82d5-4ebe-a346-3788833e2830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "960af245-b350-4653-a188-b4e50369f8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5a0e33-b954-43fa-91f5-bbd0d5d7b425",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ca5141-b292-4ade-b297-069843e2da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4f6d51-aa6a-48a5-9ac0-410a21cb35c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70abab87-644d-4509-9eb7-f857936390df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "461f1e87-3851-4a8b-ad5b-05f135b0e085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea31615-ad5c-495b-acb8-65dfbc8d3dd7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5d9076-f9d0-4b7a-b0f1-a54342cdc060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cc2ed5-d2d1-46dc-9998-357e320d3661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765c5f21-5faa-423f-a38b-c17735588f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72930e5d-9d6d-476e-8ba5-3f5f97d39915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66364a8a-e807-4e71-bf1b-c6185a5fbef6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dda5c36-766d-458d-a981-e73aa630c5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f67dc5-cf8f-403d-bf9d-9b4a206468ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b251a8-6fd2-4387-8ae2-08d3952f64d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdc4f40-34b0-4bf3-9bae-3f3dcb528afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb96103-92cf-4e0b-8aac-f3ee53eba4bf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57c546a-9dd0-404d-8ce3-798fbde622be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732a6a2d-a4eb-4d04-a8a8-2dfe74f78156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98f5328-9e36-4554-bc80-5138dfeed08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ca4196-d1a8-4954-81cf-d38002a6fa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5b1568-d217-4787-8c1c-745742c4bccb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a27a6-9bdd-4520-9902-18afd549d813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfd8c7a-ad2f-4100-b2f4-3604e82af05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8a840c-bc2e-4908-a1cf-50865b8f4010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b37aae94-50a0-4d6b-88a2-db2e206e8b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b234e653-8b1a-4009-828c-5238b3e0ca9d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705d6c51-a5bf-429b-8e5b-f43aa968ee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5ebf32-c413-4c7c-9e11-d9e0988c03e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a498b906-803f-4ea2-bb58-2f09e235e7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7184076-b0c4-4aba-ba33-3ce3e5be48ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1bb885-d651-48e2-b1d9-a5788305d5cd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498f7881-75bc-46d8-a914-e3c130aa2c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abff2800-954d-4e7f-ad46-8c9aa43f3184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9247abd2-7fdc-47dc-afc2-aa93a7f1081c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da892c2-2182-4d54-9c08-2d1ab5eb96a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a0bf7-3f25-4b4a-a7c7-1ad87056038e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99db3852-54fd-4e84-9c70-13e00d740209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea00ac52-0cf0-475d-98b0-65845e580929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0682d5a7-b527-49a5-a2e7-7ebfd2468ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac32418-6be7-4152-a013-205a928b62de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fafe54-8461-4037-8fb1-8727e89ba8bd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87a510d-077c-44b5-a241-9f3e30c9681f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f003d5-7acf-490e-9dfa-a1802918ea2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3bd362-f486-4d4b-bdca-3142362f707f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c8b4b0-44e2-4b0a-8601-ac5688b573f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24cc388-a81a-4fe9-9da9-74b64863c760",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194c0f59-2863-4d2e-9f75-1d781b7c5eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ad3573-cfa1-4858-8881-970586cada5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a826e46d-18da-468d-afdb-3f17173f52b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b22cf6f-319f-4e80-8cbc-203f470879ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9acedcf-8b3d-4f8e-80d9-4288cafd48d8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414687a1-509e-4bd3-9d32-6243e507983d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1327426b-8e38-4946-87fc-7493c28e4422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522ffa79-2652-4589-8985-291ba01104e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "effc9806-6665-40f6-b5c5-d05dc18214d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab066b37-acf2-4de5-b3c4-de41e299cbdb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baa08ae-4f4f-4e8f-9d7b-43aae6e28817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d43c5e-721f-4ec9-8d3e-1b5d94812df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389ba7ca-a315-4519-8007-d4fd590c6b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bda410e-3cfb-4a1a-b83f-c43e4a36ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8fee2c-0c34-41b8-8ac9-ce934b10958a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bba84b-41f9-4f72-8fbd-219f9b2b3d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28de23b8-19a2-45f9-aa6a-f24fbdb7563b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd2689e-f76d-4ba2-b538-a40ed19c6ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "931925b4-ce13-4456-853a-657dea2f4a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258e4e2f-361c-4185-8922-b8b3cfd7e36b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf99c6a-8ece-4520-8451-dda8682e9612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedf5ee0-65bb-4879-9685-5f846a70a614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b275c9-03f1-42f5-87bc-0d0695478d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0df36f-73e0-40b1-a18c-e731028de508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb1bbaf-84b0-4571-8ced-8066fcf52ccd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c2bee3-c084-4b7d-bed0-65a14002930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a9124e-27fe-4f48-a06a-4b39756a8c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30f0d0-0590-4237-a960-49d860b317eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c4c75f-30e0-4a09-8ec8-f740ce4bff85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81482715-7a47-4dc5-b43a-02f24ac6c890",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b45d2fe-2ff8-4d25-bebb-23a727648f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784d2b5b-4b33-41ee-af37-e444bf1ac317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b254c5b1-4e28-4a52-9707-2d062e76abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "612f8ee0-dde8-472c-80b7-96c0294d27f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b9460f-4743-42fc-bf94-204c63c187ed",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399d20bb-d97e-4f38-a3a6-a4702fe22fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183e57a1-85cf-42c4-8363-445f3738baef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47092979-5731-41bf-adbe-ec65ae2bc07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7b340955-ef3b-425a-86b3-d239bfe3b906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145eb0a1-4ef9-45f5-9ee5-2edfe1f5d657",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b385022a-cc85-4ae4-8d8a-3c97cca8b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a3e7c3f-9e16-4550-9711-a6fad7623bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110bb5eb-5723-4d6f-8b4f-a23c7bed3e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9dab8b-19c3-44ef-be3c-f20a2c220ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07506011-93ba-42b7-8fe3-ed600c154958",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34f5add-0e82-4a8c-9577-c68bb0036a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe4fc0b-0169-490c-828b-a214cd89c148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5167c83-7138-466b-aa17-95b18b3aed28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7c9f28-a7b5-426b-8ab6-4b7b47432bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ca6144-fbf8-493e-b775-5d718d7887e9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba71a5b-87d4-4988-9e8f-73e6037b27c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d89ff1-ace2-4317-b7b9-8aefdb9e0d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307b11a3-650c-48fc-ba1d-cd789f7ced74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b874d98-7fe9-4214-ba3d-5cb5ed2210be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29111623-628f-4ad0-a061-c3001eec2988",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f270fbf-e315-4f30-8e8f-ff66e78c97e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08c59dd-b819-416d-aeea-cb782d7b103e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634e311f-d7e1-4b82-8188-b06fb9f2bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "336317c4-fa5d-4f40-8144-d2732454249a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbdb1cf-5795-4e7d-aae7-9949f6b270cf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ec706b-16a5-41bc-8c5a-5775ee8f1c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dd3122-a185-44ea-b81f-ee7b1972028b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7b7a38-cdad-4750-a866-132dd39997eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22947146-e073-4a73-8471-a9396f36373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d9392d-245b-4e2b-a0df-6ba14cc946a2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f655e22-9926-4a8d-af8f-90e9a52fbfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db04f16-dff4-4908-8399-043a5f54f148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7158fdd-9c41-4d84-b942-4846c5f6ada8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b382823a-f703-46dc-bc2f-1a2d287326cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14356cb0-1cbe-44df-a713-8fffd6ec6b0c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35d6b94-acc8-4696-9d1b-b647a0b5bef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fc15f6-5157-46b8-b722-4badb893e04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7af6c9a-4ed1-41f2-8e52-24bb97227170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcba7a4-4e7e-4352-94b8-3b24536bb86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4a8248-04b4-4a76-b218-9a2e4dd7b87d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daed3fe-c82f-43b1-9589-89b3fe944b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80643de-48a4-4fd6-b901-01012ad27074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9969a1-3d1a-4ef0-b347-88a23a548840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "85375454-a025-49bc-a6e9-cdf69c5e0061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b626dbd0-7bf7-4813-99de-c2fd0da650de",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6b497-344e-405a-ac4c-ec1cfb89d026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beaadf05-d846-4c92-8085-7ff1b5cea5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a51dd48-2908-4896-8356-da611c12296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef8464a-3eb2-4ff4-9521-07300219c705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820608ad-57bd-41ed-a7fa-2a2d7dd92c68",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbfa9e3-ac63-4dab-a96a-7db1e2aa2118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adc1337-f632-414a-ae42-6ad321b80992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c78680-c286-46db-8b5d-1c96936c47a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0ad483-31d8-481c-8d07-9b57a6f5d034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286efac9-71d5-467c-8f24-2eefdc86149d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a783828-722a-4c9d-bdd7-408480d5c4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4c2ef0-ecbe-4d76-98a9-1e7a953fc128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591d5d9d-8c6b-4fb1-b8d0-ef6048a31dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3797a9c-7c7f-47ec-8085-4d4f11e06290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85d2260-3a6b-4c7b-86b5-27fab7b0536b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbc2072-fc58-4111-abee-48a79de102e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263b923a-7781-4cc9-9e4a-3fa36c277776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aba0b34-4dfc-4f6e-a9af-923b4d4bc3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aaf5d9-dd03-4d6a-9676-24e1c7eda3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6629b4ed-0ca7-4091-9ee8-fc56ada4d241",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a6cc4-6774-4c07-8a0b-87466188a722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f5cc68-6e31-4a21-b9f4-f8358e478bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aebb767-983a-4557-b02d-bead0f491c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde319ef-f0cd-4cf4-8b17-7c35094e54b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f47e5e8-bef8-4c41-9133-81ce1904101f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3c3d76-0406-4479-8db6-ad9c34ff36eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a659d19-f1df-4f9d-aa17-e71412f5fb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2098f8de-dac3-45db-99bb-4465ec198803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcffa30-fb5c-4409-a946-dbb5b4a04259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b188e797-cde4-4ef7-840d-e17ddcecb1ce",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40025bfa-7a7e-4fb1-9e31-2556bc8c76bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fa1a15-9b60-4dff-b397-8991a59122b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec2e904-febb-48ea-9773-fd3419479570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "651ccec1-ddcb-494c-81c7-70c827c5b105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73680bd2-2444-4d00-a28a-701552460afa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51369db3-a66e-4747-8a7d-6b3a4023918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6841b209-f03c-4f02-82b8-02bbd6cbebb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4519af2a-3d7b-4268-8e2d-b8b954f5e108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "308415c5-c1c8-4608-bbc1-df56084c559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9484fd-9844-4c2c-9d43-8c938b78b1c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e0b42-0213-4148-aa81-4954f2d9bf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bee626-639d-4618-8192-fe08d1b949ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cadead3-edc7-479b-84d6-044ff45da8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5d2a87-7de7-424b-a198-139dd2efb445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b043ad7-0a97-4d06-a8dd-af49146d1c6b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca773c5-235c-472c-b00f-48e03c146be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3905ad5d-7601-4f55-a3cc-28cc35780bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9d669f-e393-4a42-8770-6d7299b61c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c672ef-5d7d-459c-b60b-c3e5ee9fc9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fd488b-dd12-4cc2-8341-207a653f96ea",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed783fe-2dba-4cdd-aadc-5ed9da5aa29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa92049-6951-4eed-bb88-e6c094ddc19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1243728-e9fb-416f-a7be-e08d9343248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9965ca-819a-472e-afe5-47cd922e2fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a8a372-084d-4ea7-9b4e-61ad56a92167",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4244d53c-c9a0-48a5-bef1-08e5ddedc9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c6ca83-ef14-4c81-9562-207042fe044b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3d3d7e-ce5d-4d14-8b8c-dd76536c9c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c9ec23-21b9-4d35-949d-27b5ea6f1bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c1105d-6661-4169-aede-51bf5bcd9919",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853d596a-2332-4e0f-ac03-1c8a3843f1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abccf8b-0d90-481e-b412-4e011855604b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21aa996-cfb4-4c67-ab93-857a29ff145e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "22638234-7193-4bfd-8269-4f15bb58b21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff60e031-e0b1-452f-9a9b-837d79ea6fbb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da602442-ca43-4534-8975-d343181efa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dda3881-b112-42f6-b755-e507b3896e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8378b907-191d-4166-adc1-630eee5b2192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e7522f-d8ea-41b8-9c18-868ead6dd986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d6c9bc-0fce-4e38-bfbf-50b9d436de3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fd50bb-a643-4c55-aae7-e6158156e889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf8ac7b-3b46-4b0b-a9b2-e422b87355be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65805b7c-56e0-46dd-ac44-47a5439e8a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6121826a-61a9-431e-8d33-c08959d45839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af314879-94da-4d45-845a-cf951e3c075c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80fa066-a38e-4423-8f2c-7b447b0f25e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1722ab-bdbb-4613-ac01-cc6b73f678a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e996ba-df08-4e4e-9911-3045db530bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "18c5a589-464c-4e20-8073-3d5e6f853434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c802d1ef-8380-4331-bebe-5ae5e690f417",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e9787-97c5-41fc-933b-c03c2b9ee33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffaa532-3ca0-46b3-b0c2-3dfe8e2b06b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06325c23-1c14-43dd-ae99-71553358bbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a11ce5-274b-49e2-a61f-a2f41ce2460b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923d3ea1-38f6-4c1e-ab08-5884a46ff47e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f592289f-9d2d-488c-a934-3ce76d3052ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66f129e-1d8a-4459-b336-30779bd9ad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be17929a-586c-4eda-9d1b-23b06c4afd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7e7d2a-5700-4d26-a383-e23e30771cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38976d50-96b5-47fc-b9fb-558175e89f74",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8191a4-08f7-4a70-944c-11b9d3f7e0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8e7850-eb7b-47ad-ba95-0ed540e39d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3eb1261-0b4b-412e-a057-b6dfa8ba3e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6ba8c3-2c49-4781-b858-8223cd65e3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382cc8fd-ce53-418e-943f-88b3cc016c62",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf77296-0dbe-46de-81b8-63b5d027155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da10753-bac6-4504-85a6-b4d443cf3434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f09511-12ea-40ac-8bc3-abdca219b981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6ac3f0-c3fa-4205-b3af-95c62397d6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628f3d32-3f31-4878-ba1c-bd1c8dcc0695",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e8ebf-f013-4dd3-a32f-38fab9e39034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36d89ae-bc42-4405-a363-2f3de0e75a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320ed0ad-7687-42f1-89dc-e10c2d360fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08205efa-b07e-493d-a3c9-96301cbc8a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c457e31c-ee10-41b3-9c00-e5a4648a282e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82966f08-1585-4893-a3ad-5abc14df6fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d53538b-e8a2-4285-bfab-834254f31ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b396a16-78c1-45e5-b39a-54e1a650a3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f8f0ca-0562-4f05-96ac-b277b5f78c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181a0931-f457-481b-ada7-0cc4694e5e41",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa164720-0df2-464a-a1f1-6f991550a794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1b898c-09d9-4a0d-8e90-54cd68c1c9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01cb702-c518-41f8-a1e1-5d9cffffac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "229563a9-a515-44ae-8828-addb7b207247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa73d254-7603-46c7-bef7-9b513a7f30da",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22ca252-7586-4e10-8840-5841d04113c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d004b554-4b94-4850-9dfd-150faab95cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81f8d5c-3305-4fc3-8a4c-2fde174ea405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4315ae-289d-4aab-824a-4765816516ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ff93e5-f8f1-4025-88f2-fbec5943f0e7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db91014a-b544-4cca-b808-b5b2e0dbf296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8f2877-5ff2-4d2f-a073-aa3115325e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce8cd04-34f8-4da4-b682-8c817f417591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec7c0d5-600b-42a1-a688-e4e5d401613c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfe3d9d-c2ea-4086-a04a-02b4f5b4008b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6379cd1e-6e0a-4c96-9ad5-3b842d01f3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b4b1fc-0ace-4c81-8fd6-dfcbefde968d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af87994-fdd1-41e3-b27b-d57847d2e2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e78555-a7f1-4734-9231-8164a0c53d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf983b9-3c6c-4292-a82b-fd42671f1578",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510462d3-3cab-4c0c-8197-570c31d7099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e684f95b-f5cc-40da-9219-e663b2b25d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1ef5de-6df1-4cc6-9b73-4db26dbdd103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c951d2c3-eab8-4c0c-a004-14420f794e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650e5d8d-0479-4687-a445-7a175a5e4970",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6498a3-f344-42be-b30e-ac50d358a6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fd2860-32af-4989-905a-c440da114b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80c065e-fb2b-426f-b43f-1ff21e41e50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d68e996-4ab1-4fc1-9ff0-b8324bfa8bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041fb4d6-c68d-4843-8cb5-1f78377dffa5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa339169-06c9-4516-8e8e-dd973c90c1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833e8ef4-c595-41f2-80a6-f606f42a2938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a50eb58-d025-4fae-836b-f0af21bb9868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "063f829c-b730-4f47-b36e-495b88ae1ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b1bdf4-866d-4003-8e57-326d0fb726ab",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325367d0-0292-456c-88e0-e81047849510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a310b0-51e8-4a14-81d8-eee3b8f51805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9007e11c-f7ab-4967-b42d-cacbe74cde3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9211a40-6072-4f8c-b125-23bca2fab7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc89999-251c-4380-bbf4-389fc28522eb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e3ff62-d212-490a-99e7-0b188486e726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8303921-40ef-431d-8e10-2007fd486b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6889e1-b722-4540-948f-fa2c2e1f6bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "605474f7-4621-4592-9e04-c856ca674cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158a3879-0d4e-46cf-8c62-65b41ab57ad9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63020188-0dc9-4c73-b3d3-480644f2b5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f485898c-8d5d-4e6d-890e-c0539900030e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df08de5e-c100-4314-97ea-4bd4afda2627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c40617-7ffd-4d3a-b9a8-723c7b8599de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfdf85b-04d3-41e3-bb5b-f103dbe5f3e6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d7124-23ed-41db-aeec-9cfd15572d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd6a9e6-b6a7-4f62-832c-ecc28b845360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eeb3c0-c322-4c6c-9797-4123a8e2edd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae06ebd-b453-4397-941d-865bc6bf5aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6525b870-985f-4905-b559-2f9d53169a17",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d26e4fb-dddb-4f2c-b83f-83ace9333e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213e53e8-06ec-4cd4-b9b7-188c868a0d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63b1188-fd6d-4c72-bcfb-122aecc5e981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e55d1b3a-4c20-4e77-8fa5-b2422f8fee86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da19ecd0-8abf-4959-940f-53b34f928a46",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215ec5b2-51e8-4ad7-8ba9-ad8b88c48fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778ae590-5de1-49ca-9829-9506277710f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a12206-336d-42bf-947d-75e08b89673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ad0d17-6e9b-45fa-afa7-6df3aeafb1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f0ddc6-6582-46c0-b4ba-bb6205d42a35",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b00396-94f1-4bc6-906f-3a1cbc17f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6acb16-b0b4-4357-89d7-86cec7dbea13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749aed88-8f17-4570-92b3-a7a5ab523d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a890cd06-198d-4be6-aa3e-05be708a24b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2e28a4-c04c-42ec-ba5b-b1f98ebb7af7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3647436-645f-410c-8e9c-fd800161db91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6d33bd-0bfe-4d5e-891a-f875e934f9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980317f6-0007-4995-a153-18057399c711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "375a49c5-a067-42b9-b440-699c54a0fe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b711b0-f41f-4189-9398-b21dfee0ed5e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a79b2-cfd5-45aa-b6d6-22db27c44988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae070b29-7431-4bd1-9c26-6ca411e21573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bc9d9e-e3c8-445b-ae94-fbe90aad14fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a72d14-3b84-481d-819e-b1de63c0430a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b081c29-5966-406b-aad9-4d7d47c9d613",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186c9c5c-d49d-4ffa-bb95-c1b54ec5155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964acb45-faf0-4d0c-b238-f80367bec314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1901c67a-c1f3-46b8-8522-2b6455259a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdeb42c-fab7-4956-995b-7f8e6a52b31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ef8837-be62-4d4d-a7e0-a9c7eaca4894",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059113ce-8258-4c88-9e24-d587f7342470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7ac25e-c51b-4f79-9587-25010742756b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bf2780-b6e5-43ed-a711-c3763b7b5918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f54153-ebd8-4ab9-948e-88e71a7f2767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d4527a-550c-4907-b7f1-13906b6ca8ed",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9a50aa-1b89-442c-9c9b-6143bf33f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6619cbc0-5ccd-4ad4-8a49-0ba5aa7bb8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba4ecf6-827f-40d8-802f-774ab6851e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b04265b-d76b-4808-9ef2-81f17af3faa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575c27bf-08c4-4d62-87bf-89e4fa9de2c7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5002242e-a0fc-4e9d-aa17-128dff10fc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e2a24a-d433-4a58-83be-9f339ed6e97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a9c610-1463-4b67-9c15-e59c98ad5b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5accbee-1f20-4f6d-821e-6a9fda575ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9088d0-4c6e-4261-ad02-b5e94c947ff6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28e6e3c-7eed-4569-b13f-a72458fecf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9ceab8-5199-4107-a5a7-82a1e1e68849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc34ec4c-7732-4d28-b6eb-f7d176b3b72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10673f9d-f764-4d16-b05a-f1bbe8098f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43c722b-b7a3-44b8-81c8-ac5040fdc77c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b79bd3-98a8-4476-9337-5335c86bb890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3d69c8-bf7f-498b-a5c5-072f404a1f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235aa9a7-c9b9-40e9-928c-f7a73f9cecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5833bd-f6a1-4070-97c5-ad974cae1ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01278d9-469f-4fa1-a2ea-225c0707905e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16876ae9-1a79-435c-b208-ed4ddbf919c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1d427c-c3d0-439e-b2d0-558c317df0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c66b5a-b12b-4066-a738-5aace7ac0318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "770f2f93-9d2d-41ae-8cab-5848f6d64768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c51055f-ef15-46fd-9a42-dfdb813c3055",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b03fad2-889b-4816-b0d8-80a2559524c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828529d0-87be-456c-8430-7005be0e1423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebc6df0-7aa9-4e06-a75f-37323dfe31ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40131ff0-fe11-417f-9741-588e5e5f2c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0387cb7b-b37a-4b3f-bf5b-eac2471adae0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2301d1d9-c02c-40a5-900c-4788f466de17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54ddf37-950f-4535-8366-bb06b623c9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff20274-fd5f-446a-a244-d67f6870e71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a97115a-ac6e-4576-971e-968ba3cb88c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782d5b60-79d5-462d-8026-bc98d605b040",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b443583b-2f64-4fc1-a34e-73f141022a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ba9d06-2279-42f4-b0e4-0256b0613e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c17d12-c524-4951-b698-3a024cf7386f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "696f921e-e798-472e-abbd-192918afde30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920821ab-e991-4338-b235-9043da129b46",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76133c40-12bf-4c9f-8349-ddb37b6eab71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8ed8a67-48a3-4ade-a279-0553511e152a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd259c3f-8fdc-4d25-9ea0-12e7a16b1f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fba7c4d8-0364-4191-a9ff-78080d200b35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82a67e82-8bbe-4019-9e63-f7ad2aab0c17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdf4ec54-cd9c-48e4-82f3-0cc4f55e3c05",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b32e29-cc68-4191-8570-9bcb23a3fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ae13f76-ba99-43a2-a819-8abaec4011ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d67762-5895-4ae7-8507-a3da5b07d38a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79d2335d-0d00-41ae-8574-ca1b781f9e8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01aafffd-8f17-4e2c-968d-6832a72c57bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de92ecc7-48f6-47fa-b973-6ce7b5f15388"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37905a48-6624-478f-8d89-8a422dbd6a35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9e4f63e-6911-42a5-8358-4abaf8dd17dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7edcb42f-fc66-4d7d-bd59-dfb8be8d0fe3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9be16085-cf89-453d-9a2f-b030d208944b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5aa8fa92-0fb6-4fa9-8774-d4079b5bca4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7663d8e9-c8e3-4eb4-a8ce-2a57661f4ed8"
                }
              }
            ]
          },
          {
            "id": "80a22747-8ac5-4956-9661-d7fa7252abea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e8acc20-5bef-46bf-b03b-e60ca54f4a32",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45e718f0-303b-4283-8bb0-391a431a1f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01c3d81a-8ec3-486a-8674-613cc9b37901"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4c1cc5d-68ce-44ea-bd1c-40183bbda3f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d3fa91f-574c-4598-be2c-38923c1f21ab"
                    }
                  }
                ]
              },
              {
                "id": "8a43c8d8-c390-46bf-9447-5d66a50fefef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a193a842-700f-464a-9cec-f676e2c7146e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47663777-922b-4d4f-93e1-b14984289a43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe543a8a-af1a-41a3-87a1-6c9c318d63d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23655e24-cfe0-4dc7-a788-5aae5679170b"
                    }
                  }
                ]
              },
              {
                "id": "e51bb3f3-2723-4694-b802-ce71f158382d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fdc03ad-a66f-4ea7-9a0b-acdec387cd8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1949de73-ddc2-467e-84f4-7e8492dc226a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2bec588-da2e-493e-9cbb-f4643dcf0690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cde27aac-0cef-422f-a44a-a9e765e6d061"
                    }
                  }
                ]
              },
              {
                "id": "282bfcf3-243c-4f77-b694-daa8f752678a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "147f395a-33b2-4e1b-befb-f73cc10e5333",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d41c9fba-81eb-4b2f-ae83-68e10cc34347"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68918bca-0322-4d1f-9a0f-411ba17f2a07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "74d5c526-10e0-496c-9991-6eb5e5c63c74"
                    }
                  }
                ]
              },
              {
                "id": "031de737-e2b1-40d0-94fe-c502a9d13cf6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72b06f48-414d-4de0-8229-e3bb842ad27c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9a26ac1-1d2e-4bab-bb1f-9759ae2554ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b962c12-88a5-402d-9edc-f710c5603bd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "61c0ccff-8ab8-4fa8-a4be-b89974c8a741"
                    }
                  }
                ]
              },
              {
                "id": "26b95239-5862-486b-89ad-b611df0e016c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "313d471e-ed69-4b3b-b04b-3af6a5a63b72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab3a527c-c404-4070-a043-ca5273c1b1d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14d2952c-0a56-4a23-9adb-300edb00aaf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "155a4e40-930f-4b2c-844b-168eac960df9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfec3d26-f582-40f3-90cd-08fb8f89d157",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce70a2b2-f718-47be-804f-33e2506a0f2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e40d4e0-2dc2-4f35-840c-4e933d35a9ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "efb4d418-775c-4f0b-946f-39dc5250dd1d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b391727-bc6d-4a9b-b144-99937d2c01d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "70e78d9a-1065-4440-be35-ca3fe3fcf00c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c09efc18-4ad0-4197-bbc1-2a38e5fd6ae0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76a6633a-7590-489f-bfc7-9ead0a3f3c35"
            }
          }
        ]
      },
      {
        "id": "51bb7c5a-973e-4990-8714-8addbceeb41c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ee31b21e-944d-4b55-a09d-2e4e94851462",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35cebb45-2cc4-4428-97c4-7fc8d1ed9630",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1a9b03d-1d51-4910-a58d-e621ba492662",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f2d2e5-bb6b-4091-9a1a-ac49d9358e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a5a879-c693-40e7-84eb-3ab274087e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e312d675-230a-4095-942a-5ca1527a7b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6921bf9-767b-474f-bf11-2822c38d8068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6723e8cd-c91e-43c2-a551-3cbc7d4c73bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3206d23e-abed-424d-a095-112d7e0cc83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff21283d-7a8f-4047-be83-9385b0145ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb642ac8-2ec8-4cd6-ac82-644d03b04ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62918da5-1fc6-4f36-8602-eed55a0e5090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c409e2-0020-4a57-9437-ae28cf815065",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebc752-e3f6-4afd-a587-3486348f1dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa28cc41-a452-46a2-92ea-269866ea9e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbefa73-6d67-437c-af1b-afbdbdb76c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "316d9093-aac4-498b-9e2d-a1fa93ce8cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e796cee4-37b8-41af-b6a2-4713563407a5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc6d959-2362-49cf-9403-7b84f334afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0adf11-89bd-4253-b2e2-42fb15f289b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9c8ebb-c752-47e6-96c9-2dbc8b50ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc70a0f-f2c1-4b78-8500-132190260e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36dfec6-f22b-4bd9-9754-65431f6558ce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2f5576-3323-4c9b-8d6f-4a8d3db22c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3894991-c8f9-4f77-8caf-40c4fc36b714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65240416-3b30-4d7f-a4f9-5423339b8805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93107bc-9fef-4bbd-a707-97c7b2d01c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd04eee-9f94-42f1-988f-dc16828a063b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6adf4fa-ddf9-4f3c-a78e-558a128d2db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5127d48-2796-42c1-9705-3387cfb6d9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9c907d-96a2-4e93-aff4-aace68ab6d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "098176fb-ef0c-4cd5-bf77-3e3709034a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a51a7f-c862-499f-a154-9eddf4ae1e15",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b9b4cb-a67a-4b6e-8e63-83c06d0d648e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bda0499-b63b-4abf-b43a-6d4b3d28c3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af11b5-7047-445c-a5b7-8ad2871bb94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c51ce0-f72b-440a-b312-d8204a6e9536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e5f3c7-c377-41e7-9884-a37bcc01fd07",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b894c1-16de-486a-ba2c-85b0e422f261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00d7dbb-0870-44c1-a85b-659ab1b5923c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b16674-6e65-4095-a239-2885ff587506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "900ad67e-1579-493c-8e10-71e22387f669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fa09b9-e49d-4311-863c-3b56bd2d7d8b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd17605b-c616-4dd9-8ec2-6429c17861d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685c9ee8-273e-4bfa-b0e7-5483c10a1ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c552aac7-e4b8-454b-9edd-5da25f06c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30821365-a18b-4077-8b33-34c635e520a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1b637b-425c-4c24-8701-8b450f56d324",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb055fec-6fc7-4845-9551-23b7867d8c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc0904f-98a5-4f11-bd8a-39a4cc37f8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99214ade-392e-4c3b-b8a7-6d0f72cc8434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1b1f20-1082-4d9b-a76a-a90f2939fbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a70edf6-8c0c-4548-ba07-92865a7739d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54784a94-c1fc-4d26-a141-ebb1269a8960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aab779c-5651-4a02-b5c4-5db91614a163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887378ad-cd12-4e0b-a3d1-691ad90ab94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "547b6594-22cb-4086-9865-14031d081770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5baa4a0-0083-4217-abde-085b8b922223",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872a1b04-c59e-44f2-943f-1a056ca20acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2099d32e-284f-4254-9d16-84865872e280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b87bc5-be39-4220-817a-91de8316637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "107ee285-e932-4d2c-94b5-fa933a33825a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d4a563-4d48-438f-9f2c-289beece7ee9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bf58cd-8c37-4aae-89a3-ae324df1a2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cecfbd-22d2-402d-96dd-5dfd50a3542b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e7bd76-4db5-4700-8459-496c9787c41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b077d909-ac2c-4fdc-8dfd-e3f892862a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2571e23-87dd-46df-b264-7c0adc4a7093",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13cf385-b5c3-4880-b86b-388210f6cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14ae3d3-5741-428e-9a24-c514708fb4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a4b7a8-7814-4514-bedc-230dcb295776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "122ef8d3-1fc5-4cc2-8169-691bc483d1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c843080e-5fe2-4ef6-bc61-2b6891f2ff3a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f1fb5c-0c15-44fe-9062-989d572a1fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743fa91e-6efb-47f8-9f39-e71902b8c659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc94e1be-abb3-44fd-9e2f-8b4d77795565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5ffebe-94d2-4ac1-b5e9-f31eb1bdb838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64a3ba1-2bbb-4c51-8f58-075219a1afe8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a99e0f-5f1b-406b-8e3f-a7bacb17391b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddccec2d-95fd-4f9d-9c8d-edd4749680c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a352ce3-3028-4539-9df3-3b7365c8d126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a5edd9-5b08-4f44-86a5-fef94a6d9e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0658f3b0-3f6f-4496-bac3-616759381ce7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13510fcf-c480-44a7-add9-c0dd3762bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e573927e-678c-48b9-ac07-639e40176010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f4b622-e242-4115-af6c-651f92ce608c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a5d449-c07d-410d-8e08-05d66b593e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b51c40-8328-4dfb-a4c7-067ca516ecae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d684c98-f890-49b9-9433-b7cdb885ba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1204a9f9-d80e-4c56-8947-c30d3dc4f44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a0cc06-4387-468f-abd1-6d8ce7be8f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b29ae2-d6b4-4c99-a96f-8f640b0caa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d6adff-dbf4-4537-9e24-b41c75fb0bb7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df6eabd-8996-4e99-ae08-c773d2d54935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fa4ecb-cbf0-492e-ab9a-a9f9441c3475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5679626-b6dd-4a9b-a4c2-39e366055a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67e1789-74cb-4f94-b685-16d42c01e286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6148e33c-b97f-4606-9f8e-15820d54388b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3e9ed4-8595-464e-86d7-a63e7c30173b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a837c1-b4e2-49f7-a313-9c5801074b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0a115f-e369-4c20-a090-4d1febb1fc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0468c7db-6358-4fbd-b6fc-2aac02a503c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7afb0cb-f20e-4cac-ab5f-de5ab394594a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc2dfdb-b0f9-441d-b10f-08b7a8850380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53328cc-de3c-497f-b75e-9eb66d22009c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682d7b05-95b9-4388-b857-c56d8a098757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "165c35c9-0303-4f2c-86c6-c18db133c51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ad1990-2a14-4c9f-8bea-51f2e8c14b7f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01f7063-f0e4-4929-ad1e-c5562923b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f50357-0226-4a6d-8b9a-949b350d111b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c41f6f-3f4c-411c-a25e-fd8007112c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba5344a-e5b8-45ac-8c55-f55d3813034f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ec2245-d762-49e8-9e13-3883e724b643",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f980d70a-3adb-4863-9611-73a3b2ea199a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbc23de-573c-46b0-9fc0-1d6387eb8d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39062054-a862-49df-9ad1-18d1820c8934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ea173b-e673-4ed7-9bf5-f093b6cddcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cd2612-782d-4b95-b1b7-b2ac461cadc5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc8500c-9789-449c-ba51-4803ea55b021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43ce6f1-dde2-4dee-b529-da00afdf9888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59c570c-ab7f-4cc3-b013-2fbd102e5655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "974f4c04-72a3-4f29-87ad-0e2755e171d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7174ba8a-8f14-4473-ba83-6b553178fb61",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745821d4-9612-4bcf-a5b1-4f8b61a24430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac721e2-c1a9-48d9-89d6-6c4943333e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e26822-8740-45d6-9c09-d99662c0ae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef309019-a0b4-42b5-9270-4f9ca29636e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b61e26-f4d4-4e72-90b4-57c4156eb3aa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f14303-1b9e-499a-9e4e-b0937631b0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3432e0d0-cc2f-4deb-b465-765a803f6811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cba8288-cc0d-466e-9f5b-55f8f94a452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19066a5-ebe5-4e72-8f2a-1b774e3e3d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e655ec-d2ba-4604-afe4-0ef97758e82c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8b834c-ad6b-4cba-b6f0-8031db5d76e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551ad655-6926-44f8-a2e8-7b606ccfe9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a717818-6a41-4fb9-a50c-9474de8826b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c994e15-0702-4880-9163-4012fc41ab16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06bb672-ee67-4a60-bbdb-0418c7d5be5c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac8ce5a-30fc-4c81-9ba8-be56cf5ab375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d91bb25-0377-43ea-be9b-0ab87a916c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c557db-85a9-4187-aac5-9f7f0e20c163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00be04c8-1194-4cff-a8e0-b942aa903e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cbad16-ae57-496e-82b4-71cdcf7235a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1088f5-9d30-4359-8843-318ba78c2c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e50c051-a920-402d-8852-5d19db6d33ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7df551c-fb4d-4d4c-a554-ac57176f09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9e4d35-8e49-4352-bb8a-464a70a7c187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3134fe77-9d57-4345-a205-f3b88decac29",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa287c5-52c0-4e02-93f0-0ebc31c681f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c113e9-46bb-43f7-83e1-b635256a57d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbe7434-6b43-4e03-9ce4-83475e5e841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39d4e5b-bd1a-496e-9069-4595ac5f0b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a324c30-b3ba-4fa2-ab99-96b6d0206ad4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a4e4f7-bfd0-4c45-943c-f47fa5f3e3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2004ae1a-ee40-4c0e-acaf-d3926cae749c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04543c36-6a16-4b6e-a096-7ca384ff366e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9a135a-b368-48fa-b10d-cad172f6c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebefad3-067f-4355-9783-73e6aea444b2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4410d26-dff6-4279-8d15-82edb6058d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0771d9a-a70d-4eda-ba5d-15cbc32bc486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a73e44b-81b8-4663-b5ab-96089ba66f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c322712f-0bac-4e30-9041-149e1ca6f030"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4cfb150-399e-40c9-b8c0-81f30a3d9be6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6732e73d-a034-46b2-9e21-d206b52666b5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8672500-615a-492d-bf43-1f52b1e3f8b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "709dc483-6212-4259-b491-f62602e182a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054d47a7-316f-4496-ab54-cb462d5ab5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97636b21-646e-4de7-993b-0b35d75d96cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13b52716-8a59-4a17-9755-06c4f1b9c5cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4af00929-abdf-4f59-b508-41879acdec10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "134a79a9-19d2-4b7a-ae8a-eeb64555da48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42161d69-f1df-4faa-a805-0012cd9d8cbe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a46428ec-e64a-4a4e-9bb9-231203390254",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a7a2e21-8756-4ff6-85ad-a6d4ee1f6a54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d742a0d-5656-473c-809d-dee0eb92c0fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9569b919-ae8e-49c2-8f43-2afe7cf654a1"
            }
          }
        ]
      },
      {
        "id": "b08a136a-bbd2-4244-bff5-3ee51170adab",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bf96832b-9955-4782-9096-f4991f045d90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d95261fe-49d6-43e5-9c1f-98a46c115771",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef98e599-c88d-41fb-9d66-8535e8cae746",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7cab8b-6a49-4ad4-9d85-f0b37b4dc266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae69427-7078-4248-a68c-bad93df4a055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef35d95c-a304-4e3e-be4f-1025a69fdfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "751e9ebc-b26f-436c-b6f1-803cf9b3ded1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbd32fd-e51b-4ddd-805b-b843d9694f95",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41193646-1656-45f2-9b31-6ef2bb5c4143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e731d59a-eacf-4b7f-917f-ddb4f0623b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc04a8a-7cf3-4b26-a087-b4f9cc3fd7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cc118e-6565-4610-95d8-73c1a51333d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff185909-a976-43e1-8c75-9a029465b0fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf1232a-e533-4024-8f55-8515fce933f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da04e1a-8fcd-4dc1-a2bd-475857dbe5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8baf36-2ab8-4c24-a222-e14da121177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f67f00-8575-46aa-ad0f-b28e2d59cfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a92565-c64a-4d32-8701-a96b7e6a7a95",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c566b7-fd95-4f51-b6dc-b5e6123ce8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbe0666-358f-476e-b56f-4960832f286d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a27403e-9681-4ed0-9b68-a9f7bd2eeaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53134a1c-c94e-4fa0-8f98-a15a1bf9c9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9b3fb6-3829-4021-bc12-bbfd874c892c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d2e098-c6fa-4c14-9eae-31370c4ceaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0d90a5-71d9-44e8-a232-410653dd2487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3213c8-99ce-4eb7-bcf7-e60b6afb8400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d369263c-f4d3-490b-9d92-237cc505111a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd67f7e-d75d-4462-9291-574e9b51eed9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae196add-4c7b-4e67-83ba-be45f1163208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52652d7d-5cff-4181-963e-6aa028bf8055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467a6e65-45d7-493f-bfe7-e0f3030193bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c7131c-9ee5-4ede-b72e-ffa742e5d36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01dc514-527f-420b-b1de-e6f824af54cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bb13be-25a1-4743-b556-86fb8d499fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9335a58-e011-44da-8c1c-bd536d356c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37d08c4-2d82-4894-82fe-bf2356e9fa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a3d6d0-68bc-4835-ad88-b64471c13dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4315c38-ce31-4e27-aec8-3b1ddd663481",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15217b94-07c0-485c-8a32-2dbdcb9b0dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f40244a-c27c-4996-ab78-058ae895e86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac50678c-9250-4e41-94d3-ca61e9c9dcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "503fc0b6-0ab1-4752-8759-9ebc060fc061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a60306-155a-4a61-88f2-54608f46ff99",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272d59d2-015f-41a0-9d7d-1c2bca72f067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d34d8b-2875-4453-ace8-4d5b54287d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eec86eb-91d2-4387-8373-77f4ba98054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "368e8368-78b4-4542-83bc-50eb3a1140ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235b0ea8-c8c3-45c0-ab18-ceb086519a6e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464f6034-50e8-44f4-8921-93cb0b7cf951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d12d9a1-0258-4cf7-affa-fcafd1b6f50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cd3e69-7d84-43ff-887c-3d59545354c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44d70ef8-3141-4584-8896-7d492b44f96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faccfbdd-cfd1-4a36-8eda-cc192d7174c8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd1eb1c-af16-4658-95da-9f166216647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272ce388-40c2-4e77-b774-a772da453bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7088a3-7c69-4aec-9bc3-65b65492a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "668e205a-c4ae-4f28-ac8a-967401d72f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd03c6c-3579-40c2-a231-324f5df1621f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141ca158-ca54-4b0c-9c47-dd84b1151070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028d307c-bdd2-4955-bbf3-da619c3e5a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09369723-31f8-4d7c-b6c9-716d018af642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a03ce8e-e784-4531-b330-77ea38e38c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a7c71-ef5e-4ee2-a2dd-6e0f195344b9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83c033d-2350-4449-8065-2ba7fd89f524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463ab8d3-37ce-4353-a3f9-4caa142384be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7599cae-cd37-4314-9832-6e44f0c1347e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86443b85-146a-4502-b72e-f767ff19a7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88870d0-8fc2-4962-8af7-6da9a372214d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b7c844-8a2f-4ce7-bce2-5fe5e2084adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a801f51f-e1b2-4819-828e-f8b715d5a477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d24d14d-16ca-436f-bcbb-011380af1536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9495a05-9233-49fe-b871-851f20683f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28857eb-3c51-45bd-a701-2b90bb1120b9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22065c4c-30bb-4f9d-a0d5-92ee5b1fc503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3847ad-10cc-481b-a438-900beac6c4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd34fd8-1bf9-4973-9327-deb66a811834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5f28cd-ae4a-44c7-9fc0-4e2c3b698ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0160f575-57af-4d76-95e9-3cbcd73d7167",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c16246d-0d5c-47be-89bb-8aafda115b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfedaa02-7694-4335-98ce-1f5cf3bec639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461b2939-6844-4613-99b0-7480191d7e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "44969db5-379b-4431-b4d3-725c71014f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d827151f-dd0b-478f-8d42-ef989166c860",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a426497-0e7b-49fb-a80d-1e151deed3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e036c35e-805f-4981-b906-04bcb6728eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de24a78-8066-4005-b905-d0b09d0c0edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "36254b36-cda4-4038-b582-a5623d025735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fc3439-eb27-4070-9e59-938471f14c44",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7fb548-2bcd-411b-a5a5-7d9c36525bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a6caa4-765a-4b39-ab7e-a50dd44ef6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ace7487-43fb-4e5f-8101-0f8241a4781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d35d417a-d024-4598-8dcf-b3f7112b496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e96eda9-c219-4fdc-accd-1871d895af4a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b109c40-4030-4fe1-be34-1f19447843a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58a910c-e70a-4b98-a461-dbb4d2a23e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcf09ce-36ca-4cef-bb51-cbcdeff281ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0625806-5e86-49e3-8cd1-d2119e6be760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461983de-b559-4512-8e14-832b9ff53647",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecd1bab-4514-44a7-b0e9-359a14fb81c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35edf5fd-4d3e-43b8-900f-353bc129c707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9ddf6b-6836-456c-b6a7-5e24ffee103f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c59759-62f8-4e65-ae21-0e9eabf06461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8af863-69b1-440e-81f5-f4f4ab305384",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b713350-7937-4562-afe7-645ae4034d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927028c0-874f-494e-8dca-6e5306735543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4624647b-4ced-4a79-983c-363579d9c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8749e07f-66df-42d1-892c-2e024d72cc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9c03e1-b978-4c9f-bb49-c2f575653ed0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92733b30-ddc5-4b17-8cd2-c5fb6e8017cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7822ee25-4fd6-490a-9065-3c8a164e7436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a937fa99-672c-4f0f-a7e7-7c49e50d2f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b695ff3f-0263-42c5-974b-fec5f6842238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ee9671-8ac7-4f2c-ab5c-23400e9d7584",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b66c114-d574-4fa0-9658-6e065065cfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb117a7e-39a9-41ae-a408-d537c8224500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55f9369-4c87-486c-8644-5f012d53468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b82b85-6e7b-4d3d-802d-c173573a5de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1fccac-ce2d-43c8-af84-16833a2482cd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b458ebdb-de39-48e1-9d6f-1de64c40008a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c4fa36-195b-47bb-9e78-917790d34436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e38f70-32d4-4480-9d29-a6ff0cf31e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "718b45ba-26b3-48c8-bdfb-1f02b3950d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546d59c0-b473-4fb8-a110-e3abe02d24a7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e114fc38-88ab-49bc-ae6a-d9b193ab6094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5fb9e3-e24b-44cf-b093-08fc2cfa127f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5808639b-6bba-49c5-bfd9-8b677af61113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "947f6776-9e94-42e7-8d94-03664b3799b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a28f330-0cb1-4330-a4d6-aa625243dd30",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f150edb4-0259-4358-be04-608231417123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3686b9a0-5b0a-4580-bdc7-50290abffbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2284a6d0-454b-4fc5-aab5-0180b554bc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4cab34-f212-4311-b207-f4731100197d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad25d36-7687-4afd-a377-9744b638ad4e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a72e20-148f-48a7-8fa7-63e63291335a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7da356-3791-4e06-ab0a-87d5676bb63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47064055-84df-4879-8546-e4593af6602c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d021aaee-bdbe-48c7-b64e-dd208b4d5259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1a8a20-e59e-4270-82fa-18b6568ee910",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48439682-73a4-4eda-861e-6315ab0d232d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b050d732-f368-47b7-81b5-fafafd11dd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d964bad9-841c-4e3f-a492-2f84725fdb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1751344d-0d12-447c-95c8-086ca0e77224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13401d84-6f43-4022-925a-aa5276f8b0c0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2374056f-9b08-414c-ab37-0fa481bd7b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48efb1b6-6dbb-4bb1-af8a-bedb48a36ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d24ceb-eea5-4137-b321-2fe16c8178b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae307e5-483e-47d4-a651-19fd9e387713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94e740a-f1c4-4330-868c-9f2a25f0ff68",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7466b7b-391b-44a2-9070-21e1d7259fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732e770b-f6b6-45a7-908c-76df7941ceb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400f2845-8cd0-46a1-bb32-e948009ccb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b0ca4e-ad50-470d-8bef-a86f922ea590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbd3d56-d991-48ae-ab20-c562cb640953",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8190a7a6-6ae1-4e50-96f8-383f8691ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a4faec-49bf-4736-b1a7-4d395a3416ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81258d37-695f-47d4-bd30-3ef7f8296c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb379ee2-643b-4306-b000-476526369de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f897e58b-b7c0-4532-ab35-c42d7b650fff",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be9fe72-b461-4b75-928e-863f9d3332bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c6ae0a-a12b-44e3-bf8d-d5323e49f9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3c979d-5110-4470-8c02-55933791859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf4ce26-6820-4b0c-b1b8-37073efad43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cade477f-6496-4828-a0b0-d3217ce5e657",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0ceecf-5313-41c0-a8c8-8dc2864eb3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ac5301-baf7-4423-a9c1-2b0e9d21ffa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a469086-08f9-4a9c-a444-0d0d36f63d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc35fb6-bff9-4b7c-9b48-e127ee2b1502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d02f776-c57f-449e-885e-75558205a60d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc12329b-c42f-4438-9633-3384cf594c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfa5d3b-9e31-4a3e-8c22-eeefede126ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d1dfe5-822a-40a4-be2e-f162b6df200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe6c470-adac-4267-a741-ef853a7be4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d669c4a6-e509-4c06-a48f-c06b8632f524",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10b3534-1bf1-4fa3-b7c1-2cd9860181ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d818ff-7152-49fd-a777-0346dc29cabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e5f07-8f18-449f-a1bb-e0e018eef96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c298a77-552f-4f32-a712-b54d59a69338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93225bd4-7877-4cf5-a8aa-258aba5774e7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4afd06-cf03-425f-836d-4c4c2f5c0631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a816019d-44d0-4825-a98f-a20ddaee273e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e46303-076a-4c24-9a0c-b7d760553fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ddf282-f1fa-4575-aeb9-5ff9eb208893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1ab1a5-98d6-4a1e-9ef9-16763e493ac8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4c958e-7456-40e4-948f-d82fddae9712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777f0ca3-513c-4195-a0a2-08fb57cc3e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3d5165-e0dd-49b2-bf6f-6d396f7e2337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5cec82-3885-45c3-96f2-7711a323bcdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0692eaff-0398-45aa-b23c-b32cb3cf7e2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3c55c8c-1c2a-4368-bf8f-8c3d9d497f7b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d2452e-b54a-4c05-af10-8fbcd384704f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4c8044-cffb-4707-9c63-7b82e994a53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3215aa-215c-472e-ad2c-d5fd0c9f0f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c31b092-e780-472c-a719-ae3b3908f6ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fbc4fcf-acde-436a-bfd6-98b76a15531f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "786eaf46-d501-494e-aec5-c17cb56b3f8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63f62f9f-c09f-4a9a-9950-a4bc132b2134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fa4bd3e-4102-4032-a970-9ad730d27fb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de7dd836-332b-4bac-8fbe-327cd5804b80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b05015f-3049-4b22-a64a-677986848e95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c36fd84-aaa7-4a9c-87a6-0d5a34b1592d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06fde5a8-9417-4dc1-a66b-445eabed4cf0"
            }
          }
        ]
      },
      {
        "id": "d2c503c0-2ac6-4aa0-86d3-7ae654ece027",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d865622d-e495-4c31-a4d7-803bef9e573c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7aa34b6-b845-4c3b-b214-cf5b97aae633",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "510f1fa1-a865-492d-b8a5-ecb20669d0c1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c27b43-628b-4c1e-97b0-527da8775d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b8858d-1811-45d5-97a4-0d779271dc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25649380-7f9d-4baa-84a4-51b737f7aa93",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123d9c59-48cd-4973-b288-6c9534a363ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee822fb-cdc1-4243-8ffe-b3803b7e1e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2cab7e-4a83-464c-9a09-eacc9e9b482f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba8b937-973c-4501-a39b-fd9f8e3f17f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb30af9-adff-4c9d-962e-cbfd72ad8362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55508ac9-1334-46fd-86cf-17ff8cd71b4c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9742d00-b82d-45dc-b820-efda2ce22195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27133749-4b7b-4a5a-876b-c43718fb361b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c1dd2f-75e3-4a6e-9812-b17eb1e72a43",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cb9808-f777-4730-be59-9de3b9cf9daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cc252c-c0e9-49ab-b1cd-cf1fd23fbf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91a4479-1302-4bc9-841d-873b5f338b4c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b72765-2d46-424d-8c63-514a9d8bff4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01811cac-a492-4144-a151-45a7ad688c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424af21c-86a9-4a05-80d2-6778740807a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4461b3-67d5-4eb0-95d8-78f314687351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145702fd-da7c-4b73-95b3-41a5446b0c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820f706b-6885-4df8-99b8-82c4e9040a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e070ddcb-62b1-4f8c-a630-0cae129d2f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1affc0-27c3-49d9-aa3d-eec6467ce4b1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adca195-5718-4717-9e69-1bc83ca305be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a5df81-5aef-4613-a9cd-52c131455e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68647cc5-3367-482f-a24f-1235ce63a2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605b1cd9-f3d9-4b3d-b75b-63270a02aa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfd1a51-1483-4f58-9e50-94b4fa81550f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8e8879-beae-4d3a-b231-ddcb03b89027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565eccc6-05c5-413b-91ad-8daf9e65bb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09554d1-58b9-4d21-9eee-3559bc04da41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb960782-23b2-4371-8334-d18866d3a7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155f7343-7972-4403-b246-3397d85fc30d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaa2f30-f671-42fa-93b8-24e4d5ac6918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71a2968-18c7-4b4f-8635-9466204f37fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a433500d-29d5-43f5-b620-39a654fc7a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48832c14-aa82-4e53-8f8c-bfa6ad5f30cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672e9ad-04c4-450d-b4fc-8a35b080af13",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c85b81-4252-4559-8412-4e73ef922de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8f6b3c-71e7-4e79-a5a7-d686c5b4fbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9551e9ee-9cc7-48fa-9d81-afea54499545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ce9a52-223a-4ecb-9319-559adb055e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2664922e-e7b8-4c9c-a77f-19f1b6f7c1dc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509870c2-c0ab-4588-974a-24727b0095de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084b95bf-66f1-4915-bb45-be0ec6363e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4774522a-b7d2-4a87-875c-f624ae0bd1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d89006-bf9c-4a3b-bbc8-1cc5d938e602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe972a9-1f4a-44b0-97db-dd41198c0f12",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023276d6-17d0-4d53-b841-ba2afebd2506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25eb8c34-2933-4560-8bd0-c8fb2e4cb3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57877675-b5fa-4063-a09f-6a111859fe90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d18fcb-20b8-401c-ad7e-d83706a54410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58ff929-a64a-4415-8c82-a270da8d2e57",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1515f3-7f71-42b0-9cd4-a7f80cef25ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9081784-2d25-495a-83f7-9f413514723d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c018037-f515-47c0-b471-1f156e2bf315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376ee097-e6e9-4437-a370-7fb3b6769718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3460c69a-12e4-4804-909d-e5b9fad8bb6b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0799f599-1ee8-4e10-a73d-0b5e20ad64df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb831601-702e-4fa0-898f-81ad55731b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24ec425-77a5-4c1a-89ac-47440341c27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2c7f0a-e077-49f2-bfb0-2c7bdd7e1849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dce6f4c-aacc-48f6-b7c8-bac036ffdcc6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5869a2fc-2749-4f80-9e20-5abaff8e3175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "105f8b19-ae48-46a1-8300-004b3edcea79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d429b47-ba94-4c13-9a4b-21b6620f3f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff56ee9e-44a8-4105-bbd9-691546f5b4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fee9ef-d4cc-4f09-9bed-6e1ae5e94762",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935c66a-029a-4550-bcf1-5f8858433c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d268e7f-dff4-4fde-90c3-6cc8e75bd772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b77d90-3458-4b36-87fe-a3c4b9846e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c50ba89-1a8c-4073-a289-41ef034bc1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e30e64-3b69-4b32-8185-124f7b12273d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca172c30-73e8-4912-8e85-8e94586a30a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7316e877-bf3e-4a82-b601-e6651fba17b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb4add6-5e0c-47a1-a06a-62fbdeeeebae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd9aed3-b098-492a-852d-83e87b845a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b274f86-7f36-4eb5-bab5-95e2782d5620",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9669b07b-e059-4464-bec4-670a3649d929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7a84f3-d4a2-45bb-aeab-62762259a33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560212ce-bc88-4aac-87a6-2e93029a200f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0688e9d6-108b-4029-9bf9-7e0604ef5388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f592c1-b0af-483f-b8ec-2a8f6d108bc5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e554bd80-cfda-403e-bf68-d8c64a4c63f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc868c06-2722-4066-a144-d9c722c1b09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6ea71c-7d0a-4a80-a671-88fdadc74c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca567c20-b559-40a3-9242-a516331a7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec21dde9-fc38-4b0c-850c-5c0e6ea97020",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b534033-ff00-4ad6-b5c6-4d34d2d9010b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071000b3-f97c-42cd-85f0-e939d3c68697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dad34d-e309-4cf7-b166-8c5a72f587b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c3a4d0-8c44-4f49-a8ac-8af82bae7728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee27815-6c56-4058-9908-3d27baeee12b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f207b4fc-6d62-4435-9ad4-8071a79463cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ebabda-bea5-4b1f-b4ce-88f93bcfbd37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1783c13c-1cd4-4666-b73c-7d1353cfaf76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c2b0d7-4809-42e2-ab41-d3d8277bf42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb2b7af-c666-4c86-b39b-46dc26e008e9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e2c5e9-9db5-4060-842d-50b24fd6616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fc3c8a-4778-4075-acfd-cf570d87332f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e61059-92bf-41ff-a447-d0d4151cc70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529ce89d-e9cd-4d3f-b7b5-5af4203c68a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856d6187-6b3e-4940-b38d-5efff881f300",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91167b04-8784-458d-adfb-6078e1010e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c541aab3-ea62-4b46-bf89-993cf7056e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3478d80-e357-49a4-a13a-0c72175efca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24250d45-d22f-4781-8bd7-036860a142da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb0d670-f4e5-4f5b-bacc-f10b142a4813",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82607417-41fc-40bd-b651-f6720a081d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24421b87-6495-4295-9ea4-15d4f9ab6eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb66725-dd1c-4a7f-a030-b4d78eb16bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7379449c-7ede-46ce-88af-ab26f8747c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4979c17-7e0e-4869-9a45-9b59fbe01c60",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f7e41c-cfab-47cf-bedc-e24b970ee8ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2223be2-51a2-4d07-b5ac-9f14bd080320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550b1a7e-dd48-4677-b09b-b39d72439db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83985e67-d7c1-4265-8e58-cd2d0b4d02d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40155398-88ab-44c2-a5f8-001efaf1f93a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb7b84b-6e14-4756-a589-607e338fa0a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6947b9f9-23f1-4891-bef5-e60e5c1ddd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22a9519-554b-4e9e-8884-0f881add73b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f36cc4-0e1f-46e2-9835-bfdc8be809a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071ca4ea-fc86-4344-97aa-2f8c067b21f8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaf7f29-282c-4ffd-acaf-83132231e981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac36b67-e5db-4980-b5e7-4784528ab719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4462f8ca-bf50-4589-9eea-1cc21ddd1fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923b367e-c69e-4211-86cf-b03a7b365f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc189e63-7233-48fd-9db3-090c82f41a99",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cc49c6-9f14-47d4-99b9-b2ef612dbc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6142d132-cf70-422b-8c8d-43f63fb7abe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff064808-6a97-46ac-b1e8-680fa7e712f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08b1c24-e51e-40ba-a2d5-a3272cc1460f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c79609-3ae7-45f4-bd30-0d03df10bbb7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a9f5ee-5f06-4649-bdf5-c2132e720157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62aa3eb1-1d62-48f7-a882-d41e1d9f433c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a07283-2aa3-4781-b162-b531b167772c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcf046e-8864-4a28-abd4-bb0cabd5689b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e99f03-7451-4da7-9206-8be99f308323",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81467f9-6422-4de5-a807-7d49f9d007d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd1fadd5-1a6c-4b85-bb9e-c92f534a81ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38bc90e-226e-416d-b486-e1f906b15e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea61d4c-1080-4784-b0b7-0ab1d1ec3c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc80d6b-dbb9-4952-a7b2-a3ab0c2c3bf0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e124a37-f80c-4e6a-b3bf-5bf214010195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a92dccb-8a99-46e7-96ad-c01164dc5cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b28c89c-34ec-4559-83c0-7ca9a98cea91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03e7528-7891-4275-865b-86dc9cde24cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cabc2e-ccf2-4639-8fc1-1a6f2450ab23",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad56bf-7cc7-4bf3-afb5-f47404a9ca30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c5f2a3-f027-4f8e-b6e5-e80d7e3f874e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e28bd9-e07f-4dce-ab27-0c93deb99e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709b44d3-940a-400e-8b92-277cf002ef02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c92b7e1-c433-4f94-b2d0-26d482c292b1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1d1dc0-3365-4e0f-a17c-6038a0dbdea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "119a32b2-72ad-4822-9038-e98cb3ca6548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d98f126-d889-4f21-b4ea-2787b81879bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17a2768-6904-4d1a-99ce-9abf090635fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4226d95c-45a7-4ff7-aadf-cf652980c7e0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e77ac1-9f70-40a6-9eb6-429640898b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75b1840-52e2-4bc9-b9b1-e12a1708851e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af979eb-1685-453a-83da-54a357b4a805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbf5b6f-2098-4287-af2e-1c8a0b25c940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eab8aa1-ec9f-4980-83fa-b7844cafaa83",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82862a42-670c-480d-8df9-ac404d52d7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89dec14-1ff3-46a9-93f2-edcb5e1e734e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882418e9-bf94-4940-8d34-f4257c9dd2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fe8940-6e17-4d11-9d6b-385447451682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5254308-0f8f-433d-b970-fa6e573dc8f2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eadafe3-6cd2-44ae-a0cd-3dcac088e8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4186003c-573a-412f-b51f-0ea508b2637d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0a2897-6935-463b-beb7-112c10998851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddc295d-d391-4267-84c3-15bb983d36af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50d5864-7be8-4fe2-91ac-9ed778dd0da1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6cd81a-6b16-4625-bcc9-3632d0003ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ef0172-acac-46f3-a6f9-781cf9f09dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8433aa8-7452-405e-9e9a-db0e3ea54a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4718e6-ed1f-466c-8b6d-284eb95869f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc420edc-2c9b-49bc-a559-7a4fbae860bb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c98ab34-f806-4811-9ccf-6edc7a5a3bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add3d409-6ff5-4b6c-9cbd-820497de4f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bda753-08f5-4689-b352-55b197021ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e356c1c-efd7-4ef4-92d6-868f975955bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0a41f6-a287-452d-9c56-fb8a3d83e87a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd045f-14b5-46af-8872-a36bcaabd019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b438b0db-87e3-4163-8598-f729200e0874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a647cd-5c67-4c78-9768-c768402f6c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19229e60-bb95-4bda-a7fb-4a0e83cd1d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e740406-831d-4a85-97f6-bf5250bb4d82",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fa6cfd-8722-44e8-9d8d-7f070338b010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e6c747-fa75-4a45-8dcc-b5665cf729c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16589ba-b4fc-45d4-82d9-5c7b16467751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8eb496d-f18a-4c0f-9a75-9fa33c8527b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa441ab3-989b-463c-a84e-2027a9ea5d0f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f82ddb7-d740-400a-89ba-80cbef419e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76781819-2558-4208-842c-d243f1f2a8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d126196c-7798-426e-8f91-003f85308258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc233af-faa6-4bd8-b2bf-d4c31e57be42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62b8b08-0d07-4b0d-9b6c-25e69783bc53",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c93b554-3ff0-473d-a3a4-600a99b97e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2183c63d-e027-4d4f-a1d1-93dee0225838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214f4feb-ea48-425e-b169-0b94ba4397fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bad56fb-0f97-42c1-97f3-2e11eb0d5a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6095be7f-795e-4ebc-b33f-ad98680dfb2e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe4bc31-0e95-488e-91c7-50cd84e7b525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714e1fce-7277-4a0d-adca-7f93c2ea02c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636a7120-0f1a-479b-8296-0c7501e8de80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578bfa2a-838b-4ad8-98bb-1ede48bd6896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ab880-d183-4f5f-9717-0cbc5442d41f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b407970-b7c6-4912-a13c-aceaf7bdde65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f0b233-52c7-42c3-be9f-4eeb5ba38434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcce919d-946d-4694-a2bb-973d634d1eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3e55b8-a7e4-4e88-84d8-ffc75e6f336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65ba4ad-90ab-4a4f-bd62-cd00f97afe30",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d24267-e472-4162-b322-4cadc8bb833d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0976ca66-fbf3-47ef-a3bf-6724cffe26e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444dccf6-b9db-4b75-ab45-75ea3e4a850a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3124cd-b7f0-40de-a5d3-5f75c3935f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa5e511-db73-4ec8-9e01-184f2d9e8d65",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a2d3fc-c678-4f80-b769-cad9ca9377b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f28e4e2-3667-4dcf-b632-3b4edc4da170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3009cfa9-7a46-4b09-ae74-aaf087204b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a492496-8c02-447f-a813-4f779d0f8d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d529fb-9879-4e18-9728-7821f45202d1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96bc462-a9bf-49af-9a58-04e8532998e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9d5bea-135f-4cbb-81f1-d0f3aed87d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9dff1-da9f-46b3-8305-da8a98e140ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04f496c-e6cc-4e6d-a1c7-2f3fae8d9d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7bfa84-8d06-4c92-a9b3-d39de0ba9d28",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95985c4-a36a-43e6-9a1d-1dab42d14842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a8f3ff-28d1-47cf-a272-43d6457faa14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9e11d8-caf4-4a32-b283-89761a155925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c29ddb-8e93-42ac-a285-e9f302e8fc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a706a6-0fd7-4216-ae0c-d9afa05bc3ff",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4fa459-ec59-45ae-989d-107dcc90fe02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96689015-fca8-49d6-a78c-fddf8c92d0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14c73cf-e998-43a4-984a-59f6bad494e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04516939-e6da-47dc-a2e8-950fcf5cf59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0337b5d3-7982-4cf5-9ec9-d42f8dbf058b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821ddcc9-0749-47d3-8bcd-e3e9a70fa3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2038a2-7395-4234-8222-138a6c3c23e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71bb820-015f-4d15-91fd-d8e8aecfbdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a88088-5cca-417f-a7c0-3b82bdba36dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c538af37-0b8e-4808-bff0-d3b40caecc72",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d019b7f1-2acd-4ca1-9683-d8f4c37b810b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148f3366-90f0-4e2a-84ad-8932d3a79f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c26017-1e0e-4fd2-a384-9ed5dd3d2f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77709e0-3bdf-4511-8d7d-c3daa6117328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9eac88-60af-4a1c-a196-19842de50c59",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8de639-51ae-4e91-8547-9bacaeed100e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438ba650-0ab8-4046-aa4e-52a7bcdf3382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261d5e20-9f6e-4080-9c36-9ba0d7cec141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146d0cc3-18bf-462a-804a-b6240253b722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9530e5-b8e8-4748-8e0c-8f46718372ca",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95869d9-fd99-4078-adbd-eadbb4638ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c91f6b7-3677-4c1e-870a-8c977c97f151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af18edd4-4c60-46ef-9c0f-63d073d14b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec4f68e-d130-4c5e-b215-ad351dce6381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09caed6-3ee5-4918-abba-5d1c4b4c199b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20a13cd-2592-49bc-8180-6b16c2b22f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809c726d-1432-4b1c-a47c-349bd4af86c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824730f6-edaa-4031-9f3f-9d43fd2b4a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7049a33d-5c7b-4926-a1db-6704ea39173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebed994-4371-4654-b666-15b33df3742d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4867741b-cccc-4cf5-9750-b6b84dedd2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75d2043-7c83-420d-945a-f8bd9cbbd680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f8c19c-e6da-485c-8d8c-bb031510e5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbacfbd-0f0f-4bf1-ae12-ba4ad35eff83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00b34fc-6dfd-4c72-80bf-b33eacef882c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a42bf3-397f-4ed2-be5b-7b7b179ffef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67b3c0f-00a4-48d3-90cb-ed1e4f58113f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b015da5b-717a-41cf-83f1-6202d462e6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ae0738-d2da-48e0-9e21-847b6feb3b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baad3055-e819-4a3b-802d-71039a56886c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6b779f-9f83-4058-a7b6-ce8fb935870a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65276f9d-1a17-4e88-b6cc-579bc3dbb8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2fb24b-9737-43a6-9893-b63a8467349b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3487040-9c8e-4148-a288-21c69bb85ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96964a4-d70d-492e-9fbf-6ea499f92ee8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96f1c25-2e35-4382-a282-a3a3a533878f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fb0beb-3aeb-47d7-ab00-9b17ba5339ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883089c0-d26c-4f9f-82fc-c48b7b5e5133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d4bce1-0b0b-4fc3-8e59-f20ddb8e1748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f464c238-6383-4363-9cf0-1aeba898d9a4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c54a3d7-1e78-4e32-a985-5d8a1efa69f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c447c05-2db6-4937-9d7f-015ca77b9d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755bd638-e742-4d7d-8d39-9bfefc2fa587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b995b538-d7fb-4c0d-9536-eed521f795b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6da444-1b7e-496c-89d3-7b5b59c86436",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ff409e-b1dc-4941-b06f-3eb92429f3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2782c54e-5eb8-46a5-a910-ba1f68c302b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5702aed3-71dc-4bc8-93af-f4c40232636f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb5da50-72fe-4a84-889a-e93e96b6d44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef88e39f-8bc2-4af0-96c4-633a9e0f213f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923672a3-b08d-4937-b6f1-40d76371d4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7da665f-9cee-40e8-9f45-7949ce1b9e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8333e510-3d75-4279-bda7-8b9fef3741c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec910b50-0b13-47d1-941c-11bdebc6fa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41efb11c-58e9-4088-9278-7957837fe15f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997354f3-372f-44fe-b4f1-226b8b95cbe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a012249-5f65-41be-983a-cffbab2773c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b419c953-9c76-41fe-8e34-e4ac319f7734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1bb252-e3b2-4d9c-9cb0-a5092a9bc097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc2d108-ab97-4e18-9e81-73184f447dac",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1986ae-405f-45cc-a6d3-c55d56d5cd94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec684c0-196a-45d9-8366-c959b342ba7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa147c9-8bc4-4400-9384-91617c2d0f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805ce6d6-0f54-4dfb-8540-5906adf36e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331b984d-f968-4684-b9fe-21e3723f702e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13344b30-fc17-47db-b1e0-13253f631078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6fdd2cd-c8a9-43a9-9998-a50ef9d5d95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98718825-dd9a-439b-bac1-b4b39f6f3137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34150f1-5fdb-40b7-8653-fafd91fb7c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb01abf8-bfa7-41cf-9c30-ee3c14853d96",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb2c3c9-0295-4b6c-be35-b767964b706e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4ede75-dc30-4ea8-8ecd-82ca68bf1593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ad8158-6675-4121-b3b3-6c6dd5fd9b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b55f1a-330a-486d-af40-dbfb4bc49f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7cb758-5936-4a6b-bb78-8d97f081623d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900fb630-8c42-4d43-994a-680820f3d127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6baf206-134a-4a68-9b25-97b726ea9eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4b2d5f-5877-407a-83a5-5ec6f1f8a680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0efba3-4d33-4510-ba78-e7a0499ea4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e285b9f-f561-4362-aeae-977380deef05",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f311a8b1-b489-4b42-8ad1-21682ce08a39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd66dc7-4e77-4fba-8688-b2c3117a0141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed566cfe-9110-4bb8-a37d-ef85eb250592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b94702e-4e09-484d-91ed-b5a2ba37e58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53756c2e-ec93-4cd6-9528-10db0f0a8c56",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325ffde-495a-496d-b2da-55c42a4bc969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6112a4ee-8fe6-44f3-ba4c-aef836935152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b100b5-80f6-4694-abed-d0f8edcc19e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f1f5a6-bf47-45bd-aff7-9ce21a283f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac00862-ebdc-4c38-bb14-49ecaa9dd196",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf74bdd-2315-4d1f-961d-5335f2070b7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b8b4d3f-cd7a-40f7-a483-8c91e1624cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911b63d-ace5-4e34-8de2-008a86b4f8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039912a7-a539-43eb-866d-0dbda7986a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca5e95f-4e3c-4152-b25b-3c8d320750fe",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e489e31e-6053-47b0-8192-e9b87b51fc77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8559c688-c00f-4495-8779-293f952ad32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab6e12c-0d14-4148-a663-02884a979428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768b7db8-1cc6-4876-90e0-b1ec21f64e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9700718b-de66-43c6-887f-129a561bb83b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92885c23-fa7e-4f90-af7b-2558349fb61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8901301-7005-41da-9a97-a77651abe514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74373171-22ee-4c59-9f7c-c227ec0f9b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5177bb74-77cf-4135-ae8f-748a0ad17cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4d724f-0623-42d9-86e9-ea18aa480d2e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a2d7b8-58a2-4fa1-aaa9-0a4afdb7c9a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1346725-efb8-407a-b107-3cc5e1713dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4547fe7-5948-47c9-bf18-f550d1ebe2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3838956-9bd7-466e-96f2-9a7c324da100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea33cb13-9a9c-4d27-829b-e8c49716a460",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002b1585-d0e2-4acb-a2cd-fed54d133c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7950cf33-eb26-45a1-b04c-fce8c00c2de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e16b45-d00f-4bf9-a327-d26adff8ceee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7adb8a-27d1-44e8-beef-b0b5c3f91b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d99d7d-81dd-4517-ab97-d0f0f00b4cd0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0761e349-4073-4de9-9336-bfe8410abf1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc2fbe43-b170-430e-a6fb-cbdeab079ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b974d1cc-8ad6-4dbc-a9d0-a537b4860d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5555f1b4-3cf6-4639-8a8c-4cd453ab88e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38301506-bc5a-4ea4-868b-3256b4078c52",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662bf839-3cfd-473b-a344-62bc72b4bd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a845140-fa2c-432b-9bd4-60a9050b6208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cea82ec-9886-4401-a83b-54756ecd3b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad5f3ec-97d9-4fe8-87f7-e3592b0f29e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f7c1c6-47b7-47b0-bb46-b74034ec55d6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae627df-714f-4cd1-b086-8bf70fc52d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a9a6d0-62cc-4d1d-825c-27f63c4cd84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b99cd74-783b-4212-a9f4-379a9cc1606c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c921119c-e8be-4afe-8089-a14411c52983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765f6a6e-a8bf-47f7-ac53-420c44e7e417",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd283fd2-efeb-499e-8185-7eb5470c4fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d029b8f0-7799-4e7d-9578-5e5231165089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9313a40a-8bb5-44aa-b01d-6a6962338867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8733834-5ecc-46aa-9512-01641caa4d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e04856-4616-4f1a-94da-0e6bf39012ea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8a0644-d6eb-4c2d-95b1-fd12a6cf5d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814f6bb4-c8fe-4d8e-b1df-61c2f3457df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7f0a34-2f2a-49dc-8f6a-5dc8b4f4f846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a33bcd-86fc-4c3e-a3c2-959a349580a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b7cc12-18f8-46ca-a9e5-9824b22719cd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ca966f-535e-4503-9975-cc24f40b892c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd83f2bc-8802-4d52-80bd-5236885bce16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d882a4-7baa-47af-9891-4c4f32eac3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18660859-0656-498d-8a2d-09c14d552b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061756c1-7125-4100-a554-1696c98da176",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e710ba-06e0-4b39-9c41-3620b5145300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4454ebda-2796-4288-99b2-f6745f292f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e61620-f2a0-4db8-9eff-5f502e1018c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee30799e-f4fb-44b0-be5f-fb3334023dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292d7712-0ce4-42e0-a9a2-841b82fa7439",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ce8bc0-b231-4b4d-aebe-946a829a71a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "969afba8-b2fe-4c51-813d-8582a9c1f751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6135bcca-78f9-47e8-97cb-45408c6b119b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30267f73-616a-4d87-92a2-ab7e04547966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaa3a6b-0613-4210-a7b5-4758ad250776",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167ab7f3-3606-4658-afe4-f1d703f3683d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b6e553-1877-45d7-af65-2f1b1331109f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e193c59f-6b82-4c5b-b656-6fb32aa9cddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e685fc4f-f015-463e-a3e8-9089ebd403de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0d95f5-5de3-47aa-809b-108d2b86a981",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e4176-02c9-4224-8c5a-da0c06c9498f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a014e97f-4cfa-4387-97b3-365ec45d2027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef599f0-6a76-47c1-a29e-7424dcc91407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f2a924-043b-4bb1-a945-bfc7acce1ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b21e492-26ce-4392-bd84-98228e813ac6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7505362-189b-4a7b-bcde-32fa97db8ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414e4668-181c-446c-9ee9-4d96a270787a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e45324-ab64-4fab-af29-0bf5cdbe6df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cdb3da-bb67-4896-8985-02a4b4fdb206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b8e348-459f-434f-a4a6-1400ec534798",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24598280-3992-45ad-9224-0feffe2d897e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9119b3a0-a715-4da4-8f9b-09aa9df36600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2c53b0-d9c6-447f-bff4-92fb6fd39fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab3d75a-2000-4bba-b40a-0c67b18188fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e9e68a-302c-4ef9-ba42-afbf2abd9f58",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5badcb29-6d85-4246-93d4-0eae39883681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fe6c67-8cdc-42ee-a400-bd859a1d2839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0a751f-65f9-4423-bc63-7cd95f65ff28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6729034c-6bc3-4373-803f-327cd1ee44f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59747b72-d6c1-41ca-9224-d0733d86ef36",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1219dffb-1bc8-490d-aaa2-7895452dca2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2f22a0-445c-4e55-9286-9ccc09c9495d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19f002f-5229-40d2-9d88-81709c7f3af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483bb315-3712-460c-ab6c-7734c0e68006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec329f1-f887-4b46-ba03-ef21b51f59e8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf22e9f-ab5a-432a-b80e-08c08923a54f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af8c4d7-7e2a-49f0-a966-0a02010cb3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376d75ca-fc7d-49d0-9734-50d35cd0b00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7451a86f-efd0-412d-a84c-e95c4db226d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6693d5-99a5-4361-9cdd-abce404b6b6d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b331a75e-07cf-424b-8683-6e4ee0bd3a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca40ac2d-94ff-4a8f-a17c-a4523eed127a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff2a06f-4b50-4c32-868b-065800f9a0a4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a35a585-fa08-465c-8867-e8f0589ca011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e6ffeb-4ac4-4829-a86f-2df8fa4a16d0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3764812b-71d4-4b04-84e1-e2ed072483f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4366d5a-e246-4d7b-a795-a515f629058d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece0dbfe-a311-4a31-b4a6-a9f07fca64ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d95a182-6daf-4f5d-8b65-2e8cb3f4f6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93173b6-aa92-4e74-8034-61e7a8c35b1f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f25d60-da80-42d2-b579-cb6dadab73c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb725adc-00f5-4ef4-98ce-c179273068dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645dd9c5-97a7-4ff9-b203-897e106ef732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d36ecf-1dbf-46d2-9b79-5a91a10d0d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769e661b-c169-434e-aa55-6f209414f7bc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803ea187-4ab3-41ef-88ab-87abde3a8926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "952bea74-4784-4a46-a2a6-2c989d4a9ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59226be7-1560-42d4-afeb-1b206288bd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b145b8c4-0ae7-4e9c-a5ba-b2b66720496e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16c479c-91d3-4b4a-ad85-2b36ca65d3e8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c145c8db-dedc-4c03-a0e8-527a1038f81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ffabed-4e45-465a-bacf-f5c5a3eeea07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902ea4cf-4ee0-4026-a368-27254ffac172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7028caa9-3180-4927-8b8e-e06592cd24dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7461fdd-e6e2-4e1f-b3ba-74251f37a00c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7b2f4a-4b3d-4473-b4e4-6910a9b00fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65716dc2-105c-4d35-841f-0792bd9a7103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5963ad-c283-4187-8c4f-1e16a72af74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0852bc9-77ba-4431-abd1-40a4fac7d3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3c31ee-f061-440c-b6d4-7135d81ca277",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9402af41-bb36-4b5c-9530-deba767aa957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376db5d7-1f37-44c1-8f5e-4c1f7edaa380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b14262-8b86-44fc-a2e0-20b984c74168",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b368f4b-f64d-4c5d-8877-b02e0ad30d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a934e-b7fa-4b7e-89a5-20dc39e2f84a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf9c1b2-62be-4376-b874-499d18d738ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39519fbc-c4ce-4882-ada8-1e95071f002f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5081f4b1-d866-4d14-98ea-97ba935a53e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f115e45f-0d4a-4f6a-84fa-3f8179461079"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6cb3e8f-3c0d-49f7-aa3d-60ea56829c2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb178701-140c-40bb-94cb-495592b46215"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5009d19d-9950-49e1-8fe4-417065bc437a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee1809f8-bd2d-4b0a-95d0-b76f131b9eb3"
                    }
                  }
                ]
              },
              {
                "id": "011cb430-59b0-4a56-bc52-8edde9502471",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5a01d0f-e264-4a98-bf25-e76b29f0b416",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11abf22c-1d62-42dc-95c6-84bb9b4c76ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7e2ca47d-073c-4da0-84e4-7ff136266264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51615e49-2f17-4795-bc80-01a6fd6b78a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b46a739-e407-4a65-97e4-f4c4c9fd8c03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3811ac40-ce8b-45a3-a27e-f9d0bf0635a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c613fd6-fdc9-4a16-bd41-be6bc13ccba4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5f394ab-7f59-48c7-a17b-45af2ee437e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30c2059e-ac70-4036-920c-5cd643557184"
                    }
                  }
                ]
              },
              {
                "id": "c4370cde-dd7a-40a2-829c-edf938d323ca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2cb7c680-2ac1-4458-bb4b-0769be24d2ff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f432e6d1-8e13-4f2a-b619-17f97d35c38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f99c7006-cc8e-4b00-b405-342daa1ad475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1028e3d1-a95c-4178-a1be-14976a98dfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c0419e-e7fa-4772-bb94-3bf75f274bc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "76c69d28-7d23-4a2a-ac2b-0478c3ccb2f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5145e9c-274d-473e-82b6-d95ccb560e61",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cef8360-b814-4baa-bd5b-7fa08a27f8c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1240cd28-403d-485e-88f6-ce1e5e279adb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d5a5100-f99a-4694-910d-3848a7e709c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54498208-4c40-4426-a3ad-5b6e7a5d26e0"
                    }
                  }
                ]
              },
              {
                "id": "26b2e5a2-228a-49d4-8a68-8523dd808241",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36198bda-53c9-418e-af07-82fdec17e80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80e79398-ba5c-4ed8-8437-5d41655d5bcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "385d6e0b-3d31-4816-9b46-af4a387f3583",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ede115a5-6cb6-4a48-a345-a3c8cff3df5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c10fd83e-7c23-46d5-849d-8d52951a3e79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "09a66986-0873-409a-8d65-9f6000c61697"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbef76d1-aac1-4cf8-88e6-e8d8a2a432a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8df58fb-f16e-4f8d-a994-75f7e8a54a0b"
            }
          }
        ]
      },
      {
        "id": "635e35ae-3a47-422b-bf57-ef58f10a3806",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "42eac388-e26c-4198-a77e-8cada9c620e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb9ddc94-22c8-4815-8978-14a85a4efd95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29cf86fe-97e3-4ec6-b854-2d3b8c383796",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e374d3-6b7d-4783-8f66-01413051d9a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7ca609bd-470a-406d-a235-885689e5e2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0085b0-640f-46ee-ae8b-d833c3964126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a4906c4-b0a9-45e2-a2e6-3d8143411196"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "800ad77f-0972-4fa8-9451-2f6975ce70dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "020fbd2b-f340-4ee3-b597-7f2c52a722f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59bfdc49-784a-4c28-8ac5-638dcb760625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d720348e-f96c-45a8-b478-618bb093bd63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6baa513-ab6d-4a24-a4df-3f5c2165c3ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8ea2554b-343d-4734-8d5a-6bcec639198c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de6e75eb-f469-4d7d-b75c-e199b9107de2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "883d96ad-481c-4a80-ae1b-5fa296e69c5f"
            }
          }
        ]
      },
      {
        "id": "b40f791f-fffe-4377-95f5-a47be9ceabd5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "91bac79c-eec9-4743-a217-5e29549ce667",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1164e2d-2f57-4968-ad2a-2d2fb0ba3283",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dae0616-3a10-463f-a4f1-44b12d6d95e6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a719a9a4-fc5a-4f3b-8cf2-848cfe17bcd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a00a815-7ad9-4085-92d8-98d2e6f1e0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252d5a46-0412-4272-81d5-14031b4433c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5bd607d-e145-48b6-a5ca-74744fccb3ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b60ddaeb-91c1-43b3-9227-0f047f0910f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e11b66d8-9b8d-4bfa-b018-801df9b33ed9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33e61633-3ec3-480d-81f3-a4e3c70db93b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88398bfe-347b-4d92-9d4e-4a4df7b76de3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5846393c-ca84-4c90-9e4b-9ecfab619359",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03263a55-dc1a-4b5d-af4e-e313fd7432a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7854759a-6e36-4734-bae9-a18c379c33a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a312a78-cdf1-4469-b6be-f022a2f890f2"
            }
          }
        ]
      },
      {
        "id": "efa78de4-fd26-4801-8a3a-723d269759e6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f1d56a2d-f6ed-4ccb-b9ee-e404869b1c0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "603aafb0-f899-4a7e-9f5d-870fe403c949",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "104be060-cf6b-40b2-b923-13af193e85d7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288b74ae-5aaf-4b9c-bddf-f13f1ec51207",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "047f30ee-dd90-4d70-b9d5-06a55d95be68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5944eb-630d-4c34-8bbe-5450473b6505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3da32f44-cc97-41dd-9ca5-45dfed06aff1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae7f5b37-6138-4ff1-b604-30ec71ab3905",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94ea2d2c-1ef6-4671-87cd-10876585e929"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4776219-afb8-4b61-8d4c-b9a59e655711",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60a509ab-c114-46b7-ab5b-b0db64d9a058"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad8b6a1c-92de-4310-8f29-67583aaa0599",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b13f483-48f3-471b-b70b-36c946a00549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7ca5da0-4dd6-4c66-904c-aba0cd8abace",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7335fb7d-2a0f-4e9a-9155-5fce4286f95e"
            }
          }
        ]
      },
      {
        "id": "b4d87dfd-9375-4944-8bda-9632e66e1075",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "faeada39-790e-44b0-9dc2-f5c25d48d372",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "427cdef7-9445-4915-a633-95aa91b9e9c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "040af301-6da6-4172-91ea-38bd546b2b53",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a69ca9c-5a6c-4ffa-979d-8446523a268a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75598ae6-fdf0-4680-976b-a5ac3cee09b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 808.1654929577466,
      "responseMin": 15,
      "responseMax": 6874,
      "responseSd": 794.6335660555882,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688777233417,
      "completed": 1688777479975
    },
    "executions": [
      {
        "id": "261958e6-9133-4f4e-8f65-c782ffd5c41d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0381f035-d410-450b-993d-d3ed3d5ef82a",
          "httpRequestId": "c5e9f24a-cc43-41b5-a125-fab08510adfd"
        },
        "item": {
          "id": "261958e6-9133-4f4e-8f65-c782ffd5c41d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dee46eb9-fa46-4e32-a3ec-012c9277a1f4",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 0
        }
      },
      {
        "id": "356ae88b-7f3f-49d5-88ac-db63941c54ce",
        "cursor": {
          "ref": "bf1b6471-9d64-4839-83b3-4fa556b25ab7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4f1a94da-2b48-492a-8971-7f2b943ac143"
        },
        "item": {
          "id": "356ae88b-7f3f-49d5-88ac-db63941c54ce",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "93859ee2-4f98-4f0a-9a9a-9a710b1dce86",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "08cf5f22-b68a-40f3-926a-f8a493384c9a",
        "cursor": {
          "ref": "c24da593-4c15-42d9-8576-ebbe0a4cda72",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "51775cb5-8668-47c6-a6c0-80ab7e24c3f3"
        },
        "item": {
          "id": "08cf5f22-b68a-40f3-926a-f8a493384c9a",
          "name": "did_json"
        },
        "response": {
          "id": "87a45670-2f36-4475-be65-0a98b69ec549",
          "status": "OK",
          "code": 200,
          "responseTime": 1059,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e842dc2-322a-4455-84e4-38dca90594b5",
        "cursor": {
          "ref": "83358a7c-abb2-40d2-b8cc-93cf3c75161b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3bd45d48-a77f-4caf-a899-7b7b3c3ba2b4"
        },
        "item": {
          "id": "6e842dc2-322a-4455-84e4-38dca90594b5",
          "name": "did:invalid"
        },
        "response": {
          "id": "329ddea2-0b1c-4323-9ca9-6a31f6f6a0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e842dc2-322a-4455-84e4-38dca90594b5",
        "cursor": {
          "ref": "83358a7c-abb2-40d2-b8cc-93cf3c75161b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3bd45d48-a77f-4caf-a899-7b7b3c3ba2b4"
        },
        "item": {
          "id": "6e842dc2-322a-4455-84e4-38dca90594b5",
          "name": "did:invalid"
        },
        "response": {
          "id": "329ddea2-0b1c-4323-9ca9-6a31f6f6a0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc5c0ea-fcd0-4679-8c20-2c0d5aa885ae",
        "cursor": {
          "ref": "8263785c-ef36-4a6b-b0c0-0ed3bf396713",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8592ca71-3593-4697-b558-05671c167b59"
        },
        "item": {
          "id": "bfc5c0ea-fcd0-4679-8c20-2c0d5aa885ae",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "06b12c87-bf70-455c-b02c-90d5953e4e52",
          "status": "Not Found",
          "code": 404,
          "responseTime": 884,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d606dc2-c554-43c2-923a-a836e83498b7",
        "cursor": {
          "ref": "89f85c4b-5f22-43c4-abdd-ca4403bdaeb0",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "95e15242-bb04-43dc-8e09-acd88cd126cc"
        },
        "item": {
          "id": "9d606dc2-c554-43c2-923a-a836e83498b7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "87da8ab0-4f20-4607-9399-d612d3c4b5f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 782,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4c2f61-8b8b-47bb-a2bc-79e823c5953d",
        "cursor": {
          "ref": "af4bb5da-2e2b-4437-a8cc-bd9338eff395",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "307a7bd4-04c4-4ca4-953e-f9ae29021c33"
        },
        "item": {
          "id": "7e4c2f61-8b8b-47bb-a2bc-79e823c5953d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "34890d62-1218-4302-ab43-c392a87c46e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd74c1b-7818-4e7e-afb0-69d6dddad597",
        "cursor": {
          "ref": "1b3b5710-875f-4f19-aad7-be879885cb96",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ee5ff265-1208-4de1-b01d-046c06fa79ea"
        },
        "item": {
          "id": "6fd74c1b-7818-4e7e-afb0-69d6dddad597",
          "name": "identifiers"
        },
        "response": {
          "id": "89456d7b-9b75-4243-bde8-e5beb1e61cb3",
          "status": "OK",
          "code": 200,
          "responseTime": 1576,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac15bfd-a888-44bb-b0a5-427f9bd1dc2a",
        "cursor": {
          "ref": "e39b9ea9-2b70-43c9-bb6f-b5180f8a1793",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8f25a9ab-64f7-4a30-b7e2-c752e5daaad6"
        },
        "item": {
          "id": "2ac15bfd-a888-44bb-b0a5-427f9bd1dc2a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "506e6e20-fd29-40fe-bef3-4fafe21f8e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000a8e20-7f53-47c9-af51-2f2f467bbebe",
        "cursor": {
          "ref": "e94c9810-9994-4a3f-bd32-41a81847e386",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e8d7d862-a480-4afc-9b33-5af60b7c5dfb"
        },
        "item": {
          "id": "000a8e20-7f53-47c9-af51-2f2f467bbebe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1bd2f84f-0334-4ae8-b600-a88d7b4e2b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e7e5a9-ab2f-4e20-a785-4294fd2c1449",
        "cursor": {
          "ref": "6514b5ff-eceb-4e59-8e52-63fcf82cedfa",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88a44e0e-6af0-4256-8044-f9d34f0bba97"
        },
        "item": {
          "id": "14e7e5a9-ab2f-4e20-a785-4294fd2c1449",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c6f573c0-6113-467e-a9d7-a77d649c0dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39508b52-5f51-4024-875b-b537c0459dc1",
        "cursor": {
          "ref": "e6777ace-3b50-449e-81df-8726588efa17",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "930e5cab-3525-41f9-b0ce-cb75317240c9"
        },
        "item": {
          "id": "39508b52-5f51-4024-875b-b537c0459dc1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9b31a608-7c8b-46e4-9ba9-6d2a70385022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ef714f-2455-4d0f-b3e8-ca02f1f8a1cd",
        "cursor": {
          "ref": "4df4ccd0-2e64-4b27-a2b7-fc6fb101a538",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9d428c70-f2dc-4765-b8e8-df7dad0959a2"
        },
        "item": {
          "id": "77ef714f-2455-4d0f-b3e8-ca02f1f8a1cd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c9f9e8bd-8129-48e4-843d-2fd6e2681b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffccdbe-aebe-4cc3-804b-676281f0c534",
        "cursor": {
          "ref": "638b9c1c-6f86-4010-851b-fb3d7b6758f9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "51edf363-c85e-4b4b-a071-0e212ab775c9"
        },
        "item": {
          "id": "bffccdbe-aebe-4cc3-804b-676281f0c534",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "56b40668-a8b1-4d3e-a917-08b1e6e58275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce4c6e4-1a85-45a2-abd3-a16c1af49f84",
        "cursor": {
          "ref": "1c36f871-7f10-4dca-9855-afa792a9d6dc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f665f933-b69e-40d6-8899-0431c77843ea"
        },
        "item": {
          "id": "0ce4c6e4-1a85-45a2-abd3-a16c1af49f84",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "84fdeadb-e637-4a21-9a1d-a3c7b85a21b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10130a9b-884f-4008-878d-a2eebe1fbd19",
        "cursor": {
          "ref": "cb17e78e-df43-49a6-a7c3-d2d9801c7d9d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a732b62f-47fe-4a7d-a94f-1d70950bcf50"
        },
        "item": {
          "id": "10130a9b-884f-4008-878d-a2eebe1fbd19",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d1f638d-b5c8-4cca-88a2-fbeb6e04c313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4acb9f7-2b35-4db1-833d-726aa16d3ae1",
        "cursor": {
          "ref": "da633a97-9bc3-4b51-8f43-f3747b4f741a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "07817ce8-3602-4b24-b8dc-1809b62b203f"
        },
        "item": {
          "id": "d4acb9f7-2b35-4db1-833d-726aa16d3ae1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "94bd4652-c726-4a4c-bec0-7b556a8072bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c547bf4-ec4e-4d53-9860-ec17c36a3935",
        "cursor": {
          "ref": "7ff6892f-3fec-4978-844f-1dbf2e3db0cd",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3e870eeb-8b58-40c4-ae36-9edddb01a80d"
        },
        "item": {
          "id": "6c547bf4-ec4e-4d53-9860-ec17c36a3935",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e4a538cc-3e50-4d5d-bfe2-e38de037257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b8f474-5544-45c0-bb1f-0893a19ed5da",
        "cursor": {
          "ref": "9bdb5f8d-fddc-4d66-97ba-89b58c4cacb3",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "67bc7aa2-a3d2-4e6e-8441-4dccef7eda33"
        },
        "item": {
          "id": "d0b8f474-5544-45c0-bb1f-0893a19ed5da",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fa14428b-8737-4d22-ad1e-fd1a76fe6bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65deb3d5-9697-4410-9f3a-3f0fd75662c2",
        "cursor": {
          "ref": "56fcd5e6-54b5-4ed8-a1c1-cf5faf7304e0",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0246a100-868c-4a5d-b7c9-93709c9cdf4c"
        },
        "item": {
          "id": "65deb3d5-9697-4410-9f3a-3f0fd75662c2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08b97d68-52cf-4800-bace-8511c178a7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff814b2d-cfc8-4f8a-8e6b-6cba1d625806",
        "cursor": {
          "ref": "4371712f-0731-4ba3-8955-c1f50bf88d79",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5dd2eefb-03e7-4cba-8b05-70f439530236"
        },
        "item": {
          "id": "ff814b2d-cfc8-4f8a-8e6b-6cba1d625806",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "62ea3713-1f47-41cb-97cd-9e9d5085c599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e38d7f-ff48-4da7-b738-30a0af0592c4",
        "cursor": {
          "ref": "9d0ee01e-920a-409b-9e86-698b5fde79ef",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "acb39598-87ad-4957-a083-2e1e9cb16067"
        },
        "item": {
          "id": "a2e38d7f-ff48-4da7-b738-30a0af0592c4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b52a9d9a-bae7-431f-8f5a-bf02ab2b72d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9586e941-8e9f-4706-a0b6-c46d85fe6f26",
        "cursor": {
          "ref": "f830ca11-ca2f-4a42-9ad8-d3afdf7af6ff",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b29aae53-b7cd-4db5-bf2f-fd80164ed75e"
        },
        "item": {
          "id": "9586e941-8e9f-4706-a0b6-c46d85fe6f26",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "007a7126-c1ea-4832-8914-e63cc78630e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16432eb3-5d78-4c72-b0a4-ecfdfcd0c246",
        "cursor": {
          "ref": "0646a3bd-02ab-4d62-bc4f-927d70f02ca8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a30c674d-e39d-4535-93cb-b375863bb250"
        },
        "item": {
          "id": "16432eb3-5d78-4c72-b0a4-ecfdfcd0c246",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b41f3120-36a0-4597-bdd5-68093930ddae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d40a95f-d9e1-4989-85a6-044ae75c539e",
        "cursor": {
          "ref": "a4085f07-517a-4613-9ed6-aa65c77aee2b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "13801591-fc45-433c-8a0b-90a038c60db8"
        },
        "item": {
          "id": "9d40a95f-d9e1-4989-85a6-044ae75c539e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1a6634c5-5db9-4ae9-aa01-04b9c2705520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506d187b-d560-4288-93f7-79fd9d50aa5a",
        "cursor": {
          "ref": "4ec1e876-2205-44eb-8fed-0459d0cd37ec",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b0c1d4e8-b684-4c75-9c0d-de64d4323f10"
        },
        "item": {
          "id": "506d187b-d560-4288-93f7-79fd9d50aa5a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "acffca3b-0721-4415-bcb7-23af2c166d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5a0e33-b954-43fa-91f5-bbd0d5d7b425",
        "cursor": {
          "ref": "9b712ba5-56d5-4de3-940b-30c18c44e275",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dfa1aa6e-6659-4f0b-a584-6d81427d9718"
        },
        "item": {
          "id": "fb5a0e33-b954-43fa-91f5-bbd0d5d7b425",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dec9ac1c-3505-41e5-9b3e-c1db6e25ea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea31615-ad5c-495b-acb8-65dfbc8d3dd7",
        "cursor": {
          "ref": "851a33f1-2e71-4c11-9acd-ebca1d160b9b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07ad2bc0-fa47-4e85-8dfd-a91109396dbb"
        },
        "item": {
          "id": "aea31615-ad5c-495b-acb8-65dfbc8d3dd7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "90549a99-9088-4f81-82f8-72991bab43e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66364a8a-e807-4e71-bf1b-c6185a5fbef6",
        "cursor": {
          "ref": "75a388f4-c397-4006-afdc-cb03552e7d5f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1f4a938d-e391-4849-bbc7-59a89662dca3"
        },
        "item": {
          "id": "66364a8a-e807-4e71-bf1b-c6185a5fbef6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6910395a-c7b7-4561-b5e0-56cbeb9d16c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb96103-92cf-4e0b-8aac-f3ee53eba4bf",
        "cursor": {
          "ref": "e9d961f0-9d1d-4a3e-b90e-a32f3779b193",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4028582e-841c-40c1-92c2-e5f1fa4f9057"
        },
        "item": {
          "id": "6eb96103-92cf-4e0b-8aac-f3ee53eba4bf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b8b06c40-010f-454f-aa76-d3d692f03ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5b1568-d217-4787-8c1c-745742c4bccb",
        "cursor": {
          "ref": "60a549af-67b0-4ad6-bb45-be2bb293afd6",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "16dfb1f9-18d9-4b57-a1cf-6659c466b5fd"
        },
        "item": {
          "id": "ce5b1568-d217-4787-8c1c-745742c4bccb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bb73ad21-010f-4dc6-b116-edd9fea8bb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b234e653-8b1a-4009-828c-5238b3e0ca9d",
        "cursor": {
          "ref": "a046d937-2582-4b9e-8b9d-dac00be6ce45",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e3073568-4526-46e8-8f15-4343ccb620e3"
        },
        "item": {
          "id": "b234e653-8b1a-4009-828c-5238b3e0ca9d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1c3ec641-fd3e-43dc-ad4c-57a63e72b320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1bb885-d651-48e2-b1d9-a5788305d5cd",
        "cursor": {
          "ref": "de1ee16b-dd07-47bd-9a19-2888cc327b12",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e38fdfdf-b50b-4d34-880d-8dcc015362a3"
        },
        "item": {
          "id": "aa1bb885-d651-48e2-b1d9-a5788305d5cd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "290dacf4-48e0-44b4-a9b5-e527a70fafcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a0bf7-3f25-4b4a-a7c7-1ad87056038e",
        "cursor": {
          "ref": "1c16ba68-967b-4aae-ac8d-60f69678f4dc",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d0b83e0-578b-4d27-b307-52b1d75c02f1"
        },
        "item": {
          "id": "0e7a0bf7-3f25-4b4a-a7c7-1ad87056038e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8626a49f-933d-477f-8f45-11c693e2d673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fafe54-8461-4037-8fb1-8727e89ba8bd",
        "cursor": {
          "ref": "3be90822-29aa-4481-9aa7-2930178b886c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4bf7bfab-889e-44a6-a940-7ca51a765d97"
        },
        "item": {
          "id": "d1fafe54-8461-4037-8fb1-8727e89ba8bd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5be00c7f-90cb-4e5a-99e4-db619ad385dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24cc388-a81a-4fe9-9da9-74b64863c760",
        "cursor": {
          "ref": "d0bf09a0-cc24-4591-9d93-3153ec07066f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0294e0d1-b6a9-4d87-bb0d-372c2c5f16b3"
        },
        "item": {
          "id": "a24cc388-a81a-4fe9-9da9-74b64863c760",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1ade0c28-708c-4b69-8802-13345e607b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9acedcf-8b3d-4f8e-80d9-4288cafd48d8",
        "cursor": {
          "ref": "051d68ec-92a0-4049-8f5e-533e61b49dbc",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fd89eff1-9572-4761-94f1-ad7d9149e1a4"
        },
        "item": {
          "id": "b9acedcf-8b3d-4f8e-80d9-4288cafd48d8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0075f3fa-b651-4bcc-87be-88945e989105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab066b37-acf2-4de5-b3c4-de41e299cbdb",
        "cursor": {
          "ref": "9848ba46-7970-4ad5-b539-5dac20a86316",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8796c2d6-ba1a-4bc3-bbe8-7b718e690349"
        },
        "item": {
          "id": "ab066b37-acf2-4de5-b3c4-de41e299cbdb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "066421d2-bd42-4730-86f8-0d7632009eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8fee2c-0c34-41b8-8ac9-ce934b10958a",
        "cursor": {
          "ref": "43782d0e-fb39-4a3f-b537-71037067663b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6fd8243a-81b0-49d9-99c5-0b9231ad6472"
        },
        "item": {
          "id": "aa8fee2c-0c34-41b8-8ac9-ce934b10958a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3e5a9ac2-2d26-47ae-a711-b02d4b4eddfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258e4e2f-361c-4185-8922-b8b3cfd7e36b",
        "cursor": {
          "ref": "c5a85906-9dff-4621-bd1e-e7c32f041c6f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3b7020f9-d5c1-49f6-886b-eaae44588fa1"
        },
        "item": {
          "id": "258e4e2f-361c-4185-8922-b8b3cfd7e36b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3e8d207f-ee8e-4b53-ba8a-7a2f7df9b81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb1bbaf-84b0-4571-8ced-8066fcf52ccd",
        "cursor": {
          "ref": "48da7122-521d-490f-aa2a-4008c7cf133b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "10e5b63f-0c96-48a4-8ed2-5e9143cd747c"
        },
        "item": {
          "id": "8fb1bbaf-84b0-4571-8ced-8066fcf52ccd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1fb5d27b-3f6a-49cb-860a-775360cd2faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81482715-7a47-4dc5-b43a-02f24ac6c890",
        "cursor": {
          "ref": "267b3a1e-c11e-48b0-9de8-6a21d47bb4c7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3436427a-e8f8-467f-b849-3700f5a97376"
        },
        "item": {
          "id": "81482715-7a47-4dc5-b43a-02f24ac6c890",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "446cdb1a-cd73-46e0-b180-4507c636088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b9460f-4743-42fc-bf94-204c63c187ed",
        "cursor": {
          "ref": "682cb302-e484-417f-a8b1-70cb9e55b679",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "402c3884-8f93-4d9c-8b1d-823f2a004b1b"
        },
        "item": {
          "id": "35b9460f-4743-42fc-bf94-204c63c187ed",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d2625ad1-67b9-4016-ab8b-68feb181b936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145eb0a1-4ef9-45f5-9ee5-2edfe1f5d657",
        "cursor": {
          "ref": "7db994f0-8284-4a9d-ac23-c1797e780a0a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a6cf8511-f14d-4d19-b6f2-3cb671c03132"
        },
        "item": {
          "id": "145eb0a1-4ef9-45f5-9ee5-2edfe1f5d657",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e4840052-c0d0-4c8b-83cb-05a1a4c4d5c5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 951,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07506011-93ba-42b7-8fe3-ed600c154958",
        "cursor": {
          "ref": "8316ee55-1784-407a-9bca-5355851b0eb7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e4bdaa49-f7ef-4871-88bc-3dae47f111f2"
        },
        "item": {
          "id": "07506011-93ba-42b7-8fe3-ed600c154958",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d7a4a0bf-e319-40db-ad91-cd753e594ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca6144-fbf8-493e-b775-5d718d7887e9",
        "cursor": {
          "ref": "3e743587-4809-4f2b-90b9-4337468af243",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9859a50d-2650-402c-9e48-c2a4bd27a8ce"
        },
        "item": {
          "id": "a2ca6144-fbf8-493e-b775-5d718d7887e9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2d849298-5bb7-49f9-be73-475e9e5ddec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1332,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29111623-628f-4ad0-a061-c3001eec2988",
        "cursor": {
          "ref": "2b35dbfd-a5e0-4460-97f6-62d23d7c6cfe",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1ec47eeb-a78d-4c38-9a34-53f87c739751"
        },
        "item": {
          "id": "29111623-628f-4ad0-a061-c3001eec2988",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3c1e06e9-c79e-477c-b448-5b9f565e8f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbdb1cf-5795-4e7d-aae7-9949f6b270cf",
        "cursor": {
          "ref": "f98e3da4-d68b-4a34-97af-4cee8ce0878a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c2a1a334-37c2-499b-9857-260ae9af028e"
        },
        "item": {
          "id": "dbbdb1cf-5795-4e7d-aae7-9949f6b270cf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f6804757-c5a3-4b50-acc0-65edcb5f358e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d9392d-245b-4e2b-a0df-6ba14cc946a2",
        "cursor": {
          "ref": "2aa5bfd0-169b-44c9-a6c4-7603b0729f4e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f00f4d91-e1f7-421d-87b1-147c5f008b16"
        },
        "item": {
          "id": "e8d9392d-245b-4e2b-a0df-6ba14cc946a2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8fa30dba-9718-4e58-b240-c77cc5b5604a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14356cb0-1cbe-44df-a713-8fffd6ec6b0c",
        "cursor": {
          "ref": "7d937b8f-6e77-41e9-9763-8aafae3f1f1d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "75b35901-cfac-4c1a-9272-e74a4c4e6f0d"
        },
        "item": {
          "id": "14356cb0-1cbe-44df-a713-8fffd6ec6b0c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ec84a54-7948-4d43-8158-1ae8f79c4908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4a8248-04b4-4a76-b218-9a2e4dd7b87d",
        "cursor": {
          "ref": "1396bae4-d087-4416-b480-72bd6d2ba6ae",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a5989574-9b99-4c3b-857d-029946eb3f65"
        },
        "item": {
          "id": "7a4a8248-04b4-4a76-b218-9a2e4dd7b87d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c667217a-1264-49a9-a024-047790d558c2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 933,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b626dbd0-7bf7-4813-99de-c2fd0da650de",
        "cursor": {
          "ref": "1b2fcc08-31a1-4559-aac4-b70b7c3dc57b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ee6b708a-b58a-4122-9283-f2c7c74cb19c"
        },
        "item": {
          "id": "b626dbd0-7bf7-4813-99de-c2fd0da650de",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d159e489-4516-491f-99a7-de2c3e2fb2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820608ad-57bd-41ed-a7fa-2a2d7dd92c68",
        "cursor": {
          "ref": "afc8a537-d108-4da9-b068-5f4c5b438662",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cafcc3b2-e413-43a9-9fa7-2aafc46844c8"
        },
        "item": {
          "id": "820608ad-57bd-41ed-a7fa-2a2d7dd92c68",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3b7b74f8-954f-448b-859a-af7251f20f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286efac9-71d5-467c-8f24-2eefdc86149d",
        "cursor": {
          "ref": "145d92c1-f924-4629-8864-5a5adc6fc268",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "76cb4baa-1d55-46c5-8f8b-cf271da542a6"
        },
        "item": {
          "id": "286efac9-71d5-467c-8f24-2eefdc86149d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5012c027-2f29-41b1-b65d-ad118dc25834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85d2260-3a6b-4c7b-86b5-27fab7b0536b",
        "cursor": {
          "ref": "bce7cd5d-b7b0-4b6c-8418-a423da2c334f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ddfaaecc-93f8-4f32-b354-b80c6d02c64c"
        },
        "item": {
          "id": "b85d2260-3a6b-4c7b-86b5-27fab7b0536b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "da08c358-739a-4e1e-96c1-fa268405b98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6629b4ed-0ca7-4091-9ee8-fc56ada4d241",
        "cursor": {
          "ref": "308d3b17-9da9-406f-92d6-521b55c6f6d1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b090d836-4cb6-495f-94a3-4cb5915fb55e"
        },
        "item": {
          "id": "6629b4ed-0ca7-4091-9ee8-fc56ada4d241",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2b49d74c-c54c-457c-abf3-b19a33c21442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f47e5e8-bef8-4c41-9133-81ce1904101f",
        "cursor": {
          "ref": "5e5c87b9-aa72-423f-8683-9cf97a1882c1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "77b29d9e-7bdf-4b82-9451-cccbbaf0a3e4"
        },
        "item": {
          "id": "0f47e5e8-bef8-4c41-9133-81ce1904101f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f61a6373-c573-4add-bf36-90b75916d9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b188e797-cde4-4ef7-840d-e17ddcecb1ce",
        "cursor": {
          "ref": "3a3b3dbf-a9f7-48b9-acc3-dc3e41ec9582",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9ca426ee-000a-412f-9ebd-8090556e45a5"
        },
        "item": {
          "id": "b188e797-cde4-4ef7-840d-e17ddcecb1ce",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3de17b15-23ec-4b2e-a405-c6701d41c26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73680bd2-2444-4d00-a28a-701552460afa",
        "cursor": {
          "ref": "3c99814c-551b-4288-8931-b33f758120a7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e04b8b32-f667-438d-badc-842aa27b0528"
        },
        "item": {
          "id": "73680bd2-2444-4d00-a28a-701552460afa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5353388b-d549-436a-9259-a3eaf1aea5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9484fd-9844-4c2c-9d43-8c938b78b1c2",
        "cursor": {
          "ref": "9e97eb66-7aad-4962-a20d-5edc3b5709e1",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "54582c54-7550-4a9f-af60-290721c7eba0"
        },
        "item": {
          "id": "eb9484fd-9844-4c2c-9d43-8c938b78b1c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ce5e8d3-263c-4d5c-ab48-6dd6fa469557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b043ad7-0a97-4d06-a8dd-af49146d1c6b",
        "cursor": {
          "ref": "1750e297-5c21-428e-83a9-19cbf53ae81c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "06d290e8-ffb7-43aa-9e80-325a56d96626"
        },
        "item": {
          "id": "2b043ad7-0a97-4d06-a8dd-af49146d1c6b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4d2a53b3-376e-41a0-aa79-f6dbce50ceea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fd488b-dd12-4cc2-8341-207a653f96ea",
        "cursor": {
          "ref": "4f25209b-e2a5-4b42-9cd9-7cf9b8eaa755",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1b6545e5-efaf-49ee-af0c-7d592671ed5f"
        },
        "item": {
          "id": "77fd488b-dd12-4cc2-8341-207a653f96ea",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8a40b915-185c-480c-8b56-fd2cbb947ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a8a372-084d-4ea7-9b4e-61ad56a92167",
        "cursor": {
          "ref": "da3cd1a7-46d4-455e-a5e2-6b969a6cd506",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "74c67703-48ef-430e-9f09-229ff702c8fc"
        },
        "item": {
          "id": "62a8a372-084d-4ea7-9b4e-61ad56a92167",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "10d6b6d6-527f-4b84-967f-907fcfe91c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c1105d-6661-4169-aede-51bf5bcd9919",
        "cursor": {
          "ref": "b3ee3a17-3582-4eeb-805b-02e289c3863b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "240a60c8-d1c8-4a60-9e64-e66189fabe62"
        },
        "item": {
          "id": "61c1105d-6661-4169-aede-51bf5bcd9919",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e4dd461-ad79-454e-97b2-ccc091da645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff60e031-e0b1-452f-9a9b-837d79ea6fbb",
        "cursor": {
          "ref": "19b2ee0f-02c0-48fe-aa4b-f4a6515b0858",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7f4f98b4-4535-4664-9915-36c2a8bb2c49"
        },
        "item": {
          "id": "ff60e031-e0b1-452f-9a9b-837d79ea6fbb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7edf3027-87f1-42ea-a704-6cd4ba0a120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d6c9bc-0fce-4e38-bfbf-50b9d436de3a",
        "cursor": {
          "ref": "cb6f0927-df78-4da9-8726-9384b5602e8b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b05d4010-0c0d-41f1-a351-9fc72becdac4"
        },
        "item": {
          "id": "75d6c9bc-0fce-4e38-bfbf-50b9d436de3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3b7730d9-ebd0-4254-bda8-5b2063ed4ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af314879-94da-4d45-845a-cf951e3c075c",
        "cursor": {
          "ref": "fda0055b-29d3-460d-af90-afb21c237f15",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "52a6e840-bcd6-4452-9ad1-868731a94a07"
        },
        "item": {
          "id": "af314879-94da-4d45-845a-cf951e3c075c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f60031b1-d64a-46d2-a1cb-80f96654f552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c802d1ef-8380-4331-bebe-5ae5e690f417",
        "cursor": {
          "ref": "0d82f5ca-5ead-4d67-9558-7737b07c3a4e",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b415be1c-09b4-4acc-923c-6c811f47717a"
        },
        "item": {
          "id": "c802d1ef-8380-4331-bebe-5ae5e690f417",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c4b69318-64f9-4a32-b08c-61a45f90f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923d3ea1-38f6-4c1e-ab08-5884a46ff47e",
        "cursor": {
          "ref": "23b4777f-39ca-4f5f-a2f8-1a14c29caf95",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8520d2f1-6451-4891-9b84-47ba053deb90"
        },
        "item": {
          "id": "923d3ea1-38f6-4c1e-ab08-5884a46ff47e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f48d2cfe-5d34-479d-9ba2-17284385a65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38976d50-96b5-47fc-b9fb-558175e89f74",
        "cursor": {
          "ref": "14c52fb7-378e-406c-a184-def65c645562",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1b13d2ae-735a-448b-847c-178628ab61dc"
        },
        "item": {
          "id": "38976d50-96b5-47fc-b9fb-558175e89f74",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ffd59a29-f674-414d-8d78-4a932c5c49f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382cc8fd-ce53-418e-943f-88b3cc016c62",
        "cursor": {
          "ref": "04787ba8-272e-44c6-8fc2-e88b3b739b0d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ea721832-f16e-43da-b5d1-ce5044de18cd"
        },
        "item": {
          "id": "382cc8fd-ce53-418e-943f-88b3cc016c62",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7ff1eb69-85dc-4a29-8f7a-f8cb5d91ad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628f3d32-3f31-4878-ba1c-bd1c8dcc0695",
        "cursor": {
          "ref": "99828b3b-76ae-4f5c-a5c8-afacc4f91725",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a568d4ed-4bdb-4692-91a8-1b1144086dc7"
        },
        "item": {
          "id": "628f3d32-3f31-4878-ba1c-bd1c8dcc0695",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7f748343-da5b-4097-9850-b1d7e41c8f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c457e31c-ee10-41b3-9c00-e5a4648a282e",
        "cursor": {
          "ref": "b37578f8-73bf-4301-8b01-5be632321fd8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "32d9cf12-860f-4aff-8ea9-af1953fc503e"
        },
        "item": {
          "id": "c457e31c-ee10-41b3-9c00-e5a4648a282e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1a4f253d-05d7-42c0-942a-4d6bdd64df95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181a0931-f457-481b-ada7-0cc4694e5e41",
        "cursor": {
          "ref": "86a0dfbc-786b-48c6-817e-0dc57ec0e7e2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bab69588-e803-4e53-a30c-0f2e836c17a7"
        },
        "item": {
          "id": "181a0931-f457-481b-ada7-0cc4694e5e41",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "be4da4a4-98af-4198-a90f-814a53979abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa73d254-7603-46c7-bef7-9b513a7f30da",
        "cursor": {
          "ref": "de777e92-1271-45a9-ae84-88dd4f9a8f03",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fd83d6a0-9b3e-408a-a84d-1d0ddfe837c9"
        },
        "item": {
          "id": "aa73d254-7603-46c7-bef7-9b513a7f30da",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c6a2c83d-e117-49b8-a793-1647d7bfa227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ff93e5-f8f1-4025-88f2-fbec5943f0e7",
        "cursor": {
          "ref": "85c187ae-2cde-416d-8c08-99ac5b251b59",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9cab233d-951c-413d-a85d-25f06f7581de"
        },
        "item": {
          "id": "55ff93e5-f8f1-4025-88f2-fbec5943f0e7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a5ab88a5-abeb-475f-864d-aea1e27828f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfe3d9d-c2ea-4086-a04a-02b4f5b4008b",
        "cursor": {
          "ref": "3fcc0db1-b4bf-4840-bd61-1a0366c7bb46",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6733b302-eccd-4fcd-99f3-396ef61f82a7"
        },
        "item": {
          "id": "0dfe3d9d-c2ea-4086-a04a-02b4f5b4008b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59be8401-ccee-4854-886c-fecdf5391f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf983b9-3c6c-4292-a82b-fd42671f1578",
        "cursor": {
          "ref": "4892dec5-6ad9-404d-939f-6f8d891030d8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3fa8dc71-2bb1-41a6-8ffc-3f9469b572d7"
        },
        "item": {
          "id": "baf983b9-3c6c-4292-a82b-fd42671f1578",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "888c3bc8-b3bb-4f63-a877-a3e25a3e90f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650e5d8d-0479-4687-a445-7a175a5e4970",
        "cursor": {
          "ref": "2b739880-fd0b-4b9f-be10-71ae0adeeea8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "12923837-4fd8-4c0c-955d-e757da7060c8"
        },
        "item": {
          "id": "650e5d8d-0479-4687-a445-7a175a5e4970",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2d6768e0-ca2c-4b7d-99ed-2c33828f1d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041fb4d6-c68d-4843-8cb5-1f78377dffa5",
        "cursor": {
          "ref": "722da611-749c-422d-af78-99d032706014",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b00b2d54-62e5-4cfa-a6fe-d8cff2518a62"
        },
        "item": {
          "id": "041fb4d6-c68d-4843-8cb5-1f78377dffa5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "28344cbf-bfc6-4edc-bab2-bcaaead1c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b1bdf4-866d-4003-8e57-326d0fb726ab",
        "cursor": {
          "ref": "963ff9f3-be56-43a9-861a-f81cb5e671a0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fd01dc8c-3203-4baf-a653-f4c3a278e3d6"
        },
        "item": {
          "id": "a5b1bdf4-866d-4003-8e57-326d0fb726ab",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9c4fc7f0-e733-4e8e-81b7-daa8b7fe4567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc89999-251c-4380-bbf4-389fc28522eb",
        "cursor": {
          "ref": "88c05277-74d1-4a00-aadb-3b7b421958c6",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f07d9997-df18-4403-a70d-a7005c7c6154"
        },
        "item": {
          "id": "fdc89999-251c-4380-bbf4-389fc28522eb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "651b7e5d-00f7-4f97-a0e5-1333f1a8d2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158a3879-0d4e-46cf-8c62-65b41ab57ad9",
        "cursor": {
          "ref": "29348563-d157-408a-87d8-3e85df627ace",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6963d730-65bb-4203-898a-5ee52055bb5c"
        },
        "item": {
          "id": "158a3879-0d4e-46cf-8c62-65b41ab57ad9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "593f483f-e420-4f94-8ac3-2408435026b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfdf85b-04d3-41e3-bb5b-f103dbe5f3e6",
        "cursor": {
          "ref": "895ba8c5-0e26-4d00-bcba-05ce215a52f5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7b0e87f1-432d-4416-b397-62547dfeea57"
        },
        "item": {
          "id": "cdfdf85b-04d3-41e3-bb5b-f103dbe5f3e6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "315164ac-5b4e-4998-bb40-522a32467b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6525b870-985f-4905-b559-2f9d53169a17",
        "cursor": {
          "ref": "eb7ab8d5-b8e9-4ead-9dbb-c439c7fc0cfe",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ccc4f254-82bb-4ea9-9579-1177334f3797"
        },
        "item": {
          "id": "6525b870-985f-4905-b559-2f9d53169a17",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "39613cbe-8177-43f9-a6de-27eb6a32227d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da19ecd0-8abf-4959-940f-53b34f928a46",
        "cursor": {
          "ref": "ddfd18a3-1a3a-429e-9f6d-4b794ef93be1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4fa673f0-d1fa-4943-8502-2978ae0a4ca0"
        },
        "item": {
          "id": "da19ecd0-8abf-4959-940f-53b34f928a46",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "18263a73-0fa8-4a76-a96e-c96891c30a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f0ddc6-6582-46c0-b4ba-bb6205d42a35",
        "cursor": {
          "ref": "eac09834-d15d-4a00-bd34-80efe718198d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6ad0a1e4-5903-44e6-8ace-9dc80a887831"
        },
        "item": {
          "id": "e5f0ddc6-6582-46c0-b4ba-bb6205d42a35",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b4a3b7b6-1144-4f59-a0b3-e6c16f6d5e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2e28a4-c04c-42ec-ba5b-b1f98ebb7af7",
        "cursor": {
          "ref": "062c4e57-f404-4d84-b5c5-d6fbc2d1b884",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a36dcf9d-a8c0-4020-b27a-2f0a064488ae"
        },
        "item": {
          "id": "cd2e28a4-c04c-42ec-ba5b-b1f98ebb7af7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ef0dda8c-af58-45f2-add9-bac017536342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b711b0-f41f-4189-9398-b21dfee0ed5e",
        "cursor": {
          "ref": "68acf35c-c264-4be8-83ed-9b44a51f6a7b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ba136ca1-f38b-4c2d-9e05-01701bdbad5e"
        },
        "item": {
          "id": "95b711b0-f41f-4189-9398-b21dfee0ed5e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9ebc2fd0-3ca0-48fa-a96d-96a8ecc8b5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b081c29-5966-406b-aad9-4d7d47c9d613",
        "cursor": {
          "ref": "d9f0adcb-2014-46d1-98f7-ac1164b112ac",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ff913b1a-2b14-42bb-ab4b-93743e46bd5d"
        },
        "item": {
          "id": "7b081c29-5966-406b-aad9-4d7d47c9d613",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "505c99a1-fafc-44d5-bbdb-4d5edcf95380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ef8837-be62-4d4d-a7e0-a9c7eaca4894",
        "cursor": {
          "ref": "875209bb-fbe1-45d1-9cf9-de89fce5a787",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "567b1ba2-1bb6-4c06-9e55-d900a556318f"
        },
        "item": {
          "id": "50ef8837-be62-4d4d-a7e0-a9c7eaca4894",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "65da3a2e-375f-4c21-939c-3353f1ee5ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d4527a-550c-4907-b7f1-13906b6ca8ed",
        "cursor": {
          "ref": "f842a58a-2a3a-4875-9700-d195b07e7968",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "376d28ab-06ad-4590-991b-e47104417ba9"
        },
        "item": {
          "id": "d8d4527a-550c-4907-b7f1-13906b6ca8ed",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c2669e81-917d-4d52-bf3b-55ba165be26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575c27bf-08c4-4d62-87bf-89e4fa9de2c7",
        "cursor": {
          "ref": "b1e25eac-5b97-4248-8430-5d92cf28b662",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9b6d3e12-2669-44ef-b643-653bcf044d63"
        },
        "item": {
          "id": "575c27bf-08c4-4d62-87bf-89e4fa9de2c7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8b8cb4bc-14c5-4142-bcaf-668450c6993e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9088d0-4c6e-4261-ad02-b5e94c947ff6",
        "cursor": {
          "ref": "57af8b12-49db-4f8e-ae90-01a21c384804",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e21221b6-f34f-49cb-9eea-8a314c8a54e3"
        },
        "item": {
          "id": "5b9088d0-4c6e-4261-ad02-b5e94c947ff6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c4752147-2949-4e44-bee1-1fe910b95806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43c722b-b7a3-44b8-81c8-ac5040fdc77c",
        "cursor": {
          "ref": "8cb784c4-7431-4623-9903-b30ce277fcee",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7abfa1c2-0c95-479f-8ae4-449989d05927"
        },
        "item": {
          "id": "a43c722b-b7a3-44b8-81c8-ac5040fdc77c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0a4f2a2d-e35b-4ec3-b185-63f8127a8092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01278d9-469f-4fa1-a2ea-225c0707905e",
        "cursor": {
          "ref": "6f49f198-5d87-4676-ad29-2fe4d432c2f3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7ef6fe38-1c79-4700-b424-b2999727f158"
        },
        "item": {
          "id": "e01278d9-469f-4fa1-a2ea-225c0707905e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1d5b8e4a-e288-4f57-b751-f0958787c7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c51055f-ef15-46fd-9a42-dfdb813c3055",
        "cursor": {
          "ref": "fccbe9e7-223d-4869-88f8-0423a3d102d9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e80af25a-1306-4602-81fa-4e8c32582019"
        },
        "item": {
          "id": "2c51055f-ef15-46fd-9a42-dfdb813c3055",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f28a6236-6bdd-4b8e-9e1c-c233b9dd24ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0387cb7b-b37a-4b3f-bf5b-eac2471adae0",
        "cursor": {
          "ref": "a278defa-d66b-431d-b982-9e08a191739f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "22ab2183-b873-46b7-97fc-6d68cfa77f2f"
        },
        "item": {
          "id": "0387cb7b-b37a-4b3f-bf5b-eac2471adae0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "492b1bd3-f8dc-4970-9acf-bf491ba8341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782d5b60-79d5-462d-8026-bc98d605b040",
        "cursor": {
          "ref": "951db39a-0b0a-4dea-ab20-57b1adc219f4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d4f5e07d-ba29-42f5-ad56-0911120a4608"
        },
        "item": {
          "id": "782d5b60-79d5-462d-8026-bc98d605b040",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7537aafe-d682-478b-a533-3c84b3d7eb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920821ab-e991-4338-b235-9043da129b46",
        "cursor": {
          "ref": "eba7f1e7-2e6b-4536-a61c-fb5881163285",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ca6d354a-cde2-48ff-ba56-17d28f01a853"
        },
        "item": {
          "id": "920821ab-e991-4338-b235-9043da129b46",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d95ec675-0758-4909-ad84-694777a4de89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf4ec54-cd9c-48e4-82f3-0cc4f55e3c05",
        "cursor": {
          "ref": "9cea7f9d-a280-4c01-8c1f-fb38709c4839",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4f632c32-f3b0-4570-9735-de3e1c8069f1"
        },
        "item": {
          "id": "cdf4ec54-cd9c-48e4-82f3-0cc4f55e3c05",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "752b5775-5df0-4c4d-a935-433e44754173",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8acc20-5bef-46bf-b03b-e60ca54f4a32",
        "cursor": {
          "ref": "9144c577-470d-4b28-892e-318b292ecf31",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "83136e52-3b9d-485c-bf18-757a10ff4a5a"
        },
        "item": {
          "id": "6e8acc20-5bef-46bf-b03b-e60ca54f4a32",
          "name": "credentials_issue"
        },
        "response": {
          "id": "76e7966b-404a-46ba-9012-d144a46461c1",
          "status": "Created",
          "code": 201,
          "responseTime": 6874,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a43c8d8-c390-46bf-9447-5d66a50fefef",
        "cursor": {
          "ref": "ad98d899-3b49-4124-87ce-0e1476177f5b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "51f72ba1-faf8-4b71-acc7-0acde438de23"
        },
        "item": {
          "id": "8a43c8d8-c390-46bf-9447-5d66a50fefef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6914b40e-5856-4ab9-9a79-ca2eca3bd8dc",
          "status": "Created",
          "code": 201,
          "responseTime": 6532,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51bb3f3-2723-4694-b802-ce71f158382d",
        "cursor": {
          "ref": "bf8158de-a579-4deb-a405-f782af5ac048",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7e9b1ea2-9557-425c-9b84-01e5a6a245a6"
        },
        "item": {
          "id": "e51bb3f3-2723-4694-b802-ce71f158382d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "45cb5eb9-329e-4f0c-ae34-0b99d00dcbaf",
          "status": "Created",
          "code": 201,
          "responseTime": 6078,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "282bfcf3-243c-4f77-b694-daa8f752678a",
        "cursor": {
          "ref": "97061f9b-4271-48f4-9012-38c7be05ccba",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e0833faf-656d-4788-92cb-e1b7c66300fe"
        },
        "item": {
          "id": "282bfcf3-243c-4f77-b694-daa8f752678a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f009a4a0-fa6e-408e-8493-245e59eb0f1c",
          "status": "Created",
          "code": 201,
          "responseTime": 6562,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "031de737-e2b1-40d0-94fe-c502a9d13cf6",
        "cursor": {
          "ref": "2c8be2bd-cef7-4325-bedf-06f618c77e49",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f1e5fea7-a66c-481c-88bf-9c65851b10f9"
        },
        "item": {
          "id": "031de737-e2b1-40d0-94fe-c502a9d13cf6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "44db38d6-5e53-4e30-a7ae-42587edfea18",
          "status": "Created",
          "code": 201,
          "responseTime": 6572,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b95239-5862-486b-89ad-b611df0e016c",
        "cursor": {
          "ref": "462b49de-f916-4efd-80bb-20809bf12006",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dc201c0d-76d6-441d-a953-a2a6f866de33"
        },
        "item": {
          "id": "26b95239-5862-486b-89ad-b611df0e016c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ead93eeb-3acc-46f8-b43c-b96b60bc6834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b1a9b03d-1d51-4910-a58d-e621ba492662",
        "cursor": {
          "ref": "f104e01d-01c5-4695-8ee3-b2d8714a0259",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "089c51b6-eb7c-4952-b96d-31b67c49c1ad"
        },
        "item": {
          "id": "b1a9b03d-1d51-4910-a58d-e621ba492662",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2f28932b-559f-427a-8e47-31734e9c4fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6723e8cd-c91e-43c2-a551-3cbc7d4c73bc",
        "cursor": {
          "ref": "512579e9-1ee4-4d91-a5e7-63f039a78224",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "01fe89d0-1332-409e-87c3-6da92b50d53f"
        },
        "item": {
          "id": "6723e8cd-c91e-43c2-a551-3cbc7d4c73bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e05c310a-ae42-4409-bddb-93f9c8d0c52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c409e2-0020-4a57-9437-ae28cf815065",
        "cursor": {
          "ref": "a09b3c4c-8d2c-4132-8d74-4fca41cf6a5c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0bc1abc1-b004-4cf2-9d1f-3c951d640235"
        },
        "item": {
          "id": "49c409e2-0020-4a57-9437-ae28cf815065",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eb368c95-b1eb-478f-873b-631b25188653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e796cee4-37b8-41af-b6a2-4713563407a5",
        "cursor": {
          "ref": "df7041c1-088a-4d5d-92c7-5936a5e7bca4",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a092d197-d60a-4cff-bb5f-41fd127b5585"
        },
        "item": {
          "id": "e796cee4-37b8-41af-b6a2-4713563407a5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4ff85abd-f9bd-469d-9343-efbf022196d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36dfec6-f22b-4bd9-9754-65431f6558ce",
        "cursor": {
          "ref": "48cbdc63-0ce3-40ca-8608-de664ca35e91",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d0380194-a470-4ca6-ac78-dd5d2b4e48f8"
        },
        "item": {
          "id": "c36dfec6-f22b-4bd9-9754-65431f6558ce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "50e8221d-a5f5-48f9-82c7-f32fc2d9f85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd04eee-9f94-42f1-988f-dc16828a063b",
        "cursor": {
          "ref": "dc578e9a-e511-4004-b31e-80080396ca4b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "942d79c3-1793-49b2-801d-f9d510473beb"
        },
        "item": {
          "id": "0fd04eee-9f94-42f1-988f-dc16828a063b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "87d866db-cb79-43e6-8865-f917eda61e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a51a7f-c862-499f-a154-9eddf4ae1e15",
        "cursor": {
          "ref": "beba44d3-de84-4dae-be1a-32efa6bdb960",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c5a86d8f-de91-4d8c-9b1c-0381ffccd168"
        },
        "item": {
          "id": "99a51a7f-c862-499f-a154-9eddf4ae1e15",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "697cdec0-7f62-40a0-8916-9a2610f02051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e5f3c7-c377-41e7-9884-a37bcc01fd07",
        "cursor": {
          "ref": "aa017da0-b171-40a9-aa1b-05ed6f74f8c7",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "af9e2277-8a38-4c47-9132-bef300936ad7"
        },
        "item": {
          "id": "f3e5f3c7-c377-41e7-9884-a37bcc01fd07",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ce522192-e874-4f25-beab-983e2a716321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fa09b9-e49d-4311-863c-3b56bd2d7d8b",
        "cursor": {
          "ref": "71dfacd1-3b3c-4fbc-aaf6-b3d7c26d46c1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "968504a7-868f-404f-ae5d-9647933bd4d5"
        },
        "item": {
          "id": "c7fa09b9-e49d-4311-863c-3b56bd2d7d8b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6531a5f4-260e-4811-aefd-e76e116a6676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b637b-425c-4c24-8701-8b450f56d324",
        "cursor": {
          "ref": "514b8763-d37f-404b-b33f-fa44e5c485c4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "05656723-5352-4e99-8c4f-10324addff74"
        },
        "item": {
          "id": "da1b637b-425c-4c24-8701-8b450f56d324",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "65e6d182-6bf9-470d-bf78-0f6d25ba1397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a70edf6-8c0c-4548-ba07-92865a7739d3",
        "cursor": {
          "ref": "590d0b8d-fdd6-48f2-b390-c24f1562f44b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1fb29f68-0611-45a3-9c0f-e82679a18357"
        },
        "item": {
          "id": "7a70edf6-8c0c-4548-ba07-92865a7739d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3dc50cdd-cadd-4033-9979-b95bcb305084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5baa4a0-0083-4217-abde-085b8b922223",
        "cursor": {
          "ref": "01dbcdbe-5715-43d7-8c41-43090f0e730a",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c5102df9-ea9d-435e-b610-475e0a7c5b76"
        },
        "item": {
          "id": "b5baa4a0-0083-4217-abde-085b8b922223",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8e24edbd-1c39-4728-82bd-a263642a280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d4a563-4d48-438f-9f2c-289beece7ee9",
        "cursor": {
          "ref": "a7b17f06-082f-49b3-acfa-dc72e21a13de",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c0a4738a-32f1-43e6-b78c-7934957e467f"
        },
        "item": {
          "id": "73d4a563-4d48-438f-9f2c-289beece7ee9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ad5b498-f4af-409b-b6b8-fae0b0caf1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2571e23-87dd-46df-b264-7c0adc4a7093",
        "cursor": {
          "ref": "e57610ed-663e-4010-9297-44c46c779a22",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0d5c5a96-0a0c-4a33-bfaf-074c0d1d67f1"
        },
        "item": {
          "id": "c2571e23-87dd-46df-b264-7c0adc4a7093",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "10158a10-2d7b-405d-a7f5-69312e63106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c843080e-5fe2-4ef6-bc61-2b6891f2ff3a",
        "cursor": {
          "ref": "222d504c-8e3b-4f06-96d0-e210531f37ff",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "002b75c4-bf5b-4993-a784-8b65d20f4d9f"
        },
        "item": {
          "id": "c843080e-5fe2-4ef6-bc61-2b6891f2ff3a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "742212b2-486b-4c81-b9fb-98c450d21a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64a3ba1-2bbb-4c51-8f58-075219a1afe8",
        "cursor": {
          "ref": "7811f635-5304-4925-b1b8-283f656f7aad",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0b105ea5-035a-4613-a33e-325a4cc4f839"
        },
        "item": {
          "id": "c64a3ba1-2bbb-4c51-8f58-075219a1afe8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "95b1ca1d-3b90-4a3f-9373-66ea1b2cf616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0658f3b0-3f6f-4496-bac3-616759381ce7",
        "cursor": {
          "ref": "564dee88-b65e-4d58-bed3-d5d484630e4d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3dc0b797-5fe6-4fff-b06f-ea73680827ab"
        },
        "item": {
          "id": "0658f3b0-3f6f-4496-bac3-616759381ce7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1a3a3684-9c08-4255-ae7d-019d5c66ff20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b51c40-8328-4dfb-a4c7-067ca516ecae",
        "cursor": {
          "ref": "2b83c37c-4548-44e1-9891-da04e6bc536c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b8eb61e3-25a6-46a7-b44a-5132beca79e1"
        },
        "item": {
          "id": "46b51c40-8328-4dfb-a4c7-067ca516ecae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f85459ed-5f20-4fe1-a7e2-48fa0bd8a91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d6adff-dbf4-4537-9e24-b41c75fb0bb7",
        "cursor": {
          "ref": "70e0ce04-d44b-4642-b4d2-1d5cbf3f8a17",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bcbdc363-6863-480f-a0ba-d17e428ec882"
        },
        "item": {
          "id": "84d6adff-dbf4-4537-9e24-b41c75fb0bb7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ad49138c-a7ae-4471-a2ae-80796f2fda7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6148e33c-b97f-4606-9f8e-15820d54388b",
        "cursor": {
          "ref": "10f6911f-a4a6-47ea-8bd3-ef8db785ecd7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8a9eea0d-1974-4eb7-8d13-8df0bc3744ec"
        },
        "item": {
          "id": "6148e33c-b97f-4606-9f8e-15820d54388b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "171edebb-dd01-4ddf-9176-e11c6e172e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7afb0cb-f20e-4cac-ab5f-de5ab394594a",
        "cursor": {
          "ref": "949acbdd-0322-4a53-9293-a5350d9d9783",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dbca9bf0-4a52-48b8-b210-97e0e508ad13"
        },
        "item": {
          "id": "f7afb0cb-f20e-4cac-ab5f-de5ab394594a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aed6efdc-5627-44eb-82df-a64f935af80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ad1990-2a14-4c9f-8bea-51f2e8c14b7f",
        "cursor": {
          "ref": "28f855ca-362c-492f-87cd-965d70c47516",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9b07e68c-fe39-44cc-8002-31d638376efc"
        },
        "item": {
          "id": "11ad1990-2a14-4c9f-8bea-51f2e8c14b7f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dec15c93-9a1b-4d3d-949d-f7873c0c85a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ec2245-d762-49e8-9e13-3883e724b643",
        "cursor": {
          "ref": "a827e353-b0b6-4a3d-b8c4-be586452da92",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7418af52-e610-4e8b-8181-45d8bcba6f96"
        },
        "item": {
          "id": "60ec2245-d762-49e8-9e13-3883e724b643",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c53f144b-e900-4325-bb87-406dce68f381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cd2612-782d-4b95-b1b7-b2ac461cadc5",
        "cursor": {
          "ref": "475abbff-5b49-4fc2-ad8c-339bf55920e3",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0bc7c286-1e3e-451e-8e5a-3091a9e6334a"
        },
        "item": {
          "id": "53cd2612-782d-4b95-b1b7-b2ac461cadc5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "08119f3d-6031-4266-bd71-8bb48d78dd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7174ba8a-8f14-4473-ba83-6b553178fb61",
        "cursor": {
          "ref": "ac61d990-c18a-482d-b8dd-510895a7950a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1fb32231-5d9f-4a54-99cc-a34db048b3e1"
        },
        "item": {
          "id": "7174ba8a-8f14-4473-ba83-6b553178fb61",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "314e7c4e-31ba-4edf-80ea-e3ab824bca17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b61e26-f4d4-4e72-90b4-57c4156eb3aa",
        "cursor": {
          "ref": "f69d027c-7093-4068-a944-0f77c7af5886",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "57df325c-d452-44bf-bc86-547372cfe675"
        },
        "item": {
          "id": "48b61e26-f4d4-4e72-90b4-57c4156eb3aa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bf92ba03-c06c-49f9-848a-0371c41206cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e655ec-d2ba-4604-afe4-0ef97758e82c",
        "cursor": {
          "ref": "82421ccb-3bdf-404e-b815-111eb7734cf0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9dc63492-dc80-4ac9-95b7-0366e793e2e3"
        },
        "item": {
          "id": "26e655ec-d2ba-4604-afe4-0ef97758e82c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d70e46fa-ba13-4507-800f-9b8d04132234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06bb672-ee67-4a60-bbdb-0418c7d5be5c",
        "cursor": {
          "ref": "09a544f0-eb83-441e-a67a-8b96f3718a6b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "87f505b8-fcda-4957-86c3-72e965fc246f"
        },
        "item": {
          "id": "b06bb672-ee67-4a60-bbdb-0418c7d5be5c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a391703-3d0b-47e8-9bbd-1914823bfda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cbad16-ae57-496e-82b4-71cdcf7235a7",
        "cursor": {
          "ref": "aa7e9903-0629-47b5-ad40-a6079b3e3cfc",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "77b8e14a-32c2-4ebc-ada9-e03173d0f257"
        },
        "item": {
          "id": "33cbad16-ae57-496e-82b4-71cdcf7235a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3128dd7-6aca-461d-8be6-e98e8a8fc6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3134fe77-9d57-4345-a205-f3b88decac29",
        "cursor": {
          "ref": "79c88586-bbe5-4fc8-be18-3a4f7308e182",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fda20ed8-debe-48d8-9450-81b3b4c84996"
        },
        "item": {
          "id": "3134fe77-9d57-4345-a205-f3b88decac29",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5ed2c42b-5833-4ff3-bc92-45a5e7aeaabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a324c30-b3ba-4fa2-ab99-96b6d0206ad4",
        "cursor": {
          "ref": "d382a76a-90aa-440e-82d3-009b6e31018c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ad255bf7-8077-44fa-aff4-94a125e13990"
        },
        "item": {
          "id": "3a324c30-b3ba-4fa2-ab99-96b6d0206ad4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d8a1a130-19dd-4c20-a65d-5a81c787a9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebefad3-067f-4355-9783-73e6aea444b2",
        "cursor": {
          "ref": "10f10851-7560-4490-b702-bd5e46c22d08",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3b8f862e-38e9-45e1-9c53-422310581234"
        },
        "item": {
          "id": "3ebefad3-067f-4355-9783-73e6aea444b2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "69746f1f-9052-4cdf-973c-d36d59e4ff26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6732e73d-a034-46b2-9e21-d206b52666b5",
        "cursor": {
          "ref": "f6069e79-3ada-4455-800a-0489264895c5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f5f1e934-7a5e-48aa-8e37-746ea66f237e"
        },
        "item": {
          "id": "6732e73d-a034-46b2-9e21-d206b52666b5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8e1c41f6-6fc6-4ee6-9a69-1b5e5c5dd4b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef98e599-c88d-41fb-9d66-8535e8cae746",
        "cursor": {
          "ref": "7686225d-1846-483b-a686-aaea6f32ca3e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3a13597b-f363-49f9-9740-b8c2e90309a6"
        },
        "item": {
          "id": "ef98e599-c88d-41fb-9d66-8535e8cae746",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2dc1fb66-b0ef-47fb-8597-50718168410f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbd32fd-e51b-4ddd-805b-b843d9694f95",
        "cursor": {
          "ref": "0d89cf25-9dea-4adb-9e15-24246a3259bb",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6cb4901c-d459-4cc9-b505-12cd3f14e493"
        },
        "item": {
          "id": "9fbd32fd-e51b-4ddd-805b-b843d9694f95",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c88a4fd1-7154-4e84-bd42-9b845b8e3fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff185909-a976-43e1-8c75-9a029465b0fe",
        "cursor": {
          "ref": "6307a10a-604a-47fc-9e82-b980ae42c6ca",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5f7e3fa7-0bd1-4d56-8b09-7c9eca884542"
        },
        "item": {
          "id": "ff185909-a976-43e1-8c75-9a029465b0fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "56a81f56-1599-4062-a5ee-525545f39f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a92565-c64a-4d32-8701-a96b7e6a7a95",
        "cursor": {
          "ref": "9720e3da-c186-4de2-8c49-7b4e6728980f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d6aaab89-d80e-437c-ab43-2dfbdde559ab"
        },
        "item": {
          "id": "05a92565-c64a-4d32-8701-a96b7e6a7a95",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3d8ed414-b4d9-4bc8-95f6-60681668c4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9b3fb6-3829-4021-bc12-bbfd874c892c",
        "cursor": {
          "ref": "76fdeace-0d5c-4929-a341-8b75964078b6",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3f644319-b0ee-40a2-8b64-91e6736370ad"
        },
        "item": {
          "id": "db9b3fb6-3829-4021-bc12-bbfd874c892c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f6f627ad-14ae-4de3-8ecd-e9d413383841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd67f7e-d75d-4462-9291-574e9b51eed9",
        "cursor": {
          "ref": "35953adf-88f6-42dc-829a-a78f715481d1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ccc545a-cf24-4c7a-bb17-da56fea426a6"
        },
        "item": {
          "id": "3fd67f7e-d75d-4462-9291-574e9b51eed9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a088d166-5820-4b72-ae33-403207ed86d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01dc514-527f-420b-b1de-e6f824af54cd",
        "cursor": {
          "ref": "a68bd07a-b6ac-46ba-973e-3638a95d2915",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c093249a-c4f4-478d-b003-ec51850f8781"
        },
        "item": {
          "id": "a01dc514-527f-420b-b1de-e6f824af54cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2e61f1b3-2d80-498c-be88-a24c9f27a3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4315c38-ce31-4e27-aec8-3b1ddd663481",
        "cursor": {
          "ref": "0268f371-ad39-4e6a-a340-39740ffc2756",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d64b02b4-6d21-4f1b-ad48-d5ea194f02e2"
        },
        "item": {
          "id": "e4315c38-ce31-4e27-aec8-3b1ddd663481",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f46a7915-e232-4e7c-a31a-a45782300ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a60306-155a-4a61-88f2-54608f46ff99",
        "cursor": {
          "ref": "4ccb8ed7-1551-4db8-9490-e83f1b0cc5af",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3a079a46-6beb-4d53-8ace-6186e259ac74"
        },
        "item": {
          "id": "a6a60306-155a-4a61-88f2-54608f46ff99",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72dfe046-4c0e-48d4-9e24-6d0fd1c98093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235b0ea8-c8c3-45c0-ab18-ceb086519a6e",
        "cursor": {
          "ref": "a2c28f6c-3fd9-4e44-954d-4c3c5fc716e7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8dc80052-0c1e-4deb-9776-5e6208751121"
        },
        "item": {
          "id": "235b0ea8-c8c3-45c0-ab18-ceb086519a6e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "55dda8a0-457b-4414-968e-e7fc98f72fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faccfbdd-cfd1-4a36-8eda-cc192d7174c8",
        "cursor": {
          "ref": "bb77aedc-6d73-4997-b4a9-40af3ae9477d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bd011098-c701-4a8b-9f64-039cd2482d12"
        },
        "item": {
          "id": "faccfbdd-cfd1-4a36-8eda-cc192d7174c8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a7214193-5454-47c9-a335-dfa67ff4fb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd03c6c-3579-40c2-a231-324f5df1621f",
        "cursor": {
          "ref": "2a14e61d-2e39-4bec-acb3-7c646620d679",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "446023c5-96b6-4c1d-969b-c6e2e745375c"
        },
        "item": {
          "id": "9cd03c6c-3579-40c2-a231-324f5df1621f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "71e2719c-5ad6-403b-9d23-1e380d02ee38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a7c71-ef5e-4ee2-a2dd-6e0f195344b9",
        "cursor": {
          "ref": "9d317dd9-0055-4da3-ae05-2a5ecedad14f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2df7792c-e1ad-4ea9-ad8f-d11684be21b7"
        },
        "item": {
          "id": "5c4a7c71-ef5e-4ee2-a2dd-6e0f195344b9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0e2738f-b27c-491e-b012-5061e6c9ad1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88870d0-8fc2-4962-8af7-6da9a372214d",
        "cursor": {
          "ref": "6521badb-c9fa-4ca1-8099-2fb1afb2dd54",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "77b0eae5-d81d-4d81-80ae-11aa8916dae6"
        },
        "item": {
          "id": "f88870d0-8fc2-4962-8af7-6da9a372214d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "21c2ec21-6a6f-48ba-a837-dd53a1134890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28857eb-3c51-45bd-a701-2b90bb1120b9",
        "cursor": {
          "ref": "3a5795fe-23ff-4f10-a63d-0ed584d9d7bc",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "07bc6c08-7bb8-43fc-9d94-c8e4570eab2b"
        },
        "item": {
          "id": "a28857eb-3c51-45bd-a701-2b90bb1120b9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97cb8055-474d-4624-88d7-424a2126732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0160f575-57af-4d76-95e9-3cbcd73d7167",
        "cursor": {
          "ref": "8a8af273-1cbf-4e7f-b3c0-9a0e8e93fcf0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6ddf98dd-1dff-4886-b876-097b0db95b18"
        },
        "item": {
          "id": "0160f575-57af-4d76-95e9-3cbcd73d7167",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11a0ec5f-a806-4ee2-bcda-c1f2eb7b47d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d827151f-dd0b-478f-8d42-ef989166c860",
        "cursor": {
          "ref": "5f9b980a-f83c-457e-82fd-82bb088f91ad",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d3253ce2-38f2-432f-af1c-4052965b711c"
        },
        "item": {
          "id": "d827151f-dd0b-478f-8d42-ef989166c860",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "64eee302-fef8-4020-ab9a-ccdeedd3db81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fc3439-eb27-4070-9e59-938471f14c44",
        "cursor": {
          "ref": "11ed72b1-acb7-4aab-a2a9-ca5b5551f16b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "73cd7f1d-2d12-4a72-ad5f-a9884aaf2821"
        },
        "item": {
          "id": "c1fc3439-eb27-4070-9e59-938471f14c44",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1424006d-2d6e-48fb-9407-d119f009e480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e96eda9-c219-4fdc-accd-1871d895af4a",
        "cursor": {
          "ref": "384eebd6-1cdc-4c84-812e-0d820cf63b0b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "96212cb8-70ed-4a7d-818d-07c7b58daf03"
        },
        "item": {
          "id": "8e96eda9-c219-4fdc-accd-1871d895af4a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5bc98e04-8899-4dea-a597-cb2e8686f29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461983de-b559-4512-8e14-832b9ff53647",
        "cursor": {
          "ref": "b6933628-d528-424f-b4f5-50730b725262",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ce2f38a4-0b3c-4c01-94c5-2f195922dd89"
        },
        "item": {
          "id": "461983de-b559-4512-8e14-832b9ff53647",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "68a8fb4d-57ce-42e4-abdf-d0c1dbe99df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8af863-69b1-440e-81f5-f4f4ab305384",
        "cursor": {
          "ref": "8741a881-ad13-4311-9302-f5741ce2c071",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "41d9d3fa-fde4-487d-a419-8294949f3869"
        },
        "item": {
          "id": "ea8af863-69b1-440e-81f5-f4f4ab305384",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "52bd60c3-8f5a-4b38-9101-05e3be712074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9c03e1-b978-4c9f-bb49-c2f575653ed0",
        "cursor": {
          "ref": "966328ad-cd0e-4c6b-a109-b9893a17b8fa",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6faecc74-8405-4471-93f9-2d565d05bace"
        },
        "item": {
          "id": "eb9c03e1-b978-4c9f-bb49-c2f575653ed0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14831580-e8be-4aa9-91fe-e1e670608742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ee9671-8ac7-4f2c-ab5c-23400e9d7584",
        "cursor": {
          "ref": "ff692ffb-7508-453d-94b6-8b84564b0045",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0dbc2b58-fe5d-440f-b1d8-bb36f13fea00"
        },
        "item": {
          "id": "50ee9671-8ac7-4f2c-ab5c-23400e9d7584",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d3f92ac5-bc0b-4f98-ac37-62dcbd83531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1fccac-ce2d-43c8-af84-16833a2482cd",
        "cursor": {
          "ref": "f9d5792a-fad3-4fda-9566-9006e7ade33c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7e33dbe5-ab7f-40e8-b013-669402fee1c3"
        },
        "item": {
          "id": "3d1fccac-ce2d-43c8-af84-16833a2482cd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ae683915-9e8f-4707-85e3-852eae2ca9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546d59c0-b473-4fb8-a110-e3abe02d24a7",
        "cursor": {
          "ref": "f0fb64d3-100d-4933-b5af-86395f4b56cd",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e6514894-afb2-40fe-a9e5-3566a31602a8"
        },
        "item": {
          "id": "546d59c0-b473-4fb8-a110-e3abe02d24a7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4067be99-062e-424d-92ad-aedd1fd723a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a28f330-0cb1-4330-a4d6-aa625243dd30",
        "cursor": {
          "ref": "dd88fdcb-7bcd-472c-ae0f-1fcd3657b226",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f1921a4d-a7ec-4a1a-9182-f00f975dbd42"
        },
        "item": {
          "id": "0a28f330-0cb1-4330-a4d6-aa625243dd30",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "16280c6f-e627-4cbd-b14e-38f31e5477d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1040,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad25d36-7687-4afd-a377-9744b638ad4e",
        "cursor": {
          "ref": "96b5c336-73e9-40a0-bc12-b19b2c1fe80a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a6b0c52-8462-4f0f-b333-8aaa6461878d"
        },
        "item": {
          "id": "5ad25d36-7687-4afd-a377-9744b638ad4e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6634cb3d-0f79-4ac5-94d9-6bdefe3a5944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1060,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1a8a20-e59e-4270-82fa-18b6568ee910",
        "cursor": {
          "ref": "9302b094-ded9-484e-9690-af179f632de0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1e0d11fe-c790-4982-896f-cc9fc43d1242"
        },
        "item": {
          "id": "ec1a8a20-e59e-4270-82fa-18b6568ee910",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "45dc6250-7439-4a98-a4f5-9ef102da11e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1143,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13401d84-6f43-4022-925a-aa5276f8b0c0",
        "cursor": {
          "ref": "871bafd6-6aff-4f3b-96d1-b111b726800b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "35e6ca5f-e23d-4ca5-a397-3e2edd0851fa"
        },
        "item": {
          "id": "13401d84-6f43-4022-925a-aa5276f8b0c0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1c9d84e7-d810-4dc3-8ef3-fc4249977797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94e740a-f1c4-4330-868c-9f2a25f0ff68",
        "cursor": {
          "ref": "a22e923f-195d-4b7c-8394-b1bf0406405f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eb1c3472-43dd-4115-bd42-d41b4992de35"
        },
        "item": {
          "id": "c94e740a-f1c4-4330-868c-9f2a25f0ff68",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e5b84ea3-bcfb-4bde-a22b-dc14b75c87a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1060,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbd3d56-d991-48ae-ab20-c562cb640953",
        "cursor": {
          "ref": "2384dea3-9f18-4480-bdbc-d0318f9ff44c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8b57f35f-5baa-4d1b-922c-b0dea5c77245"
        },
        "item": {
          "id": "5cbd3d56-d991-48ae-ab20-c562cb640953",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0341f0b1-f620-449b-b4ba-2c45305e1082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f897e58b-b7c0-4532-ab35-c42d7b650fff",
        "cursor": {
          "ref": "d4318f00-35a5-42cc-8b7d-7b63f6d3f798",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3256ed19-8359-44d8-88a6-47b353d78bba"
        },
        "item": {
          "id": "f897e58b-b7c0-4532-ab35-c42d7b650fff",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "54cd14c8-d7ec-47b8-91e2-99b316d47c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1076,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cade477f-6496-4828-a0b0-d3217ce5e657",
        "cursor": {
          "ref": "b4a62a9f-e041-4c85-8689-b4c0ef01b000",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "20eac0de-a0bb-4065-b497-781b21f571c4"
        },
        "item": {
          "id": "cade477f-6496-4828-a0b0-d3217ce5e657",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d09904aa-aa71-4c7b-a943-a26c6825de55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1074,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d02f776-c57f-449e-885e-75558205a60d",
        "cursor": {
          "ref": "7f781085-195d-4c98-8abe-a4c9cbc73222",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ae4b891b-e5ef-4f32-ba62-e44ea09278cd"
        },
        "item": {
          "id": "2d02f776-c57f-449e-885e-75558205a60d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3bbc3d47-4be0-4a1d-9dc3-8debff9b86bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d669c4a6-e509-4c06-a48f-c06b8632f524",
        "cursor": {
          "ref": "745df279-4e06-433f-a82e-f28ca329beee",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8c949b50-f43c-44e5-8078-58e0cb77d8a3"
        },
        "item": {
          "id": "d669c4a6-e509-4c06-a48f-c06b8632f524",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "af2d9f96-1aad-4975-89f6-09eddba040ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1060,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93225bd4-7877-4cf5-a8aa-258aba5774e7",
        "cursor": {
          "ref": "ebe65906-d432-4733-82c9-01e005b3458e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "37afc04b-d2c8-4c95-9134-ead3d2f783ed"
        },
        "item": {
          "id": "93225bd4-7877-4cf5-a8aa-258aba5774e7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fa7af14a-43dd-4a4b-a919-cd2b6bf4f64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1ab1a5-98d6-4a1e-9ef9-16763e493ac8",
        "cursor": {
          "ref": "c0fafddf-3c6d-4e56-9b26-764945201360",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b0311321-ef72-4559-af6b-dcaab36d531f"
        },
        "item": {
          "id": "bb1ab1a5-98d6-4a1e-9ef9-16763e493ac8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db4199ee-6171-4758-95d5-8a1924283e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c55c8c-1c2a-4368-bf8f-8c3d9d497f7b",
        "cursor": {
          "ref": "7b310b51-d894-4315-8897-9a59d0a9d203",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "01a14ff8-fe79-4acd-954e-a2893a2a3557"
        },
        "item": {
          "id": "d3c55c8c-1c2a-4368-bf8f-8c3d9d497f7b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5122dc07-b147-4561-821b-27ff98e43c47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510f1fa1-a865-492d-b8a5-ecb20669d0c1",
        "cursor": {
          "ref": "c0e4d2b4-f500-4949-9c75-c977e63f1175",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2bfdb7f4-5166-4aa3-9a8e-c85b7a8628ef"
        },
        "item": {
          "id": "510f1fa1-a865-492d-b8a5-ecb20669d0c1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4e8b0ed7-636e-4ffd-8736-2c76a85307ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25649380-7f9d-4baa-84a4-51b737f7aa93",
        "cursor": {
          "ref": "713adf22-07ab-4f66-aafc-1293a8d76237",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bf3a7be4-c742-448a-8cf2-2a462ef1d5c3"
        },
        "item": {
          "id": "25649380-7f9d-4baa-84a4-51b737f7aa93",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f17e12e2-0c7c-4991-9546-702abce2f4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2cab7e-4a83-464c-9a09-eacc9e9b482f",
        "cursor": {
          "ref": "902bd9d1-2463-446b-ab9b-81be6910081c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8973c59c-8171-4bc0-8708-011465fd1cc2"
        },
        "item": {
          "id": "3f2cab7e-4a83-464c-9a09-eacc9e9b482f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0422127a-d543-4041-99dc-e1bafc1f5fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55508ac9-1334-46fd-86cf-17ff8cd71b4c",
        "cursor": {
          "ref": "57736c79-0141-4555-946f-4d924bcacd08",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "757778c4-b31e-45e3-9794-4b7fa91cc844"
        },
        "item": {
          "id": "55508ac9-1334-46fd-86cf-17ff8cd71b4c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1dd17985-80ca-40cb-9280-edcb4dad2bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c1dd2f-75e3-4a6e-9812-b17eb1e72a43",
        "cursor": {
          "ref": "8839f388-5287-411a-8e60-400cc1e9c5f9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1fefccc4-50e1-4dac-90e1-4c61af703aaf"
        },
        "item": {
          "id": "b7c1dd2f-75e3-4a6e-9812-b17eb1e72a43",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "11df5db3-cca8-4be9-bc0c-e130d6dfa6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91a4479-1302-4bc9-841d-873b5f338b4c",
        "cursor": {
          "ref": "f42a3823-a6b5-4ade-b404-6c649ef1b934",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3a53e1c6-0fd9-4a14-abeb-3d0e909ee638"
        },
        "item": {
          "id": "b91a4479-1302-4bc9-841d-873b5f338b4c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbd41391-88d8-4b80-8543-0fee2ed0acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424af21c-86a9-4a05-80d2-6778740807a4",
        "cursor": {
          "ref": "249ef6b2-a4ab-4325-ba22-9344e04bee8b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7530c7fe-7159-4281-8d70-a07509c79416"
        },
        "item": {
          "id": "424af21c-86a9-4a05-80d2-6778740807a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c9691ceb-c711-4063-b521-80c20c59eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1affc0-27c3-49d9-aa3d-eec6467ce4b1",
        "cursor": {
          "ref": "4d616ac4-b247-4df2-91e1-f4bc74327ca7",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c6bddc13-8522-40c9-87b9-b569e72bcda8"
        },
        "item": {
          "id": "cc1affc0-27c3-49d9-aa3d-eec6467ce4b1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8b2f2ba4-3bf7-4e3a-a3f5-989073dc176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfd1a51-1483-4f58-9e50-94b4fa81550f",
        "cursor": {
          "ref": "a2070949-675d-4026-8451-1d567c2e794f",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f0fe002b-35e3-4d7c-8e32-a44aa5aef517"
        },
        "item": {
          "id": "bbfd1a51-1483-4f58-9e50-94b4fa81550f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8b56512b-86f2-41d0-9b53-82967d3354d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155f7343-7972-4403-b246-3397d85fc30d",
        "cursor": {
          "ref": "c4bb149e-30e9-448b-8e0d-136a9be4bede",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "57d524d8-fe99-4581-8ca0-20f5fab75336"
        },
        "item": {
          "id": "155f7343-7972-4403-b246-3397d85fc30d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d9072ab1-0721-4c2b-b853-c0a60ec85f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672e9ad-04c4-450d-b4fc-8a35b080af13",
        "cursor": {
          "ref": "4daba27b-d564-45cd-9ab3-d9ce3905e39b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ff71353a-41a1-4ee7-991e-a696deaac703"
        },
        "item": {
          "id": "2672e9ad-04c4-450d-b4fc-8a35b080af13",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c1b523a3-8486-494e-a724-908e265842d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2664922e-e7b8-4c9c-a77f-19f1b6f7c1dc",
        "cursor": {
          "ref": "ac39207c-3643-4055-89e1-e0938abbf00e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c2a861ce-76c1-49f2-9e38-e350e926c960"
        },
        "item": {
          "id": "2664922e-e7b8-4c9c-a77f-19f1b6f7c1dc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8bd6b947-ca9a-4511-9a78-bdd5b14d5d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe972a9-1f4a-44b0-97db-dd41198c0f12",
        "cursor": {
          "ref": "aa5c5720-938c-45a2-85cf-6cef6d19d9a7",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8fcef6be-a52b-49e5-b825-e701c1a7d0c4"
        },
        "item": {
          "id": "bfe972a9-1f4a-44b0-97db-dd41198c0f12",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ad4cfdba-738a-4747-a7b3-41fc4f3832e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58ff929-a64a-4415-8c82-a270da8d2e57",
        "cursor": {
          "ref": "7d30df3b-28f9-4f0a-871e-44e090c5d631",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c5d5ad7d-634c-4eeb-8f33-740ff481199a"
        },
        "item": {
          "id": "c58ff929-a64a-4415-8c82-a270da8d2e57",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0372c506-11ee-48ea-8680-f5e1bfa135e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3460c69a-12e4-4804-909d-e5b9fad8bb6b",
        "cursor": {
          "ref": "9296711b-4b5b-4b07-af29-49c0284fc63d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8eeb8033-1436-4c54-9f4e-003c17ca35f9"
        },
        "item": {
          "id": "3460c69a-12e4-4804-909d-e5b9fad8bb6b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "37ea3b1c-a0c3-42a0-b4df-73a6515374ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dce6f4c-aacc-48f6-b7c8-bac036ffdcc6",
        "cursor": {
          "ref": "c374a427-df3e-41f7-a596-b8bb7e02bd7b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "27a508a7-dd9f-4f37-8a68-2609dc742a97"
        },
        "item": {
          "id": "8dce6f4c-aacc-48f6-b7c8-bac036ffdcc6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "84be230e-defb-412c-b4fe-ec441d5cff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fee9ef-d4cc-4f09-9bed-6e1ae5e94762",
        "cursor": {
          "ref": "1a499b38-4f65-4536-897d-19e21046f5c0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "daadaa33-1866-40c9-a433-75f028052e01"
        },
        "item": {
          "id": "d7fee9ef-d4cc-4f09-9bed-6e1ae5e94762",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bce659c5-55a5-47d9-a4be-d88ee6bf6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e30e64-3b69-4b32-8185-124f7b12273d",
        "cursor": {
          "ref": "c8fa4033-9978-4fe4-85a0-f1d40ca2c4da",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "29420f88-6e1e-4122-947b-04a3e168af7e"
        },
        "item": {
          "id": "24e30e64-3b69-4b32-8185-124f7b12273d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a9935981-848f-4dd3-a5d4-675c7277e1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b274f86-7f36-4eb5-bab5-95e2782d5620",
        "cursor": {
          "ref": "84c50868-7f67-4fe2-beca-06559deacae1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ca14e7c2-6efc-4897-bdd8-ca77c5f79b30"
        },
        "item": {
          "id": "6b274f86-7f36-4eb5-bab5-95e2782d5620",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "251d123e-6c26-4384-969f-04cc0758f678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f592c1-b0af-483f-b8ec-2a8f6d108bc5",
        "cursor": {
          "ref": "7d496fb9-e586-4dc0-b800-271d3597b45d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "67ccc7c1-2101-45de-84b2-342b9f847d46"
        },
        "item": {
          "id": "f9f592c1-b0af-483f-b8ec-2a8f6d108bc5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0d1b2e3e-f27b-44ab-b84e-f80dd87096c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec21dde9-fc38-4b0c-850c-5c0e6ea97020",
        "cursor": {
          "ref": "24918a8a-3d94-42d7-8ea6-afd12476d0de",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ae9970f4-a63e-43c4-a62b-1296341f3036"
        },
        "item": {
          "id": "ec21dde9-fc38-4b0c-850c-5c0e6ea97020",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e8c1152a-f03a-4fb6-aa55-2621ef453993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee27815-6c56-4058-9908-3d27baeee12b",
        "cursor": {
          "ref": "c9ace868-330e-4964-9da4-8c51d5cc0d21",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "52ffcd26-ddd5-4440-9c26-6516aefe6d55"
        },
        "item": {
          "id": "bee27815-6c56-4058-9908-3d27baeee12b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "670a8183-4ce7-43ba-80d9-db5da47819a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb2b7af-c666-4c86-b39b-46dc26e008e9",
        "cursor": {
          "ref": "20af374c-7068-4ff9-870f-a7ae9c7d4122",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f661615-ccbc-41e3-96af-3d2512252fd5"
        },
        "item": {
          "id": "0bb2b7af-c666-4c86-b39b-46dc26e008e9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f2b44e01-5c2f-4822-9c95-47568e002f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856d6187-6b3e-4940-b38d-5efff881f300",
        "cursor": {
          "ref": "d86b0b16-b804-4587-9387-b8404256bf27",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "514f1244-8839-4ad8-8c57-e0ae9aaba7cf"
        },
        "item": {
          "id": "856d6187-6b3e-4940-b38d-5efff881f300",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eb7071d7-2c1f-4bfa-aa27-45ea5e3a68d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb0d670-f4e5-4f5b-bacc-f10b142a4813",
        "cursor": {
          "ref": "4d2cd8ac-24d4-44bf-bea8-031a9ec440c0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "15321a25-dfa3-46ca-ac88-91278d34f3f2"
        },
        "item": {
          "id": "3bb0d670-f4e5-4f5b-bacc-f10b142a4813",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "81ac7faa-2c71-44ae-8951-a36fcbc20e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4979c17-7e0e-4869-9a45-9b59fbe01c60",
        "cursor": {
          "ref": "c31cb481-15fc-457c-86ec-58db68907d63",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a7e895c2-8c51-4e27-b87a-6f0c34b9d4bc"
        },
        "item": {
          "id": "d4979c17-7e0e-4869-9a45-9b59fbe01c60",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b34e688d-6aa6-4a96-8f06-a029f3d6b16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40155398-88ab-44c2-a5f8-001efaf1f93a",
        "cursor": {
          "ref": "21f7b1c3-9c7c-4cf5-805a-622020c66279",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2ea110b0-858f-4fe2-bd78-39b42b289fdb"
        },
        "item": {
          "id": "40155398-88ab-44c2-a5f8-001efaf1f93a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4f44eb98-ed4d-4211-9753-ab29ff7b8d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071ca4ea-fc86-4344-97aa-2f8c067b21f8",
        "cursor": {
          "ref": "972fce4b-60c8-4f3c-910e-99656e010ef0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77939aed-0f93-4db7-a5e8-4e891ffab532"
        },
        "item": {
          "id": "071ca4ea-fc86-4344-97aa-2f8c067b21f8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a4e6e743-8ecb-41f9-bb49-75bed97bf0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc189e63-7233-48fd-9db3-090c82f41a99",
        "cursor": {
          "ref": "67ac50da-fe84-4cdf-ac36-9c463d85647f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6a47df80-6c87-45e6-ac4c-07bdbda96d81"
        },
        "item": {
          "id": "fc189e63-7233-48fd-9db3-090c82f41a99",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "655fc795-23fa-4afe-83f7-fcb7a5223c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c79609-3ae7-45f4-bd30-0d03df10bbb7",
        "cursor": {
          "ref": "2047ff84-2684-407c-bc65-ef1e8b5d1815",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9dc31d01-fc78-42a5-ae35-529487ea2975"
        },
        "item": {
          "id": "17c79609-3ae7-45f4-bd30-0d03df10bbb7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "00ca8d64-663b-41aa-9642-2a29f434d703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e99f03-7451-4da7-9206-8be99f308323",
        "cursor": {
          "ref": "85403562-2773-4060-8261-52e157b81dc2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "12702407-e38c-47de-8e3e-3a70ca6ee2e2"
        },
        "item": {
          "id": "22e99f03-7451-4da7-9206-8be99f308323",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3319f03d-eb26-41d7-ba8a-980bf296d292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc80d6b-dbb9-4952-a7b2-a3ab0c2c3bf0",
        "cursor": {
          "ref": "14d210db-19cf-4c33-b1d9-3bd3773f5313",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "607c41de-d8d1-43ab-92b5-d83a57814d97"
        },
        "item": {
          "id": "6dc80d6b-dbb9-4952-a7b2-a3ab0c2c3bf0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "79715657-5704-487d-9c25-7a4ea7fcc7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cabc2e-ccf2-4639-8fc1-1a6f2450ab23",
        "cursor": {
          "ref": "b9f54b75-2c7f-409f-92c0-15b1dbb763a6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ddac34e8-a1df-47d0-bc21-785e5e8fe079"
        },
        "item": {
          "id": "65cabc2e-ccf2-4639-8fc1-1a6f2450ab23",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d6e81243-6bde-4ab7-bc70-7be7a61dcfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c92b7e1-c433-4f94-b2d0-26d482c292b1",
        "cursor": {
          "ref": "264b2471-9b77-423f-acea-2b8564fcd573",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2db53f0e-e0b6-47d0-9c2c-96a6e23e512a"
        },
        "item": {
          "id": "8c92b7e1-c433-4f94-b2d0-26d482c292b1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ed9cad8-db10-4dca-b923-3199901b6955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4226d95c-45a7-4ff7-aadf-cf652980c7e0",
        "cursor": {
          "ref": "7fecc966-d2c1-4051-8866-8494ca4bfc99",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9bc792f6-5e04-4e82-a2b3-e67ac3d4b453"
        },
        "item": {
          "id": "4226d95c-45a7-4ff7-aadf-cf652980c7e0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e85eb9ca-39a3-4a32-b41b-cd970618e7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eab8aa1-ec9f-4980-83fa-b7844cafaa83",
        "cursor": {
          "ref": "4c6373ea-fafb-443d-85a9-a7a467f0bd3f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "54210832-10f5-4848-9568-4f5a99b868d3"
        },
        "item": {
          "id": "8eab8aa1-ec9f-4980-83fa-b7844cafaa83",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c81eb009-c555-471e-9b85-c73b70dd8a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5254308-0f8f-433d-b970-fa6e573dc8f2",
        "cursor": {
          "ref": "c3260ec7-f815-4343-bfce-d1c63adfd394",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f183190d-44a9-4c21-9fec-1d32d34460b4"
        },
        "item": {
          "id": "c5254308-0f8f-433d-b970-fa6e573dc8f2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "64fe6967-d94c-436b-9138-d2b0e16d5d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50d5864-7be8-4fe2-91ac-9ed778dd0da1",
        "cursor": {
          "ref": "ef432ee1-aab8-49f6-b8f4-dfe0b0ba0d67",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6217539d-8b7a-42c7-abe4-a55cb22bc46d"
        },
        "item": {
          "id": "d50d5864-7be8-4fe2-91ac-9ed778dd0da1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a3cb85d8-fdf1-4174-a8ad-eed09d0089bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc420edc-2c9b-49bc-a559-7a4fbae860bb",
        "cursor": {
          "ref": "959bc394-0432-4373-93a7-6dfc2dd55732",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e61047be-69ca-4ac9-937a-7845a5bcd46f"
        },
        "item": {
          "id": "dc420edc-2c9b-49bc-a559-7a4fbae860bb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8cae65b3-9301-493e-9171-08b864480f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0a41f6-a287-452d-9c56-fb8a3d83e87a",
        "cursor": {
          "ref": "1e6879da-512e-4f57-a022-6a86e179f962",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ce02e556-ab9f-4004-9750-83ec8492c389"
        },
        "item": {
          "id": "6c0a41f6-a287-452d-9c56-fb8a3d83e87a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aa13e114-f57f-4b05-831c-0b0d806d7f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e740406-831d-4a85-97f6-bf5250bb4d82",
        "cursor": {
          "ref": "7fe9938c-400f-4ba2-83c6-ed301f1dd7f5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0208289e-34d2-4312-b4c0-40e2ad0f5ac3"
        },
        "item": {
          "id": "6e740406-831d-4a85-97f6-bf5250bb4d82",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "35b4b227-2974-41e5-aff2-48d220d65e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa441ab3-989b-463c-a84e-2027a9ea5d0f",
        "cursor": {
          "ref": "d267660b-f9e9-4b2e-8f18-34d5b7d66b62",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a0a3a83a-971d-4812-b3c2-6f36aeb19397"
        },
        "item": {
          "id": "fa441ab3-989b-463c-a84e-2027a9ea5d0f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "53d83db9-5e4c-4070-8132-49f8bacc36d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62b8b08-0d07-4b0d-9b6c-25e69783bc53",
        "cursor": {
          "ref": "55b10d1d-444e-4f8d-9665-4e5bf35fc86b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "554fb53c-e382-464d-91ab-4f590b9429d6"
        },
        "item": {
          "id": "e62b8b08-0d07-4b0d-9b6c-25e69783bc53",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6414008e-34a0-4cd3-b22c-7635904d472a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6095be7f-795e-4ebc-b33f-ad98680dfb2e",
        "cursor": {
          "ref": "f3c62448-4d60-4db3-b206-57e4f4854240",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "830b0547-f981-4251-91e0-015bf9768af3"
        },
        "item": {
          "id": "6095be7f-795e-4ebc-b33f-ad98680dfb2e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e1c7e1a7-0d1d-4e1e-a35b-f8b608d8cee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ab880-d183-4f5f-9717-0cbc5442d41f",
        "cursor": {
          "ref": "a76f358e-92d7-4dba-9da5-f689f957981b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8655cabe-21f6-4416-a24e-19a17a845607"
        },
        "item": {
          "id": "c54ab880-d183-4f5f-9717-0cbc5442d41f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "783d9068-5209-4bce-97a9-67932725df38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65ba4ad-90ab-4a4f-bd62-cd00f97afe30",
        "cursor": {
          "ref": "b2476c64-89e5-4111-9790-92691f1c28bf",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c534167e-a0fe-4af3-a4b3-936a8ee01090"
        },
        "item": {
          "id": "d65ba4ad-90ab-4a4f-bd62-cd00f97afe30",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ccd5d27b-0226-4953-b9d8-894255f46528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa5e511-db73-4ec8-9e01-184f2d9e8d65",
        "cursor": {
          "ref": "4c8fdd47-c2b8-464b-bdb3-bf7bea305806",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "73c74132-026c-44f9-9f41-f9abd7f10b17"
        },
        "item": {
          "id": "7fa5e511-db73-4ec8-9e01-184f2d9e8d65",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "97607444-2e6d-41d0-80c2-167e83a1073f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d529fb-9879-4e18-9728-7821f45202d1",
        "cursor": {
          "ref": "4c540392-45e3-4823-9cd5-89d1d57267bc",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f1cf4c08-6fb5-42c8-ad82-ddd4b8f1172e"
        },
        "item": {
          "id": "f6d529fb-9879-4e18-9728-7821f45202d1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "aaaf1691-fafa-4234-ab0c-26a4e6a568e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7bfa84-8d06-4c92-a9b3-d39de0ba9d28",
        "cursor": {
          "ref": "f17b9107-88c2-4ac0-9af6-362d78c1a59d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1996aa8c-63f9-4e7d-8928-cc57ffed9f52"
        },
        "item": {
          "id": "9c7bfa84-8d06-4c92-a9b3-d39de0ba9d28",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e523e01c-d501-465f-a2d2-d7e84a2e1d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a706a6-0fd7-4216-ae0c-d9afa05bc3ff",
        "cursor": {
          "ref": "ddd49186-dd30-4878-989c-2d2eafa3d4a1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "068ac364-5fa3-4ed7-a3d4-c2de2b6125bd"
        },
        "item": {
          "id": "d1a706a6-0fd7-4216-ae0c-d9afa05bc3ff",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "92af4d80-5a34-4983-97b8-835175a9df52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0337b5d3-7982-4cf5-9ec9-d42f8dbf058b",
        "cursor": {
          "ref": "9b2f9b25-ad33-4573-9736-fd66ec19c351",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8bc17b0b-291a-4209-ad8d-7c4ef4566b5b"
        },
        "item": {
          "id": "0337b5d3-7982-4cf5-9ec9-d42f8dbf058b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "18ec9eae-adb0-4b0f-8b77-9ae2a1b139fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c538af37-0b8e-4808-bff0-d3b40caecc72",
        "cursor": {
          "ref": "d0113d6b-e2d4-4a9c-9518-f9c57ec50372",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c273c408-6d66-4577-8168-1892408df444"
        },
        "item": {
          "id": "c538af37-0b8e-4808-bff0-d3b40caecc72",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fed9255f-450d-4741-9b88-934dc38b113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9eac88-60af-4a1c-a196-19842de50c59",
        "cursor": {
          "ref": "37e980be-9eaf-4705-bded-b28c5648d612",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2cc7d1d5-eb73-4678-bec0-f0458f442976"
        },
        "item": {
          "id": "5b9eac88-60af-4a1c-a196-19842de50c59",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e954859c-87f6-4114-91e1-840140a57a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9530e5-b8e8-4748-8e0c-8f46718372ca",
        "cursor": {
          "ref": "f6772161-34a4-4b71-b90c-de02ee5e2802",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "79298726-2e2b-4eed-bc40-f5b0baed2784"
        },
        "item": {
          "id": "4c9530e5-b8e8-4748-8e0c-8f46718372ca",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "72f6496a-c362-4074-83ce-6e93404b3061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09caed6-3ee5-4918-abba-5d1c4b4c199b",
        "cursor": {
          "ref": "5935d920-b46a-4e77-8eb0-7e660fb63599",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "29bea769-0fd0-4efd-9671-e9cf4464bee0"
        },
        "item": {
          "id": "d09caed6-3ee5-4918-abba-5d1c4b4c199b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b1e42fa-5e65-40c1-83ce-8078a7e26525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebed994-4371-4654-b666-15b33df3742d",
        "cursor": {
          "ref": "b5957573-d4da-46ed-a5d8-7b31a1d1dfd1",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "61a4285f-ae66-42d4-9fd3-953cb8e0c9d2"
        },
        "item": {
          "id": "5ebed994-4371-4654-b666-15b33df3742d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "04699f21-6575-413f-9eaf-a3acf847f561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00b34fc-6dfd-4c72-80bf-b33eacef882c",
        "cursor": {
          "ref": "e7bffaed-55d9-497a-a91e-8aa508b4ac34",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "212d644d-513b-4946-b31f-a92b16bc2797"
        },
        "item": {
          "id": "f00b34fc-6dfd-4c72-80bf-b33eacef882c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "875ca3cb-a9f8-4795-82bf-24681c64ee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baad3055-e819-4a3b-802d-71039a56886c",
        "cursor": {
          "ref": "d607b9a6-5d1f-444e-bc36-1fbc5ab7c9cc",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aabea1b2-3722-4ce5-b9f0-9def0f4114dd"
        },
        "item": {
          "id": "baad3055-e819-4a3b-802d-71039a56886c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "00253f1f-0991-4094-abbc-4a68ec0a474a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96964a4-d70d-492e-9fbf-6ea499f92ee8",
        "cursor": {
          "ref": "14b910be-6687-441f-8c11-e6770ea9de11",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d44faa8b-634e-4ff9-8970-40bf29fd1bd2"
        },
        "item": {
          "id": "a96964a4-d70d-492e-9fbf-6ea499f92ee8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d09bbd3d-5da9-413b-9837-ddaf13bb0737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f464c238-6383-4363-9cf0-1aeba898d9a4",
        "cursor": {
          "ref": "c6279ec6-6fd5-4f61-9642-740da1381e55",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ec6257d2-6e2e-4836-bdc4-c3b36424fe69"
        },
        "item": {
          "id": "f464c238-6383-4363-9cf0-1aeba898d9a4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a77bcec8-7077-4bab-8be6-f05ddf72814c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6da444-1b7e-496c-89d3-7b5b59c86436",
        "cursor": {
          "ref": "b7fe1288-0b3c-4766-9106-1c40a5cd7a96",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "233a08b8-e180-47e1-aea3-5f00d14e3235"
        },
        "item": {
          "id": "dc6da444-1b7e-496c-89d3-7b5b59c86436",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e57fa4ae-4b95-4a4b-b7eb-d597b1b94d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef88e39f-8bc2-4af0-96c4-633a9e0f213f",
        "cursor": {
          "ref": "bf717d49-b83d-499d-85bb-1e9277d0cd80",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e1fc857e-4abf-4f3b-ac4b-29da15bea545"
        },
        "item": {
          "id": "ef88e39f-8bc2-4af0-96c4-633a9e0f213f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "671f4064-61bf-4c56-a78b-dde2e77ff07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41efb11c-58e9-4088-9278-7957837fe15f",
        "cursor": {
          "ref": "07f482f2-c619-4122-9b95-1bf67401a37f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "44852472-54f6-4ff8-8af4-5cda5d5ed020"
        },
        "item": {
          "id": "41efb11c-58e9-4088-9278-7957837fe15f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "39a8f95d-0e50-4a6d-9b25-f0e0f7ab7e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc2d108-ab97-4e18-9e81-73184f447dac",
        "cursor": {
          "ref": "a1f18bb9-b41f-4af5-ae91-7c95108b7753",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a91c699b-85b1-415a-b43f-25484b5150f9"
        },
        "item": {
          "id": "7bc2d108-ab97-4e18-9e81-73184f447dac",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ddc9bdcc-6f5a-4440-b4fa-de8a0eaf5b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331b984d-f968-4684-b9fe-21e3723f702e",
        "cursor": {
          "ref": "23e5e6c2-be2b-4f82-8af0-73d74da9c6e9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b289a03f-a34e-40c3-8dfc-09217d55fa55"
        },
        "item": {
          "id": "331b984d-f968-4684-b9fe-21e3723f702e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b77f026f-c7bc-4bfe-aee7-7d4668b2e254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb01abf8-bfa7-41cf-9c30-ee3c14853d96",
        "cursor": {
          "ref": "85f4b3d3-7aeb-44be-ac28-f62b5c6559fe",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b3b8ce21-f664-42b0-9cc2-a7ccb27aa8cd"
        },
        "item": {
          "id": "cb01abf8-bfa7-41cf-9c30-ee3c14853d96",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1051a9ec-f601-4591-83ee-9e7b49078bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7cb758-5936-4a6b-bb78-8d97f081623d",
        "cursor": {
          "ref": "195b6608-dba8-4905-9145-2cc0ec1f6e09",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5f932d39-5796-4e52-b0f1-3d9bb6b5de5d"
        },
        "item": {
          "id": "2f7cb758-5936-4a6b-bb78-8d97f081623d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d328fc59-f9a1-443b-b024-bb145d2f5384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e285b9f-f561-4362-aeae-977380deef05",
        "cursor": {
          "ref": "aee3b761-a696-464a-b3b6-53d0dc9bdb8b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e36ef8f7-ec0a-4b8a-b39b-316a0aae71b7"
        },
        "item": {
          "id": "7e285b9f-f561-4362-aeae-977380deef05",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ea8a3658-2f44-4c1f-88c6-bf387dc6836c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53756c2e-ec93-4cd6-9528-10db0f0a8c56",
        "cursor": {
          "ref": "3107bc37-1a18-4067-9dc7-daf18e5e642f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "30d82415-7a4f-42c2-9b2e-2adc37d8db14"
        },
        "item": {
          "id": "53756c2e-ec93-4cd6-9528-10db0f0a8c56",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a0a1abf6-307b-4013-b9f3-2be9dfa9fe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac00862-ebdc-4c38-bb14-49ecaa9dd196",
        "cursor": {
          "ref": "34586158-a267-46ad-b000-2f88f19b316a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17112ec2-194d-49f0-81c6-eb10a9cd2fd8"
        },
        "item": {
          "id": "aac00862-ebdc-4c38-bb14-49ecaa9dd196",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d24435aa-f24e-4f27-be17-978549783f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca5e95f-4e3c-4152-b25b-3c8d320750fe",
        "cursor": {
          "ref": "05f6a148-a179-4a87-89b4-c998ddd9e400",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "93b9b747-fc3a-4e97-a30b-fa502fdecfd7"
        },
        "item": {
          "id": "1ca5e95f-4e3c-4152-b25b-3c8d320750fe",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f4ee2e5-22e5-444d-bc9d-6b673742b11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9700718b-de66-43c6-887f-129a561bb83b",
        "cursor": {
          "ref": "b262dc60-a93b-43b4-85aa-d72d40b185a5",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e49f757-6975-428a-86d1-fd38a465670e"
        },
        "item": {
          "id": "9700718b-de66-43c6-887f-129a561bb83b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d3674db6-7107-46d6-860b-d199f11239df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4d724f-0623-42d9-86e9-ea18aa480d2e",
        "cursor": {
          "ref": "b6adb604-f455-4943-b026-4c43e901ae7e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4650bc26-a69d-4d82-b8c0-07dabe409d9b"
        },
        "item": {
          "id": "3f4d724f-0623-42d9-86e9-ea18aa480d2e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2dd13c11-3d88-479a-8018-4c9c396d1cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea33cb13-9a9c-4d27-829b-e8c49716a460",
        "cursor": {
          "ref": "8be9d6eb-8435-4c53-be83-d5cfbf766762",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3852fb9d-e90b-45ed-b889-da68545be0bf"
        },
        "item": {
          "id": "ea33cb13-9a9c-4d27-829b-e8c49716a460",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e48e0dfb-46fd-45f7-aa5f-f3274f77959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d99d7d-81dd-4517-ab97-d0f0f00b4cd0",
        "cursor": {
          "ref": "6724a7ff-55a5-4709-8028-5e9c9b4e355b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b622bdf2-8f61-4b31-9fae-4b5a0a953c87"
        },
        "item": {
          "id": "f4d99d7d-81dd-4517-ab97-d0f0f00b4cd0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7ed4482-0805-40b4-a6ef-f0b344984b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38301506-bc5a-4ea4-868b-3256b4078c52",
        "cursor": {
          "ref": "f44be197-7176-4408-bfbc-8d3137d0fac4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "63c2c52a-52c6-4e0e-8c64-3d09041f9867"
        },
        "item": {
          "id": "38301506-bc5a-4ea4-868b-3256b4078c52",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8f1ac0ee-5ae2-4d94-8a0d-16b085bc2a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f7c1c6-47b7-47b0-bb46-b74034ec55d6",
        "cursor": {
          "ref": "004ab38b-4687-4ba8-9d7c-b8c92b6f32f6",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "afd59361-48b9-465b-8f18-99ceccbae07a"
        },
        "item": {
          "id": "27f7c1c6-47b7-47b0-bb46-b74034ec55d6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0251f8e9-2cdd-4179-9d51-3d483ca31fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765f6a6e-a8bf-47f7-ac53-420c44e7e417",
        "cursor": {
          "ref": "d65aa0cf-6f7f-44c4-8a6f-07a190c598f4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b2bca9e5-4e86-4324-8b0c-4793aaac954d"
        },
        "item": {
          "id": "765f6a6e-a8bf-47f7-ac53-420c44e7e417",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fd8a4d78-4448-4360-9b5c-aa86b87e82f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e04856-4616-4f1a-94da-0e6bf39012ea",
        "cursor": {
          "ref": "c88ecc7a-9113-4625-ad81-448df6e6e509",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8496d03b-4e41-40c6-be73-83631e0486ec"
        },
        "item": {
          "id": "45e04856-4616-4f1a-94da-0e6bf39012ea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3964fb00-fd6c-4b8e-be08-0b517b86afc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b7cc12-18f8-46ca-a9e5-9824b22719cd",
        "cursor": {
          "ref": "e7fe6d2e-a167-45a5-a41b-20350d714c48",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a9b59feb-4495-4a62-975d-da8c1cec9f88"
        },
        "item": {
          "id": "91b7cc12-18f8-46ca-a9e5-9824b22719cd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3e24a9f3-0986-49d6-b4c2-2a05b4c17a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061756c1-7125-4100-a554-1696c98da176",
        "cursor": {
          "ref": "671e8f3d-35ba-4d19-bf0d-88aca9dde0c4",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "895d02c0-5ace-421e-9ddc-04189cfb5ef9"
        },
        "item": {
          "id": "061756c1-7125-4100-a554-1696c98da176",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "34f4c564-7df7-47d0-b470-90dd0b4f668b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292d7712-0ce4-42e0-a9a2-841b82fa7439",
        "cursor": {
          "ref": "e3f36274-865f-4082-ac3a-42e5c0674ec3",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3229a929-d7ac-4a8d-a834-3be8268d67c5"
        },
        "item": {
          "id": "292d7712-0ce4-42e0-a9a2-841b82fa7439",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3a324425-82c7-485d-bca2-4359aa44b952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaa3a6b-0613-4210-a7b5-4758ad250776",
        "cursor": {
          "ref": "a1e03735-beed-47e6-bc49-9374f34a03d3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "534ba642-53c4-419b-916a-f280dc0a848f"
        },
        "item": {
          "id": "beaa3a6b-0613-4210-a7b5-4758ad250776",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "76d37c7b-9929-421e-af76-2bfc4ebd1427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0d95f5-5de3-47aa-809b-108d2b86a981",
        "cursor": {
          "ref": "8a1eb32c-b69f-401b-ae17-51304779c72d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "31e654e4-1967-4205-b137-974742f52099"
        },
        "item": {
          "id": "6a0d95f5-5de3-47aa-809b-108d2b86a981",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4da5287e-5003-4139-8ec2-82679af1329e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b21e492-26ce-4392-bd84-98228e813ac6",
        "cursor": {
          "ref": "3f22e8e5-75ad-476c-bd16-22bb70fe75d2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d59c947d-d51d-4160-b31c-f1de2fa890b2"
        },
        "item": {
          "id": "2b21e492-26ce-4392-bd84-98228e813ac6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b8ed973f-a124-4881-b2ec-388f2c95889d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b8e348-459f-434f-a4a6-1400ec534798",
        "cursor": {
          "ref": "74457227-ef5b-4c22-a740-7070651099ee",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4999714e-e1e4-4cb1-98e7-9fe868a93073"
        },
        "item": {
          "id": "b1b8e348-459f-434f-a4a6-1400ec534798",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c570f08b-2acb-4ba1-acab-277b452a74ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e9e68a-302c-4ef9-ba42-afbf2abd9f58",
        "cursor": {
          "ref": "de28bb50-84e9-48a0-817b-503d2388be80",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e4c3dd84-9728-4c50-bc82-5427c7716589"
        },
        "item": {
          "id": "57e9e68a-302c-4ef9-ba42-afbf2abd9f58",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dfecfa4e-ac37-4c9a-9454-a98c647b85e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59747b72-d6c1-41ca-9224-d0733d86ef36",
        "cursor": {
          "ref": "4ecb27e9-6363-4f9a-8c12-4ff1f5cef422",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "841bef10-eae1-48f3-b356-de7f03e0c066"
        },
        "item": {
          "id": "59747b72-d6c1-41ca-9224-d0733d86ef36",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98cad81d-b566-43a0-9394-e70bee2bb27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec329f1-f887-4b46-ba03-ef21b51f59e8",
        "cursor": {
          "ref": "7d3fda1d-ebe6-4d58-9279-14a20d16f7f1",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "26325c25-c84e-460a-8087-2150921de481"
        },
        "item": {
          "id": "4ec329f1-f887-4b46-ba03-ef21b51f59e8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4a3e664d-0c77-4335-981a-bc63aa5dedf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6693d5-99a5-4361-9cdd-abce404b6b6d",
        "cursor": {
          "ref": "03030990-67c9-4cdb-b390-ab83b1e38113",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c0ec09e8-577c-4394-ab2e-3b31843237d3"
        },
        "item": {
          "id": "7a6693d5-99a5-4361-9cdd-abce404b6b6d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c641288e-b8c0-447a-b7b5-092cff6113bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e6ffeb-4ac4-4829-a86f-2df8fa4a16d0",
        "cursor": {
          "ref": "26565c06-a948-499a-9493-f946eacc6529",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6f397df5-0b2a-46dc-8239-e817e3d61116"
        },
        "item": {
          "id": "36e6ffeb-4ac4-4829-a86f-2df8fa4a16d0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "caea720a-b9f8-41e2-8aa4-ce62e9ce8b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93173b6-aa92-4e74-8034-61e7a8c35b1f",
        "cursor": {
          "ref": "39aa4d06-f037-453d-b0ca-98b2dbf69582",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2fedfde8-cfca-4455-a1fc-d062af130e0e"
        },
        "item": {
          "id": "d93173b6-aa92-4e74-8034-61e7a8c35b1f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2c2b16f3-4eeb-41a4-b9ce-1f4e20e0a5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769e661b-c169-434e-aa55-6f209414f7bc",
        "cursor": {
          "ref": "811d7405-9118-40d4-99f5-d5522cc4771f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f7b55793-5c6e-4fe6-b4de-c3f8648852d6"
        },
        "item": {
          "id": "769e661b-c169-434e-aa55-6f209414f7bc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2b31f5ae-58b4-487b-9cb0-8600b5ec6407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16c479c-91d3-4b4a-ad85-2b36ca65d3e8",
        "cursor": {
          "ref": "e1a90834-4728-4db3-91d6-9f14d79f69a8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "99d4d898-8829-4732-9abc-ca981a635c00"
        },
        "item": {
          "id": "b16c479c-91d3-4b4a-ad85-2b36ca65d3e8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5a1835c2-a929-40fd-bd4c-48d89c1108c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7461fdd-e6e2-4e1f-b3ba-74251f37a00c",
        "cursor": {
          "ref": "1be71857-6ff5-4b67-934e-9368506aea42",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c9a7e2cc-ec2a-4e44-8ba4-da9eff4ceaa0"
        },
        "item": {
          "id": "c7461fdd-e6e2-4e1f-b3ba-74251f37a00c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e3764a45-4793-4c8c-99db-900adc840c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3c31ee-f061-440c-b6d4-7135d81ca277",
        "cursor": {
          "ref": "82fcf3d1-2c46-425a-aeb9-94259d94a2a7",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e222c785-0143-43b8-a33d-7b687d56a38a"
        },
        "item": {
          "id": "df3c31ee-f061-440c-b6d4-7135d81ca277",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ea23176c-bf76-44fc-b4e9-42b565492288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a934e-b7fa-4b7e-89a5-20dc39e2f84a",
        "cursor": {
          "ref": "b4c7d8c1-7693-40cd-b1c2-762aedaba4e5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ec3aff8f-1e73-4e51-9865-dd02d13a76a1"
        },
        "item": {
          "id": "5c4a934e-b7fa-4b7e-89a5-20dc39e2f84a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9fd6ca4c-8ef6-465b-9d62-f8cb3303808e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a01d0f-e264-4a98-bf25-e76b29f0b416",
        "cursor": {
          "ref": "64f9635c-d07d-40cf-be8d-41f9b6d46e08",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5726b361-9790-48c9-b62e-4f15080434aa"
        },
        "item": {
          "id": "f5a01d0f-e264-4a98-bf25-e76b29f0b416",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c7af6f63-9cc4-4fa6-9f58-13c947e2a066",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb7c680-2ac1-4458-bb4b-0769be24d2ff",
        "cursor": {
          "ref": "41e0f9fa-ed8a-4a5d-b6d5-6a987f9de5c3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8d72ce91-11f1-4905-bb69-df20d5327cbb"
        },
        "item": {
          "id": "2cb7c680-2ac1-4458-bb4b-0769be24d2ff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2825effb-ed82-4b2e-b6c4-aab7891310c3",
          "status": "OK",
          "code": 200,
          "responseTime": 662,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5145e9c-274d-473e-82b6-d95ccb560e61",
        "cursor": {
          "ref": "f6ebbe38-9a7b-436d-bf4c-11187fc9d32a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "aa0f47ce-5523-4884-be3a-7b34009dbf6b"
        },
        "item": {
          "id": "d5145e9c-274d-473e-82b6-d95ccb560e61",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d9eab3fe-3301-4d7a-b1e9-87fa02ff0f2c",
          "status": "OK",
          "code": 200,
          "responseTime": 1919,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b2e5a2-228a-49d4-8a68-8523dd808241",
        "cursor": {
          "ref": "0b7f60cf-7ac2-4c2b-8d60-59a9aeca9655",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e31e4877-7a38-498d-a9fe-3d5c16dadfa6"
        },
        "item": {
          "id": "26b2e5a2-228a-49d4-8a68-8523dd808241",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eb4cb654-0d8a-413c-b85c-5f34f2297da7",
          "status": "OK",
          "code": 200,
          "responseTime": 1843,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cf86fe-97e3-4ec6-b854-2d3b8c383796",
        "cursor": {
          "ref": "ba56e1ae-91c3-43c2-a6b8-359d4dc69cd7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7d8d2de0-2838-4f1b-be82-beed97617698"
        },
        "item": {
          "id": "29cf86fe-97e3-4ec6-b854-2d3b8c383796",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39587c0a-1d0f-4fb2-b4a6-c017cc764272",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cf86fe-97e3-4ec6-b854-2d3b8c383796",
        "cursor": {
          "ref": "ba56e1ae-91c3-43c2-a6b8-359d4dc69cd7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7d8d2de0-2838-4f1b-be82-beed97617698"
        },
        "item": {
          "id": "29cf86fe-97e3-4ec6-b854-2d3b8c383796",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39587c0a-1d0f-4fb2-b4a6-c017cc764272",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dae0616-3a10-463f-a4f1-44b12d6d95e6",
        "cursor": {
          "ref": "ce3d82d9-e85e-431a-b984-da5f981513a6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0ae27b55-7b9c-47ad-8627-439433a45f10"
        },
        "item": {
          "id": "0dae0616-3a10-463f-a4f1-44b12d6d95e6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c907b5d3-e85c-4e45-b677-be30066e9e0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104be060-cf6b-40b2-b923-13af193e85d7",
        "cursor": {
          "ref": "23c3362b-a0ff-4826-9e25-68a3fbe12fd4",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "85e4fd9d-ff9e-4ddc-afd9-7ca17c50e161"
        },
        "item": {
          "id": "104be060-cf6b-40b2-b923-13af193e85d7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "da84c65a-b118-49e5-9916-d2c520c8d6b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}