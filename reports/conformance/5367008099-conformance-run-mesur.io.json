{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "07d4ff7c-85bf-4023-9451-95b168d4a164",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ed177649-5a41-45cf-aa00-3367220c4c55",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08c74439-ac0c-46ca-b1f0-41e73d28e2e6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e99a92ce-cf68-40e7-8907-18a4f7e9d4a7"
                }
              }
            ]
          },
          {
            "id": "0dbf606d-aac2-4920-80a2-71b8b4bb268b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5226d662-2393-4eae-8aeb-e8d7bb20861c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "807aaf35-d3af-4e2c-8b7d-02040c421bed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b675703d-8a47-4624-b671-0d7ed852e685",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49240903-7e8f-4734-a11e-c574602b0708",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6649e70e-c1b9-4f50-853f-63dfda415447",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad05cf36-680b-418b-ba5d-eacfe701b49b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6f1e034-02c5-44ec-b345-055b8fce6b9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2bfc633-a4c9-457d-a705-a7adde79a016",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1246c64c-a0c8-489f-ae98-689d6c7179a6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2273e2aa-1da2-4c2e-9ea1-8cf16d7053a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3fbcb98-4521-4229-bd4b-c86cbf97c724"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0443302-9ee4-4f40-ae38-c19fefc7b6eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "14d68b5f-0dcb-4a58-8e24-ab3d17e9ae7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c8c7153-9740-48a3-b506-ede1f809eb62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc79b5a5-2a76-47b6-ab15-efdbc9e3312c"
            }
          }
        ]
      },
      {
        "id": "558d176c-cce9-48b0-900d-4a316eb74f2d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "885c6ad2-e646-44e8-bfb9-b5277f77d004",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a708d593-6ac6-4216-84f4-3449e6a3c791",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87027715-a1cb-4c35-bacc-7e7e61c87940",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0514de2c-e433-41c0-a050-85590696e636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e32172e9-567d-4c22-80c3-6f41a5b0b1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9548890-574f-4531-b9ef-453d6fd20c22",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a265200-43e9-4d60-9d91-9f494bc67620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef7abf61-1bfb-4577-a46f-a494f685182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35e9d7c-aee0-4fc7-bea7-f5820f493828",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02343b76-1014-4bbc-9cb9-db0c154ebd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12e6c0d9-7947-4914-ad36-1088e83957dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfd998a8-2aad-4de9-aa87-d3d1fe72de00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7505f52-424c-4565-9b69-e392b11a7bd0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af883bbb-757d-44f4-8d6f-02b3e355c4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da7ac43d-dfce-42b1-bf7e-61bc0584ff2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730b421d-5421-4c0d-b51f-69bb75cb268b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99649824-5f10-453b-8824-e9a0317734ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dfb2437d-2925-4049-a24b-a5e9378de79b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5db80732-6655-427c-9533-1336f4b7befb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5f12c6e-e662-44ea-916c-935e2a70ecc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "88c969a9-55f5-43de-b230-82734f706296"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "507b1cd5-829a-46e7-8680-a3e34626ef1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "91e1b536-4577-449d-9abd-ff7cc21bea0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8ad6943-a8ee-4810-b10d-7a6bd5be7760",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d7414fa-35c7-4a36-8719-49207e970aab"
            }
          }
        ]
      },
      {
        "id": "127d1d0f-1c17-467a-940f-9e9aba2a19ac",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "32a30f5a-a708-4340-a5ad-1476cbd80904",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77d7161a-3f9e-4ad8-b791-4411f28e6799",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8d68b812-7963-472f-a121-163f6ed83cc6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18898fa3-7084-4348-87da-aa793921836e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae8a8ce-b60a-460e-82cc-24c23c42213f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22825c1-7428-43c2-8b1c-25b43eb13a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00e122e1-f8f7-414e-9edb-a2a0c6a2bfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8951416e-ea56-4c67-997b-7c1944888be8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3aa2e6-71c2-4e16-95fb-de23e51910fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ba3abe-b5a2-476e-b37c-ef15c6154c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b209c47-227c-454a-80b6-b89c9b896917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbdd5da9-a45b-4909-ad2e-4712faaf8619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc008480-28fd-4004-be1a-ea8cb5712220",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1296b6-b21d-4724-99cc-62fbef3bd7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2001f97-d3db-4053-8ffe-0dc9c181886f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f4f67c-2e00-4cbe-a5e6-fc9f95e087fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d64ecfee-7e64-49cc-bda3-407a21499bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec60593d-1a2f-4d6b-be8e-6c374911cf6b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7756fc80-6cb9-4d8c-bd42-4d41753bbdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79d715e-01f1-49a7-9668-203cee26e4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1fdfd6-a0fe-4c89-843b-96e62688b37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "495f8d2e-2dd8-434b-82db-8c19e6d760d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf15783d-a987-416d-befe-36f95d4d9bb7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3402909-8b22-4827-94de-0e3df1620931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be5a9d9-64b5-4a44-9f8d-ef8379c8292f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c24873-92d4-45c3-9335-0a24108fafbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "479c63f0-bd44-49ea-9f79-a758290f2521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2d1615-091d-4cc1-8b94-74863821c572",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4465b505-9e0a-4ca4-b0e3-0b982aa50568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d234d3eb-e657-4da4-aa49-0d1a0c742b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3ac1da-b44c-47d7-a762-756bfcfd6388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30856446-1588-4024-be56-8b7918758a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312398ca-0ddd-41fa-8163-dad8a97b5483",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c4b0bc-62e8-4713-a9ff-3ae48216519f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d0fe4e-4b48-443f-91de-d6552f93453d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5bcc99-ef48-4899-9df5-abf75008a61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbe60acc-a5b3-45a4-ae60-b75d2bc258f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365847fa-077c-42da-baa2-8637ca69e1aa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd479cd-7872-4a85-9bef-6d4a0571a8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d92a585-d335-4707-83f4-a0e92b7653b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bb9cd6-afb1-413f-96ba-dd9a77804ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c5f6499-a1e0-4656-82b5-4b1397ac3daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbfdc98-18d4-424d-be1f-e34d3246bf5b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27aa5e41-ddef-4cd1-9d00-55d3e62d0953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9af290-6e80-47e5-8f1c-c074416482b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88381a6-8fa6-4c8a-a0e5-6b87585cda56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "794ce38f-1935-4a71-802a-111a6bd74c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77da018c-da2d-40f6-917c-9c12dafde647",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0128dfc1-e192-4e69-bdcf-d9635fdf788e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbb62ac-26d0-4b6b-bd84-8a7683e6e2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b141acce-f5e5-4774-a79a-c82b9e465ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5d61127-c8a5-476c-9cda-6b3bcce47513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c808e5ac-4d5b-44d5-924a-bf8a4b40c648",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e0542e-7328-4021-abec-7977b42a6837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5223c7cb-1499-4dfe-834c-18ff0a456b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79112b7c-f614-4de3-83ea-48e6dc09c3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "359ea0a7-b0e3-4540-8bd8-da7355382bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a0cf78-93be-418f-896e-26c9bc8a5cac",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da78bda7-2570-4a8b-8528-39a0a8ab83db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df9250f-c68b-4bf6-a1ca-318b7dfe5a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c45df22-2148-471d-b8fc-ee168aa75597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58a713b9-3a42-411c-8262-5335cc0ef8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894abddc-d41f-4ff5-aec8-ce817daea5e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b440b377-4a5c-4413-bdb8-7606dca79ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1a63b1-4a2e-4fe3-82fd-c7dd275bffc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1d04bb-9a1a-4405-b646-7dbf9f797884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a4cf7a4-cc85-4434-8bb6-a661b6d1be3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fae49e-1699-4a4e-8f8e-00bc97e1bee3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df978d44-eda0-4100-9b4a-bf0af22a7676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f073d1-7d7a-4ecc-bc54-e73c2d68cde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338e95eb-254e-472d-8902-99329a8337fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce0f42f6-3a02-4e2d-a8f8-df1d55eadc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b2d591-a2ee-4ac0-b984-ba90d873274e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d14fb50-b088-4a3f-b098-df0e435334bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747b152c-4f5f-4fe8-ae58-ceb950570bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271280ed-a98b-472b-b4bc-a463f38c0ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bab0062e-cc0c-4277-bd6b-7f417c543746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d4c1d4-e4f6-47d3-b8b3-b2853b8a5a03",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7d0ea1-382e-4c1e-a5a9-3f625b26cb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecfc6a3-3ea8-494d-9a54-c53e01df37b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229875cb-2c3b-44c7-b7ca-24a3599ab391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c79f1e6f-6e64-4367-8a85-4635ffe683d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e90595-8dde-4a9a-922b-32357e0e7de9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb1d6f-0c78-43a4-91a5-10ea77c3f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c18a89c-aba6-493b-935b-b586c40e5266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13137625-e0c3-4734-ac96-a097a49c8212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de97577e-219d-45d7-a34e-a2013cd83e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211e0457-f3af-4633-a557-d387b4756ce0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14055c6b-4826-4340-9e77-344ae0509b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57deec3-89ca-49fd-85ed-e1949b3fcd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321d6b36-07d3-4892-a7a8-f668fe8afc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5152ce7b-9a9b-45fa-b3f6-64498a4e15d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78999310-9e7d-40bc-aad4-d6ad5ae87299",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a15d864-ecda-4065-857e-0f1c268a927d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0111116-4c1a-4a2a-9b51-6ff9e9894d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d990b828-9fd5-4146-921e-1670475a1ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6ee013-dbda-42d9-93e0-565383b6db99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043d1389-3b83-473c-9c99-ad697d7fd458",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e107a86d-07b5-48af-83f2-3cf33dea61d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a10aeb-e4f5-4953-a211-5c1f3c7cc49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343c222a-53f3-4a88-a892-206c71b8e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25eee428-1198-4469-bc34-4d6d29330401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6101c4-5cf2-4d07-925d-a1a3a6d54b13",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea73051-e765-4d3f-a6f6-c57cf33f0ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0f3d36-8dac-4a5d-89ad-8dbaacbebfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e9edf2-90ff-4e67-9608-9411494561ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5955c173-0153-487c-8167-1a90bde8a3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbc1fdc-8be1-466f-9109-32e626e688fc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b31fcf-c72c-4a6a-a36a-773822f11503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a771c90-2985-40c1-8cdb-94c872b8f256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247dcbb-5d38-479f-866e-1303f1f77aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f02bd86b-88a4-4f87-83b6-b1f57e05b1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4c05e3-9738-4cb0-9c3f-52e36e46a237",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191aca76-e6ba-4cad-a442-33e58e388a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ec4418-22c9-4e24-8aa4-81ff4abf87da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99f0629-4a7a-4b0b-ae4a-d8e0ffc8a3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "392b1908-5796-43cb-8617-cb61520ed4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e409f0fe-2c00-4d74-beab-a989ffa86915",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0238a4d-14c5-4704-9889-fb2ce9bede8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305c6341-71ae-4e0c-8649-968c5b725ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13111fa1-26c0-40e6-aab8-73f82a4d23e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5566c920-b41b-4ba2-a27c-d73448098150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24cfbe5-7549-4bc2-9695-9063fe385881",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed6344c-df6a-43af-9406-10872a7e35ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8ee114-2e50-414b-a89c-ec38f297b3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0157d7-ba3d-46f1-aeab-3d548f70fd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe55501-e1a8-45b3-99f9-00ce0c45b6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10437f79-54f7-4996-a8fc-326f9e7f57f7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb23909-24e4-41aa-91ad-3eb16c74234d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac3148e-933d-4747-81e9-4a8d3f3b91c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bd4519-3546-424e-a625-c7f1569513ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5469825d-cbfd-489f-97f1-4f595d93e4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fa44ee-0445-4498-9e31-a4577eb4a775",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65a9dbc-6c59-456f-88aa-b205c3b3787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494979d6-0d93-4c6d-8c80-815127b2a48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cbc716-b9e0-4293-9823-9d8c475ede06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "565f8a64-9c31-432d-82a3-dc9340fb3cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319a1021-dd28-4674-a546-180aa25f6583",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4f75ec-a80d-4db5-a3cb-0ca432a88a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca0c41b-7145-4da0-8a7c-21ede85d7119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c77d2f-26df-45ee-8fa1-8a2ed2cbc2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45b2565-2570-4020-ae27-561e097c8ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7e8047-d1a6-4d18-998f-8c50c68aa986",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494a6ce1-38b9-4163-ae04-b46b7c54bb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c618170c-1101-41f2-afdf-6719c626f4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c812d2e-8914-415d-bc79-acb1c2753382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a71d3d-971f-4f03-a75c-6651f997d5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5dcc32-2e28-44ea-908c-123ab9c4613a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0653005d-fc25-4bd5-bbcc-9e87afc20a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e7497d-a1f9-4ec7-9155-c10c8bcb22a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ed1d31-c678-4af2-82ae-a99ecff8f21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8158eff9-52f6-4edd-afba-1d2453227299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c253cf6d-64a4-467e-9b76-163eab3d0780",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ace64df-a082-4a8f-9ccb-06d02fb8172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d2e294-ae88-42e5-813a-c1e2912daa55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76916e5-3fe5-419b-92de-3caeb685c1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4842e6-fb18-4796-97c3-8f98e4329135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83db355-9b2d-4c5f-902a-f733a10960a6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aed68a-6c79-485b-b7d3-a2470c1ace35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28b756d-6070-4e1c-ae19-2c1cb9b376fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63617b69-c1ff-4eaa-8e23-72207994406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b356dc-3187-4c05-bccb-4ddea5d4f5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc77b0a3-605a-4640-9150-9e34b50aec34",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e822945-a74e-44a1-b9cb-91b063418c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8385b273-fbac-4049-82ea-3dd731a5bbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b685d1-089e-45d8-b978-7d8429d1952b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05baf351-8c9b-4c98-be0d-4774ad22205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c34140-a659-42c0-a65c-37730c9eb8ed",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a69f5d-27a5-4293-a895-f97baed7edc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188b4d21-75eb-4307-9acf-a497d5499219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b36ba2-7978-4ebb-b673-e85189e7838b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44570ea4-957d-425b-b280-4d5694efe1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334e7f44-5d7a-4e74-9f1f-f8ed4767f49f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de7e240-e72d-4870-b0a7-064fcc63d425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf184bea-06ee-4306-9774-ce074835ec54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fadea7-fb21-47cc-9ea2-61da24f4ec6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4adbbb-8b70-46c6-80e6-aee8d5c6d7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f29fcb8-8ff0-4af0-961e-d5e31229ca4e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87dcd91-09e7-489b-bdc6-3f706a25dc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "409d1e64-6e65-40b3-b7d1-150110f6535d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e74998b-3954-4fd4-a931-8839c63e51a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e174a78b-6708-40c1-86e6-c5a5877de86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb41a70-16fc-4a4c-8f40-3d5d0028c802",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9270a3f2-239d-4df8-a855-378d9301f233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e019e33e-a342-4155-b862-2707409aa876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e86b055-bda7-4f45-b946-525f6039ff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e09a6a78-3859-4a12-9ad9-5666687b9401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce585f9e-d559-45f2-9bff-92fefe03c343",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2342e9eb-a898-4c02-8fc0-608ae5204953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bfce01-a827-4852-a127-c9bf3d8be579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7f8e5f-4908-4159-8167-0e42d5607ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0977b633-c7d1-41ab-b2d1-8217a0d4e3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b932887c-069e-4c1f-898b-4003b47f42a4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab18e81-c1cd-48d7-8bb4-725db95b4051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797cc8f0-2fea-4aee-8138-3ea9f18556f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0642739b-0531-4b63-98fe-127df084e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c41dc9c-d6c8-4152-b959-62e2c456edbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b233d33-d8ad-4f95-84c3-d50f90297255",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff15cd5-206d-4810-bf85-697ee44f61a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f1fb36-1fce-452e-9f0b-2f0ad6401aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e61448-41e5-4c14-8477-46ee031b3f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbae5f8a-e864-4a2b-acf7-94958d9904cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040adb17-5b23-4d2a-988d-7ae30edc0dc1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670689bb-83be-4b08-a95f-6c15a7f0724d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cad805-3ff7-4bda-a22f-0b55af577e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225884b2-219d-449d-8546-986bc20502eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "903b1dc5-2d35-4124-b01a-7e47b520badb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531165db-fb9b-4fa6-99c8-529337ef93ec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd569e86-c8ed-4426-9ced-41779b95165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbf0edc-c184-4526-8624-367a1542ef3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bacb7d5-1592-4ccc-b427-e5139247e840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7609ac46-b73b-44b1-9f11-6c1e4813e4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2087422-dc6f-4bfd-8b8e-f247268a1926",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a768f806-fadf-44ae-b281-bfd304a0575e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e79a63-0e9d-4976-a221-da6928583bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12654469-6ef3-4d6a-8523-9e49c63c837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a446ff6-eff4-4271-b3ab-c54fb55b9fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b29cd65-b927-4c8c-8520-8caee6862284",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5009302c-ad63-4268-94aa-de3b66674498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fcf69d-f21d-4dbf-ab76-c1c6e79246b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edbbe27-c05e-44e1-b3b9-525ff6b03c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c57271d2-2f1f-4f80-bdd8-3bcce1439672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ce01c0-97c4-42e8-a5e9-f1eac63fd0f6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af674183-e0e9-4837-836f-d0a7f5c64770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbc85ff-8f37-4dda-80ca-f3f72a1544d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd76d0f-e1b9-4e42-9717-f7c9b3b74e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a483fef5-3744-4781-a4d3-bdaea3489601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2af0df5-801b-489d-bbea-2509444a7439",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aa8f74-95e3-4099-a705-80490734a299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4ebd91-d148-49ec-a38b-e7654ab66998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75d6fa3-a880-4ff0-a42d-11da03a025f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05b060b9-674e-4bf8-9e87-a71ee139d116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff099cc-b795-44aa-a770-1625eb13f227",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5b1b50-8765-4ce9-aa5d-bfd4c12744fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f54aad0-b08d-4864-8aed-5c39084b0d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e59184c-727c-457c-9879-d79f8babaa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6180c9-968f-4569-8c18-b76eb5c01645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8696a35f-469a-46d0-896b-97d08dbe5f6d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f10e4bf-cb4a-4d12-913b-4c86e59c503a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad79baa-ed98-4a03-8cfe-4932e775cbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c0efeb-1acd-4bef-be50-13e00633389a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5b4ca9-e01e-49af-abd8-97fdf72641ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6378f932-fed3-49fd-8318-8ad688d1d45c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c8c910-6b2c-477b-ba44-78eec5470daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2ae0f6-af4d-4837-8464-19628a5d1165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b46cd5-d7ea-4c5c-9459-f37677b06f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5973d1-afdd-40f8-a285-8f73741bf42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2928b3-0b4f-47ff-bd81-a1ff3e129910",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ca0db6-a3a8-496f-94a7-a79ee172fa8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec62a559-cad4-44f0-b5dd-cd9d9639c853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cd5f8a-efd9-4132-8eba-47f6b1f7922d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc23955-3c43-4998-9dc4-74a5f957b806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feca004-6f90-42e3-b120-6342a4a3bc92",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a955bb-091d-404b-92c6-6b7c2a629272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef22446-1e21-434a-b6f7-bb441bd54f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3f16f4-f54f-464a-844b-c886be6434f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e358c6-e0cf-4ee5-8cc9-e34687283bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b40740-b08b-4710-addd-74be33996534",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903d4cee-516e-411f-b0ed-a19beb8102ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbeb24f-be5f-4af9-9a1c-11110413d475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc226cc-0971-43d7-915f-61b8ae39b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e457c4-794b-48bd-b142-169472c41140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71553e05-ee61-4114-8321-e8e0b00f3be5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9a0d2a-f2d9-4b06-a0cd-402202844f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b4567e-440e-4ede-b2fe-ccc0efe6b0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d549767c-fff9-41d3-92ce-2bfb2a97349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfd2e95-4a9d-4f47-82f3-7d7ef4a7acb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d5107c-6f94-4618-8462-a122f0edb162",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1d93c1-7a68-4d21-8dc5-2b2ce0e9e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884692e1-385c-4ef2-9c42-93ebd8f37c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9407552b-13bd-49f9-a84a-9a3941f20719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09c15f1-2fb1-4000-b06c-39523c83b6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d528da5-c400-480b-bbf5-8ff618e3a0c3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7709b8af-bc9e-458d-b27a-2f3db57cf07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad25cbd9-8362-466e-ba72-07b6169fe574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d07931-b2b9-45d9-8de0-b601846159b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a50011-6b7b-44fb-86c6-c033d8b04638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48693556-4345-47c0-904c-1f0fde58107c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d71004-586e-44a1-a926-c0562c4a18f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a8f187-dd16-44c4-a89d-5f6aa66d8876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8bc067-12a8-4001-84f7-cfd4401a5a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f24b8679-8fe5-41f3-b414-859721dbbb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfdd58c-4b7d-4a2f-ba4b-ed86ebe2e1f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10448048-b095-41c0-9b1f-e6a51e4d4bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f053166c-5f90-4b2f-af07-7cb39e7a67cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f4039-964b-42e3-9692-51b8967a4ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae73ac55-f327-46d2-b368-104ba0d03aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01c36d9-85be-410c-9db0-947122da79d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1375812b-3135-440f-96ae-055c09ff9efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577339e0-6143-4cdb-900a-e85a236870a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df4372a-1a4b-458d-926b-8fba6ee587ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ed5da5-6310-41c4-8b15-1364931dc71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074d3db1-f0e2-45d2-8e87-1857e755ebc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15518281-d4b0-4a5c-9d08-52f44e7246f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070324f7-2d6a-4912-9fda-676bc16cc714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a111681f-732b-49ff-82da-bb08c5829ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec2a23a-8e78-439f-9bf8-4de831640161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da96092f-7fd0-4cef-adff-017f6106cd79",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650a937b-a3e1-45ad-ac03-e116e73d71d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de35653a-ca3c-4d96-83e6-41e9b8f16ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee494fc3-c834-413f-8473-3d2a2c04983c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "097d453a-569d-48ab-bffb-40c9744b5e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d837dfa9-7dcb-45f9-b428-ef97fa9ca2ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e49a2c8-44fd-487f-acd7-cc2d3a53a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8be42b-81dd-4368-98f0-ad03780fd30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dda02f2-75b6-4de0-b0fb-eafaba015eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "446c7b93-0102-4b86-9dce-893274473d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b47529-9aaa-4c6e-b257-d824ff281d2f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f502814-fb06-47a9-9b05-0c43f9133b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d381c2-5e46-46bc-9bbf-7c33e0d7a03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1921ea03-ef19-465b-ac8f-473584fb3b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e95465-fcc9-415a-bcf5-e71176ea287f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808b00d5-5798-48f9-8913-4a80e4cabf4b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc74ee20-e973-4bbf-9820-03e99a4754df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a81a23-effb-44de-b82d-5df4a2af75c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79327f60-22e7-4e7d-a446-2a4d9bf06f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d29c514-4aab-4354-8a2f-52aace0b15ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ddc830-7549-48f7-b58b-a5af35040bb6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9570d33-259a-44e4-b725-28e3a61c9d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7ac2fb-5317-441e-b1ea-bfb800c7134b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed786e2b-d41f-4594-b56d-4ed2ff666e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f6c79a-a476-44fb-9a5d-6db6675dfa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6e9d13-df62-497e-ab70-03858f2fd5d6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e46a6d-882c-4880-8cbb-6c6d0b34a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b05795-01b6-4171-ba45-1624327af12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396e65ae-d5e9-4907-a4c5-748673760723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3738c3a0-e9be-4d27-93bc-0421e4bcdb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca3cace-d599-4ba6-a1a1-d354d16ef5c4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640e0eac-1e52-4b7c-af5a-ca74e5cc9bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc990669-ef91-44cb-8200-1dc8120dd075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89cee6a-4214-4b19-804f-bbc97fd73f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f11ba9-00d8-46a7-9d4b-3cbc92477aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b318ce-8069-4164-b54b-42afa1f199cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cabfb9c-3b70-40d2-88f9-c1d853d249b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b38f359-a6b0-4027-8d61-d153bd14764c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b7a849-c3c4-4c39-afbc-4649e89df81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66693e1c-510f-41b3-a2aa-5abd722632fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee1cea9-c0e6-4c72-b96c-338c126b45a5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7bd8c6-3b93-405e-942d-bfacd10a141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296390cb-ade4-453c-8d0e-09d39819612c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac9387-ade4-4dbc-8456-c7cb1b16ec69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "785d3f10-cbf8-4b3c-90af-d50a9e370ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7335e-b5e6-42c1-87af-7f9c33bf85fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0360c1e-5ce8-45bb-80ee-fdc557ed5f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28404189-8560-4e8c-b2c9-839991ab8010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6374ef6e-2912-487a-a178-fed91c69f671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3125bf5-a95f-4b44-9998-1155dc3fafc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6240b878-5683-4e14-816a-e6af465a5de9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2579d6de-0b68-45a7-8475-2e5e56d8cc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f187bd6f-8d2b-4fb2-a202-5ff9a7eb8c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad1a7a1-f2b8-4628-b3f6-1c260fc3e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5208aafb-0858-48aa-bc4b-254f725de5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964efb43-6cec-4f7c-8a78-a854a491949c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d55dc-cb8b-4974-a3f5-3273d7e3029b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eeb174a-daf1-4c97-a533-1dc248f2a533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e757423-5e3f-4905-9df2-3e9623fbebf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10ec69e-a8bc-454d-9fa8-5f943ea940b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cc7e78-0c17-4cb9-8eeb-6a369430050c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb53a0e-3c6a-4367-a27c-73c8c594b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbbe650-8e02-4a7f-97a8-50fd72fa21ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678657e4-cf75-4cba-97aa-433c033edfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ded4407-104d-40ee-8910-57694b6430a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bccdeaf-ebcf-4e5f-bc9a-2f6ba65eda90",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7f6842-a78f-48aa-ac62-2a5c6168ef78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172cb441-538c-40aa-968b-d5d8e0dc61a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45c916d-95f3-4bf9-99fb-749ece3a9e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38cc7b66-1c93-48f0-b7e0-ab2842acf524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6351c3-b7d7-4d8a-a5a5-eb5b1c658e71",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54482be-4973-48f9-a813-cb9ee03d0967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad86855-0ea9-497f-99d2-01c0285e838e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a77422e-8459-428b-877e-852470529610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1e6460-6fec-4625-9fd7-8e296369bcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da2d762-ee71-4a0c-8206-55f6704ad149",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48e8c3b-a583-431d-a373-198f5f8c03ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14a7920-c423-4efb-ac76-e351f5befa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045e77eb-9a92-4cd6-a5af-ba7a1fb2b325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a21b3a01-f4c1-4300-ad0a-02b1b6e4dced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293178c6-f793-4034-b4da-d740bd3b341d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e87dfe-ec06-4cd4-b202-56a253aff4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8db961-d8fd-4133-bbbc-fd7ce644ed37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529a9671-5b1d-4105-b3ad-ee29b0fe9967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4283e509-f12f-462a-9c2f-abde3e228ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2687f286-beaa-41ee-97f1-e76a5fff1301",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a0a6a9-1fac-473b-a494-6aec846103d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28115c9f-5e25-4bd3-a0d1-b1a2e0d6db4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e53f0b3-b987-42fe-a2df-57e25be08e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "857ad3c9-6f2f-4fb4-8741-04e7520c63ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f51481-cd2c-4bb6-b207-15c92cad740e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91de7474-6559-4548-a316-c0126d9d2308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22b71e7-c270-43b4-a0d5-b78774189631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f9821b-6668-482c-a39c-de7e570342f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64482b1f-fe52-463c-9850-1625a23f8c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d9e8d9-19ab-4787-a7e1-82a207923f8a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee299b11-9a02-42ab-8202-33577029e5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90d717a-0c21-4990-8e50-87466e2631c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4595122-82e1-4455-b805-9b0e7ddc69b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72d335d-a8cc-4c10-8ed5-53d6ffd7f2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961525b5-16c8-4c2a-b563-88626517a1b8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a9d69-88e5-4ecb-9b01-e55f7c1648fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdd742a-dd70-4200-85e7-536cf3c47058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c04c91-24ca-4da3-81ac-bd5566c89085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f30162d-f93a-4460-bbba-de6991c35b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bcae9c-550b-4fc9-90c2-2deea40fdf33",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb23962-141e-428f-a137-8cb35d2d0d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2bb57a-21d8-433f-8226-f55d25e12a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756bae9e-b8fa-4041-8b95-4633c19f3869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6226ed8e-81b9-4aa9-8a27-53a8159be96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a5d162-d9d2-40b1-9132-74868212b121",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63da95c-cbcf-48b3-beea-bf74d325f6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdaf0be-6257-465f-baee-a892dfb7456a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e396b5-3c6c-4b32-8877-a9ecaf91a387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4de054-3e0e-4c6c-94b1-21c8c4de8e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701e072-7ca2-477b-9054-c0d34196fe7e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9d4436-ba0f-413c-b2cd-ea548d4f1698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c8cc21-435f-48fb-95a5-155cfe40b712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b56fced-943a-4912-bfa6-304ea91f0025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbd9875-6fc2-4402-aa60-898c7f432065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26acc853-d3fd-446a-8ae5-4c60a78d94bf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8767c10-7805-4c07-af21-7fa7298918fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab2bfce-6498-4a22-a047-3932198b2460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dedbc1-39bc-4911-a26c-87dc93c58e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3412b8e3-9dc2-4368-9de1-77dc175fc491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee27f52b-db46-4aec-8dad-885d1190ea5c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80146f18-57fa-402e-92e4-3a6c9313b45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbd0453-5a9e-4b12-97dc-b32182209426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bbbf1f-bb32-4ef7-add6-a85578101057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86f577c3-e18e-42bf-8182-ea51243dc285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7ec1b4-628c-4da5-95a8-7f5c189ec159",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c22946-0b50-4459-b79f-ac8145196c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4c1ff0-6d26-4a2f-85cd-aa1e92f384aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe2fb3f-9569-4fb3-90a9-7afcadcd55be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e95da7-d053-4f22-8da2-c28ab36a8108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2360b1d2-59bb-41a0-92a6-52447d7779e3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfa1636-ac60-4e88-a03f-cca49b2b5f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e781f4cb-882c-4dd0-b68c-e520c244baf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee78a514-230e-4a6d-a39c-79c6b6e95de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b369615f-f341-4258-887f-15fb775a7a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb81cc79-5d19-44b8-941e-d37d9a2f02ab",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e59959-b1ac-4257-ac6f-6cda8d061296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93f6081-0143-4adc-a75d-157e719cf785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f219d6ea-fb8c-4a88-af40-0d42bf416467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68665610-c3ea-45b7-9ade-ccdf3177ba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75e1c0a-494c-4de6-849a-807bc10b6abb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75ca66f-7850-4038-9c24-6a93a37ba63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0892ab1f-5172-4526-ac7e-0509e547c6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b29b5c6-eb58-41ba-9758-c5b3ee105bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1301bd48-c5ea-46ac-a1ec-cc05154ff8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52012b9f-872a-47bd-b96f-9f4d1e023647",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f023bbe8-8dda-4026-b6cc-28479a53f5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba299ace-0ff6-4c53-8a0b-2d684f3b6f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e7469a-4329-43df-8f5f-fac6638aac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15531423-144b-4165-b570-9bf820fb5b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c982217-771a-40fd-ba0e-686b7e40fe74",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34aeb6e-16a0-43da-9855-cc347f6431ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9819b29-eaa2-4f4e-bf65-72e14c2eb038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f4d8bd-762b-4a97-9a64-8d9a509f5e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8135d907-9543-4f9c-ae85-bd8291ef31ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f41792-918b-43ca-9e70-115974cfd981",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849cf91d-842a-4fe1-aefb-2adb060efac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3a323040-6721-4f35-9791-887260584f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7e268e-dfff-447c-a187-7102b9012dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea97c3be-9c77-479e-80f3-7d4c1ceae747"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f773057-e7b8-4c7a-869f-a3f2b81cfb62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eeaf983f-1bd7-4bc1-a282-8023060ea987",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cada28a7-a2c8-4c4d-b51f-025ed74267b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b325b9bb-72f3-4a7d-aaf9-e1cd6fa80ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954e5d1-1ef8-41c5-947e-ff360614cee3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a630d3cd-0301-4e08-833b-18aed1e76e78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4e9ad3-e248-4a19-920d-1871c08ab46e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cc4f8aa-1b14-47b6-b8a6-f318a074eb6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d5eaef5-b424-43e5-ab18-e9c84edc673c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93888e54-dc5f-4922-a369-ab5800419082"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15206a16-bc4c-47e0-a035-64219e9c8d98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb254347-eb9b-423b-82ad-3e7828a4eb08"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2681b12-8115-4c48-8d98-250e76e865b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8353bc4a-6148-4596-929a-d22612fb7b32"
                }
              }
            ]
          },
          {
            "id": "27a7a4c1-40af-4b29-ae61-1612dcf4decc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29b470fc-4ef9-4a32-87b8-bb309b382f31",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ff2f925-aafb-4fb0-9443-e3d6d8dfc275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72a390df-5b25-4314-81a6-ac3d98a8b96e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99756517-1817-4d93-a6f1-aa2096f1db9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c30d1f4-34f2-41cb-8c9c-e18d97be8079"
                    }
                  }
                ]
              },
              {
                "id": "138edffa-8625-4855-a57f-40e4527de84d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9a82315-efe1-4de0-889f-b6f48eca8952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "319eadee-b3bb-48b2-b209-d6b0eabee097"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42a965ad-7615-49eb-a702-1e15331b38ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73716db6-2cf8-41f9-a7d4-264c699cc87f"
                    }
                  }
                ]
              },
              {
                "id": "213bf29b-1018-4196-a8d6-10629adb14f1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b48fef6-f6e4-4f6e-8ef3-dd93d45c2ff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80e384a3-2517-454b-9ee6-9fea80e80200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f24ca8c-8225-4c7b-b38b-7918969c6806",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f33bb2e5-8640-4e8e-8d7f-4b067afc8726"
                    }
                  }
                ]
              },
              {
                "id": "2ac37cc8-cba5-4c14-abf7-58dfbfb99775",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "526ccd5e-ffac-4225-8fa4-587668e98d3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8ee00ee-de86-45ea-a99b-877cde3c587c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dd8c5d3-0c08-482e-bfe8-767e4e4fdc02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0bb25556-252a-440c-9d01-c3d619b3e7b4"
                    }
                  }
                ]
              },
              {
                "id": "01cac991-5fa7-48ce-967a-edd72952a65a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "149cd3a4-460f-4ddd-b984-cc4de183b8d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e9ab4c8-3b57-4d88-970c-e3636f014b03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f3ccdf6-c456-41bd-9a81-e3754281a811",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6391fefb-ddb9-4241-8061-ad066e5f453d"
                    }
                  }
                ]
              },
              {
                "id": "821f730b-40ca-4a40-a158-3fe8f8c58e65",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7245fb51-2424-48f5-8b95-540761b6378d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d453531-b733-4cdb-9856-23e769f1e4d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1196aaa5-bd48-4a7b-8348-78ac6a7b0730",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0fff70c-e6c4-4766-bab0-35d3acbdd55f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85ddaddf-a929-4c15-a0a4-186a536b32b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a794ee1-48ed-4846-9a54-cdcdac03eb94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3802e53-8837-4ac3-a1ac-9a83568fe707",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79d2dc08-1d99-445f-8146-4aafb5472cba"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac6fb41a-0e88-46b9-8d3c-fa050ede1acc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "426c73e3-61d6-49d0-9a66-de13e0a6cfcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21335790-ce6e-4eb2-8747-98c06312d089",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d58c215c-d108-4a1d-ae80-9a6ac5835536"
            }
          }
        ]
      },
      {
        "id": "9b1b3f08-bac3-4277-9ff3-b8867a28a21c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "78eade99-593a-47a0-8017-e8177943058d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7849d6e8-71f3-4f7d-8135-de054efffb63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15566d04-e954-4684-9bda-95541e5663e3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac496c68-2d7a-43fa-85b0-fde65a2cde17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57204083-0bff-4a2a-9d62-cd66b01d8a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4073f5a5-b799-461e-9f59-e64c45c5f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bda2c0a-f4a5-4e8d-b443-e842b3a1a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9deaa0a-aabc-44e5-9840-b0968ee0fdc5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade41493-e366-4078-8570-8d59f8d17f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176e77b5-429e-46b5-9cf2-6f926240c623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d76ab4e-ff19-4bd6-8e26-a0e16bc288b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2675e098-0589-4eef-9312-db0c6bda8c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5d6127-f965-4829-af5b-a8117c4e60d7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70999233-f827-406e-95bc-509e4a180580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e78c2d-ad5d-4bc5-abd6-d921a0325866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f414e57-348d-4836-9ecb-b9929e4cc010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfb30d9-e92b-477f-b40a-a7e4c4eaa9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e255a1-9362-4d7c-b859-ca124545dff9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bff7c4-c396-45fe-bce2-5442178a69ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fbcfd1-af75-4d6c-8708-464f0c916cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d868c087-e025-4bae-91ca-ea32885c55df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9afdec-9987-48e3-acdf-ced5918f282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9f8b3f-15d1-4093-892b-334abac6d050",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934dbcc6-edfa-4836-8dbd-22ef80113665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0264186-db92-4703-8168-ef7783ee4423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87f74e1-67b4-4306-b1d1-d01bfaa6e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5fb518-dcf4-4876-81a0-c5c09aa00f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3cc623-753f-4700-a5ac-1abb707021cc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3687cb-ee78-4d38-b617-2bdf38653625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c4d35f-268b-4763-a44f-c88a5c60dda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a9fb4b-afab-4ad1-870f-1873fb93e0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93679da1-e65f-4460-b7d4-2f3f6bcd6801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9591fa6-d5aa-4b30-b5bd-034d7a7efaaa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6934a06b-57fd-457d-906b-111f53b2123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8849b164-ffe5-4374-9382-35a3b70e8768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389098a9-515a-49e0-9264-88898f722e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea04135-8b4d-42a1-b05a-f9ef36a101de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acdb573-98a0-459e-b046-1ab5879da04a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69537f7b-2426-48c8-87b6-fe037010edb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1dcc0b-fbe8-4f64-9fe9-60282d7b8a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19678ca5-beda-458d-a4a1-36d9093e91ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb8cd52-9a12-4e1c-bda1-ff89b218ca10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145b4be1-931c-49dd-9e59-df289143f5df",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e3d3a2-9589-4c7d-9e83-67a8e2afad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b00bf8-9bae-42c9-8fd7-acfb9e95bf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4fe3fb-5eee-47f0-895b-eba8951a2faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63de86d7-ee4f-4752-a8d2-4802a626e544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c48a351-235c-47d1-b38f-ba1aac949515",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dabfb27-6021-49fc-a016-ac0ba323ce31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1550b73-6242-4eea-81ee-350d00b42152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783a52ea-1cfe-4ed5-b6c4-531d2b71fdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc90fc32-5281-4b83-8875-01e80ede48ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d303db-f238-40f9-970c-da1031d4d792",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93a4450-6626-4b26-b876-2974b496f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea60cf8c-5cc2-40f3-851c-ebb6ff7e0795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c301b73-cfca-4eb6-b5c0-637bd76868e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3a89b1-3924-46f6-bf75-7abb2268e872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759f172f-16e7-4b60-a047-9b84afe73c57",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293ef76f-f69c-460c-b984-e5667466320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3d06e0-79ba-4d8e-b2e8-5e57b04009b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950d7f75-fa13-43be-9bad-d556f4672b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6aede589-6c5f-4309-b90e-88193c02c093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90758e3d-a1e6-4749-8bc1-c2e80eb74b5e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930d5758-bc51-4f80-85b3-9fbdf134cc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf7076d-cf70-4eab-a99c-9f044c998faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e4d6b4-8e1b-4624-85c5-2310b35264c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53769383-8658-4120-93f2-5c6284e5ba69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20306f4f-4e69-457e-afdf-4d3b14134b1b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3042f20a-d21a-4346-b1cd-0fd15b0fa287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19552f2-a72e-4099-b593-346ac65ddb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d06f9b-1ae3-446e-8518-2243a00031da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca206d7e-bdf2-4417-8fa8-b544fe782d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700fadfb-9f98-4071-9033-d023d3b310fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17352a80-aebd-4a28-a9a7-99d9003aabba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affadf8c-699d-481b-b4c9-758f6a7663e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3132a316-1ce8-4766-987a-ac1a00cd2b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "81751236-b7fe-40ac-9a79-56fbe5cc5282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550715ab-8220-4386-b9c2-e034e6ea3877",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8e8cf6-4634-4738-8e62-d85e8ed9b332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7cc449-6263-46ff-b86a-f32a350769fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa94a10-79e8-4eb5-b46c-252ada43a79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4f8608-738d-4640-bde8-009eb781eb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c601d305-b72d-419d-a6ad-df41b2742852",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb70ded1-e1fb-4877-80ca-6f83ce953503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9637c86-d1a0-4e90-8dea-c7ce7f2ea144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee013502-425b-49ab-90c9-94aed6287de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e5e414-cb7e-4dab-a2ee-fb05b1c41e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184ae2bd-95c9-430c-95f1-3d7611b4431d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b63cf8-9db4-48fe-aaab-15e3cb093941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea65738d-c708-4fcf-81f9-e9d0684eeb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c9beca-f2da-4c0d-a41d-8aca92deb524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0488a13-b3b0-497e-a376-122d5df899ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ec3d6-e9c1-4aad-a78b-f3efe6676132",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78564b4-1ed4-469f-be83-87595ce98651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a19fe3-10e9-46fe-91d3-57bc0376893a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f7a88a-03ee-4f1b-b345-4340e59ad5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "690d2cc0-bdc7-4237-9303-fc3d35624283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff85cc3-4cc8-458a-898e-921808d13f27",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c613eb5-ceaa-4ca4-b434-78a9617727e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d796f485-68c7-4d05-9e00-5604b00be1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2dc27e-5dc8-4123-a883-4cb778852ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25c7268-edfb-4121-823d-47912f3a7c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e12ca17-42f1-4d4a-b5d2-23ef6af6fbeb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3d6032-8819-4bb3-96d3-4c742375d4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d68ae7-144c-408e-896b-c7fc4fb39ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0119c508-d15a-4aa8-8b4d-a5e9cd50be0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87bce085-4048-4960-975f-62b832a01eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f05179a-3da6-47fd-9d90-e6f23976ddcc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e00456-411f-4383-a85f-b7af363ef2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6b1cd4-5642-40e0-901a-2439e86fedf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e235386c-9cb2-4938-a8a8-bec041fd68fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0ff51f-7ab0-4202-b4be-43ad94fefeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33e1324-caf9-40bf-b8ac-7701e23f1030",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922f4a7a-ae46-4827-8599-cf29b3ccb0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ec279e-6ec9-46ad-a8ad-5261738e76a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c56b56-7c81-42fc-9876-0abb257227b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "521402dc-dbb5-499b-a481-6383998b53d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada92306-f490-4b5c-a19f-e8b0508eb848",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327d28c9-7c54-4048-bbd9-0e120dfd104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf52b94-3bf8-4237-a6b5-9612f81ffa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3aefb9-ac67-4901-8622-3dbb7f232195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0164c51d-1d59-4522-887e-16758ccf0abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0227b049-4568-4219-9eee-91f0e54e8b72",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478a1e66-6d0a-4af8-825b-e37ca53b713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df261afc-cebb-4fab-81dd-df5ace83c7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc4de9f-6af5-4c24-b10c-494a53bee7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c363f6a5-fa7a-4e5f-9055-2c725b16818d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1f3963-777c-409f-9c05-6abe10bd3829",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39b898b-6a13-4420-b9fa-1a6701c4e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb00943-7528-426c-be55-c7028d421b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c621d99a-dff5-4c68-be31-9a128cc41e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d16254-ead0-4a45-a4df-d7f45150611a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac23a56e-15f6-4145-a8cd-8f0831cf625c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811c80e6-4ff4-4f90-b5c7-658affa9ac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b6cec4-83c9-4af0-8e7a-ad071498e6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9047d74e-3eee-48a6-a6ea-dd0bbb78b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e401fe6-3e14-4607-b06f-32501a9f20f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce62e119-d956-465c-82c2-4ea82c53fa80",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eaa9fc-6677-453a-809c-ee8f86964f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ad4f4e-b3ac-4473-bdb7-d30fa0a596fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcab036-26ea-40eb-b154-df42804fede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7e4473-d9b3-462f-ab30-d21ec0805229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbab3db-62dd-44a4-b243-cd63c864a58e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb81bcd-a344-4267-af66-9da9de6a56e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020dfd2b-70ab-4934-b56e-07f34f934f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b740855d-70f3-4f4e-bc46-9bd2fee603f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1da2b47-525e-47fd-8436-d673ba340bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a908b84-62ab-4d6e-8ed7-ad73c1e93052",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae722892-48f7-4553-95af-3c326c2169f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347fefec-9549-4ee1-8712-3a5aa4d89eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8b3d4f-2297-4923-8912-94af97114f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14bc715-ff7a-4b16-95c1-cb1644c06c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5e2a7b-ba7e-493e-bd21-d9a8fab8cac7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027d990f-2d5f-419a-8dc1-ae04f7705d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc29b7d-f2f5-4284-93e9-189e0f80229a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758020b2-5046-40cd-adb3-dfe6de994d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2008b3d4-5ea2-4305-81ea-a2ac8644d8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd695fbd-0e20-4034-9e45-b92f91e6fc11",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37308f3-8027-4047-b51f-00114912e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b912fea-21da-4c39-8c0c-406058894c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d032a66-786e-4a0b-be7b-d5873294ce51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f227b690-6891-40eb-8e21-77b17b55012e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0e4bf1b-35f9-4ab5-a4ed-7d4135c643e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8b7df6a-142f-4f4c-93cf-402f6e3a293d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b6d7cd-af0e-454b-b0cb-4498d0f2d04d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "906cd523-26e4-4b77-b42d-50842374c5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cced0dc1-db99-495a-8009-d491c794e797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "346a12f0-4d36-46f1-beda-4c4da96f3c59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebaa7788-0f77-4fcd-8c2d-e35ba0a610b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9277e756-b046-4422-93d0-81ce330a7364"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd6f64e-293e-4395-8c5a-037abd922093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe6dd836-bd13-40db-a5bf-0b8d438f315b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f115fe6e-a3d6-412d-b1a5-87e02ccd6907",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b1c0a19-340d-4523-8836-a13fc530f913"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3c68772-63e3-49ca-91fe-cf56788c1cf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da7150e8-a228-4eea-a0f5-d8e52d983d41"
            }
          }
        ]
      },
      {
        "id": "3cbb3a03-baf2-4dbf-aa51-04657b814c33",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fcd3ac73-624e-46b0-86dc-d7dea6503766",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17b8a8db-1d06-4ecc-a599-1e1548b01bc1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e4d0d16-5ee8-4be8-b768-bcaca837c901",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c545b5-c28c-4a2e-8002-707fbc22fabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce05df8-8fa1-42bf-9df0-95c63b9b2582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9a40aa-b95b-418f-953e-0a05ee6db41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "621afe8b-2583-4690-9ab4-e5881a78c027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a814e77-ea7b-46e3-a479-efb8ba692f70",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baa22b0-9a98-4ede-8fc8-4622e3ec7692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b367a7-f83e-4042-be53-8758a6de8346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f30e2df-b6d3-4b33-9180-6292e187c0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8a4f9c-b596-4a7d-8ec0-f52ad795ba87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b20bc9d-4159-4365-b5d5-ba22d1c59e52",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330aef35-1e52-48e1-88d1-88578c6bc881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0ea24a-7d55-4ac0-8b7f-be81ca35e698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a36b87-bdae-4caa-9d1c-1147e9323653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fde4ec-a3ba-4ac8-a97b-a0114a3090ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b3026d-c6a4-4bb8-a574-82099515f563",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662b96f1-5374-4c8a-83d4-ccb205bcd70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f359fa9f-9f11-4fc1-9f9e-5cb77b1e83f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3345c7-cd3c-47fe-a52d-67383c7170f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c68215-658d-4782-98ee-a59ecc22d7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27f4526-9d12-4af7-8328-1bbdfdeba0de",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e64c04e-4bdd-43d5-93b1-57261eb62204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548cd080-6e89-4a38-b04d-e59dc441b703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c7566c-78a0-454f-900f-49b7bc778ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d74bf4b-c14e-4120-8f71-2b769c5e68e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1d1d7e-5155-49b9-a168-decc174bda4b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a59aa8a-0608-415f-82b5-d8fa17305d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcb08d1-8c26-43f8-a29e-53c09ba95bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4d00ab-9a90-4acc-bbe0-1238117169f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2e91be-67ef-424f-96b1-b32cfec0641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5c68f2-6f55-4807-a2b4-f1f000570bfc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc26d9e-0420-4479-a682-cef7c06ed4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222199e2-e87d-4aa8-ad7f-cd960e7addfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519ba5b-fb15-40ec-91a4-60e93575e7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d470f32-eb87-478a-b0d2-37f45b28db30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf52f99-d4bc-4f92-b197-96c9b953cf38",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533ea41f-cf3c-4843-8c4e-cc02ab5e5968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3004c46-b914-418f-9ba8-afefe3b34bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d603f5a3-6173-464c-b662-34384260b0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70870447-f66d-4a0f-85cc-28828267fe28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e361fa12-c2db-49e1-af85-bd53f2f2111a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493ce18e-e5ae-4a00-bebd-2c7a2f99b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bc5700-e3bd-402b-9bd4-7abafd55f124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e1b099-861c-44ab-9d7a-f68039279ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef45541-6bb6-4ce3-a121-dd3b7626f6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5bf218-ee86-4609-97e0-ceb4c4c2361a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabd9d51-9108-42d3-972f-37d27ca9e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c3fbff-1e33-4128-9924-37dc0ec5ad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d9de98-e521-4458-b344-2116655b032d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "093006eb-a037-454b-bf5f-e1fdaa0120e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9350846-bfad-41b5-8188-36e5b90ffe8c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb94c80d-c05e-4d12-811a-a342d793a8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85d96cb-2dcb-45ea-9e4c-d657f0667fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d95176-6124-4f9f-ad33-fe4de82c1891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "106b8059-0b22-4f09-ba35-bf9bd27a0624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4c105d-0398-4b93-a0c0-13a39d494da9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0294f7-ce53-493d-8739-e728aa7e3e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28f6188-5b0f-44e8-9025-3dd2d01b8fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2181b328-6d64-4051-b5ce-2012c8567ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3585547-b86c-47c1-8694-8883e61a18a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfe3bdc-1beb-4a1c-a8ca-5030cd365bb2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb26fcb0-6f04-4a77-a6d4-f16e28d4f325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78227213-af4d-4a43-aa64-879d0946c453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec0b67c-a58c-400c-a7e6-28d48d1bf77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70de1953-2b03-4aa8-8472-88ee6c9121d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75633b31-73b7-41f9-b389-32a2c27600b1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8827bbd0-471c-4c6d-84f6-6cb9a6d55a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1f69f2-c774-41dc-9dfa-8db46937227e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d67745a-f2dd-4d7b-abbb-4e2b4bb8c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54256f9-11a4-46db-bb0d-3f35d0aaa9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924231ed-94f8-4051-870d-a8178639fc23",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57919dbc-3fb6-41cd-832c-8be43551a00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f137c570-a922-4ac1-ab3f-a1ca04bad618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541543bb-451b-476a-985d-1232e5e71f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2b9466-b7ea-4ca7-8308-5a6e10dd2b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd40a628-c01b-4d80-82ca-28c2176a03c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889a8d12-f6cc-4a2d-97b5-49b5b9b25f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92839a0c-6c51-4159-ba68-4ba1cff7fd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5338878e-8f17-4754-aac8-98906e91430c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b5558c-88e1-4c5e-880c-d55f2071fb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49afd757-c14e-405e-9e6e-da14a2073c62",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4792ea7-98ec-4e98-a9eb-5622bd57b7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632786db-6cee-4a74-bfda-b91b37e47e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0e4b7a-6b15-4e1f-a9a7-d80e0c414041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52fa12c-f40c-4510-bacb-6606da4c9720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c609c52-838d-4330-8f45-f5f5c33489ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76fbe68-7be8-4965-9243-abf8bb90f08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c1958b-081c-4ba1-b9ae-2b7d8d464099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9768607a-841a-444d-b86a-5eda1a8f28ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abb46f4-ab49-4a89-8fce-641f711415a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18966c6-255f-4a21-b4bb-b41b2be71790",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55a653b-1ffe-4c75-abc0-afd7b4eba59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d567350a-cec3-4a50-ab69-15feefcbbf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e18821-6ca1-4eeb-b3e6-63c935a86f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ab230a-521e-4436-bb51-25dc3388c39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936a7efa-b669-4b90-b10c-6b3b2a1b86bc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d05331c-ca1f-4a12-bb9c-3e1259d9ab21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8611cba0-08c7-4894-98d3-416e5a71871d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcdb02d-eab8-42ec-9ba0-917b9959337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f78be61-64ee-4f06-8c10-77f2cdfc72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5e819d-0fce-42d9-ad7c-badb017d804e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cb5a89-bc31-48de-a28c-dc231a55e9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9969a2c2-4d2c-4726-a053-0d7f70ab7c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88dbf8d-0354-4f36-959c-03e24f979a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ec8e13-2cd2-45cf-b1e8-b00ce7edb92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e9b0af-7f01-42e1-9cd6-2c99d1d5a743",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df36452b-2c60-4b56-84f9-95be5987d593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56d99e1-22da-4de6-a8f1-9b2c61e24bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195e28f3-5732-49f0-b08c-ecafb7f4e6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d9f545-7e31-4aa4-b340-efea1e9678e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2951050-8c42-495b-a126-5e11309e8c32",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87a86d6-ae39-468f-8201-3943230aeea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a81ded-44e6-4185-b135-543be1881ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb1da0c-5cc7-4b2f-a2d7-39af08082926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df394e22-1a08-437e-8a62-531d26b766c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5ceb02-9659-4c4e-8d16-f9493c1f614b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9572d746-f89d-46c3-a658-b98c7edb5a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589f35ee-590f-479f-afbc-aec391aca7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07d013e-d8c1-42b1-be65-431d7ef26095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf949f1-2bde-44fe-a155-fc0e165e62d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7074f5-ecc8-4b5d-89ba-e7856a785d02",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3accef1-9b0c-4df7-94e4-934b436f5d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359f7840-bbdb-4a63-916b-53e145493520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca583d89-c520-4d1e-99e7-ad383710132c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb1a579-ad84-4729-b107-161e5f4cdea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72507aea-162f-489f-a835-4b2267a904f9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c1a070-4373-4338-b00c-894bcdb73b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cae0ba-1cb8-4fbf-8957-eb147a6b2af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5dcf42-1f30-4eb4-9cfb-bd51287c5442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab77d3e-da7e-499e-b5d3-bc2598452134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c17eff-a21a-4922-b770-fad10a06dcc3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3081fd-d19f-4c36-ab51-86f31547ee4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7cf36d-3d2a-4b35-be76-5b4e27317968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67995280-18e1-4979-9f42-38ac133a5f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77295b10-f87f-45c2-bc4f-62cd8c866ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e848d19-562e-41b6-be86-5e7ab7b751ff",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96eaea5-adb1-4f34-bc28-9d069b104684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fd680b-fcde-4dcb-8886-7bbeb1469b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04cee36-3d37-47ca-ad7a-aa2f29b7bef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1ad25e-beca-4691-b16b-aae80cf18ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8e6a1d-aef9-4867-b492-803a829228e3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3250d43-a85f-47cc-b7ed-a61439739694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccfe6ea-1a02-4324-91c5-448d2cdf5b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e609fe-1a53-4a41-8b73-670b3585eb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0fa2c4-799a-4902-8272-ec75cee7782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8230a87c-f2c2-4eaa-9b57-42d9f9966c1a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ab556d-921d-4d7c-8dc4-efd946a45bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25f65f1-1fa5-4299-ac24-b93e53639ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174bbfcc-94fa-4487-99c9-e71912f51dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "060ab69e-4b0f-490b-9670-e32d8ee27d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123dfbb3-f579-4bb2-9de4-2a85f0d78ad6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0ec6d2-3d70-4165-aebe-84b34962ff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd6dca3-7c13-4b33-b33f-ce61112e38c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bc50ab-0b40-49fb-85c2-ca1ad1d5cd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43d02ba-874f-4fe0-9826-d7734355b142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c1e9a0-2d2a-4d45-9ee3-b89ad21d31a4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b507f69c-e961-4f78-bb1b-06a0ca03527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8085ea0d-2095-4bf9-b664-d1c2f3c350ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e0ae1-0ce3-4c39-8729-c6be5f86c5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0487a882-ecb5-4f07-a2f7-098e0ef3dd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb317788-f692-45b6-8f4b-835b9e5df208",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6774c5c8-54d3-4c2a-a97f-27337fa61dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dc4f0d-4ce5-466c-8fa2-680a60f432f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe08f94-5160-40e8-9bba-e37166722c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac844ab7-6493-4e55-9c40-6f16403bcda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398045fa-0bab-4cb8-add9-73fcea4fb0eb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea55249-3d43-4d19-aa7e-b549338d9555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926908a0-28bc-4b2f-9406-bf6f0715a061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276b9ec7-e418-4b37-9b71-8141210d310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb5746c-2fac-4fe3-be79-63bb14af2eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65621553-cb57-437b-ae7e-3889b3a5f88e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cf27b7-5e8e-46a0-94ea-0403529c9d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0338844-fd87-460b-abe8-408d86cac3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e67a498-b3ce-48e3-9a69-740f29aaa368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e589cf2-1d81-4ec6-b8da-71fcb7bf5521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e74dca-0d8f-4444-a46a-fc71873ecc93",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc92c77c-c2f4-4bd9-bf1c-c19b8977cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0323abf4-79ab-4487-b087-e9fde626332d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba7589a-c6ee-459b-834b-f7e6c9503454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb45abb5-75fa-40b1-be34-b087ab43570c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8108baa-523c-454d-bb0c-0efdd8f1829e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bacf7f3-2524-4ad4-bad7-b0f8a9bca58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65af1879-f1a1-4151-b396-4d5f4c9ad7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef81c4fe-c980-4c9e-a500-597dcbefd8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7708097-8593-4cd9-aca5-963d91cd190b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5fb30de1-ad90-4266-b591-23ce8a933924",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15361ef2-d6d3-4a99-855a-90708d78ba46",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4268482-9509-4da0-85ed-96df4e549701",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ac8809-76a4-4dea-b267-8149ccb42a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee61a978-36b5-4d2d-9822-8a5b77490110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d565989b-7f57-4f45-b72d-141770e01768"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94295115-2a01-44e3-81ad-6d66a388080a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e3163c2-4fbb-46c7-919d-dec796aaf732"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c510b41-ad11-4086-9943-4d88c91dbae2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84f72333-72a2-46f0-9a31-ccf98057253f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57f12357-995e-42f7-b7cb-6d036ad7b0ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f75965a9-0304-4d2d-870a-f7293a4adc93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38d80f90-0ebc-4dab-aa20-68f625058ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdd93630-867b-43d9-87c2-2ac02b9161de"
            }
          }
        ]
      },
      {
        "id": "edc5553b-7a6a-46f3-9f22-ed2fc1d16a66",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e0d4556d-ad83-4da5-8047-bcf12941213e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3758fc77-5f71-4d7d-a3f1-2dc67ebb18c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a62caf4-39ae-41f1-bddd-ed2875503b17",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27763fcf-5b77-4570-a60d-2da979e80caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d98626-e44b-4ef1-a218-af09e1ec971d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d338af4-d2e7-4928-b876-a37f3708f5af",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca41a13-5ecd-45af-87a1-9b31d7b3d4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb162a3c-dba2-4d68-aef0-8d28123f2415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476a0988-ecf8-46c3-88c0-16b33b433669",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9478a2f6-e1d9-43e7-9faf-7bdae601c781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4279e4-02aa-443f-998a-bcef724fde05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda19144-5375-4fd9-a687-0d2ea44aad15",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc823263-e241-43ed-8fc8-912c1d9f7806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c79c085-fe39-44d9-b485-ecb3c8a0b99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62fbc8c-17f8-4f20-9699-cbe5c5b851c5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58419c36-0d30-4c3d-aa62-65c59c40bcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e735443-66d8-4c24-9a8e-f08657064741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f505b0e-2c8b-4785-8818-4eb42ae68d7e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dde65f-4f6b-4e7f-8bff-d1ff63891885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26819ead-baf3-48da-bc42-dc2b15623c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458faf9d-a853-41b3-af59-3c3c5e954c5f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b470a724-844a-45b7-af65-b1f14ebcc8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8852d6f3-14c6-4c68-ab75-e90ec4af3001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd4bd4a-87a3-4b6d-8c4d-9945ef465e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997aea75-1ed2-4d49-8a47-0cfd2be63129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c669fc18-384c-4d9b-8b18-8e48dc8a368a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0237466-dc61-4266-afb0-d8345a150dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03588de1-1374-418a-81ad-40c9de6a6114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c8e73c-b46e-425d-ab17-480767efdb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afeda09f-4642-4a40-9a5b-c54983d0e725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac41837-8cab-4724-a65c-937a2ef44c38",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601c036e-d04d-487d-9e48-54a3a2dcd0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c477be-9215-435c-815d-6ceb5ee24bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14f90bc-4a9a-4fae-bb50-9cc927565416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f871c31-2d0e-48c3-b4c4-5f76ded5accb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370c09c9-b547-46df-baa9-771df8c4f0d3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d431b3a3-974d-405f-8732-6c86f3a810e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06df4be0-60bb-49d8-b621-09ec021f7eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1acf4fc-e253-40be-b0e8-4522760e370e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6750d09d-19b7-4494-b186-96e040ca26bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dd605d-f500-4803-b501-ef7c3bfc981f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40843748-4138-4a49-938e-9d27b08291db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cccd1a0-2988-4a88-bfa8-6cc49d28b7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42399d91-be0c-4d74-a102-c36db23c6548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a4a482-33bb-4641-93a8-f1b3e1b2fd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec8d568-deba-4fc6-ac43-cd888afbb9c0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc5c2b7-de5d-4186-ae25-e4c24ea3a8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643d1653-5c39-4f8b-8196-36162e1bed5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd354b3-1d1a-49a4-aaaf-274b8aa2b383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ec93e3-6871-4ce6-a5fe-2af46d6bf06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a762b8d-30e9-44f4-8139-b738f91dcaef",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6e492b-03b0-4a38-bddf-831d2c31de4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3d0ce4-a122-4003-8f4d-d0a851136ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32fe68a-9919-45b7-a718-01d8412fd307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6701d4-58d2-4862-9278-a95f893913ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a596a-aa90-4b08-89f6-29124ebcda4b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c346df6d-1483-4b3c-b2e0-e81f41350afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc112e4e-c533-4c16-998b-99e36eb3f113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95a2067-f871-4afb-935d-8b26555ceda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe23ca9a-3917-4358-bd44-3895c6906d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28408e81-0ed7-4c99-b710-5c92de8d994e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa65dd6d-4f76-43f3-b437-1826ad4dabc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b39ec3-873a-4448-a551-965dea4fafc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee7af34-2e16-40a7-9bbb-259c52de0582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59f2b0d-5783-4f1c-9aac-5e4ee9775bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eae349-7651-46c3-82a0-d60d1c3d4511",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bc2173-916f-45ff-a0c9-3d9e16a282b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9989e150-2835-4c7a-b38d-54dc4dd5065a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0c0938-af11-46fa-9f45-c31547b98dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d5435f-8a48-4cb5-b7b5-cd8630fd5acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793be809-a6c6-4584-afe8-1f2c0db516d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9e710c-310b-47f6-aba4-232483da0968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b850d2d2-4025-435f-9662-bc308fec7be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23f647b-1399-44db-99f1-38e16c2ab02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6287940a-e9ec-4708-99e8-fb665af0f283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6705b1ed-9e18-43d5-91bb-a48d5a7e304f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d27afd-a093-4ac2-b4c5-1e56587fe07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0485ec9-9c7e-4b66-996a-d08bc9543d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c341b76b-5612-400c-910a-c40ac0f13d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021f9d52-553d-4594-8c78-aef0e824dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731ff7e4-ba4c-45c0-93b5-eb30c9ba5445",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcca1de-7439-4121-95a9-3b80b684ae6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e0ca7a-beae-45ef-a66d-ac151773f41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b514bd9f-ef09-425e-ac7c-22402aa663cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768b9bcf-dc28-4fcf-b678-1649c1fc1e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4397a81c-3ac8-4656-9d5d-913b6b38ca35",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b7df1e-0e96-42fc-bf29-4df9c20f1971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b749a23-8b2e-49d3-b13f-57a7e9f53a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62c4bf5-dad6-454e-a08b-fb0fcd871e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e30dd6-c58f-4f23-a97d-7efd93f88b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95ee2c3-8e7c-4b2b-96e9-2ce5ab7b930e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f866c9b6-4a01-4a67-bf59-b94fc8f21423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0a9459-5188-45b4-add6-b574babdfc9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0899c9-e28f-4edb-a146-f2d9c19137b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3c0c1b-a1cb-44c8-ad07-07fb81253423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea49d1a-9a9d-4bae-9786-6842720eb86f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4d721b-6341-400e-a6cc-9447fc100418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ef33af-716c-4244-b69f-2eea81112ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb9589-9bbc-4148-97a3-f0b37e5d69d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a757f957-d0ca-4ef0-a835-cc4237a18c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4659eb-ecc9-4750-915a-c5a409da421f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f025538e-ca9a-4395-b36e-f44887d45704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e807d2d7-5abd-4a96-b4b9-a445eac587e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07435c18-0b1f-441f-8625-82f02cdf6e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8809449a-4534-4ff0-bc73-0655ecfdc355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86ce137-f7de-4290-8a97-e4ff70e82dfe",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1827a60-9c34-43dd-bf4b-416db83653ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38327691-c63a-41af-a619-ded86f35803d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c93e69-0b82-4f93-add8-47c6796c1c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e639900f-dd0d-48c4-8e29-105669e7c497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51ec8f4-a51c-4f42-ad4e-286ac7a2ee85",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dcbe66-22eb-4bb4-b80e-b4dcde81650e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f480164-1ec0-4e92-8026-db760997276f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdc7331-63ec-4a7c-a371-13bb13372112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21f565b-8857-493b-800f-7771768ef169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f921d6d5-1575-4e37-b757-419f9df8f64e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9178d2d0-876e-4248-a81e-fa51f5852c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040ab7b4-228f-406c-a96e-efd514bc3ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a430b2d-4b7b-4fd7-beee-795c32195a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e870d99-8ebb-4cd7-87a8-ad0c2823b61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48f7f20-5393-4308-804b-c1f3d5a6dd9d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c2513a-6e11-4c6a-9026-6f0d912e01d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4184b8a5-80e5-4a60-b758-8cb227ef6ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f111be9-089a-4d65-866c-0dc2d050def5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7f4f23-2853-43b3-af29-c2490d541e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709b96c5-d886-4bde-835c-fd74571319c9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbc6f66-37bc-4d85-8a7f-5eacf38f9834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e83a33-a81c-4104-9702-ae35cf6aad5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a84ec8-6bf4-4f2e-9426-f516d4a38aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf5846a-e93a-4ac7-905e-94a821dc32c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db4012e-b1ce-4cc0-bf3a-71926b1bac3a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fdfc7f-ec91-41ae-8662-441ac53c182a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ec7f9c-f4d2-4e81-9343-7d10ab4bffc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8708f8-3c1d-450a-89d7-7f11ee28fa7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e87299-63f9-430e-a7cf-42a50fe7613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1e6241-3f09-4a09-ba55-fb562372e4a5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cd0aee-23c9-4963-bdd7-fffd1f73cdec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a63395f9-5689-4ecd-b140-1555402db503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5beee8e-e38e-4e20-b9c6-3b2fcfeca1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f69813-384f-48bc-ab0b-3c0368f50d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc52823-7fd5-4649-86d2-5599af383a81",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41ef14b-63d9-48c6-9839-b869695e8782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e370d6eb-a511-4a36-a64d-939bd7d1a206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8ab00a-c249-4bb7-aa67-ce7a69fe3ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f86386-3174-4a17-b60b-d433c98ac4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cd5302-7ad8-4b08-946b-352ce48530f6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9af28e6-c175-4741-a0f5-abf4ce80f4cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f94aac-6cd4-4337-8692-e589c816745f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83b0885-094f-450a-b044-476160fa11af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4eb139a-e20d-437b-be23-704091b39400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbd052e-cd50-42b9-9481-539c8db53e14",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0da8db8-72b3-40cb-ba51-56838ef0dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d16f7fa-4f37-4cc5-8783-fc5f99fef73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a9b4aa-9253-40f0-af7b-e5b699f2a6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5ed3b4-e781-4932-9c53-47c95b68ba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec00905-392e-471a-84dc-b2b0fc956c55",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad342053-133f-4884-848b-f00faf863527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d844250-aba0-474b-bf86-a5120f49642e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee31052d-c369-4524-b54d-8e58727e5ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2a55a4-ab60-4825-817f-05c11e65da15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca4c83e-eb03-47ca-b0b9-de8bf9a109cb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5876a964-ac02-48c9-afa5-988c10586586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ec6ee7-b26e-4886-94ce-131a5b230ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549231d9-9162-42eb-91d6-48babd04cf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7761d4c-8278-4e3f-9372-c7bc9a65462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca2e8c4-df65-4f65-ae80-ce8c639d3b95",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c088d8-29c6-4a71-9b5c-c5d024e6bca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688e0f68-ead5-494f-a367-d4c8214df121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f535bf36-fb1a-4a33-80aa-963beda0c137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6077bc-2709-47ef-97e1-d3c9aca130dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60aaef2-3d87-4b27-abf8-3585b4dbd892",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c8b92c-ec79-461f-a598-18aa3eaff177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b16ee76-9a66-4995-b448-fad66a15f836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef739f0d-5fcd-449e-b0c4-063bfd91a923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6df948e-f423-45f1-b9dd-f32e99072687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1b2078-9665-4a57-914c-52b94459eaa5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84ed0d1-7288-4950-a7cc-1213647158a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97e662d-aaef-49f1-8f69-0e8600a3cd7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f26f6d2-127c-491b-b22e-dc19860cafc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05449d23-a51d-48a3-aa8f-6fdc3a14c74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d473ecc0-241f-4cdf-ba7c-525b4d7ea025",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c46b254-484b-4536-99e3-5abcb98a1ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8c26b8-b374-47e9-bf89-a337e6ff60d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669239bd-b255-4485-ae00-43023907c564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7f36a6-1f3f-4525-badb-c990f2173872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234b5c42-ab43-4e5f-955d-6f54e732daee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76451df-6fac-4aea-a16f-b21a8a06a804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425264b7-f619-4577-9d1d-1321a4b9144d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c446bec-0cd1-4c2b-b912-ab7a3229d46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af805d6-9658-4e24-b4cc-b9ac5242daa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b1f33c-b63b-4f41-8e80-c8af3919f19d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5a8ee3-69e5-4243-83d2-645754c19cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1538a096-2287-4d30-82ca-dae1c700415a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0807b51d-52d3-4c54-899b-b41bf2f198f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15401c33-e967-4dbf-b175-3d1a9a431ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125a1de3-f9b4-42a6-8eb0-79b43abfd2c8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f519dee-36a0-48dc-84b9-c2c80a153282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752c1edd-2e02-4771-b061-c259d90b3659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e56a17-9aa8-420b-a31e-aee23912e444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f9f8df-3650-4453-a27d-3011e33fa8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77a9953-1a97-4ded-a87a-5d18074a2d7f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a761af2d-ef50-49d6-b8fb-f0450f37ebb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ce8d70-fbdf-482b-beb8-5d4df1fd6a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d09d4b-af2a-49b5-8b4e-6bc5cec159c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8455c821-1707-48be-94a7-b18dd2f3a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2f6a5f-fbe3-4051-bd76-ff447b2ad50b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5216579-ff89-408c-b73f-22951fef785a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78b3ac1-93e5-427e-880f-c662b144237b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfddc7c-1921-4b75-bbec-3c92fc164eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df35434b-6e72-42e5-9751-3f01eb676263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5c323f-6bcb-4ddc-a87a-cb080ddca790",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae78a9e-980f-4cfd-81b8-882aa19fa715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24dd130-eb53-42db-8eb4-4f2ac92f4046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a425d2d7-f138-4701-abd1-fcacfc6d2f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5fb331-dd81-494d-a667-0f45ca1ec525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d94236-476f-4358-8a2b-510a10847046",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5354a3-b96b-4512-8b1b-13098ca6e756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70eb3163-c69f-47b7-924c-5219dd400e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17654383-1d9f-4e19-9fb5-fc1a387211ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3e960b-b739-458d-aa23-8a0ebca3c3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b249d2-e8f4-45a0-a721-7ab00c1d276b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e3d922-1f0c-4aea-91f8-cf3b316ba606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3e832a-27a5-453f-8a79-bb6844ccbc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4450ba9d-0477-418a-bd54-cf933810f70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b4d25e-c6ca-4e43-aa3d-a3acd0cef960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92373db9-6eeb-4481-ba48-4d2d5dba2c78",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bd8840-fbcb-4cf3-bd65-6e35b417de18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f07072-6bb3-4739-bafb-42a60f7c736e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e92ba6-b4fd-4355-b4b3-dd8e57163afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b9f9f6-b651-440f-a58d-60db180cb28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd8b134-c600-490f-a311-8ddb13ae6d5b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6342bdf-0a22-4d51-87b4-e6622a934bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395e9aa0-9a98-4cbb-bb05-9a307c33f77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b7b223-e5c6-471d-af37-1c7c68733ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7b0a9c-db71-4598-9b58-ecbc19787a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f426024-13f1-4282-8d52-e0910c29ad41",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11abb88a-2225-4583-ab87-00a5fc130af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfddc08-175e-40e3-973f-75f1303fb4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1debaa5-8209-4351-8128-908ef3010c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69762407-ab64-4f6d-a1d0-58e4f8a9d99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3051c6-44a0-478d-bb0d-32c4dcead705",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c79cc0-00d7-442c-a618-726de4d81e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c507ae93-7f3f-4f24-87ed-d386771cff1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de60ae0-ffc4-4cb0-bc38-a2ebd94bae8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bdce89-0a19-4bc9-8911-fb1dbfc68017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cf6930-352e-4d0c-aaa0-0ed26c2449ba",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b2736d-04cf-4660-8f91-cfccc47499bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17629a7f-ff11-4358-bf22-74ce4c4d6970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f858d33e-5f4f-480b-8851-63efa0df16d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d0a94c-3c45-479b-a9d8-a68eea62c1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b57c28-18a0-4032-9fcc-45cd7b71d1a9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc28807-ce5a-40eb-afa0-8f05b4022687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8109f8fa-8376-40a6-b454-f3fd8cf70c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c140c0ff-1ea0-40a4-a59b-83b5cb514022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abf23d7-a4d9-494c-b01d-7c0db93b9ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f14a20c-cd0c-45aa-8fba-7f52529811f8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1294fb8b-57e1-41e3-ba1c-94b98b213eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e42120-d653-4ba1-b15f-7fa5f792e147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12770f6c-c717-4e8a-ace4-bcd48cfff500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f441bc-8fd3-4397-91b9-4d4bbd9a985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cda732-8f54-4b1d-ace0-d5df1bdb6346",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1190439a-2688-47cc-a484-3889a4732e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9479eb7-f76a-4c50-a946-c23b998042ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea39412b-b0ab-4bfa-a89e-428006565b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c0e330-bfb2-44e2-ad14-cc9ce17af452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fed6bd-70cd-461b-84d9-26a447f6234b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d63bb3-dd59-4160-9644-184218e83c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cd4edc-bdf9-484b-9f2c-2a70746ca319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86737930-2cf2-447c-8312-ef1575b5808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd67f6e1-8126-4dbd-8f9c-589d572dfe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cd3987-2bb1-44f9-bb7f-2fc21ce681ca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ea95b5-953e-4ea5-a0c9-46dce342b712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e631904-eb43-465f-b0fe-beda3491f4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8401632-1b33-403c-bb1e-7f9013fc5888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23170951-7d93-4365-b0b8-696ef5cb7a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e2fc8d-a5f5-480b-8a05-a87a7c29ba9f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350da703-12d9-4e16-a1bb-a6fd69a30f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d714bf7e-cfae-411b-8a68-5a31c6406062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d722d8-5407-4ad1-bca2-afa4f93f960d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba88659e-b900-41e1-811e-2bfbbb7f89d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b91b456-8bf1-4a10-bbe3-b25a5098fe1e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3139ac77-8b13-484b-82f0-18a360f83f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6844530-23fd-4361-a9fd-bca1cd2acc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090840fc-8aa9-4665-85ac-ddd1df2d8907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3304353b-948d-4fe8-a066-e9d9ffe267a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5162378e-23a4-47d0-8b34-69d8a313480e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c934453-ae65-4547-92eb-149b0e22cfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b191609-3929-45cb-806f-dae2be41d8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650afd23-e294-46da-aa99-a4c438aec96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55733b1f-4548-43a6-8dbf-cf22025855ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c217fb42-a7bb-4d9b-80da-b272e569258d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aee030d-2898-4a70-977f-005f088a5465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04348282-ea3c-4bd8-929b-2dc5dd09ff36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194fce7c-0888-41a5-91ab-af45e4091a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757a8a3b-2842-4ef4-88b7-952e7df06a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37488996-9dd2-4c0e-bc8d-306d03037497",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fd4340-b90e-49ea-986e-1e4281adaf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f84f7b5-d232-40d1-b5b1-618e208d9a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fc1541-383a-4dfc-99ee-175e614131a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd43619-0cde-4ddf-88ad-4c74ea2cdc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d095896a-0423-4658-8c85-384d47161f21",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0b6a0a-a2e0-4e6d-a2fb-68ec55d601b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca227394-2463-4260-94a5-527f33da612f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bae9941-e381-4e4a-a2ba-61ee8b5d9d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b56c828-aec4-48d5-b857-be91753be20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e312ee-7333-493f-91a6-c9b336f5e1b4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb46331c-0b63-4b78-94b6-1e732fad98bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ef0666-2f27-4f59-8b46-d59e8415a60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b43addd-8ee4-4f06-853d-f23a7a8969a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aac0a1-20e5-4aff-ae58-0e153034c798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b14755-2e65-4157-bff5-65c069d765ab",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd4e5ee-0150-46c7-8b28-7938f01eb7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd720c7f-a190-4ae1-9b19-dff6b6b7ebc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d487784-9043-4618-bc27-e7072de4d8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78d25db-ab07-4090-99b5-8a4806b96768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bfaae5-a18d-4cc1-be37-ee03a545bad5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb63ad6-70c3-40a4-bcb7-5175f3f95387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69fcac5-9666-43ae-be65-ae59ba33127f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde2e722-8dc0-4e5c-af46-197c43135670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a78c24-666e-4883-96e4-4f43802571b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a19186-ff09-4bd3-b702-929a43f1c8eb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2ce886-471d-4f82-b58b-b1c741ac84e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccdc81d1-fd61-4de0-ae7f-20a8733b34c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87fbd0e-a922-4635-9481-470df1a515b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fa36d5-11c1-4ddf-adc6-dc75c3090cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f16b5f0-4b9a-4534-910f-11c51f8f8408",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373eb0de-ceff-4bbc-a2e1-896a821da048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa856c7-0502-454c-a0d8-c323da39a4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbafb3b-41cd-4d69-8482-54c3d8e9e08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6255e58-3eb8-4541-b31a-50dcd7b73039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acefd9d5-b76a-4a4b-b46b-1f334d199346",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4aa4de4-3fa5-4557-bf44-e15b90160757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2efef6-4a04-4456-b447-658eb63aaf11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d09af6d-3390-4668-b673-0cefe43c9f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c66d065-c817-4784-aa2b-5e6a3ef82396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901659a1-af8b-4793-aab8-33e999f973d3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af196e13-5a8d-4a7b-b25a-ba6e26cd8172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed7ea36-26bc-4f27-a892-d5c9636c7593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f718fa-6814-4534-af04-44f510ffede3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6c54c4-14c6-48ed-8fea-89550d2a0ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af190859-5636-4505-8214-b1d4d4a393e6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fedded-44d0-4c78-8954-f53fadc6ecbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595bbebf-06b1-4109-913d-4636109b525d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cda2cf-6394-4935-a2fa-f4c16523ef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833ad52-9407-42e0-a16d-92e6367c7bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c278b82-d08e-4a9d-88a6-3d84f35ab3d5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46e81e7-2a6c-47fd-a26c-94e90b597200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ee7313-cc74-4ad8-b36c-31e60d421889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab90634-a75d-4920-9958-0898921cc7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920c235a-f0c6-4715-b8d7-8228859ff702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b51717b-52b6-44f0-bcbb-a7c5ad38b2c6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05df043-f3d1-487e-bb53-7afca33b24a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2473a7f9-73b1-4c9c-b33b-e8cc2ec26b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df53c03-0b1f-4b64-873b-92b518a4749b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87244eed-c339-4d2d-9eb2-944a5b57d237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7cba56-c70a-41e3-8113-a7b8a7246bfd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db10de45-f936-452e-aa96-d859e2a9a1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8476b1ce-c139-4998-aacb-f0250ebcbb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0923f505-c158-4538-baaa-452482f8a17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683cd348-8c2c-4eae-8f17-5a73a4e7d2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa72fde1-842c-48d5-8828-fac7b313f731",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95273aa4-3ae1-421b-9b11-15eb7684546a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7ebbdc-234e-4dfe-8e25-9d882876cc93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8979cd4f-f568-4c72-8129-c8e049410f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cc068b-0a90-4f09-b7aa-ac770a987ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c9611b-8db7-4996-9300-60f20a9e0926",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b9f651-5baf-4d4c-bd9f-884b5414a43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dfee2e6-4426-406c-bfa7-6ccacb80523d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23f55ae-769f-4fa1-9912-d004f60e3b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e6236d-4751-4f8c-a67b-22d7347b879c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de63a1e2-b3b2-44a8-ac21-4fe133c64743",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1088307d-afb2-466b-a76c-a934e57190ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1cdb4e-4b19-4852-bfab-22b513942828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e5124b-2042-44a0-be72-c7235d05d9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dbf3f1-5c7a-4cf3-8649-17ba386e0290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f784ad1b-a8a9-4074-9d60-d6fce8970c87",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b991e72b-e562-4b18-9312-41b9f0870f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59cbbcd0-28f5-4c86-897a-2b225a112327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb8a628-7651-4993-bcce-79629b16fd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d356af5f-057f-4e52-a50a-4ac82941be08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64edac08-fcf8-44d0-a0e8-18007a1cb6e1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66066711-d72d-4102-9baa-ad64b36e846e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "190a1f97-4a6b-4a5e-8eeb-4dc5d384362b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad7040d-77f6-4603-ad7b-711bfaacc46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2047d3f1-6f36-4629-945a-2ec62f8ffd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb97b5e-8490-491e-ac8b-5c3c9cacaec3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c5418e-e67c-4364-ada0-bc9374ea1f21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400cc5f1-46a4-4638-a705-0975a9e6a79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bbbb38-0429-4e57-8809-460a5750a5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b1afc3-9f8c-4bd4-9741-c345062aa47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548d4093-0763-44ea-b49f-902dcc991a71",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e548fa2f-e273-4b02-820e-01dd0577d45f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ae809e-7cc4-452a-b2c5-5f8ad852bf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81cd594-3e4e-4731-b8ab-358d28d783cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12cfba7-e40b-4a5d-82cb-7bab7ce318a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7da6913-fa0e-42e8-849e-287f7e35eb27",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644d27bc-648a-4530-8e03-eb1e35bd7f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdd4806-00f2-4c5c-8a1e-948a3d2ea787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b37bc6-7523-438e-86f8-d01dd8686065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4823754c-553f-4a5f-8c89-37d603048b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11a37c6-35ef-4a9b-ad49-bff75176d501",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff337b8d-5dd5-48e4-8544-e3e9213aeb7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86213ea4-e855-493e-bf96-4f3a1ea58844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392f3c60-f82a-404e-ab87-d4c7bd3ab24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec6a918-07ae-4129-b809-5cd66c1d0694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a725286-d3b5-4084-abab-cc323b56fa46",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb139a60-fed5-4b57-b289-f6866af18618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0954b3-3e72-4003-9f1d-c7035231b6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eca2b40-d5de-44dd-9c87-ff320542a1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b96a03-2069-475f-9641-919e90f3c361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044f7c02-9ef8-413f-bcff-b9729edce1f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01967847-bc17-4cf2-8488-3439f1e7d6b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37eb74a0-fe20-444a-b0dc-f58cdc37c195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccf50fd-f5f9-4013-8a6e-a32e6fbba98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e369783-1df0-4888-8aeb-0e8fa168b75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee82ca20-d0a4-4da2-a660-b7f2474324c9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9915ec8-6976-4d25-8f7f-5f81cbd5512a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a964797-a08b-4a3b-8194-d87ecfae8043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03988442-aaaf-4f13-95f7-063166845f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d9934f-1a1c-4273-a0e5-a3e6f5dbcf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e168bc-b989-4165-a12c-78ffadd3565a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa7a9fc-e198-4fad-8ab3-407c3336ebf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815873aa-d110-4978-bef2-1b6d6d4529d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c476592-7dad-4457-b03d-7ae50678c3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6506fef5-d42e-41cf-8e2a-4bc91e648a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9afe9ca-6704-4214-bcb3-765f8894e05e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb992c-4f48-4797-b564-cbb2a23875a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620aecb2-f702-41ce-8dd5-b3ad3aef3bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd90d534-a456-4755-b153-268aa2883868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ba0502-3bd9-4e01-905f-1f68494223d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e3107c-a4fb-484e-8c16-63cea736685e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e1fe7c-5391-4f52-a200-ebaf36be485e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75809135-3314-4036-a82a-530e552dc78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2408fd0e-22fe-45f7-8819-8e38a85ded5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7139151c-73d1-430a-8f5a-4395ec900a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c78caa2-3a08-4bd5-ba99-c7be68c4144b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b678bb1f-6ce5-4627-905e-e227c2b8601d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e69b3fbd-fbd6-46c4-a9a3-f291e9d6b53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82be43e8-b731-4a1c-b272-e2fedc3c2819",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d19b6b-0095-42ee-8674-4bd3b7bd58ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69943d9e-bb5c-4d2a-9154-cfa667d30fe6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea72ff4-1d70-4e8d-8ebb-356cdb3006cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf706302-3b31-4c41-92a5-7fae1019cf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793f96c3-dbb2-4782-8f0c-8a507316d767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e13f4f-465e-4b16-a388-262bbd4d05b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e84bcb-72ef-407e-8318-8a5d656fb8de",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7459ff81-decd-4f39-aaf1-3720fded27de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0077b3d1-b455-4d7d-ad11-6b71fd523f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc05dd6d-35eb-4f77-aceb-ddb5b35963d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4435be18-2c38-4f01-a00d-1be51cae64b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499274ec-4ff8-4a23-936a-45f7c5f8971d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001ba470-1302-4593-977b-aab70c712fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ed6595-8f84-4472-9052-ceca0340a11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d1db0d-8d78-4297-8762-8dfbf96608f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5e7d5e-8cd3-49f1-aaf2-75cba5b22c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c389d7e-2f31-4929-bcba-386b650c83a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8c263b-8744-45c2-88e5-c9a9005689be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f4afc1-9e96-4c9c-9c53-7321dea565d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcb7227-3a03-4a5c-aaea-40ed65488971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7695dd-1dc1-4e93-983f-1da246d09070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbaf531-6458-41e2-b468-9392cd81653b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc593e-e24b-4b01-a906-88d34c3d03e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c76d316c-7c95-4143-86a1-cc85deae5410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e010b8f-6249-4edc-891d-e43d9814083b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de29f29-d847-4162-9dab-61890983f7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37af0156-c660-40ea-8fcf-3cba7ffe43c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1176b8f4-d108-46a8-922c-dc8f2314bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef14acce-25db-45ca-8cff-cda349d4dcd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147248e2-c533-45c1-974a-9b7fbfc2ef4f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27006761-9628-48d6-8693-b3c615eedc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492cb8b3-c060-436c-9c6d-5b129e11996e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde38a51-7164-4c28-8fb1-403c88693dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0095164a-4c53-470e-b412-ac9e91c6519a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea170144-3824-40b7-b886-216dae372797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48585063-7959-4f1d-b5e8-84a0d385f249"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34ba4042-a458-49ea-8a07-73ea70f8590a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dfc3469-4538-42f4-b608-e4ff9b0194fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1667290-b1b6-4b3f-8c68-be03820a55d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf397dde-7b92-4d70-9402-1689e0f512fd"
                    }
                  }
                ]
              },
              {
                "id": "5b90b121-f814-4a0f-a29f-18f44533fbb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "234d06c9-5071-4a8b-9cc9-89d0ac42010a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4caa4ee-d7d7-4773-82ba-2f7463b69614",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ea45f295-d259-4c7e-8d5d-8c9b50f33a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cfa97d-39fd-4261-93a0-1865f3824b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2df1846-3dc8-4486-849c-ba034b47f363"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63fc9752-ea10-4f83-b5df-a6f1b1f84ce0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e4187cf-6ef2-4778-aeaa-418d05aa7f63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47b7c04f-b1fe-4960-beb9-6e94fa5f4356",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5ff2a5b-47ef-4f02-8740-32eb6fd212ca"
                    }
                  }
                ]
              },
              {
                "id": "ff4dcb81-4230-49b6-841f-fc9e3dd6f9bd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c59c43df-026c-4908-85e8-5bd7d1dc3fee",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd442f99-b970-4a19-bb3f-12a1b0f5ac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "207fb6a1-3730-4886-ba7e-878948886233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357b9f84-bfc6-4f30-a2ff-596472a31dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1462721-9f95-4e93-9d60-a449c9fec596"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "53f8bdc4-54e2-48e8-b22b-d1f4ac5c5f93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bccc7b68-c4a5-43eb-871e-5ec873210388",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db7e4ac-c074-4f05-a3cd-7bdf6c25600a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "11a21984-dfb3-4646-b712-51e91825c1a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85678ea6-05a8-4d26-affd-6dfd1d09d808",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f24f9d35-29d8-4801-a7bc-5f69bbc1aac2"
                    }
                  }
                ]
              },
              {
                "id": "ee638a9a-1068-4082-8bfd-3843331f4ccc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d142ba45-318a-4af4-b061-769380899f5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0969da7d-05d0-4741-afd2-e4193eff6aa5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f80745e-cf7c-4211-95c8-e4d90631c4fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d710f57e-6ec9-402a-a68b-3e24421362c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64e2fd09-1c43-4804-b141-91bd068683cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "03c4e928-5b17-4499-9b45-218cd8ea5f03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1bf60e1-c167-44e1-9ff7-adc5bc9ebd9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c502576-edbf-43bd-9265-2970ebebcdfc"
            }
          }
        ]
      },
      {
        "id": "e65845e3-e52b-4612-9325-31281029100e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aa99a39a-8841-4366-b05e-6db3963f15df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3200e3d4-c676-43fa-8d02-848acea1f57e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77b216dd-a185-49d2-9b3d-440ba1bdf4e0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f72ae7f-6c68-4c3a-8f88-696853b61bfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5f0faa37-25e5-4eb2-869e-110143457882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422dca28-c8af-4a87-aeab-7b3b9721b6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35196f5e-5612-4abf-88de-117cd506397d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e06e1531-11fa-4853-ac41-7c54813b3170",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0806567b-b6e0-476f-b14b-d45e70d07fae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f181ca1e-28e6-4d84-a71a-8ebe7f453de9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97017210-b23d-451a-85ec-2b2b5da6181b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bca3a11b-ca3d-4437-a958-f85f07acb5f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9225bb5a-fdbc-4ffd-8881-25169e048aad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4b5d6a5-f2d4-4ab0-8aa8-740d06f24eca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8be9a5fe-442d-46e9-aaa4-98bb23c8350c"
            }
          }
        ]
      },
      {
        "id": "82dac809-a9dc-4678-9838-80e35c1ce146",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "999b0c5c-b713-4816-8054-a20e7eb1a9c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "577d2340-3741-450a-b6d7-8801ef6dc9a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88bbc669-7c68-4083-8854-33c133d0a29c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8926186e-1ccd-4c93-9683-ee23881e2bea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad8309dd-f5c4-4682-81c2-0b31fb169622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407629d1-003a-4a6a-bc05-c2c7f558a897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64d283c4-68ba-458c-acb5-2c114a45eed1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5b72b35-d38f-4f25-891b-2473ba71a774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc2364ba-7c3c-4f80-a925-c62859aabc89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e0a5f25-3caa-4f4e-8f0f-894e5661276d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "056d6400-728b-4e0c-bb0f-d903b2460c4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1a76cfa-e094-49f3-9abc-2222dd534ec7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbd91b74-568b-4e41-979a-f2f7404aab10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7c0ccf8-4d58-4cef-a8cc-9e403d7b7afa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cc8b5c4-3ee4-42ee-8dfc-d605eadc1551"
            }
          }
        ]
      },
      {
        "id": "8804f1d4-2073-44ae-b0fe-11b86750c814",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "734a1ad1-3dcf-4e60-a66a-3d784d1d748c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0f85fb4-d210-4f69-adf4-87ab1682fad6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4987cf8f-9d01-48df-8b85-2d89c1ba7e38",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aff370d-ac1b-442c-b44b-dce03761d726",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "650bf160-6b37-4c6b-acd9-24775015a0e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ddcbc9-d46a-4ed8-8e58-d4143e299331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4300cafc-963f-48cb-89ee-7bb46265d7d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a375ab60-5d22-4d37-86b4-c782bfd6d965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa1070f2-3176-4fa2-9081-436dd7359c1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bca19e1-aa4d-4d37-ae4f-d031bdab31b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bec715c7-901e-4e24-aeab-146983274cb3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eded5c1c-26e6-4897-b970-c4666483917a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79149b8c-3797-48df-b7e6-e8b28804b1d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "785db89b-6e99-4e7c-9cb3-528c5104f2c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0054dc79-862c-4417-89df-21821908e8ef"
            }
          }
        ]
      },
      {
        "id": "fe38114c-8af0-46d3-99b3-a464cba8d771",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "184eed82-c83a-4157-bc10-6c376eeb27a6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdde632f-3d43-45a1-9c53-124fabba8f8d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e8135f4c-dfda-445e-b7e1-8fd291247899",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "356af880-829a-4de0-b404-462567f9f90d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50daa68a-ce8f-40bd-af64-ecfe9aaa1200",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.394366197183102,
      "responseMin": 3,
      "responseMax": 252,
      "responseSd": 22.317635844074417,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687654321517,
      "completed": 1687654335283
    },
    "executions": [
      {
        "id": "ed177649-5a41-45cf-aa00-3367220c4c55",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a338f4ac-84a8-4c94-b36f-4cd5e34d1d2b",
          "httpRequestId": "8f951db7-3fb2-429f-8409-b263cf51ae96"
        },
        "item": {
          "id": "ed177649-5a41-45cf-aa00-3367220c4c55",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fad51f97-c6de-4be2-85a2-a91a4f9442f0",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "0dbf606d-aac2-4920-80a2-71b8b4bb268b",
        "cursor": {
          "ref": "6bbdbed4-6662-4fe0-a3ee-3d521647655f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2370ea5f-5bc2-416c-b3c8-0c16d593d82d"
        },
        "item": {
          "id": "0dbf606d-aac2-4920-80a2-71b8b4bb268b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2e03d3e5-25df-481c-9bc8-7747e3defb4d",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "6649e70e-c1b9-4f50-853f-63dfda415447",
        "cursor": {
          "ref": "bfeb83d3-7f85-4d34-8159-611167109086",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a6dd464b-daff-480a-986f-a9c044e845f1"
        },
        "item": {
          "id": "6649e70e-c1b9-4f50-853f-63dfda415447",
          "name": "did_json"
        },
        "response": {
          "id": "59dc0ed6-d45e-465c-a069-5c9adae2d1ff",
          "status": "OK",
          "code": 200,
          "responseTime": 151,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87027715-a1cb-4c35-bacc-7e7e61c87940",
        "cursor": {
          "ref": "483d5c57-521e-4be4-a836-f51df7ec2851",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc9ff93b-f310-4d1b-8370-19114572250d"
        },
        "item": {
          "id": "87027715-a1cb-4c35-bacc-7e7e61c87940",
          "name": "did:invalid"
        },
        "response": {
          "id": "962b908d-3683-43e5-a126-c4368224ab21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87027715-a1cb-4c35-bacc-7e7e61c87940",
        "cursor": {
          "ref": "483d5c57-521e-4be4-a836-f51df7ec2851",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc9ff93b-f310-4d1b-8370-19114572250d"
        },
        "item": {
          "id": "87027715-a1cb-4c35-bacc-7e7e61c87940",
          "name": "did:invalid"
        },
        "response": {
          "id": "962b908d-3683-43e5-a126-c4368224ab21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9548890-574f-4531-b9ef-453d6fd20c22",
        "cursor": {
          "ref": "3e2ad0ed-d739-46f6-b609-f9c11148b2d4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "609c6a80-f82c-4396-b07e-24f7fa555222"
        },
        "item": {
          "id": "a9548890-574f-4531-b9ef-453d6fd20c22",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "43cf8ce4-eec0-41a7-9fdc-4f84252c83e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35e9d7c-aee0-4fc7-bea7-f5820f493828",
        "cursor": {
          "ref": "39144735-e527-4757-8e10-19fa0bdb3b97",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0893b96f-54f6-4d44-9636-3a36bf046b59"
        },
        "item": {
          "id": "e35e9d7c-aee0-4fc7-bea7-f5820f493828",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "68f0f51f-38a1-43fb-9b25-67e6dbb9f0ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7505f52-424c-4565-9b69-e392b11a7bd0",
        "cursor": {
          "ref": "c8fdf18d-0005-4387-9ced-d17643a5c46b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7b68f07b-fb6c-4121-bd33-beabecc19883"
        },
        "item": {
          "id": "b7505f52-424c-4565-9b69-e392b11a7bd0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca16e3d9-9c4b-49f4-b29e-80104e2199f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db80732-6655-427c-9533-1336f4b7befb",
        "cursor": {
          "ref": "ec27f3bc-5306-4cd8-a13c-edfccd961c52",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1f097961-ab34-4660-b807-f5868d814601"
        },
        "item": {
          "id": "5db80732-6655-427c-9533-1336f4b7befb",
          "name": "identifiers"
        },
        "response": {
          "id": "b27c6b3b-8400-4966-998d-afcba83690bf",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d68b812-7963-472f-a121-163f6ed83cc6",
        "cursor": {
          "ref": "f4d41fe0-5f6a-4471-b677-4a037cedca9e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "784332a6-d00f-4e2a-adc9-30dd6e10a7cc"
        },
        "item": {
          "id": "8d68b812-7963-472f-a121-163f6ed83cc6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fcd512dc-e72a-4f58-8532-82b6fcd251e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8951416e-ea56-4c67-997b-7c1944888be8",
        "cursor": {
          "ref": "c55a80f2-b974-48e9-b1ca-ecdea0c89d31",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9faf4856-92e3-42b0-8b76-ce7e76920c62"
        },
        "item": {
          "id": "8951416e-ea56-4c67-997b-7c1944888be8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9d4f8d26-e1c0-4e95-ae3b-d01d5e44cd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc008480-28fd-4004-be1a-ea8cb5712220",
        "cursor": {
          "ref": "ac53f6be-f885-4af8-86cd-791d02b5453d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "59c90a19-5316-4a2a-aaec-93785ea7d1d0"
        },
        "item": {
          "id": "fc008480-28fd-4004-be1a-ea8cb5712220",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b7a3d614-83a3-4abc-9fef-50ffe47315ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec60593d-1a2f-4d6b-be8e-6c374911cf6b",
        "cursor": {
          "ref": "39e1d70b-1a29-4493-8cf9-b4c6f0745cdc",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8f13f284-0e00-44f7-8a9c-e05b08ff1c93"
        },
        "item": {
          "id": "ec60593d-1a2f-4d6b-be8e-6c374911cf6b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "23b9a683-46df-4a89-a4c4-3f7893223de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf15783d-a987-416d-befe-36f95d4d9bb7",
        "cursor": {
          "ref": "0796e497-0862-41e3-84c2-be8f085c18bc",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a6555e0c-1fca-4108-b8a1-7dd8f03ec8c0"
        },
        "item": {
          "id": "cf15783d-a987-416d-befe-36f95d4d9bb7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "736eb0b8-9a2c-4a7f-9332-fd7997c49a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2d1615-091d-4cc1-8b94-74863821c572",
        "cursor": {
          "ref": "abe62159-7bb0-475e-b96e-2674f06527d9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b5f82baf-b32d-482d-8c72-15a8704691c2"
        },
        "item": {
          "id": "7c2d1615-091d-4cc1-8b94-74863821c572",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "899c786b-241b-4fa0-87d3-448306267401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312398ca-0ddd-41fa-8163-dad8a97b5483",
        "cursor": {
          "ref": "6627c654-c19a-4095-94e8-884fe7e39c74",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "502e5ef2-96cf-4961-ae14-bfc5acb9c61f"
        },
        "item": {
          "id": "312398ca-0ddd-41fa-8163-dad8a97b5483",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "564fc379-37d1-4e9c-9183-be4f0386c14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365847fa-077c-42da-baa2-8637ca69e1aa",
        "cursor": {
          "ref": "5873b4a7-62e6-4a2a-8970-9b8f8e0e6b99",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b81f4c73-6f25-4d51-a9a3-aba53ea924ab"
        },
        "item": {
          "id": "365847fa-077c-42da-baa2-8637ca69e1aa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6d8f6182-e4b5-41f8-8b58-16503419dd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbfdc98-18d4-424d-be1f-e34d3246bf5b",
        "cursor": {
          "ref": "f065ee1b-5c1d-45f3-83e6-8429c2d01b63",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b5a2c8c8-0c55-4812-9535-4d4f5b0edc56"
        },
        "item": {
          "id": "3fbfdc98-18d4-424d-be1f-e34d3246bf5b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7084f95d-388e-4ec9-85a4-85556212e57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77da018c-da2d-40f6-917c-9c12dafde647",
        "cursor": {
          "ref": "486ed7d7-e7e9-4c7f-b423-0269d68ea145",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f361eb36-f56b-48a1-8a4a-af9d7b890d00"
        },
        "item": {
          "id": "77da018c-da2d-40f6-917c-9c12dafde647",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "385fd727-1dbf-4d24-b8a2-be5aa43a4b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c808e5ac-4d5b-44d5-924a-bf8a4b40c648",
        "cursor": {
          "ref": "fcfc073e-4213-440f-b58e-259807cd18b8",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "698ae7e6-3ea9-4a10-a386-4a742bf13e7b"
        },
        "item": {
          "id": "c808e5ac-4d5b-44d5-924a-bf8a4b40c648",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f43e9358-c29f-4961-9500-b7f0b009206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a0cf78-93be-418f-896e-26c9bc8a5cac",
        "cursor": {
          "ref": "03dc476a-6414-4cca-a1bb-80917fcba37e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "75f0f9ee-491a-4773-8231-4f5b8104b66a"
        },
        "item": {
          "id": "e7a0cf78-93be-418f-896e-26c9bc8a5cac",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b98f71e6-904f-4e2f-9851-9236d747fe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894abddc-d41f-4ff5-aec8-ce817daea5e4",
        "cursor": {
          "ref": "4c49f9ab-d17b-4c64-8bde-1fa897d33953",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c6fbd78e-e260-4a7d-8da0-65f0c069e3e5"
        },
        "item": {
          "id": "894abddc-d41f-4ff5-aec8-ce817daea5e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7d325216-01c8-42f8-809e-99e0dc1223f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fae49e-1699-4a4e-8f8e-00bc97e1bee3",
        "cursor": {
          "ref": "0b7473b9-cf51-42c2-a9a5-7a53de2dd71e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8430c9a2-0c09-4247-85c0-98e078aa460d"
        },
        "item": {
          "id": "72fae49e-1699-4a4e-8f8e-00bc97e1bee3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "004ad3c1-7d5e-403e-9739-4302622f86e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b2d591-a2ee-4ac0-b984-ba90d873274e",
        "cursor": {
          "ref": "81fb24ae-e45a-45aa-8169-ab1eb8619de2",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a55f200c-7744-479b-ad16-ad6bc25c8b0c"
        },
        "item": {
          "id": "e1b2d591-a2ee-4ac0-b984-ba90d873274e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1834f40d-9166-4214-95ec-ec47e0860766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d4c1d4-e4f6-47d3-b8b3-b2853b8a5a03",
        "cursor": {
          "ref": "5e31ae94-f3b9-425c-8775-7dc3bca85731",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "61c91b7e-2927-4d66-be16-c179363e630b"
        },
        "item": {
          "id": "11d4c1d4-e4f6-47d3-b8b3-b2853b8a5a03",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cf382d06-357e-4d6a-a47d-06d9a09b0029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e90595-8dde-4a9a-922b-32357e0e7de9",
        "cursor": {
          "ref": "874407f9-6433-4633-b2a0-196f52d5a887",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "17cd99cf-3ad7-41a1-afe3-1daa241468a6"
        },
        "item": {
          "id": "02e90595-8dde-4a9a-922b-32357e0e7de9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "74d9cc61-8eeb-42b3-9d2f-505c15c3b5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211e0457-f3af-4633-a557-d387b4756ce0",
        "cursor": {
          "ref": "5a7e204b-8f34-47b8-91c3-2b67c907b830",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "985a6174-3e45-4d6f-bb0d-a7ce9014fd16"
        },
        "item": {
          "id": "211e0457-f3af-4633-a557-d387b4756ce0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4440e207-0746-4a95-86ef-894a4404d793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78999310-9e7d-40bc-aad4-d6ad5ae87299",
        "cursor": {
          "ref": "879e1c1f-06ea-4a99-aefa-481b630ad93a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9af83df9-ce32-4b10-905b-8a8676cd2a40"
        },
        "item": {
          "id": "78999310-9e7d-40bc-aad4-d6ad5ae87299",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fe85a185-5681-4ac7-8277-c4492c0c5a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043d1389-3b83-473c-9c99-ad697d7fd458",
        "cursor": {
          "ref": "646acd3e-a6fc-41d5-9f6e-18bde6d49c81",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a6d3b40f-6a9c-4792-b444-ca8ea3eb3259"
        },
        "item": {
          "id": "043d1389-3b83-473c-9c99-ad697d7fd458",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9884151d-3008-47d1-bb1e-661d1b4e6ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6101c4-5cf2-4d07-925d-a1a3a6d54b13",
        "cursor": {
          "ref": "aacd480e-cd36-4a92-ae06-c58e679968aa",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "906e3c4c-29ac-4ad2-bca9-a1a5fa4652f5"
        },
        "item": {
          "id": "1a6101c4-5cf2-4d07-925d-a1a3a6d54b13",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "61e88b99-7fad-446e-94ec-d11e0630c65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbc1fdc-8be1-466f-9109-32e626e688fc",
        "cursor": {
          "ref": "dda5d3f9-4f89-4cc6-8383-c1f1bb18bcbb",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8de623da-d923-480d-87ba-d57217c11638"
        },
        "item": {
          "id": "afbc1fdc-8be1-466f-9109-32e626e688fc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "97094159-4f24-48b0-a11c-78224abdb1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4c05e3-9738-4cb0-9c3f-52e36e46a237",
        "cursor": {
          "ref": "936e572e-deae-4565-8d67-95259152d512",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "05543521-8426-44fc-865c-54315cdfb7ec"
        },
        "item": {
          "id": "cf4c05e3-9738-4cb0-9c3f-52e36e46a237",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f381a59f-9563-4133-ac77-7540b03cce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e409f0fe-2c00-4d74-beab-a989ffa86915",
        "cursor": {
          "ref": "7b748c58-edb3-4f59-be46-ed834bd609d3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "030a54a3-2bba-4cb1-af9f-a0adceda0dad"
        },
        "item": {
          "id": "e409f0fe-2c00-4d74-beab-a989ffa86915",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa0f5971-c8d4-45b9-aea7-f72b555f41f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24cfbe5-7549-4bc2-9695-9063fe385881",
        "cursor": {
          "ref": "c7c3b3a2-b6c7-4b57-953f-d4e9f4e277ae",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3151a71a-b508-4b60-8eb8-b0cb702adcd0"
        },
        "item": {
          "id": "d24cfbe5-7549-4bc2-9695-9063fe385881",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8b848879-375d-488f-9e15-538c9cb5e5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10437f79-54f7-4996-a8fc-326f9e7f57f7",
        "cursor": {
          "ref": "c1c5bcda-be8b-4874-bd02-1808f804aeb4",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5c2b597d-3eff-4201-9b81-066cd112a151"
        },
        "item": {
          "id": "10437f79-54f7-4996-a8fc-326f9e7f57f7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5d65bac2-78d1-449d-b007-f7ea4aeb0cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fa44ee-0445-4498-9e31-a4577eb4a775",
        "cursor": {
          "ref": "d3b51f41-171e-47a5-96bc-367f2e5d903b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2903496d-0a1f-45dc-9801-acf2741d8091"
        },
        "item": {
          "id": "20fa44ee-0445-4498-9e31-a4577eb4a775",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "459a814c-6ead-4149-98f1-43554dc33450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319a1021-dd28-4674-a546-180aa25f6583",
        "cursor": {
          "ref": "6343f5c0-8224-47cd-ba18-01cf3febcdbc",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8627f00e-8e9e-4e00-b851-59b6a1f7162e"
        },
        "item": {
          "id": "319a1021-dd28-4674-a546-180aa25f6583",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "af6af84c-4cf2-4ad3-a64d-fac51b3b2582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7e8047-d1a6-4d18-998f-8c50c68aa986",
        "cursor": {
          "ref": "d9a96815-0c5d-437f-a482-46676c6cf730",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "72815747-5bfb-45a0-9741-bb139a08eb50"
        },
        "item": {
          "id": "4c7e8047-d1a6-4d18-998f-8c50c68aa986",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "44af8b62-1c89-437a-82ef-fd4bf4b2f37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5dcc32-2e28-44ea-908c-123ab9c4613a",
        "cursor": {
          "ref": "83ed7578-1ede-4509-a3e1-1aed9828dbfb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4f29e18a-2177-46a3-beb4-9521f7959bd6"
        },
        "item": {
          "id": "6d5dcc32-2e28-44ea-908c-123ab9c4613a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5f1b7aba-4714-47c1-bb77-006f8de74c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c253cf6d-64a4-467e-9b76-163eab3d0780",
        "cursor": {
          "ref": "1ec872ff-8004-42bf-9927-47b2e3ed4032",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c7865a58-7f7a-4ffb-80a0-9aee5c1d3ab8"
        },
        "item": {
          "id": "c253cf6d-64a4-467e-9b76-163eab3d0780",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c836843-2457-4892-ae43-9e5d7bef36a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83db355-9b2d-4c5f-902a-f733a10960a6",
        "cursor": {
          "ref": "ba4a28b2-3d4e-477b-835c-7da5a4271cf8",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dd725fc9-8f6e-4df5-bce2-476135822d4c"
        },
        "item": {
          "id": "d83db355-9b2d-4c5f-902a-f733a10960a6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b06f8854-424d-4dc3-b82c-61ef967e06fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc77b0a3-605a-4640-9150-9e34b50aec34",
        "cursor": {
          "ref": "7cc7d6a5-1ec5-4223-ad35-07e68d4d6805",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2945600b-65ec-4877-b0df-d605a5420397"
        },
        "item": {
          "id": "dc77b0a3-605a-4640-9150-9e34b50aec34",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9eb4c636-b99a-42e0-8212-ee3bf51a7cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c34140-a659-42c0-a65c-37730c9eb8ed",
        "cursor": {
          "ref": "aa37aa1b-d7bf-471b-9c16-b90c5f8571f7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "990fff27-be01-4243-9184-9b7394b8a4dc"
        },
        "item": {
          "id": "87c34140-a659-42c0-a65c-37730c9eb8ed",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e48bc924-072a-4f23-a5ec-5ebeb147132d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334e7f44-5d7a-4e74-9f1f-f8ed4767f49f",
        "cursor": {
          "ref": "d0acd6f5-d981-4958-8cc5-62dd72f3e0a4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "648a6eb2-d4d9-484e-969f-bcfb2d316f7e"
        },
        "item": {
          "id": "334e7f44-5d7a-4e74-9f1f-f8ed4767f49f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f85b92c6-7ec2-440f-ae4f-6fd9e112342b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f29fcb8-8ff0-4af0-961e-d5e31229ca4e",
        "cursor": {
          "ref": "d011e11b-ad40-4609-ad2b-222ba7221072",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bcae0faa-169a-4760-9778-d38699f6ec07"
        },
        "item": {
          "id": "1f29fcb8-8ff0-4af0-961e-d5e31229ca4e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dbc7f4ab-b6f2-44bd-b341-8530b81ab419",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb41a70-16fc-4a4c-8f40-3d5d0028c802",
        "cursor": {
          "ref": "48bfc15b-97c4-4403-8ef1-8deadd3fa449",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "beec7391-6a56-4e3b-b521-0f8c184cfd15"
        },
        "item": {
          "id": "5eb41a70-16fc-4a4c-8f40-3d5d0028c802",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "926f21a0-4c4a-44a7-8ace-0dcc034c0ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce585f9e-d559-45f2-9bff-92fefe03c343",
        "cursor": {
          "ref": "e10ed63a-5a07-49ad-91e5-218dfce54595",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0dd54431-535b-489f-ac92-93a8b0c1051f"
        },
        "item": {
          "id": "ce585f9e-d559-45f2-9bff-92fefe03c343",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ce220370-4060-4cc8-a0a4-e307a2c401c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b932887c-069e-4c1f-898b-4003b47f42a4",
        "cursor": {
          "ref": "9c073d42-04d1-4dbd-9119-1ed33e50bdc3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "634adfd1-f7f9-4f50-9975-3f83ff787bbd"
        },
        "item": {
          "id": "b932887c-069e-4c1f-898b-4003b47f42a4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ff3c0bab-3e32-41b7-ba4a-c83425e16e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b233d33-d8ad-4f95-84c3-d50f90297255",
        "cursor": {
          "ref": "e8908e1d-04ce-473d-a3af-fe2c7b5c9070",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2617421a-a0a2-484c-8ced-99d4708490bd"
        },
        "item": {
          "id": "8b233d33-d8ad-4f95-84c3-d50f90297255",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c789b93b-995d-4cde-9429-8f2378a5bf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040adb17-5b23-4d2a-988d-7ae30edc0dc1",
        "cursor": {
          "ref": "ff18e78a-9384-4ebf-89a3-240ecebf13da",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3cd90136-6c7a-4ce3-a098-a4a21c8c93a4"
        },
        "item": {
          "id": "040adb17-5b23-4d2a-988d-7ae30edc0dc1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1ade0802-501d-466c-892f-9e9b59fa8b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531165db-fb9b-4fa6-99c8-529337ef93ec",
        "cursor": {
          "ref": "3dfc811e-6c6d-4aa1-bdf5-1fa1e0a323af",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "94703a38-a7df-40c9-8294-474ae086bde9"
        },
        "item": {
          "id": "531165db-fb9b-4fa6-99c8-529337ef93ec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e6864a4a-7b4e-4b18-95d8-1f72628fd12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2087422-dc6f-4bfd-8b8e-f247268a1926",
        "cursor": {
          "ref": "24154e69-ac4e-4684-8a63-b1a88c061ea3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e78e44fe-43a7-4904-b9eb-b59181a6117e"
        },
        "item": {
          "id": "c2087422-dc6f-4bfd-8b8e-f247268a1926",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9fbf8b59-13e3-4091-ae93-2fdbf07194c9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b29cd65-b927-4c8c-8520-8caee6862284",
        "cursor": {
          "ref": "384b5c3b-fa03-43a9-8223-900a971157d3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "de2d17ef-7709-4ec1-ae4d-2629846910ed"
        },
        "item": {
          "id": "3b29cd65-b927-4c8c-8520-8caee6862284",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7729ee4e-1db6-4d1d-b940-c78f04b6f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ce01c0-97c4-42e8-a5e9-f1eac63fd0f6",
        "cursor": {
          "ref": "8e429edb-8615-40f1-8924-377a34d8aa90",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "efd64f64-fd8d-44b7-9762-dfee4a28d7cf"
        },
        "item": {
          "id": "66ce01c0-97c4-42e8-a5e9-f1eac63fd0f6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f6c60925-1760-4b7f-9ae8-42a52131c9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2af0df5-801b-489d-bbea-2509444a7439",
        "cursor": {
          "ref": "256c3488-89f8-42b1-be63-aa25a85efc34",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "de450906-b00c-4d3a-abe7-2a25438670af"
        },
        "item": {
          "id": "f2af0df5-801b-489d-bbea-2509444a7439",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "66c89234-e7a2-4d2d-82f6-b07f5d42ba22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff099cc-b795-44aa-a770-1625eb13f227",
        "cursor": {
          "ref": "f6e30a91-dbd0-4f8b-84e0-fc687eb31c12",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "be025450-579d-41bc-8dbf-b00fbd522b2f"
        },
        "item": {
          "id": "cff099cc-b795-44aa-a770-1625eb13f227",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fb811476-97c2-48e6-b81b-59b971bf4bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8696a35f-469a-46d0-896b-97d08dbe5f6d",
        "cursor": {
          "ref": "f6b3d8bf-4459-430e-8018-39fda62976fa",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8a379e3f-3a09-4c27-bcdd-fe4bd6772c95"
        },
        "item": {
          "id": "8696a35f-469a-46d0-896b-97d08dbe5f6d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3a032522-b2ba-4abe-8c2b-7ccd9af8ac8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6378f932-fed3-49fd-8318-8ad688d1d45c",
        "cursor": {
          "ref": "538ac9dd-6ee5-4d03-a307-d1e27702aad3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2bda1827-4cff-4426-a893-cae31696b4f3"
        },
        "item": {
          "id": "6378f932-fed3-49fd-8318-8ad688d1d45c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3921ba08-c781-4e70-91b2-4c64b472b6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2928b3-0b4f-47ff-bd81-a1ff3e129910",
        "cursor": {
          "ref": "0c74d3d2-40f1-49d0-b7d9-37a0bef73e90",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4a5ea5e4-3bd6-45df-99fb-7547cc2ef6c7"
        },
        "item": {
          "id": "ce2928b3-0b4f-47ff-bd81-a1ff3e129910",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c8993eff-cfee-430e-ad8b-52c444cbe48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feca004-6f90-42e3-b120-6342a4a3bc92",
        "cursor": {
          "ref": "934b61b4-7413-4789-b859-8e91537e70e9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c07a5948-8473-4c1b-8c95-8ea84edf3f21"
        },
        "item": {
          "id": "6feca004-6f90-42e3-b120-6342a4a3bc92",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a742602c-97d0-4d46-baa6-5764024958b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b40740-b08b-4710-addd-74be33996534",
        "cursor": {
          "ref": "fcf9d5e6-3a56-4d8c-ac61-86ff24d4a59a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a81087dd-3b20-478e-852b-c8913e610d9e"
        },
        "item": {
          "id": "59b40740-b08b-4710-addd-74be33996534",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c138047c-0a58-4633-bb4e-643e4e92b404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71553e05-ee61-4114-8321-e8e0b00f3be5",
        "cursor": {
          "ref": "0ebb98b7-867e-4649-abbc-7171b3a7c9c7",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "728d6c05-e023-4acb-8b65-4c46e1fb9d18"
        },
        "item": {
          "id": "71553e05-ee61-4114-8321-e8e0b00f3be5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9eaf72f9-d43f-4d66-b427-f78561ab8c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d5107c-6f94-4618-8462-a122f0edb162",
        "cursor": {
          "ref": "2b71d01c-dbc8-4e06-94f8-d2e939bfceaa",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e4dd06d8-2674-4c0d-9598-046f3fdeffb4"
        },
        "item": {
          "id": "96d5107c-6f94-4618-8462-a122f0edb162",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "35d525ea-085f-4ec9-a6ba-ecf592ae3e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d528da5-c400-480b-bbf5-8ff618e3a0c3",
        "cursor": {
          "ref": "c4d3ff5c-c2bd-4e69-9ab4-6254ab2b5600",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f152a7ed-e6bb-4133-af1c-8aadc9150e56"
        },
        "item": {
          "id": "9d528da5-c400-480b-bbf5-8ff618e3a0c3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a223dd69-2550-429e-a60e-a2b78b70d712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48693556-4345-47c0-904c-1f0fde58107c",
        "cursor": {
          "ref": "f65409ff-9809-459d-938c-598fd5aa9898",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "39054560-a88a-467d-a9c2-a816dad7e46c"
        },
        "item": {
          "id": "48693556-4345-47c0-904c-1f0fde58107c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fdba83fe-e4e3-4e0e-a9d5-3858023e4d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfdd58c-4b7d-4a2f-ba4b-ed86ebe2e1f1",
        "cursor": {
          "ref": "1bd67c09-5fbd-44f0-acd3-c94f55e21aa3",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5c60838d-04b1-4b7a-80ab-7dedccd0a949"
        },
        "item": {
          "id": "1cfdd58c-4b7d-4a2f-ba4b-ed86ebe2e1f1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1e46f6ae-e92f-4893-87d4-6b9950566108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01c36d9-85be-410c-9db0-947122da79d7",
        "cursor": {
          "ref": "4c464f08-fd3e-442f-b512-1390d1652082",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b0d74d2e-59be-4522-8380-910136e9edb8"
        },
        "item": {
          "id": "c01c36d9-85be-410c-9db0-947122da79d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "99c06d03-4a5e-48b9-bfac-2ffe5a40ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074d3db1-f0e2-45d2-8e87-1857e755ebc1",
        "cursor": {
          "ref": "d7e6ec9d-7490-48c2-beae-16bce708407b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2c6ae616-8e23-4178-90c4-686836332337"
        },
        "item": {
          "id": "074d3db1-f0e2-45d2-8e87-1857e755ebc1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "50644944-1d9b-4291-8143-1f228b15f873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da96092f-7fd0-4cef-adff-017f6106cd79",
        "cursor": {
          "ref": "4ae8f4db-38cd-4fda-86da-d9cfe34c19b2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "afccd1cf-afe4-4420-910d-37cce5690d20"
        },
        "item": {
          "id": "da96092f-7fd0-4cef-adff-017f6106cd79",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9d8960ca-dea5-45e8-b092-8ec6cd3af3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d837dfa9-7dcb-45f9-b428-ef97fa9ca2ff",
        "cursor": {
          "ref": "22bbff12-3a7f-460e-9d87-f944ecff90f7",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b3a5f163-6229-43ec-aab1-79373d770229"
        },
        "item": {
          "id": "d837dfa9-7dcb-45f9-b428-ef97fa9ca2ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "db30c4f7-d926-468b-a4d3-5d75ca660bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b47529-9aaa-4c6e-b257-d824ff281d2f",
        "cursor": {
          "ref": "abc82fd2-4a08-4855-abb7-36f6d9ec4e30",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d61569dd-dd10-4f4d-a85a-85e9db41a054"
        },
        "item": {
          "id": "d6b47529-9aaa-4c6e-b257-d824ff281d2f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "674a9e3f-1c0f-4cc4-b63f-17fe7c5f501e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808b00d5-5798-48f9-8913-4a80e4cabf4b",
        "cursor": {
          "ref": "18154f54-11b0-4d53-99c3-6848bf1bac7a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "79dda311-be3e-4213-a429-4407af45fc6b"
        },
        "item": {
          "id": "808b00d5-5798-48f9-8913-4a80e4cabf4b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0b01c886-6556-40f4-b182-98bf9d1203ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ddc830-7549-48f7-b58b-a5af35040bb6",
        "cursor": {
          "ref": "fcdffb3e-8d9e-4a00-95c6-d830da18ab7e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4d13327f-1a64-4880-ac26-6a3afc307ca4"
        },
        "item": {
          "id": "e1ddc830-7549-48f7-b58b-a5af35040bb6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be7e3d55-3f43-4ad7-a806-2ef6c3b252ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6e9d13-df62-497e-ab70-03858f2fd5d6",
        "cursor": {
          "ref": "b08e2569-7de5-4604-a91f-9553429b3e2d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f1e2c1a6-fcca-4f09-8387-09d5898a28d4"
        },
        "item": {
          "id": "5b6e9d13-df62-497e-ab70-03858f2fd5d6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bdd1c7b4-4ce6-4a01-a871-c3bd2a8a307e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca3cace-d599-4ba6-a1a1-d354d16ef5c4",
        "cursor": {
          "ref": "1f12971a-b1c6-43c4-8f3e-1a92c070d519",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0d458e7a-4b2f-43a7-8dae-9887bd56fd97"
        },
        "item": {
          "id": "0ca3cace-d599-4ba6-a1a1-d354d16ef5c4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "40e248d9-4aa9-4ae7-ba21-8762c1199734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b318ce-8069-4164-b54b-42afa1f199cf",
        "cursor": {
          "ref": "a091453f-9fe0-4faf-8862-27a82e186267",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e69ba43f-ec8d-42af-8be3-9e48540b2dc6"
        },
        "item": {
          "id": "e2b318ce-8069-4164-b54b-42afa1f199cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2f32e365-725f-4c05-818d-1c838864061d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee1cea9-c0e6-4c72-b96c-338c126b45a5",
        "cursor": {
          "ref": "6f52c833-3e77-4c2a-97f3-bb3daaf8ae86",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c86cc492-0bd4-4d06-8ec9-94aefc0c7b04"
        },
        "item": {
          "id": "eee1cea9-c0e6-4c72-b96c-338c126b45a5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "92f06e89-2b2e-4129-ad78-6c04fb4c84e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7335e-b5e6-42c1-87af-7f9c33bf85fa",
        "cursor": {
          "ref": "12ad9fd3-6d87-421d-9906-db941f3b21f4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "26266766-6c73-4e70-9092-9581a7ca18e1"
        },
        "item": {
          "id": "69e7335e-b5e6-42c1-87af-7f9c33bf85fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8201b901-e3a4-4009-8eea-d270d3b034d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6240b878-5683-4e14-816a-e6af465a5de9",
        "cursor": {
          "ref": "5a4783c1-17d3-41ab-8c60-85b4b86d4d87",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "50341e4c-0dac-47ef-aec4-e78a126d7c9b"
        },
        "item": {
          "id": "6240b878-5683-4e14-816a-e6af465a5de9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1b5a131b-ad67-44c5-bf4c-823e7edb85cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964efb43-6cec-4f7c-8a78-a854a491949c",
        "cursor": {
          "ref": "917be462-2c11-4a7a-b72f-7fdb2f5d1d5f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "674fffbb-7f26-40d5-9bb9-aa291efb39da"
        },
        "item": {
          "id": "964efb43-6cec-4f7c-8a78-a854a491949c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "26b63bba-ed84-4fa8-9ada-5853fc1500d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc7e78-0c17-4cb9-8eeb-6a369430050c",
        "cursor": {
          "ref": "f2048af9-5fe1-460f-9367-d9f70b799dfb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce35cd8f-1201-45ac-86ee-cde5c6d6be5c"
        },
        "item": {
          "id": "04cc7e78-0c17-4cb9-8eeb-6a369430050c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0acd7034-6332-4ba4-a6b6-7b746b3820aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bccdeaf-ebcf-4e5f-bc9a-2f6ba65eda90",
        "cursor": {
          "ref": "3a976a3e-3fd3-447f-a047-a5a596792e6f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e4641884-d383-4dc6-b3b3-3a814ac07f99"
        },
        "item": {
          "id": "8bccdeaf-ebcf-4e5f-bc9a-2f6ba65eda90",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aff7501e-4fff-43b0-863a-b2358c70f93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6351c3-b7d7-4d8a-a5a5-eb5b1c658e71",
        "cursor": {
          "ref": "fab2689e-4278-4d8d-a7bb-4a9352bdf4bd",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "66a0621e-e8c8-47fd-af15-b0f3c739a299"
        },
        "item": {
          "id": "dc6351c3-b7d7-4d8a-a5a5-eb5b1c658e71",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ff1a9640-2071-4074-a397-bab22b6293db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da2d762-ee71-4a0c-8206-55f6704ad149",
        "cursor": {
          "ref": "9ff978c2-8050-41aa-9964-9a6d4d628b07",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e2a0219a-360a-4b3f-9693-da5711874b4c"
        },
        "item": {
          "id": "2da2d762-ee71-4a0c-8206-55f6704ad149",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "29c3c928-fcc1-45e8-ab04-ff7ac1b346ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293178c6-f793-4034-b4da-d740bd3b341d",
        "cursor": {
          "ref": "8572cc91-4cc6-4704-8c35-64b4f65a3d4f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a0811a64-57d7-450e-9fd8-c98dedfa2686"
        },
        "item": {
          "id": "293178c6-f793-4034-b4da-d740bd3b341d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e08b2cef-961b-46b3-853e-24f7c713d098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2687f286-beaa-41ee-97f1-e76a5fff1301",
        "cursor": {
          "ref": "4adc8136-9c92-4a83-9085-48fc406a0724",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d7562eed-23d7-4dab-80b4-e661aea0fd5c"
        },
        "item": {
          "id": "2687f286-beaa-41ee-97f1-e76a5fff1301",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8acdf253-c8c9-49af-8735-c33c9664afcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f51481-cd2c-4bb6-b207-15c92cad740e",
        "cursor": {
          "ref": "fa8f397d-35bd-4a2c-ae21-2e2321e61414",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d21fb638-d8c4-485e-880e-db22c73fc69b"
        },
        "item": {
          "id": "d8f51481-cd2c-4bb6-b207-15c92cad740e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c6a2dc03-a3db-4419-979c-4553cc0eaae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d9e8d9-19ab-4787-a7e1-82a207923f8a",
        "cursor": {
          "ref": "d5842b7d-9444-48f0-bd7b-4efd2f681576",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "561b103b-bc99-432f-888a-0b78d440dc77"
        },
        "item": {
          "id": "63d9e8d9-19ab-4787-a7e1-82a207923f8a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b8dd4d76-f10f-4da1-a964-79ede0246094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961525b5-16c8-4c2a-b563-88626517a1b8",
        "cursor": {
          "ref": "b96eb297-6738-4978-8e29-ee963b3824f6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "724c271d-c24e-4b31-a370-0eb8c1b94736"
        },
        "item": {
          "id": "961525b5-16c8-4c2a-b563-88626517a1b8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f7a0832c-aec3-4b4c-a452-7560fb54277f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bcae9c-550b-4fc9-90c2-2deea40fdf33",
        "cursor": {
          "ref": "77b453df-39e6-4093-b335-3e200e0bfbe7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "65393f90-aedc-4d6f-ac97-d7646a69eda9"
        },
        "item": {
          "id": "98bcae9c-550b-4fc9-90c2-2deea40fdf33",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e9a19381-dc7f-42ca-af4c-9b93cd3eff01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a5d162-d9d2-40b1-9132-74868212b121",
        "cursor": {
          "ref": "aa59fce7-221f-437e-b3f8-c41ad2cf42b0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1892d553-385d-4f19-a615-8e187e8d42e1"
        },
        "item": {
          "id": "d9a5d162-d9d2-40b1-9132-74868212b121",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "848218d5-82a9-437a-b252-453a89b34fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701e072-7ca2-477b-9054-c0d34196fe7e",
        "cursor": {
          "ref": "152f4615-3673-4219-8970-100a75c559d6",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "62318e7a-bcc4-4233-9d84-6ce8ca5283f4"
        },
        "item": {
          "id": "0701e072-7ca2-477b-9054-c0d34196fe7e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2976812c-1531-4451-990b-6bc4045c8760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26acc853-d3fd-446a-8ae5-4c60a78d94bf",
        "cursor": {
          "ref": "72022364-85f7-4a5e-ac98-418812442193",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c5bfa866-4821-489d-bdc6-fd2383928d86"
        },
        "item": {
          "id": "26acc853-d3fd-446a-8ae5-4c60a78d94bf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "33b1424e-bcca-410d-8059-99962d25dabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee27f52b-db46-4aec-8dad-885d1190ea5c",
        "cursor": {
          "ref": "d0646d70-cc55-41d2-b9b0-284feb81c7e2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9e7b4f14-7883-4ddb-b559-ed86c64460e3"
        },
        "item": {
          "id": "ee27f52b-db46-4aec-8dad-885d1190ea5c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ad0b9be2-125c-483c-a7b7-38716cf6473e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7ec1b4-628c-4da5-95a8-7f5c189ec159",
        "cursor": {
          "ref": "d26f644b-feb2-4e16-aced-5057b26ae08e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ec5892b4-a326-4da7-86a3-a468a4fd0b76"
        },
        "item": {
          "id": "5d7ec1b4-628c-4da5-95a8-7f5c189ec159",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3f517746-3c7f-4797-b8b3-d9004140a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2360b1d2-59bb-41a0-92a6-52447d7779e3",
        "cursor": {
          "ref": "2cbeac16-dba4-4168-a9ba-fd8905d016a9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cc35e586-f5f0-47ba-beae-55d692aeeebf"
        },
        "item": {
          "id": "2360b1d2-59bb-41a0-92a6-52447d7779e3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bf674f0b-4d8c-4f31-8e34-18e03c3d8b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb81cc79-5d19-44b8-941e-d37d9a2f02ab",
        "cursor": {
          "ref": "3a615bc0-f731-4f6a-b944-629d390ac4e0",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "76d0aee7-689a-472d-8b24-4a53269cae1b"
        },
        "item": {
          "id": "eb81cc79-5d19-44b8-941e-d37d9a2f02ab",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6fca2c5e-2bde-48de-8b29-16f47c58718b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75e1c0a-494c-4de6-849a-807bc10b6abb",
        "cursor": {
          "ref": "9dcf4de5-dc75-4326-8f23-40c2d5bd7885",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "316dc9f4-d8e6-48da-8115-3a9fa499dcad"
        },
        "item": {
          "id": "f75e1c0a-494c-4de6-849a-807bc10b6abb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ad3ee2e6-fbb9-401e-bf31-5bac57d22193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52012b9f-872a-47bd-b96f-9f4d1e023647",
        "cursor": {
          "ref": "a837836b-172d-4b01-b5c6-119f0ae42646",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f4a4ad33-f9e2-427b-8aa6-0a96fae1f0c4"
        },
        "item": {
          "id": "52012b9f-872a-47bd-b96f-9f4d1e023647",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "24abaeeb-2b88-4f21-a50e-cffaf589b507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c982217-771a-40fd-ba0e-686b7e40fe74",
        "cursor": {
          "ref": "74127f1c-e80d-4b18-aba3-ec7163978ddf",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "20c02659-59f8-410e-acfe-ed9df5c9f938"
        },
        "item": {
          "id": "4c982217-771a-40fd-ba0e-686b7e40fe74",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "120a6ae2-8854-4f01-b6f0-ae3b9a79bd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f41792-918b-43ca-9e70-115974cfd981",
        "cursor": {
          "ref": "ee0fdd0f-0af3-4b39-b71a-68dea37983ad",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "314a80cd-ab19-484c-a648-a4e31bcef83b"
        },
        "item": {
          "id": "37f41792-918b-43ca-9e70-115974cfd981",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "78d38cc6-c4fc-4561-99de-67af4f9e1852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaf983f-1bd7-4bc1-a282-8023060ea987",
        "cursor": {
          "ref": "6fa18724-a5b7-4b35-8d23-7cc6ccb8e395",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bdbce07d-6921-4265-93b9-14edeb489317"
        },
        "item": {
          "id": "eeaf983f-1bd7-4bc1-a282-8023060ea987",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f26a1b78-2a00-45a0-8251-f26a684dbb26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b470fc-4ef9-4a32-87b8-bb309b382f31",
        "cursor": {
          "ref": "3a0e6ee4-b9e5-42c8-9b88-191574ad1d80",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "79051fd3-29e1-4c42-a93f-e537abd2bcf9"
        },
        "item": {
          "id": "29b470fc-4ef9-4a32-87b8-bb309b382f31",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7666f5f0-7683-4fbd-ad0f-5cbeb4c47836",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "138edffa-8625-4855-a57f-40e4527de84d",
        "cursor": {
          "ref": "c98073c9-367a-4ebf-b9b0-7f33ec967f12",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "750e97b4-a278-4c2e-9c9f-4031f487e57b"
        },
        "item": {
          "id": "138edffa-8625-4855-a57f-40e4527de84d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fae6959d-1210-405b-ba8a-86e80e1c21e5",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "213bf29b-1018-4196-a8d6-10629adb14f1",
        "cursor": {
          "ref": "91529f0e-185f-40f0-b000-11dcde90d350",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b921cb5b-c943-4267-a3d8-3619d360309a"
        },
        "item": {
          "id": "213bf29b-1018-4196-a8d6-10629adb14f1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c8e4a0b1-c7a4-4e04-8040-d93847c5349e",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac37cc8-cba5-4c14-abf7-58dfbfb99775",
        "cursor": {
          "ref": "becf0832-4666-4f87-9bb8-a6b2476a3480",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "66efe9eb-bf05-43de-9348-74da61a887c5"
        },
        "item": {
          "id": "2ac37cc8-cba5-4c14-abf7-58dfbfb99775",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8ceb584d-0c87-49c9-bc88-f89b0b7f5fc9",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cac991-5fa7-48ce-967a-edd72952a65a",
        "cursor": {
          "ref": "acceff0c-1101-42ae-a262-fd0c6225294e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a57223de-3241-4641-928d-eaa8947165ea"
        },
        "item": {
          "id": "01cac991-5fa7-48ce-967a-edd72952a65a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "52f54a77-8b80-474e-a8ce-8bf9f9e49051",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "821f730b-40ca-4a40-a158-3fe8f8c58e65",
        "cursor": {
          "ref": "5f8cfd02-249b-4b49-ac1c-42bd5231a5b2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29f40f93-2042-4dee-8dd8-2ceceaeed203"
        },
        "item": {
          "id": "821f730b-40ca-4a40-a158-3fe8f8c58e65",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "31cd9ebc-c3e4-4506-8148-f4f4dc69fb51",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15566d04-e954-4684-9bda-95541e5663e3",
        "cursor": {
          "ref": "bc6c9407-ddb3-421e-a194-24dca352aa70",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c609895e-eff1-48e3-bcac-dc08423c62b0"
        },
        "item": {
          "id": "15566d04-e954-4684-9bda-95541e5663e3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "27e6d569-a03b-4faa-a24a-fcec682acd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9deaa0a-aabc-44e5-9840-b0968ee0fdc5",
        "cursor": {
          "ref": "300e58cc-89b2-42dd-adae-fce294cbccbd",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "201a2cc8-de1f-4d0a-a0b9-f4666fd6b03f"
        },
        "item": {
          "id": "d9deaa0a-aabc-44e5-9840-b0968ee0fdc5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "484a1658-5009-4e9b-b50e-c8e974a70d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5d6127-f965-4829-af5b-a8117c4e60d7",
        "cursor": {
          "ref": "bc61d153-72bf-43b4-915b-12b3eb0071c0",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "89bf1792-091d-4c04-8d7f-859dcf210589"
        },
        "item": {
          "id": "5a5d6127-f965-4829-af5b-a8117c4e60d7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29fba1a2-e114-4c78-8f10-f7f47fc19e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e255a1-9362-4d7c-b859-ca124545dff9",
        "cursor": {
          "ref": "200e72f7-cb0d-4237-b94f-8f4412987f01",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0877d869-9eb7-4f6d-804b-6adda47603b5"
        },
        "item": {
          "id": "53e255a1-9362-4d7c-b859-ca124545dff9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73b25133-29f9-4007-9f37-15ecf6fb48ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9f8b3f-15d1-4093-892b-334abac6d050",
        "cursor": {
          "ref": "a438e44d-1c77-47ab-9da2-153fa5560efc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7b2dd4e0-3bd3-4fdf-b6dd-a74a2e114697"
        },
        "item": {
          "id": "ce9f8b3f-15d1-4093-892b-334abac6d050",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dbb2fc26-b271-45d7-93cd-526c20f91e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3cc623-753f-4700-a5ac-1abb707021cc",
        "cursor": {
          "ref": "5219a3b9-5ef1-42ad-9c49-a3213e5a23f7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7f57b731-2f97-4980-be84-aa9902a962f4"
        },
        "item": {
          "id": "df3cc623-753f-4700-a5ac-1abb707021cc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1a5a3114-9168-4fdd-bd60-4243974c0ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9591fa6-d5aa-4b30-b5bd-034d7a7efaaa",
        "cursor": {
          "ref": "48b7c926-f136-4a0e-87a7-40f762fad654",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "14a29fa9-51cb-47f8-8144-1abfe3f26351"
        },
        "item": {
          "id": "c9591fa6-d5aa-4b30-b5bd-034d7a7efaaa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d44afe9a-dd4b-4e6f-86a8-d74d2a0a1ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acdb573-98a0-459e-b046-1ab5879da04a",
        "cursor": {
          "ref": "969adca5-81f2-4fa8-bcf3-69a02f265205",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b61ffe02-95c8-4bc4-ad11-89b7374cc768"
        },
        "item": {
          "id": "6acdb573-98a0-459e-b046-1ab5879da04a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d75a865-e9fb-4ad0-b3ae-d7b542f36c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145b4be1-931c-49dd-9e59-df289143f5df",
        "cursor": {
          "ref": "f7ddf313-d08d-47c8-ac57-ab4207937f48",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c33f22e-7535-42e4-b1d5-73aa150bba92"
        },
        "item": {
          "id": "145b4be1-931c-49dd-9e59-df289143f5df",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66e5acf9-9c85-4c0c-b2d4-634b55c5f1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c48a351-235c-47d1-b38f-ba1aac949515",
        "cursor": {
          "ref": "9d1aa273-8f11-4470-91a2-6c9a5ef0cebd",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8ab22333-8a59-4933-8ba5-29d035aeba23"
        },
        "item": {
          "id": "4c48a351-235c-47d1-b38f-ba1aac949515",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97177fad-360d-4ce1-835a-99cf32e9df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d303db-f238-40f9-970c-da1031d4d792",
        "cursor": {
          "ref": "c259db17-820f-4633-b1a3-fb7ab0061e2e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0572ec5f-ae45-4d99-8742-abbad24f8c36"
        },
        "item": {
          "id": "f3d303db-f238-40f9-970c-da1031d4d792",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "804de67c-9892-4e37-a6f8-1476a8eaf43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759f172f-16e7-4b60-a047-9b84afe73c57",
        "cursor": {
          "ref": "b56b932b-0f99-49cb-9065-0dc6eb92ec52",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2dc85824-4de4-4b7c-9544-70660e31d8ae"
        },
        "item": {
          "id": "759f172f-16e7-4b60-a047-9b84afe73c57",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64d252cb-ff32-47d1-8e2e-9f1b075b40be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90758e3d-a1e6-4749-8bc1-c2e80eb74b5e",
        "cursor": {
          "ref": "37907161-cecc-4db8-9205-f163c8371659",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bf4ad52b-c396-4dd9-b2aa-7bda06aecf0f"
        },
        "item": {
          "id": "90758e3d-a1e6-4749-8bc1-c2e80eb74b5e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2bb08733-6f8d-441c-934b-9af034b472be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20306f4f-4e69-457e-afdf-4d3b14134b1b",
        "cursor": {
          "ref": "33970811-0f04-4189-b969-a6de19993f9e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "948041a9-7d54-48d5-812d-1aae9204ae72"
        },
        "item": {
          "id": "20306f4f-4e69-457e-afdf-4d3b14134b1b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "09aa8c5d-64d4-4a23-b42b-0c4079237f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700fadfb-9f98-4071-9033-d023d3b310fb",
        "cursor": {
          "ref": "dba9ff81-3ba5-43e2-923e-e732891759e4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a0d5901d-c2e6-4054-9a8f-921016185272"
        },
        "item": {
          "id": "700fadfb-9f98-4071-9033-d023d3b310fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd4e0116-5d18-4544-894f-594390093160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550715ab-8220-4386-b9c2-e034e6ea3877",
        "cursor": {
          "ref": "3447339c-6e36-4034-8bf5-5dcfece2e1cf",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f2c72b9e-111e-4417-b064-1f5768ab8648"
        },
        "item": {
          "id": "550715ab-8220-4386-b9c2-e034e6ea3877",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b1d4a529-8805-4dce-9a38-c44f3731a18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c601d305-b72d-419d-a6ad-df41b2742852",
        "cursor": {
          "ref": "e343bf7c-a9ae-470d-b538-df9263a86d40",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1361a6f0-7113-4867-8dd6-d776bdccc901"
        },
        "item": {
          "id": "c601d305-b72d-419d-a6ad-df41b2742852",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c2e0b612-692d-451b-b6a5-5c724796ee6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184ae2bd-95c9-430c-95f1-3d7611b4431d",
        "cursor": {
          "ref": "09b54ec5-6e87-4f06-b9f8-3b53d8a73c92",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "88dec6d1-175a-4fb8-bbe3-62818262e630"
        },
        "item": {
          "id": "184ae2bd-95c9-430c-95f1-3d7611b4431d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c003f202-c1f2-4150-ac45-7c7d9c71ea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ec3d6-e9c1-4aad-a78b-f3efe6676132",
        "cursor": {
          "ref": "382c2d8b-57d8-4abd-8658-d7a5b69e1a94",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7ab72080-6fa6-46b1-a948-7f9398eb2398"
        },
        "item": {
          "id": "423ec3d6-e9c1-4aad-a78b-f3efe6676132",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eea8c1fd-21c8-48ed-8f10-6fc35cc1e270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff85cc3-4cc8-458a-898e-921808d13f27",
        "cursor": {
          "ref": "14484151-a868-41f3-b0ac-84e1276142bf",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "45ea1c31-38dd-4a7e-a8ed-34a712264902"
        },
        "item": {
          "id": "3ff85cc3-4cc8-458a-898e-921808d13f27",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1804bfb9-5661-4240-9a6b-826fa6018b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e12ca17-42f1-4d4a-b5d2-23ef6af6fbeb",
        "cursor": {
          "ref": "3edbe007-8e59-4845-aed5-53c422d4e637",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "93f1948d-c576-4e8e-9eb0-324c2c5858c6"
        },
        "item": {
          "id": "3e12ca17-42f1-4d4a-b5d2-23ef6af6fbeb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "412a98e0-30fb-4b62-aa92-35aedc759c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f05179a-3da6-47fd-9d90-e6f23976ddcc",
        "cursor": {
          "ref": "8d9428df-b98b-42f6-820a-b647423ea47d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "72563bd2-a655-4d01-928d-2eadd951575e"
        },
        "item": {
          "id": "2f05179a-3da6-47fd-9d90-e6f23976ddcc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "61cd378b-996b-4b9d-aac0-ce6526d73ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33e1324-caf9-40bf-b8ac-7701e23f1030",
        "cursor": {
          "ref": "748296b5-674d-4f8f-8d35-79c44a8ffd91",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f4f8c1ac-6547-4eb8-abc6-5beef71a8743"
        },
        "item": {
          "id": "d33e1324-caf9-40bf-b8ac-7701e23f1030",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cf4f0897-925e-4f12-a749-5fde09b32cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada92306-f490-4b5c-a19f-e8b0508eb848",
        "cursor": {
          "ref": "16cddd2c-b7fc-4e1b-8e23-102e0b9fec5f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6f0ec12f-9605-4e47-ba9f-595a0501e89b"
        },
        "item": {
          "id": "ada92306-f490-4b5c-a19f-e8b0508eb848",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61782834-c4b3-46b3-83cd-4dec4f8f9ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0227b049-4568-4219-9eee-91f0e54e8b72",
        "cursor": {
          "ref": "094b9a80-071f-492a-8e36-acf6ae9cc578",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e19dd6ee-fa72-4204-aeb5-eb1f70e04051"
        },
        "item": {
          "id": "0227b049-4568-4219-9eee-91f0e54e8b72",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d16cc26-6798-4186-9ee0-e96bc6a09c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1f3963-777c-409f-9c05-6abe10bd3829",
        "cursor": {
          "ref": "c1cef21d-8234-4186-bd02-1ac8f9e635fa",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a3238c22-82dc-4a40-bb61-5c954de7d49f"
        },
        "item": {
          "id": "1a1f3963-777c-409f-9c05-6abe10bd3829",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "16015ce7-613a-48b2-a577-fbedbbb219fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac23a56e-15f6-4145-a8cd-8f0831cf625c",
        "cursor": {
          "ref": "4b69345e-46f2-4f80-87ae-6dd8e0fe5f6f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "92de386a-077d-41da-bb35-72e07fc65a06"
        },
        "item": {
          "id": "ac23a56e-15f6-4145-a8cd-8f0831cf625c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e265980a-5877-4c13-988e-88c31caf04be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce62e119-d956-465c-82c2-4ea82c53fa80",
        "cursor": {
          "ref": "36b48676-849e-44de-8e4d-c94995b4d7e9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f138a4cd-2ba8-4bfb-9e33-f257d4cdd176"
        },
        "item": {
          "id": "ce62e119-d956-465c-82c2-4ea82c53fa80",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b8046daa-1352-48aa-a11a-8a05f45ca32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbab3db-62dd-44a4-b243-cd63c864a58e",
        "cursor": {
          "ref": "c650f905-3b66-4aad-a031-c30e0239f5c4",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1adcc9d6-20f2-4034-b14b-d4b6dfebe8cc"
        },
        "item": {
          "id": "ddbab3db-62dd-44a4-b243-cd63c864a58e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1d24ad44-a656-4e4e-895b-8609c6a6e1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a908b84-62ab-4d6e-8ed7-ad73c1e93052",
        "cursor": {
          "ref": "e282e676-1f23-4308-9e63-242ca8a0c59f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8c8d1a97-31ed-471a-b050-ffd6aa09578f"
        },
        "item": {
          "id": "3a908b84-62ab-4d6e-8ed7-ad73c1e93052",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8b1b95e9-54b2-405b-af75-8a04ce9a4869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5e2a7b-ba7e-493e-bd21-d9a8fab8cac7",
        "cursor": {
          "ref": "bf627007-32da-40b8-bdc8-4f2da7f0b44e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c04c8142-6703-43f0-b84a-e99c12de854b"
        },
        "item": {
          "id": "af5e2a7b-ba7e-493e-bd21-d9a8fab8cac7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "afa56b56-dc8c-4e9c-92b2-1332dd2507f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd695fbd-0e20-4034-9e45-b92f91e6fc11",
        "cursor": {
          "ref": "132b8c4d-d649-4827-8aee-1b1b4efc4013",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e52271bd-4a90-448c-bc61-d03a8b7030fc"
        },
        "item": {
          "id": "bd695fbd-0e20-4034-9e45-b92f91e6fc11",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d8ba6cb9-bad3-416f-8b45-d401daea2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b7df6a-142f-4f4c-93cf-402f6e3a293d",
        "cursor": {
          "ref": "590b7fc4-c5c0-4fce-a70c-547c67f77d7c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a367bd24-d109-4c68-8b0f-3fd9a8bc6b21"
        },
        "item": {
          "id": "b8b7df6a-142f-4f4c-93cf-402f6e3a293d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6e34c223-be6b-4a7b-be37-d364100ae9f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4d0d16-5ee8-4be8-b768-bcaca837c901",
        "cursor": {
          "ref": "fbf7c532-1138-4eff-85aa-8722c79a9c9f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f6f3e827-196b-4d5c-bd8b-b7f08923a3bd"
        },
        "item": {
          "id": "2e4d0d16-5ee8-4be8-b768-bcaca837c901",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7644482e-8583-4b78-a6c4-5651a5988f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a814e77-ea7b-46e3-a479-efb8ba692f70",
        "cursor": {
          "ref": "e9c94c43-14e8-4108-9cf4-80154c6efdb2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "846df42e-608b-44eb-ab20-f608fcfe1c0d"
        },
        "item": {
          "id": "1a814e77-ea7b-46e3-a479-efb8ba692f70",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "67081da6-f032-4e53-9011-8acc425c3851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b20bc9d-4159-4365-b5d5-ba22d1c59e52",
        "cursor": {
          "ref": "510371e0-1a65-469e-835e-9debaf180f70",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "661bb559-4f0c-47ba-b2eb-152150ef3a1c"
        },
        "item": {
          "id": "7b20bc9d-4159-4365-b5d5-ba22d1c59e52",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a131998b-8d5a-44b0-8d04-d5c56d24109d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b3026d-c6a4-4bb8-a574-82099515f563",
        "cursor": {
          "ref": "e86e30a1-3365-475f-afe2-4210168afaca",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c740143-441c-4072-bef4-9233591b0233"
        },
        "item": {
          "id": "82b3026d-c6a4-4bb8-a574-82099515f563",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d2be051b-834c-4f3a-91ae-f3aaccf14874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27f4526-9d12-4af7-8328-1bbdfdeba0de",
        "cursor": {
          "ref": "734a84eb-8486-4c88-bf5f-6d705f57d78c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "53b4bc32-38f7-4f06-8a89-330e4a26dd14"
        },
        "item": {
          "id": "f27f4526-9d12-4af7-8328-1bbdfdeba0de",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "24650c55-5680-4a63-b5bd-73f08dc2b890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1d1d7e-5155-49b9-a168-decc174bda4b",
        "cursor": {
          "ref": "f60571b6-0226-4b3f-8cbf-1700590e3174",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2e89688e-76cc-49bf-93e5-b5dd5634df4c"
        },
        "item": {
          "id": "4d1d1d7e-5155-49b9-a168-decc174bda4b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cb8603c1-1412-4d09-ad5f-afe315ea5390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5c68f2-6f55-4807-a2b4-f1f000570bfc",
        "cursor": {
          "ref": "a3d04366-93de-4946-8aab-58f4ebb05b66",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8fb53b10-debd-406d-94b0-fd4e7887e50d"
        },
        "item": {
          "id": "0a5c68f2-6f55-4807-a2b4-f1f000570bfc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "67472fa3-98aa-4d53-9379-1510fba80966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf52f99-d4bc-4f92-b197-96c9b953cf38",
        "cursor": {
          "ref": "ecb0b0cc-9043-4dda-aee5-3ea7a2029146",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b59e0439-0c7e-4441-b0d7-dc01ef86af4f"
        },
        "item": {
          "id": "fbf52f99-d4bc-4f92-b197-96c9b953cf38",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "140aa353-9164-44af-8b55-528bf34b0358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e361fa12-c2db-49e1-af85-bd53f2f2111a",
        "cursor": {
          "ref": "c3b97c36-6e67-4938-9232-ae6d0bd271e8",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "beabcc03-4668-448e-a0e6-f4a4e48f8b4c"
        },
        "item": {
          "id": "e361fa12-c2db-49e1-af85-bd53f2f2111a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fe37efc9-a3f5-467a-8c94-719b21753f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5bf218-ee86-4609-97e0-ceb4c4c2361a",
        "cursor": {
          "ref": "13aa9fc4-71f3-4110-a72b-9958c277541a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8a056166-79ec-4a11-b20a-1273e5b1bef8"
        },
        "item": {
          "id": "be5bf218-ee86-4609-97e0-ceb4c4c2361a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7695f0ac-3bc1-429e-815b-6f921ea885cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9350846-bfad-41b5-8188-36e5b90ffe8c",
        "cursor": {
          "ref": "2d602385-3656-4078-88f5-6f09397df6f8",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0d3707c4-33ab-4255-84d2-35230aa54cf4"
        },
        "item": {
          "id": "a9350846-bfad-41b5-8188-36e5b90ffe8c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3854bffb-a35e-45b1-95bd-277626d27ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4c105d-0398-4b93-a0c0-13a39d494da9",
        "cursor": {
          "ref": "a24af48b-79ee-4207-9e17-3dde07e70fe5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7ad06add-7bd3-4846-8d43-ea9c1191048f"
        },
        "item": {
          "id": "9e4c105d-0398-4b93-a0c0-13a39d494da9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "73fd72ac-f394-4827-8f84-5070925c41a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfe3bdc-1beb-4a1c-a8ca-5030cd365bb2",
        "cursor": {
          "ref": "e0521ad0-94f2-4b5b-aa09-6daf3efde7d1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2fba617f-012e-465e-96fd-c2b53a9008d9"
        },
        "item": {
          "id": "dcfe3bdc-1beb-4a1c-a8ca-5030cd365bb2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "87db5d3a-36fa-439f-b188-629ca51d8c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75633b31-73b7-41f9-b389-32a2c27600b1",
        "cursor": {
          "ref": "e4624660-36f2-4152-b2d6-08a7afc85117",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "aeec1210-2555-4885-b835-eba71303c18b"
        },
        "item": {
          "id": "75633b31-73b7-41f9-b389-32a2c27600b1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a50c254-1bbe-4b7c-9bad-c63537511d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924231ed-94f8-4051-870d-a8178639fc23",
        "cursor": {
          "ref": "e49f81ca-0ceb-4cff-bcc3-0bf5bf7d183e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b274750e-b138-449b-938a-ad41f0d5f799"
        },
        "item": {
          "id": "924231ed-94f8-4051-870d-a8178639fc23",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d3f35aa-ff77-478d-9af7-440a53525cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd40a628-c01b-4d80-82ca-28c2176a03c5",
        "cursor": {
          "ref": "1d0a7be2-fc53-4f7e-8f06-551b518590ea",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "506eaf92-8b20-4d09-9259-5f1aef70b51b"
        },
        "item": {
          "id": "bd40a628-c01b-4d80-82ca-28c2176a03c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8184c046-1a04-4c8b-8e71-cc076d221705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49afd757-c14e-405e-9e6e-da14a2073c62",
        "cursor": {
          "ref": "31fcaeda-7841-4a31-9461-9f1ddc94ccec",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "62d765ae-be83-4aba-88b3-eaedceb257ab"
        },
        "item": {
          "id": "49afd757-c14e-405e-9e6e-da14a2073c62",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e2b35317-00b9-4ba7-8b79-754d6f98fd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c609c52-838d-4330-8f45-f5f5c33489ea",
        "cursor": {
          "ref": "3c419457-a6ea-4967-88e4-178321597c70",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65e0161e-d5f7-4e7f-a0ca-21ba0ab7d087"
        },
        "item": {
          "id": "4c609c52-838d-4330-8f45-f5f5c33489ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4739e57-e7dc-4b02-9434-e245ffe31f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18966c6-255f-4a21-b4bb-b41b2be71790",
        "cursor": {
          "ref": "3ff21c59-5271-4153-807b-b89fc4a8c779",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0faafd67-48e4-4043-a0f6-3b8481e27372"
        },
        "item": {
          "id": "b18966c6-255f-4a21-b4bb-b41b2be71790",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b18281c4-8c9a-4909-8663-5d6b7196abb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936a7efa-b669-4b90-b10c-6b3b2a1b86bc",
        "cursor": {
          "ref": "80e51e4d-ad0d-49a8-a55a-90a08637fb62",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "49b20592-508b-4348-9522-31374257c738"
        },
        "item": {
          "id": "936a7efa-b669-4b90-b10c-6b3b2a1b86bc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c64a52ef-1d45-45f0-b9dc-71f24647b9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5e819d-0fce-42d9-ad7c-badb017d804e",
        "cursor": {
          "ref": "8b81be54-49a9-43e0-8747-f3ae5875230e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f6466d45-3b96-4538-81b6-91c889af69f7"
        },
        "item": {
          "id": "7c5e819d-0fce-42d9-ad7c-badb017d804e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "499aed8d-d9e8-4661-bf0b-c4c661e3bc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e9b0af-7f01-42e1-9cd6-2c99d1d5a743",
        "cursor": {
          "ref": "df5beae7-5671-4887-b492-4931586623aa",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c0f92b78-11b4-4532-9e4a-5430a0868db8"
        },
        "item": {
          "id": "37e9b0af-7f01-42e1-9cd6-2c99d1d5a743",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db75b480-5793-47d9-b31a-51da646becd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2951050-8c42-495b-a126-5e11309e8c32",
        "cursor": {
          "ref": "ba091641-f8f6-476b-8e71-4b56b64507e8",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3382cf3b-57d5-457a-8fdc-4e3110476424"
        },
        "item": {
          "id": "b2951050-8c42-495b-a126-5e11309e8c32",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "43bc3090-3477-4985-8803-ea812dc3f4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5ceb02-9659-4c4e-8d16-f9493c1f614b",
        "cursor": {
          "ref": "fec70cfe-3470-479d-8d64-4b645f3582ec",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2727322a-0d3b-4b2d-8030-53ddb25a240e"
        },
        "item": {
          "id": "0c5ceb02-9659-4c4e-8d16-f9493c1f614b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "087f8775-f837-4882-ba6b-4ee05a7601ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7074f5-ecc8-4b5d-89ba-e7856a785d02",
        "cursor": {
          "ref": "b0ba86c9-ec2e-48f2-9915-693b0540a841",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "83bfce35-58d7-454f-a093-afe1d88f086d"
        },
        "item": {
          "id": "5b7074f5-ecc8-4b5d-89ba-e7856a785d02",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "48894890-92ea-4c54-aa49-fd8776eb8187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72507aea-162f-489f-a835-4b2267a904f9",
        "cursor": {
          "ref": "0a122b78-4045-4d4c-ab64-231c6331feb1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b3331422-d5cd-4929-ba02-5678c4ede04b"
        },
        "item": {
          "id": "72507aea-162f-489f-a835-4b2267a904f9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "95865de9-534a-46be-830e-2ed10d7481c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c17eff-a21a-4922-b770-fad10a06dcc3",
        "cursor": {
          "ref": "afca28c2-7102-4b7e-8141-fdba62306d8a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "75d3dc18-0152-4a5e-9a0b-a87ba4fbfb5e"
        },
        "item": {
          "id": "a7c17eff-a21a-4922-b770-fad10a06dcc3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2e130633-fc49-4017-9a1f-168b0b6b3108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e848d19-562e-41b6-be86-5e7ab7b751ff",
        "cursor": {
          "ref": "95c3cf09-5dbe-4d7e-a354-b7473df2aaf1",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b630a96b-dbcd-47c9-92cf-d3035ff4e5e5"
        },
        "item": {
          "id": "0e848d19-562e-41b6-be86-5e7ab7b751ff",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "40901f84-66dc-42bf-8bab-d4a819ce032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8e6a1d-aef9-4867-b492-803a829228e3",
        "cursor": {
          "ref": "7212120a-b6aa-49dd-b089-7575f9b14b55",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0059bf63-6dcb-4683-9633-5e3087724f1c"
        },
        "item": {
          "id": "3e8e6a1d-aef9-4867-b492-803a829228e3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "24b2493f-a17c-457f-a592-4a9c29eed6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8230a87c-f2c2-4eaa-9b57-42d9f9966c1a",
        "cursor": {
          "ref": "c6128a9a-9d0e-4915-a575-0dedfec3e5ba",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "92d92a37-0cea-43fa-aa79-6bb044a97d83"
        },
        "item": {
          "id": "8230a87c-f2c2-4eaa-9b57-42d9f9966c1a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ea7934f5-83c4-4808-971c-e37420f14509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123dfbb3-f579-4bb2-9de4-2a85f0d78ad6",
        "cursor": {
          "ref": "ea36043b-8aba-4a2c-ae1a-abce8e2fb0b9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4695022b-2c8c-47ed-b22b-de084798de59"
        },
        "item": {
          "id": "123dfbb3-f579-4bb2-9de4-2a85f0d78ad6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "14abfeb6-e80d-4c7c-9d38-d7f39f65dfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c1e9a0-2d2a-4d45-9ee3-b89ad21d31a4",
        "cursor": {
          "ref": "da0c6c86-3556-45f8-b807-1e78d647e842",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ea0c5667-d0db-4492-bdc6-7ee0eb931450"
        },
        "item": {
          "id": "a1c1e9a0-2d2a-4d45-9ee3-b89ad21d31a4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9059f2b1-c3f7-4101-b3e5-a597fa9599cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb317788-f692-45b6-8f4b-835b9e5df208",
        "cursor": {
          "ref": "a71b32fc-483b-4101-858d-91d9d32c8904",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3bfefcad-f7ad-4eef-9b2e-e095addbcd67"
        },
        "item": {
          "id": "cb317788-f692-45b6-8f4b-835b9e5df208",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ff7c2c38-2b07-46a1-9d4c-af80b12bb40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398045fa-0bab-4cb8-add9-73fcea4fb0eb",
        "cursor": {
          "ref": "16cead34-db48-4bd9-81ab-baca8d49f9fa",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e5c61487-8a7f-4b4e-a91f-bacd69da0187"
        },
        "item": {
          "id": "398045fa-0bab-4cb8-add9-73fcea4fb0eb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "81ed32d0-3acb-4f42-af2f-55dbba877b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65621553-cb57-437b-ae7e-3889b3a5f88e",
        "cursor": {
          "ref": "ff739c0d-bd23-490d-87ca-ce590bea28ea",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9580b29e-b9cf-4fb4-867b-da3dc4efe9a7"
        },
        "item": {
          "id": "65621553-cb57-437b-ae7e-3889b3a5f88e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b6c9f5c5-cf3c-40d8-b03d-c689eb84b80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e74dca-0d8f-4444-a46a-fc71873ecc93",
        "cursor": {
          "ref": "a28536a3-f8da-41e4-b38f-8008bc4795d3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "91b73cc4-4624-421e-8950-307532dff947"
        },
        "item": {
          "id": "b6e74dca-0d8f-4444-a46a-fc71873ecc93",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c314c15a-9c16-4a3b-afa1-fb487122edc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8108baa-523c-454d-bb0c-0efdd8f1829e",
        "cursor": {
          "ref": "9d90dc73-cf33-4d3b-8c6d-a92d24c0cd01",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ab5d70c3-a2b5-4f9e-a89a-65e2860b417d"
        },
        "item": {
          "id": "a8108baa-523c-454d-bb0c-0efdd8f1829e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9b98156f-f59c-47dd-b27f-ad14d7c63449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15361ef2-d6d3-4a99-855a-90708d78ba46",
        "cursor": {
          "ref": "283b94e0-477f-4d44-9a20-3a13397085a8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3536e462-060f-43b0-bb32-d18978f84b2a"
        },
        "item": {
          "id": "15361ef2-d6d3-4a99-855a-90708d78ba46",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8ad5f53f-3163-49ea-b6d6-aed64dde5717",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a62caf4-39ae-41f1-bddd-ed2875503b17",
        "cursor": {
          "ref": "4757dd9f-405f-4154-b71e-f51563be663c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "60155d13-4156-49fe-bcdd-4af775b8091e"
        },
        "item": {
          "id": "0a62caf4-39ae-41f1-bddd-ed2875503b17",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3d98e616-f039-41ba-97a2-4530bdf66258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d338af4-d2e7-4928-b876-a37f3708f5af",
        "cursor": {
          "ref": "e511b7a4-9c6d-418a-bfcb-b440b832c2f0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d2a5ddb2-7f5d-4984-9d49-1befe97d7386"
        },
        "item": {
          "id": "9d338af4-d2e7-4928-b876-a37f3708f5af",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1f5e3bba-8ac0-48f3-8fe1-5db1d45abf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476a0988-ecf8-46c3-88c0-16b33b433669",
        "cursor": {
          "ref": "ebc14f81-dd28-40ed-9e09-a6c0e5f52e1c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "39feb727-42f1-40ad-8fc5-db4e655b6fc5"
        },
        "item": {
          "id": "476a0988-ecf8-46c3-88c0-16b33b433669",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ec7158ae-11e0-4d4c-86ad-734d4f52f0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda19144-5375-4fd9-a687-0d2ea44aad15",
        "cursor": {
          "ref": "76cd0076-5f66-4dc2-8e2b-598beb37d79b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "47c3870c-db5f-471b-b1a9-44d0bda139c1"
        },
        "item": {
          "id": "dda19144-5375-4fd9-a687-0d2ea44aad15",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "21747292-89c1-4e7f-b84b-3317b8a505dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62fbc8c-17f8-4f20-9699-cbe5c5b851c5",
        "cursor": {
          "ref": "a3869590-d349-4ca2-b59c-b5dd8ce1010b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e20dae09-d169-497e-8bce-0722e3063b7e"
        },
        "item": {
          "id": "d62fbc8c-17f8-4f20-9699-cbe5c5b851c5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "489a68d2-887f-4f50-bb6d-c936a2c0ba3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f505b0e-2c8b-4785-8818-4eb42ae68d7e",
        "cursor": {
          "ref": "7c273c90-cba8-40ce-bafc-e2f7896b3da1",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bc878ad0-1dd3-4f96-a322-8b1a3fa0708b"
        },
        "item": {
          "id": "0f505b0e-2c8b-4785-8818-4eb42ae68d7e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "01f32f05-4951-4116-a23e-a3c25ce9d462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458faf9d-a853-41b3-af59-3c3c5e954c5f",
        "cursor": {
          "ref": "a6da59b7-1ac5-4b4b-b1fb-9dc8c1d7a645",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "38f940c6-6264-4164-bdf8-a98719501b0a"
        },
        "item": {
          "id": "458faf9d-a853-41b3-af59-3c3c5e954c5f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d6fcaacf-98dd-48ff-96ef-b44d292c2e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c669fc18-384c-4d9b-8b18-8e48dc8a368a",
        "cursor": {
          "ref": "36a1ff94-432b-4508-b0d3-5a243a961f3b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a5c2a031-0a5e-4586-ac34-f6a5d3f6f572"
        },
        "item": {
          "id": "c669fc18-384c-4d9b-8b18-8e48dc8a368a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c4caa2d8-a1d0-43f4-a420-890e3fd070a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac41837-8cab-4724-a65c-937a2ef44c38",
        "cursor": {
          "ref": "4f32788d-c1a2-4b4a-85c8-c1ccf2487f36",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c89219b6-1f6c-4a40-9c8b-23180978a39e"
        },
        "item": {
          "id": "7ac41837-8cab-4724-a65c-937a2ef44c38",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "950caf1b-6e85-478e-adc9-c77b6b287c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370c09c9-b547-46df-baa9-771df8c4f0d3",
        "cursor": {
          "ref": "0c32f458-1508-4284-a8b7-4eb3ffb1b942",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4ec048ae-3ef7-4000-8ddd-1c07d024e9a9"
        },
        "item": {
          "id": "370c09c9-b547-46df-baa9-771df8c4f0d3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "79f695ea-d1ec-4b79-a0e0-331cd47d7bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dd605d-f500-4803-b501-ef7c3bfc981f",
        "cursor": {
          "ref": "ef6dcfa4-d9ba-4f79-8738-7a68d2512e4d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2a679b9e-586c-4bf6-a8cd-db168a165242"
        },
        "item": {
          "id": "45dd605d-f500-4803-b501-ef7c3bfc981f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "763f5544-3f38-4c8c-8f70-d47be0588fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec8d568-deba-4fc6-ac43-cd888afbb9c0",
        "cursor": {
          "ref": "3d0ba781-0c1a-4d4d-8a9f-8053be6f805c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "448ad577-2c68-4117-b833-73917a5603d7"
        },
        "item": {
          "id": "9ec8d568-deba-4fc6-ac43-cd888afbb9c0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "06a636cf-3840-4fc8-94b4-88ed31c485b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a762b8d-30e9-44f4-8139-b738f91dcaef",
        "cursor": {
          "ref": "b61efed5-8038-47c6-8b6c-f452d14c695b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9487b2c8-5acb-485a-85e6-22c0f0795b99"
        },
        "item": {
          "id": "7a762b8d-30e9-44f4-8139-b738f91dcaef",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "db66c7eb-ed71-4cea-81fa-6ed0084a0d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a596a-aa90-4b08-89f6-29124ebcda4b",
        "cursor": {
          "ref": "2853082f-b4a2-469b-9212-353e19ab8957",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5474547b-d1c2-423d-9bd7-829c81822049"
        },
        "item": {
          "id": "396a596a-aa90-4b08-89f6-29124ebcda4b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e4c3e49d-589a-42f7-8f94-35aaaefb76b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28408e81-0ed7-4c99-b710-5c92de8d994e",
        "cursor": {
          "ref": "e86d031c-e671-43a9-b417-4b513c96a76f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "948bc03b-0165-4516-aaac-05df6ea7a445"
        },
        "item": {
          "id": "28408e81-0ed7-4c99-b710-5c92de8d994e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "183cd276-484e-4fd3-9da2-6339eb658a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eae349-7651-46c3-82a0-d60d1c3d4511",
        "cursor": {
          "ref": "40a80417-fc34-45cb-bb59-1e820a5b0272",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a43f8f82-621a-45ae-b641-b5c8ca548461"
        },
        "item": {
          "id": "f6eae349-7651-46c3-82a0-d60d1c3d4511",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7d2a1863-3046-499d-9de2-2102786bff59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793be809-a6c6-4584-afe8-1f2c0db516d9",
        "cursor": {
          "ref": "52e0ba53-8cd0-44be-9e35-61c293fb3b9d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c9f87ab2-485d-4f2f-9d04-d48fbbccaae0"
        },
        "item": {
          "id": "793be809-a6c6-4584-afe8-1f2c0db516d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8bfb71e4-b0a9-403b-86d5-be4149010eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6705b1ed-9e18-43d5-91bb-a48d5a7e304f",
        "cursor": {
          "ref": "fea6a1f1-6344-400f-9485-d0ca734122e9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cfca672b-01e8-4d8f-8aa5-380fb47dac8f"
        },
        "item": {
          "id": "6705b1ed-9e18-43d5-91bb-a48d5a7e304f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3f207002-83c9-4464-9f77-c3a96a1fe548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731ff7e4-ba4c-45c0-93b5-eb30c9ba5445",
        "cursor": {
          "ref": "a06798fe-4f39-45fc-97e3-3187fa14837a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9a31829c-a2ff-473c-82d8-ef3ef53c35c1"
        },
        "item": {
          "id": "731ff7e4-ba4c-45c0-93b5-eb30c9ba5445",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f7f3e6a2-0cb7-4f9d-86ac-be15ebb65193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4397a81c-3ac8-4656-9d5d-913b6b38ca35",
        "cursor": {
          "ref": "6fe0c7b8-cfd1-41cb-9535-8c7bea286261",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "54576065-b6c6-4b85-8977-a1599ed087d3"
        },
        "item": {
          "id": "4397a81c-3ac8-4656-9d5d-913b6b38ca35",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e9880ae8-d4cb-451c-a5d9-9a24537097df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95ee2c3-8e7c-4b2b-96e9-2ce5ab7b930e",
        "cursor": {
          "ref": "44a62ade-9b03-433b-9ee7-8b82937a72ef",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4705a04c-2a88-41ef-94c7-cd87d4b76965"
        },
        "item": {
          "id": "f95ee2c3-8e7c-4b2b-96e9-2ce5ab7b930e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "523ddbff-8ff9-47cf-92ce-2cba72b0460c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea49d1a-9a9d-4bae-9786-6842720eb86f",
        "cursor": {
          "ref": "df1012ce-39d4-42ca-a6f7-921671bbd71f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "49a5f847-3090-4459-b200-ac637fcc0f9a"
        },
        "item": {
          "id": "cea49d1a-9a9d-4bae-9786-6842720eb86f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "01716d0b-bba4-4c5c-9c9b-881084bb80ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4659eb-ecc9-4750-915a-c5a409da421f",
        "cursor": {
          "ref": "f4fb4eb6-ad1d-4415-997a-0c363a743de1",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e6b2d80-dca9-4fe6-8742-23f2f3dba660"
        },
        "item": {
          "id": "7d4659eb-ecc9-4750-915a-c5a409da421f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dc3473bb-4054-4579-ab0c-00b7690d3293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86ce137-f7de-4290-8a97-e4ff70e82dfe",
        "cursor": {
          "ref": "16954279-9d19-42d3-857d-b9402840530c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8f92270-611c-432b-b2bd-72797c5eaadc"
        },
        "item": {
          "id": "b86ce137-f7de-4290-8a97-e4ff70e82dfe",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "aa30fe8e-c542-451d-8909-8b06b3d8768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51ec8f4-a51c-4f42-ad4e-286ac7a2ee85",
        "cursor": {
          "ref": "69796b3e-2b9c-4ee0-8e27-2d7a8be89859",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dd9296e2-5176-4f8b-8dfc-1f87ed0af32d"
        },
        "item": {
          "id": "c51ec8f4-a51c-4f42-ad4e-286ac7a2ee85",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dd0100bf-d757-4b7c-bb1f-8849682f0771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f921d6d5-1575-4e37-b757-419f9df8f64e",
        "cursor": {
          "ref": "5ea9de31-4e1b-4af3-bd04-a96675836c3f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "32c335ef-6220-4add-98ec-a30e67f370d9"
        },
        "item": {
          "id": "f921d6d5-1575-4e37-b757-419f9df8f64e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7bc0c927-910d-4497-ade1-7acdbd23e52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48f7f20-5393-4308-804b-c1f3d5a6dd9d",
        "cursor": {
          "ref": "3f2da087-1ab4-4db8-b605-bbd634d40958",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d9e8ea6-b2fa-462e-9d38-ff48f729d2ff"
        },
        "item": {
          "id": "d48f7f20-5393-4308-804b-c1f3d5a6dd9d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "346b92f9-2a54-4e91-bfb3-f5f35fdbfcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709b96c5-d886-4bde-835c-fd74571319c9",
        "cursor": {
          "ref": "e8cbbbc6-ca91-448a-868b-3064b85f20b7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8d3ed29f-e27a-41d3-bf44-626a4b92895a"
        },
        "item": {
          "id": "709b96c5-d886-4bde-835c-fd74571319c9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "626cd8ac-1662-4086-9115-ad27af8b3d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db4012e-b1ce-4cc0-bf3a-71926b1bac3a",
        "cursor": {
          "ref": "30e3c2c0-94cf-49db-ad67-cc67bcb4c311",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e95657ec-b2b4-4759-b409-911b05185df3"
        },
        "item": {
          "id": "0db4012e-b1ce-4cc0-bf3a-71926b1bac3a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fffecd37-1a0a-4834-9382-d2ed778151dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1e6241-3f09-4a09-ba55-fb562372e4a5",
        "cursor": {
          "ref": "2fae16a2-47d9-4c03-a9d9-06cafb8e4683",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7d36ecd0-27b0-491c-8e62-0497c10cd20c"
        },
        "item": {
          "id": "7e1e6241-3f09-4a09-ba55-fb562372e4a5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "98e6e376-0a17-4bc8-996e-76d7b491d032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc52823-7fd5-4649-86d2-5599af383a81",
        "cursor": {
          "ref": "1e535f59-2e5f-4162-8168-1333fc850594",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4005fbd6-db79-4aaa-b679-c9b2385f8972"
        },
        "item": {
          "id": "2fc52823-7fd5-4649-86d2-5599af383a81",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "594911d9-7655-484a-ae00-9470a84fab95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cd5302-7ad8-4b08-946b-352ce48530f6",
        "cursor": {
          "ref": "b7ca4128-0ca0-4964-a3d0-4221b4211a43",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "98ce515f-afc6-4f91-a79d-8f6a0545c4f0"
        },
        "item": {
          "id": "08cd5302-7ad8-4b08-946b-352ce48530f6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "aa61275e-18ca-4c34-a395-a41b90b75b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbd052e-cd50-42b9-9481-539c8db53e14",
        "cursor": {
          "ref": "fee6df8e-baa1-4e3d-9eff-04ad466a43c0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "788408ce-a35c-4383-84d7-52c073351660"
        },
        "item": {
          "id": "8bbd052e-cd50-42b9-9481-539c8db53e14",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6d5bd642-1bfd-4757-a920-62e184a7d100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec00905-392e-471a-84dc-b2b0fc956c55",
        "cursor": {
          "ref": "039c57a9-50b6-4060-a657-937b407675f0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c1aac7a-4b64-4aa4-93a6-520ec239e323"
        },
        "item": {
          "id": "1ec00905-392e-471a-84dc-b2b0fc956c55",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "522c0d81-bb18-498b-b5bf-508866ccb1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca4c83e-eb03-47ca-b0b9-de8bf9a109cb",
        "cursor": {
          "ref": "de17c86c-6a1e-4165-97e8-2ebac1ca6a95",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5dd7604d-cfa3-4c33-b292-8aef2bdaa0c2"
        },
        "item": {
          "id": "dca4c83e-eb03-47ca-b0b9-de8bf9a109cb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6b54a6ac-221e-47d3-a42d-fb8e7af0a4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca2e8c4-df65-4f65-ae80-ce8c639d3b95",
        "cursor": {
          "ref": "d8dda347-bb9d-4e6d-b211-2a130e0cebd4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b3ef8b1c-f1c0-44aa-bade-fb44f3960749"
        },
        "item": {
          "id": "cca2e8c4-df65-4f65-ae80-ce8c639d3b95",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f60a016e-c570-4347-8a39-648435a2c1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60aaef2-3d87-4b27-abf8-3585b4dbd892",
        "cursor": {
          "ref": "645d7222-80ff-472e-99f1-a91e46eaee73",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "985fb7b7-bea8-4800-bfa5-2ef5c5e86af0"
        },
        "item": {
          "id": "d60aaef2-3d87-4b27-abf8-3585b4dbd892",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cc46f17b-12c9-4dca-a2d0-1a4f9e300561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1b2078-9665-4a57-914c-52b94459eaa5",
        "cursor": {
          "ref": "bcbc9d57-2ea1-4829-9487-dc1ee471700e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b59a2882-12bb-4b11-a6de-6cea382d049e"
        },
        "item": {
          "id": "5f1b2078-9665-4a57-914c-52b94459eaa5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d9ccc860-9bdc-41c6-afb1-9c141c304b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d473ecc0-241f-4cdf-ba7c-525b4d7ea025",
        "cursor": {
          "ref": "ceec727c-1843-4ea1-bdf6-7e9e0d9463e2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "124b36c6-fff7-4e2c-8cca-fe7ab6f45efa"
        },
        "item": {
          "id": "d473ecc0-241f-4cdf-ba7c-525b4d7ea025",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ac491a50-d467-4b26-b472-5c39678565d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234b5c42-ab43-4e5f-955d-6f54e732daee",
        "cursor": {
          "ref": "4642731f-71e6-45fa-9852-30cbc1f01066",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ed5c9034-421a-48a1-9a03-dc44c4939d25"
        },
        "item": {
          "id": "234b5c42-ab43-4e5f-955d-6f54e732daee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e63117a2-6a94-479e-a0be-a36ca4b5a2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b1f33c-b63b-4f41-8e80-c8af3919f19d",
        "cursor": {
          "ref": "3a472d5a-9d72-427a-962a-f73343c5ef42",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d574fee5-5758-40ed-9cda-1742ec5139a5"
        },
        "item": {
          "id": "32b1f33c-b63b-4f41-8e80-c8af3919f19d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4ac30e1e-30e6-4afa-8ced-828cd8218708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125a1de3-f9b4-42a6-8eb0-79b43abfd2c8",
        "cursor": {
          "ref": "7f7d4bfe-4e0d-4f98-aff7-eab2e3ad0e3f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c10eb1b5-8a0c-409b-ab52-a5df30bd808d"
        },
        "item": {
          "id": "125a1de3-f9b4-42a6-8eb0-79b43abfd2c8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a7b2ccae-16c1-45fa-8b60-192a9f0cbce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77a9953-1a97-4ded-a87a-5d18074a2d7f",
        "cursor": {
          "ref": "a2e5cdb9-9819-44fd-accc-4ad92e74c6e4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9b5aa90b-4082-4911-a543-947a1720329d"
        },
        "item": {
          "id": "d77a9953-1a97-4ded-a87a-5d18074a2d7f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3bd5a441-9c66-4aff-b75b-ef51d70db722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2f6a5f-fbe3-4051-bd76-ff447b2ad50b",
        "cursor": {
          "ref": "47d4ae7c-7860-4b07-923a-55d65b9902ad",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "38366730-52ea-48c5-8e22-7018fa6e2cf9"
        },
        "item": {
          "id": "6b2f6a5f-fbe3-4051-bd76-ff447b2ad50b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "796294c1-faf6-4e2d-b95f-b95bef5e10b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5c323f-6bcb-4ddc-a87a-cb080ddca790",
        "cursor": {
          "ref": "7cb61375-8743-42a7-a488-b33987df349f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0efb88ba-f06f-4677-86cd-cff96223d0b9"
        },
        "item": {
          "id": "9b5c323f-6bcb-4ddc-a87a-cb080ddca790",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6ab1a729-03bd-4ee4-9eae-4a16e889b78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d94236-476f-4358-8a2b-510a10847046",
        "cursor": {
          "ref": "5448cb99-d63e-475b-8e43-7bd9fb4bbac0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "afd20ec3-9864-45a6-ad65-0ddf698ad265"
        },
        "item": {
          "id": "10d94236-476f-4358-8a2b-510a10847046",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6e521051-531a-4a1d-b79d-925e223f75b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b249d2-e8f4-45a0-a721-7ab00c1d276b",
        "cursor": {
          "ref": "b5d21631-a7e9-4435-a2a8-06ae34392e4a",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "98c006e4-6cb1-430e-b97f-d0ab3428a6f7"
        },
        "item": {
          "id": "44b249d2-e8f4-45a0-a721-7ab00c1d276b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "446c4285-e668-4350-bbd8-025f8be8b1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92373db9-6eeb-4481-ba48-4d2d5dba2c78",
        "cursor": {
          "ref": "f8b2bbd3-228b-4147-a459-b34d0753e623",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3816b095-3a15-431d-af49-530656fc1c76"
        },
        "item": {
          "id": "92373db9-6eeb-4481-ba48-4d2d5dba2c78",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5be1d949-a319-40d0-be93-d04f97b11403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd8b134-c600-490f-a311-8ddb13ae6d5b",
        "cursor": {
          "ref": "f62a6984-09d8-4f2d-8422-77cf272ba986",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d8313b71-4d88-4d76-be12-57b9bffa754e"
        },
        "item": {
          "id": "3fd8b134-c600-490f-a311-8ddb13ae6d5b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bc1e75c9-d646-4f94-ae02-b65430da2729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f426024-13f1-4282-8d52-e0910c29ad41",
        "cursor": {
          "ref": "f7d129ce-05c8-4342-af5d-44c7ddaa7da7",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "954bf771-5786-40cc-a4a2-980e52e5cae9"
        },
        "item": {
          "id": "4f426024-13f1-4282-8d52-e0910c29ad41",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3cd2aa98-5e79-4a26-9b6e-fe0a05ac7b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3051c6-44a0-478d-bb0d-32c4dcead705",
        "cursor": {
          "ref": "9d127f78-713a-4b7b-b5eb-86afa78bd0c9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "df013c27-bb62-42f8-880b-6686003eb14c"
        },
        "item": {
          "id": "3e3051c6-44a0-478d-bb0d-32c4dcead705",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4e6f1d53-9ccb-49b1-b289-0996a1e4ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf6930-352e-4d0c-aaa0-0ed26c2449ba",
        "cursor": {
          "ref": "6c63d4a5-33d7-4e97-81fb-f02d28c074de",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "66e11f44-2147-4c75-8b00-74f9a0369d74"
        },
        "item": {
          "id": "22cf6930-352e-4d0c-aaa0-0ed26c2449ba",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2e9d12ee-cbe1-486e-9d78-fb862954c33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b57c28-18a0-4032-9fcc-45cd7b71d1a9",
        "cursor": {
          "ref": "9b6e9719-0634-4931-bbd9-43dbece287ec",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1ae54ac8-5e30-4db0-a2f2-ca83a612cd82"
        },
        "item": {
          "id": "24b57c28-18a0-4032-9fcc-45cd7b71d1a9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8b37b014-e8d4-4f0b-8b1f-5cb9c8563dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f14a20c-cd0c-45aa-8fba-7f52529811f8",
        "cursor": {
          "ref": "1c27c59b-5098-4da8-85fd-608ccfd19765",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a4a7a093-8b25-4e97-9393-aa7de6776621"
        },
        "item": {
          "id": "4f14a20c-cd0c-45aa-8fba-7f52529811f8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6d3f33fc-f7f0-401c-ac91-cbbdcef1b538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cda732-8f54-4b1d-ace0-d5df1bdb6346",
        "cursor": {
          "ref": "93db9fde-1df1-4567-94f2-b19ca4c49a54",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0ecb4d38-a042-4d59-a160-316b1a7abc48"
        },
        "item": {
          "id": "26cda732-8f54-4b1d-ace0-d5df1bdb6346",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c02aba4b-c132-4354-a6eb-58fe0415f012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fed6bd-70cd-461b-84d9-26a447f6234b",
        "cursor": {
          "ref": "3bde1dc6-dcff-4f9f-9c18-697dce515022",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "105c30c6-9188-4f36-b73e-daa075bfc97c"
        },
        "item": {
          "id": "e6fed6bd-70cd-461b-84d9-26a447f6234b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "88a257d3-4be2-43af-b2e0-6e9a0499f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cd3987-2bb1-44f9-bb7f-2fc21ce681ca",
        "cursor": {
          "ref": "a5f68ab0-a051-4243-971f-a070f2b0d2e6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ee7e0a14-a70f-4734-82e5-8735533ba30f"
        },
        "item": {
          "id": "95cd3987-2bb1-44f9-bb7f-2fc21ce681ca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "eaabeb7e-ba24-48cf-86c8-362252348734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e2fc8d-a5f5-480b-8a05-a87a7c29ba9f",
        "cursor": {
          "ref": "fd8b993c-430e-4a43-adf3-25df940a02c2",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a980710a-f7a3-45ec-870c-481c92412a42"
        },
        "item": {
          "id": "73e2fc8d-a5f5-480b-8a05-a87a7c29ba9f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "533f0560-7cdf-4203-a205-69c25e790cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b91b456-8bf1-4a10-bbe3-b25a5098fe1e",
        "cursor": {
          "ref": "88b01e42-88e5-41f3-9399-9bb35d9de302",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4a821cf5-aa02-49c7-96bb-bcd472f6fa35"
        },
        "item": {
          "id": "3b91b456-8bf1-4a10-bbe3-b25a5098fe1e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a8d0a1c9-07e2-4826-abd3-4985bc92e1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5162378e-23a4-47d0-8b34-69d8a313480e",
        "cursor": {
          "ref": "328ac256-1b8e-4cb9-8303-60871688090d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "31f6910a-858c-4fba-a5f0-0f78ca6d161f"
        },
        "item": {
          "id": "5162378e-23a4-47d0-8b34-69d8a313480e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "746ce941-e78e-43e7-ae01-11f5146e69d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c217fb42-a7bb-4d9b-80da-b272e569258d",
        "cursor": {
          "ref": "704bfd4d-1317-4fa4-a759-85d2922a5709",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "63f000a2-c7d3-4581-a786-62b37e291986"
        },
        "item": {
          "id": "c217fb42-a7bb-4d9b-80da-b272e569258d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bdf2e4e0-3390-48b1-b703-ec30690e0109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37488996-9dd2-4c0e-bc8d-306d03037497",
        "cursor": {
          "ref": "11da9f77-dcf6-4e14-834f-d70da58a5bd2",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2089cb8c-a884-4180-94ce-34b1907d6a0d"
        },
        "item": {
          "id": "37488996-9dd2-4c0e-bc8d-306d03037497",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eee811b0-4194-46e3-89d1-ee9cb9e0ab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d095896a-0423-4658-8c85-384d47161f21",
        "cursor": {
          "ref": "1f5821cf-0f9f-4a88-a294-88324f25bb30",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "caec38d6-5e0e-413b-a490-ffe2e59cc724"
        },
        "item": {
          "id": "d095896a-0423-4658-8c85-384d47161f21",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "03932202-8614-4ea4-80a6-501eac602d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e312ee-7333-493f-91a6-c9b336f5e1b4",
        "cursor": {
          "ref": "ceadf5a5-3005-4c4a-8377-5157a4220a52",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c12fbc33-a397-4bda-8b9a-0831d6e9de29"
        },
        "item": {
          "id": "64e312ee-7333-493f-91a6-c9b336f5e1b4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c5c936f-d52b-4714-8891-40ff2451767c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b14755-2e65-4157-bff5-65c069d765ab",
        "cursor": {
          "ref": "af97e6da-ae8a-4e9a-985a-72ee5d73043b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b9e7bd62-acdc-4ee1-ae59-d1a8f10f5dd2"
        },
        "item": {
          "id": "70b14755-2e65-4157-bff5-65c069d765ab",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dd3b7edb-cd23-4c0d-8347-0639a475fe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bfaae5-a18d-4cc1-be37-ee03a545bad5",
        "cursor": {
          "ref": "394a9614-b420-4f8d-9bc3-7fa9671293e2",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02228ab4-0149-40d9-957c-6c41c056acdf"
        },
        "item": {
          "id": "b1bfaae5-a18d-4cc1-be37-ee03a545bad5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "efed7114-7f6b-4501-9562-88760899c1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a19186-ff09-4bd3-b702-929a43f1c8eb",
        "cursor": {
          "ref": "9a1e5e97-2e7a-4e05-9102-67391162a82f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "67de3b5a-90e0-48fd-8376-6a94e1ad4fd4"
        },
        "item": {
          "id": "76a19186-ff09-4bd3-b702-929a43f1c8eb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "447492bd-2ea3-40ac-a6b8-399f36e36b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f16b5f0-4b9a-4534-910f-11c51f8f8408",
        "cursor": {
          "ref": "d169865b-eb0c-4af8-a32e-a1c9e5b514de",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "57a98927-ce58-48ab-ac21-3d95fb151a75"
        },
        "item": {
          "id": "0f16b5f0-4b9a-4534-910f-11c51f8f8408",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "04e3a752-2415-4348-9dd0-2bc80b59daa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acefd9d5-b76a-4a4b-b46b-1f334d199346",
        "cursor": {
          "ref": "f2e6afed-78cb-475b-bf63-006e2f850c60",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d9670f73-de9f-4cb2-9477-4df658a0abaa"
        },
        "item": {
          "id": "acefd9d5-b76a-4a4b-b46b-1f334d199346",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57362c5e-3bc0-4319-a8d4-35944fdde03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901659a1-af8b-4793-aab8-33e999f973d3",
        "cursor": {
          "ref": "c9e3b3f0-c992-4c36-a648-4795445e7d8d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7884b8a-32b0-423c-8885-cf707237d246"
        },
        "item": {
          "id": "901659a1-af8b-4793-aab8-33e999f973d3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6e04eef0-a682-4ae4-b068-9e0a24582545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af190859-5636-4505-8214-b1d4d4a393e6",
        "cursor": {
          "ref": "789d4e03-5fa9-4d2e-9021-12a2c2268082",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a8c0e2db-bd54-4b92-9bbb-a242e9e0a842"
        },
        "item": {
          "id": "af190859-5636-4505-8214-b1d4d4a393e6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "09e3a2aa-a730-4e18-9c75-ba2ce8971bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c278b82-d08e-4a9d-88a6-3d84f35ab3d5",
        "cursor": {
          "ref": "4526606c-952b-42b9-944d-3367c46c2eca",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4abd9ef2-5da4-43c8-8b6b-c2c12715638b"
        },
        "item": {
          "id": "0c278b82-d08e-4a9d-88a6-3d84f35ab3d5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ebab52f3-e9da-4e12-b9ca-5665e0aacad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b51717b-52b6-44f0-bcbb-a7c5ad38b2c6",
        "cursor": {
          "ref": "47220707-2293-4cf1-ad74-58629918c815",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f4b2760e-215d-4929-a71e-51843c2da10e"
        },
        "item": {
          "id": "7b51717b-52b6-44f0-bcbb-a7c5ad38b2c6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "00598b5f-69b2-4ef2-851e-1d3ff0212160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7cba56-c70a-41e3-8113-a7b8a7246bfd",
        "cursor": {
          "ref": "41bc12cd-e5e8-4036-9601-30329f1d6ffd",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d33a0a50-a6f3-44e0-ab01-efb8bab080f1"
        },
        "item": {
          "id": "bc7cba56-c70a-41e3-8113-a7b8a7246bfd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb9bc97c-c697-4f45-8456-04e3d78bcb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa72fde1-842c-48d5-8828-fac7b313f731",
        "cursor": {
          "ref": "e88f5446-5d79-4de2-ab2b-ffc85e2941c7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "93ca2cef-609d-4a87-9f9a-00671b137db0"
        },
        "item": {
          "id": "aa72fde1-842c-48d5-8828-fac7b313f731",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "424858f2-df11-433c-8d46-997f17fdffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c9611b-8db7-4996-9300-60f20a9e0926",
        "cursor": {
          "ref": "c91dda9a-41aa-49a6-8828-99847b440dd0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f47b1db9-abf2-430c-8364-d4c4d5640750"
        },
        "item": {
          "id": "30c9611b-8db7-4996-9300-60f20a9e0926",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "834f5e5e-6a6c-4204-9b2e-165dc4b70d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de63a1e2-b3b2-44a8-ac21-4fe133c64743",
        "cursor": {
          "ref": "66fc1a16-961d-4b75-9a55-03f31ce4896e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e75b2db0-0c48-4611-a136-3923bb076625"
        },
        "item": {
          "id": "de63a1e2-b3b2-44a8-ac21-4fe133c64743",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5021b156-c27d-4912-b604-7171a97b18e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f784ad1b-a8a9-4074-9d60-d6fce8970c87",
        "cursor": {
          "ref": "58e7163f-6486-4be4-aa5e-9e6fbc4cc009",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1e6c4f85-80a6-4e92-b5fa-884e3bb9a5b3"
        },
        "item": {
          "id": "f784ad1b-a8a9-4074-9d60-d6fce8970c87",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c2a6b7a7-109d-41d7-bfe0-b6c0dbec5e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64edac08-fcf8-44d0-a0e8-18007a1cb6e1",
        "cursor": {
          "ref": "13696c33-ced6-43a7-8ebd-da3d1a6e5338",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "29d1d2b0-d31b-4600-9808-1fd16b11e0e5"
        },
        "item": {
          "id": "64edac08-fcf8-44d0-a0e8-18007a1cb6e1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "56c87e50-bf64-4e21-adb8-5aa7b13ab736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb97b5e-8490-491e-ac8b-5c3c9cacaec3",
        "cursor": {
          "ref": "caf76a9d-9bbd-4e6b-b44c-b73cf76f504a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b7899d2d-8105-4e73-8d33-303a494e5981"
        },
        "item": {
          "id": "cfb97b5e-8490-491e-ac8b-5c3c9cacaec3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9d36030e-bc5f-476e-a346-46a0ea255e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548d4093-0763-44ea-b49f-902dcc991a71",
        "cursor": {
          "ref": "13bc8927-5d80-4e05-8c7b-03ff88caa6c8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "80d9ecf2-9cf8-448e-85a3-2e4eb4451bc7"
        },
        "item": {
          "id": "548d4093-0763-44ea-b49f-902dcc991a71",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d35d9fd1-2427-48d1-a4ce-b7f014360be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7da6913-fa0e-42e8-849e-287f7e35eb27",
        "cursor": {
          "ref": "5e3aa84a-403e-4f5b-9c82-831f94c2a51f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dea7c01c-40ac-4ad2-abe7-3d04d5a8925f"
        },
        "item": {
          "id": "f7da6913-fa0e-42e8-849e-287f7e35eb27",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b74067ec-ce86-4371-a641-3ffff8d047d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11a37c6-35ef-4a9b-ad49-bff75176d501",
        "cursor": {
          "ref": "a43e66d8-d2ea-412c-95f5-704ff3f673a3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7a7e35d2-a00f-4e79-aa7c-40936034c438"
        },
        "item": {
          "id": "d11a37c6-35ef-4a9b-ad49-bff75176d501",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c183f7bb-e380-4d13-bdc8-0c4bd9c44968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a725286-d3b5-4084-abab-cc323b56fa46",
        "cursor": {
          "ref": "efa6ec10-3e5a-4366-b7dd-0109d90c466d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5f6b05bb-7142-4e83-b79b-30dddd27777d"
        },
        "item": {
          "id": "0a725286-d3b5-4084-abab-cc323b56fa46",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "35c02a1c-6976-4092-b497-b248bed2f21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044f7c02-9ef8-413f-bcff-b9729edce1f5",
        "cursor": {
          "ref": "5789bae8-9d9e-47c3-ba94-ea5ad0f355ff",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "905cd687-4fb1-4698-b093-b236070812d2"
        },
        "item": {
          "id": "044f7c02-9ef8-413f-bcff-b9729edce1f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4438a375-e18e-4e0f-a5e9-df4e1dc583f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee82ca20-d0a4-4da2-a660-b7f2474324c9",
        "cursor": {
          "ref": "313cb75c-0e71-47e4-ae2b-e6768a085659",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "218f4e3e-7425-4003-b3c3-d67664dc452a"
        },
        "item": {
          "id": "ee82ca20-d0a4-4da2-a660-b7f2474324c9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "91276411-dd95-4f47-81e9-5693fb19f073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e168bc-b989-4165-a12c-78ffadd3565a",
        "cursor": {
          "ref": "d640357f-3633-4f95-be11-c498b6d25f7b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "47376840-f629-4484-b960-00ffa218e63c"
        },
        "item": {
          "id": "85e168bc-b989-4165-a12c-78ffadd3565a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "70b62872-195a-41fd-b5ee-0b2fabe13f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9afe9ca-6704-4214-bcb3-765f8894e05e",
        "cursor": {
          "ref": "50268801-ab38-4663-b17f-fe55d7c9736a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f64eef9f-24f7-4110-8fe5-6c78046679e8"
        },
        "item": {
          "id": "b9afe9ca-6704-4214-bcb3-765f8894e05e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3f67bf05-2ee0-442d-bd6f-bd4ae35fcfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e3107c-a4fb-484e-8c16-63cea736685e",
        "cursor": {
          "ref": "0fcd7dc9-f9f9-4811-a38b-3accdca1f03f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "179c6990-aa8f-4612-9a57-f9aaab0a2c71"
        },
        "item": {
          "id": "b4e3107c-a4fb-484e-8c16-63cea736685e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "08929e58-6605-4fb5-98bb-983578e9609a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c78caa2-3a08-4bd5-ba99-c7be68c4144b",
        "cursor": {
          "ref": "c6f840ad-989c-48ff-8297-5044235deb96",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e6b93b79-8edd-46ff-b387-5eadcd148414"
        },
        "item": {
          "id": "7c78caa2-3a08-4bd5-ba99-c7be68c4144b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "21ac0735-3398-41cc-8940-77270ba9727c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69943d9e-bb5c-4d2a-9154-cfa667d30fe6",
        "cursor": {
          "ref": "b4152925-3567-45b0-9019-ffbf38abdd51",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3f33531c-c998-4f27-8e21-a1caa2381dc0"
        },
        "item": {
          "id": "69943d9e-bb5c-4d2a-9154-cfa667d30fe6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "71ed5e07-6296-41a9-ad89-5fc3e4e33ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e84bcb-72ef-407e-8318-8a5d656fb8de",
        "cursor": {
          "ref": "02c5eeda-ab1f-45f3-a3d2-345f7de208b4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "23f642e4-0ec8-47a4-b474-8d225d119802"
        },
        "item": {
          "id": "77e84bcb-72ef-407e-8318-8a5d656fb8de",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e0f56801-f5d0-4170-aa24-5559f6ce9d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499274ec-4ff8-4a23-936a-45f7c5f8971d",
        "cursor": {
          "ref": "b3a653f2-aa31-4a28-a1e6-718a89eb3675",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bad751f7-270b-447d-93a1-c89aaccbd3e0"
        },
        "item": {
          "id": "499274ec-4ff8-4a23-936a-45f7c5f8971d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "833aebc1-a888-4642-91be-ef485e97f324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c389d7e-2f31-4929-bcba-386b650c83a2",
        "cursor": {
          "ref": "33550c06-af06-460e-8624-0ae6232146de",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a3ec363d-f09c-4a6d-99bf-1c34163f42d2"
        },
        "item": {
          "id": "6c389d7e-2f31-4929-bcba-386b650c83a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "82665f8e-64b5-46b4-9c52-1c4b5b9f5b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbaf531-6458-41e2-b468-9392cd81653b",
        "cursor": {
          "ref": "58251388-7f86-43c8-bf71-abd5a44360ec",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2dba8ce5-7b49-4de6-a2cb-6a874c5465c9"
        },
        "item": {
          "id": "0cbaf531-6458-41e2-b468-9392cd81653b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6209f32c-5282-4b24-b4d1-ca958ddc8078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37af0156-c660-40ea-8fcf-3cba7ffe43c3",
        "cursor": {
          "ref": "a6e9c4f5-0a17-415a-9981-f79a5433bf22",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "eee6c6d0-ec98-4681-b0fe-f75bf39cd41f"
        },
        "item": {
          "id": "37af0156-c660-40ea-8fcf-3cba7ffe43c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f92d8167-945c-463b-8e51-343444dbd769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492cb8b3-c060-436c-9c6d-5b129e11996e",
        "cursor": {
          "ref": "fad21c9a-6622-489e-8fee-5f8035462d97",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3b29517e-add7-4550-850b-4ef09403ad14"
        },
        "item": {
          "id": "492cb8b3-c060-436c-9c6d-5b129e11996e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b291b620-a359-43b1-aa3c-33dfdf14dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234d06c9-5071-4a8b-9cc9-89d0ac42010a",
        "cursor": {
          "ref": "6e3fa1dd-b62f-4583-bded-375de6a5f539",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7c2e959f-a1f4-4cd8-bb5b-b13f40d2a559"
        },
        "item": {
          "id": "234d06c9-5071-4a8b-9cc9-89d0ac42010a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a42174f4-9c6d-4032-a479-f457bd87abb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59c43df-026c-4908-85e8-5bd7d1dc3fee",
        "cursor": {
          "ref": "b5ebeb5d-e90c-4dff-8cd6-de47e13a83f6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "84be9182-92ca-49cd-861e-c266b092b2e5"
        },
        "item": {
          "id": "c59c43df-026c-4908-85e8-5bd7d1dc3fee",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b1925436-9ced-4a8f-b41b-0f2c3b6080e5",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccc7b68-c4a5-43eb-871e-5ec873210388",
        "cursor": {
          "ref": "4ceda518-c01d-4410-a78a-1a07a99f4ddd",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ce550e31-71e8-4533-8f8c-e4998a1a2cfe"
        },
        "item": {
          "id": "bccc7b68-c4a5-43eb-871e-5ec873210388",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a853b7e2-aafa-4884-a1a1-f5394bcff3c1",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee638a9a-1068-4082-8bfd-3843331f4ccc",
        "cursor": {
          "ref": "f2dda942-5e35-4b0f-80d0-0a7eb2ae0209",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "982e8c8d-9241-4b2a-ae04-b18672de0b57"
        },
        "item": {
          "id": "ee638a9a-1068-4082-8bfd-3843331f4ccc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "950f9de5-a4a8-45e9-a829-172916bbf46b",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b216dd-a185-49d2-9b3d-440ba1bdf4e0",
        "cursor": {
          "ref": "1473e43d-6b17-4415-b0ce-7b166ceaa727",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "894b94ae-32fc-4ed1-a119-bb28ee9a363b"
        },
        "item": {
          "id": "77b216dd-a185-49d2-9b3d-440ba1bdf4e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5debcaf-856c-42fd-bb00-641cd7cd1902",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b216dd-a185-49d2-9b3d-440ba1bdf4e0",
        "cursor": {
          "ref": "1473e43d-6b17-4415-b0ce-7b166ceaa727",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "894b94ae-32fc-4ed1-a119-bb28ee9a363b"
        },
        "item": {
          "id": "77b216dd-a185-49d2-9b3d-440ba1bdf4e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5debcaf-856c-42fd-bb00-641cd7cd1902",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bbc669-7c68-4083-8854-33c133d0a29c",
        "cursor": {
          "ref": "6c3d0f12-ae66-434b-aaae-b882b49d302f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "97f9bef5-ed98-44c1-8f75-b9b019b9765e"
        },
        "item": {
          "id": "88bbc669-7c68-4083-8854-33c133d0a29c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "57d0018d-2f79-4a2c-ad75-daba540067cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4987cf8f-9d01-48df-8b85-2d89c1ba7e38",
        "cursor": {
          "ref": "95454403-ae18-4de7-82e5-6c3f3bcacc74",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8439e638-a4e7-452c-9312-f38d94361dba"
        },
        "item": {
          "id": "4987cf8f-9d01-48df-8b85-2d89c1ba7e38",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "74177231-f1d2-4612-9860-04fb46f49d98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}