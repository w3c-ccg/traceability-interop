{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf36087f-5370-4ec6-b4c7-d1278fb9e4c8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b01246f2-53db-4f50-9614-1c112bca84df",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72bbe3dc-7761-48a5-a524-a13bd1e0f42b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc332c6c-5cba-4768-9cd9-f52922bd375d"
                }
              }
            ]
          },
          {
            "id": "fce55e87-3bee-4656-ac4a-993164cbcdde",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "928c5f14-948d-422c-9ba7-60d3a3634650",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d2e0d4bc-7282-4110-a3e9-0cc002e408e4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dc0cadfe-1fb5-4af0-90df-5520fa0903ea",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e9f22c42-e99c-459a-b995-2cb811dd5650",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b78d83a-784f-4be0-a43b-52b02981c616",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5993983-9a54-42d0-b3e6-4967f67999a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eba18693-75db-4288-ad97-27ec7fe923ec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3a8e12a-51e2-42a4-8948-b075661aa289",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e79fd94-5214-4daa-ae3b-e9b5f0fe4b84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b1e6fbe-f87f-4a2d-8b40-2069382ed290",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad1650e9-e823-4a35-aa97-70d40e0df051"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edfb924d-856b-4280-a100-5606b51ca7da",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3de8293d-03f9-452b-b722-013119765a23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66f716dd-65c5-4956-ae57-9088414d2ebf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3383daf-28d3-42a3-9d48-d24dae0144fd"
            }
          }
        ]
      },
      {
        "id": "1b92830e-b238-494d-9a84-97bdf938b275",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "41405203-2eda-4cc0-822c-ab39f5365286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "868dcbec-3483-4133-92d3-79aceb5f31a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ff3112e-d587-4a0e-a0e2-79a5852a03c3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66769354-0464-49d3-ac2f-a5d33054b846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4798e17d-2823-4433-968a-702aabfbed00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2effd577-b0a0-458b-96e3-02486d1bd9ad",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b79f62-eb7d-4206-a88e-db3dfd33d4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b279eed-86fc-433b-a504-c40aa0432b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08a5b14-631a-4185-bcf6-4ef242e340bb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8c06f8-5b87-4601-a445-6c01aa33be0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81d23d52-99f2-4e91-851e-79ea0dc079d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89598681-97fa-446d-af5e-051bced8c5b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a3a8f5d-0954-4bfa-9b86-23a0b1ddbbcf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71889147-fb97-4da0-bc66-0b8f1526cc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc7383fc-98eb-484e-bd7e-d71f32471b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f0ad10-8d91-46c0-8e63-bd1ba99614a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0948fb28-4358-4554-a089-939522a52aef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "deec4611-9f13-4d75-babb-fbc3dc6c32af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "679a8eff-1d49-46df-896d-3f8cfbedc10b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dedca3f-728b-44cc-950c-525fbf2e2998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0e44ae5c-0139-4be7-a1c1-a9bdded687d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d858f91-90c5-4633-bf51-def15757e55b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7d3a28d7-3c5e-4e77-8b58-7c417e709a09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92d330e8-a0a0-406a-b06e-787cd5decf55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbf25b63-154c-4da8-ad1c-23b0856957b9"
            }
          }
        ]
      },
      {
        "id": "a24657e7-736b-4b37-86d5-e3ed142acbe6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2ecaa47e-7bd3-49b1-a871-7d679cb8cf53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1f9c2cf-eaa9-4f8f-a88c-134d671842b1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a84b004f-d9f6-40f0-801d-6d124b0cc978",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb0b19c-d1f1-4281-a644-ce801161811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4742967-84f2-4fad-9dbf-a0cd6455d73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7507341-4553-4477-b872-487d5e40c619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e542a4a2-4981-412c-bce0-ada68ddb3a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2c2c9e-4f72-4675-b5a1-9435d7affae7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b329189-821a-4378-beb3-48c377b8d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af483265-c11a-49e8-84cb-e57bdb3924c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c84257-3650-4595-b2a4-80408c1009a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc7e44a4-038f-4e85-aa3a-7e5c6ff7c1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262666e4-2e14-4004-b993-2277b15af645",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5322bc-24c7-4a60-8f3e-bc085cd6098d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2d27d3-479d-4637-bfc0-f058e8323e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502ca942-d9bb-4911-929f-b16719e74469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45a84329-a50b-4fdd-b564-6f6f72a81caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f42beef-bebb-4fbf-a35d-36c574aa2376",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4603a225-e47f-4be1-b378-4083c1a154b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd929e32-4994-4c53-af87-6a4c6d0d4e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9bdf8f-41f2-4e3a-97a3-f7c76a57e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a3fdff1-b9c6-404d-847e-9407f5c9bec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f5d7ab-4e90-4785-a608-d48986a90c3f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553f9f7e-e451-43b3-9b6e-305d5632c68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e27b2d-22ef-4fcb-b452-952c036fffbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f03cea-8288-42a4-8a04-28e015201c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa49f7cb-75a5-4b90-a47c-431ab752fb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc013428-9229-48c4-a0ef-be8ace893089",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872a71bc-2cc7-4e6e-ab4e-58bc868e7906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbac132-d492-4a88-b9c8-8dddd7f5ec4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064e6a59-7656-4b47-9cb7-b9dd1dbc7c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "add8258f-2f82-4ceb-806d-b767d967e269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745f4ca1-0937-4d07-b4e7-2f1f08f14218",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b1db48-f0d1-4ae1-aa47-56abb2dc44d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b5aced-20f0-414d-961a-bdbc35a2db57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a111197-9584-4951-a2e0-4479b33cad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95ca2c31-e631-4992-862e-25d7bff41f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af774048-9116-4804-b022-feffa83b4e0c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6454c6-6a0e-4c84-9ef5-81c64e85bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa50171-9e5d-4ee3-8d78-e9f06154f575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102f554c-20cc-4073-8c09-33977d3f0d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f6a56f-ba1d-4ddb-a658-0aa307d3c082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e99007-ad55-4afd-b5bc-5ba7779c2cf9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67520365-7df7-4f3c-befa-c9bc78810dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3732ba4b-a910-44d1-83e5-a03eaab55262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b94ac5-17ba-456a-9cf1-eed3aac10ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fe27732-991a-4ded-aaa9-3f34b09a35c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04593bb-2ec1-420d-b578-29fa22d1abcf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762f4c1b-ed9e-4fba-9432-4e47df563956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dab5500-8c3d-403f-b2d0-c974b0accae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56bd1f9-287a-49aa-b004-a4021fa724da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc0365e3-0870-46e1-b03a-678c5705e377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2412f4-2c2a-4dcf-b965-7cfe42664570",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e046e20-8bcb-4456-934e-38e8c1f959e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f90adb6-5962-479c-8bb9-02637f4d58cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d5de2e-999d-44cb-bbd8-63a97e4e40b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67cd53b5-2abb-4196-82a5-7c74f5868df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714f2ca4-522a-416a-bc13-1f56385b0795",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1580c8f-9cc9-475e-b5e4-b68e51519e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36720093-23e9-441c-b33d-6026bd024bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f991d80e-543b-4e1d-834b-8b2cdd8c56ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93b44e05-31e3-4321-a63b-81994479babc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5469af-a70b-40f9-b440-1a6adbda5132",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4315d2-2215-47bb-9072-b7fb6f0ee8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9698243a-f795-4bfd-971d-e14207c3e1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd186ca-7075-41c0-9d64-319040ea5e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6700aba9-4885-4e15-b7ad-f7c83b245d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c36c43-655f-45eb-bf8a-0b4a0f50b020",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5248ea4a-9f15-4d1b-9485-2f565dbe0cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e31bbd5-f46b-4030-b9c4-a21e567951dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d28f132-824e-4fc6-b160-77ad49d321ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a8f5d1b-e048-49bb-a252-0b72259ff2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc973758-da96-490f-9572-ca36fee0ea3f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83df1b89-b6c3-41c3-9d68-719d0f9cd8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef374e1-ef5a-4331-a53f-af14f126048f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a589aa8a-5112-4d64-b961-d75bb14c48e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38b04786-5ba7-465b-a94f-ac0134e48032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162f5520-5c51-42a7-bcfd-84539e7f773c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bb3c4d-1db1-485b-8379-d293563b4ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef49bc62-acb7-4df7-9a38-d59a56000db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d824df77-7249-4f4c-962a-b9c315067bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ff1b9e8-77a2-4e5e-8927-508692f908ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306cd132-0755-4b0b-9242-b87309de0e9e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4765a302-75d4-495b-949a-6ee0b3047bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96ab2c0-d597-4832-a3e2-f4b8aae2e7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aa3909-62ca-4f3d-8d25-61d33e1e5480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1b258f9-5aa2-441b-9b59-eb502e5cf73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dac145-6d65-4b52-9a64-9f943196592d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d604a0-cda7-45b6-be11-b0c65818573f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24c9653-c453-4227-bf36-da4248b8d663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a942790a-1743-4aad-b2f5-7c57a18f4ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d8b589-80de-4737-b78f-0e1735471c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6845eab8-0157-46b5-bc18-99542a816eac",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b281de-c44f-4db5-9588-9ba0270a3764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cfa30b-2c78-4791-bf47-9e5366266e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715bcd82-30cf-4abc-b6b8-80cfbf51ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd1d82b-2f18-4c4d-9bf3-d39ccb5728dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6da151b-afd1-435a-a637-5506e1b8ed24",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d14d427-0ae0-4c2f-8062-1fd31434d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61825005-a5b1-43c0-a2c4-962ba51264de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972d9f96-98a3-42f5-b89c-1dcd8ca0fec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "545d931a-2192-4ddb-a0a8-52217e157c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dcd167-89d4-4201-be56-397d0927736a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11084b97-a409-4870-9b95-1caa6db679bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7daa793-fa41-4cc1-82cd-95256eaf1365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4007e21d-e799-456a-be25-c0260eb44cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e32469-105e-437d-88d3-cad2df1fc633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16225964-3e7b-4023-81f0-ee3c909a2bc7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faae428d-b95c-4d39-b743-dba793932000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d638b646-f99f-41f7-8a10-e84e21e173d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa1aa30-0782-494f-8eac-41fa199b72fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78f5faf1-4fc5-48fc-948f-5e13395bacb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901e7877-c234-473c-8610-a2f4c9d7cf16",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eae7c2-55dd-4b38-93c1-71085587b968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4055f5c-64f6-449f-b687-23ff114a12ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b733d124-5850-47a5-82ba-2f1d695aee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0a8fa8-387c-4c51-aef1-229d953470fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700f3df0-83a8-4ed1-9209-f00aaefd4f19",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0050ade2-18cc-4339-bee9-1d6f49b90884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74b5e52-edf8-426e-aeb9-0e7b1c84e79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd2d72b-3e32-4474-b015-93d5caa3aa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49de739d-cae2-4ea9-b1df-f59e69935b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6e4c42-32c2-4d43-8862-7a5c5acc65b7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38be3f79-6ef1-4bac-a7ea-98eaac96dfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffebb13-6a1b-4994-9004-b68f99b35ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bcc520-8dde-4f2a-b6c0-16bbe55794b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "383ee105-c7d1-461d-b975-7c2a09002933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e1a95e-847e-43da-b161-d07013cdc1b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89569f17-9bae-4e9b-ad73-68268697d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b370e03c-7ced-4c25-83be-6a40f563fc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31f4f12-bdf3-4b5a-a9aa-9e5f37f81d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0775b04-5496-43c1-8636-5f935cef8b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d4dae4-9820-4803-9c48-bd43c1b8a1d7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdc62ba-6a9b-4ffd-b57f-f5ad74401b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c549f620-360d-470c-ac27-d4e85476d471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937f5b70-cbad-4d5a-8438-d91129e81bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a850ee1c-d92f-4cd4-ae11-a90318f0e8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d98a84f-7e95-4875-93c9-cac58313ecf0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948ca939-3b46-453f-872c-4e7cf82a142d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43457054-d936-482b-9878-33b197700e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d26c5a-7f6b-441b-ac06-c1bd7be5d134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae2ed3f-92ff-42c2-908c-74a168e60a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ed8481-c873-4d88-940a-37d62537f180",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551b3a01-96eb-43f4-b69b-e0abd10357f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2e54d7-11f0-47e8-8251-d354cd79d553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27efc4e-fcbd-40ea-ac30-24c86ce4356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "800c3600-d763-458e-87d4-e81271455d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15caf3dc-2456-4aa3-af80-ffc97bc59445",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f597cfae-6f79-4ab8-ab16-d327364426e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65327e0c-cb1b-47b8-953d-b28ff58f50d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faabd556-3a5b-460e-ad47-2ea02e62c0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f826f8cf-038a-4beb-a095-e4f81a8290ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb2e926-9b56-4fd1-85e7-2c5a81cdacb6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1aca4d-b5fa-4b80-b677-79cbde1f62d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77da0dce-2f2b-412c-a345-1af9e78d2c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e15dec-a1a9-4473-917a-ea719321d3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba304b2-1cf3-4a75-98c0-e10bb6e738f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dcb241-eb77-4e7e-a4b5-4a2218c93957",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b34d88-a81d-4f32-a30f-e10e69a4b002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4303a7-6aa6-46a7-8920-4d276ef9e77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ba9151-97ed-40a2-b604-0e39285bd7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e466e6dc-6314-4391-9115-dece297dd4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935bfd31-d35d-47ce-8bcf-ef2bfe9bbcdb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294164f9-c32c-45b8-a033-1d9c50d21098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ceec8d7-1ec1-4462-9c44-60a980ad0e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4207b0f-1a2b-4e5e-9c72-697e898f406b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b4caaf-094f-4c12-b278-c2d3867e3692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71468ebd-eae6-49f7-8ed5-2a7e44649c27",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504e71e-7705-4f47-92c5-9f2554a58e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c9faae-2762-4ea1-8718-9f1085ae8c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237569ca-9917-4bfa-b2a6-d887af0e9fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4501703a-3492-4b8e-9a93-7a45461647e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d515145-0057-4c71-be5c-2cb4f99ba59d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd8d6b9-a15e-4692-93f7-7bc2ade8ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b255188-96cd-4ea0-84fd-35f5fd9502e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ed7836-1c48-47b1-9192-3f6ec6bc15bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "897694d8-6a00-4310-8c90-cd12a6a274a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1293e6-90ab-41b6-b139-a83c0191e336",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9312a05a-2454-4677-8797-ffbcf0024f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d9a660b-45b1-4bf8-914e-0578ac76843d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eda621-6a15-46d5-8a1e-689380cd5c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30ce7ba5-255e-4b09-a765-817bcb0786ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9328f9c3-fb43-42db-809f-51f609d1719f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ac224c-0a06-4039-b7d7-c7b5d62729c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c4e3e7-4f88-4636-9441-a9587d15564e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2634d0be-afa2-4bac-a7ca-e0da161b4698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e98e228-29e7-4a3a-bc9d-b83902842fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd7cbab-99ce-424a-bdfe-abc1316c58e1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f999688-4765-4f1a-b14a-d99ebac062a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0addaf-cd21-4c90-ac68-5b541f68cec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3744fd6f-4f9f-4bd9-8a75-e3362f18f1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "adc773aa-e5f7-4733-a386-6aa8282f418d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afc6be4-56ca-4360-9ca0-2dc9e4424142",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98c3956-a8a8-4b5a-bb76-86c51948c8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9752d159-2c3d-4fdc-a295-3fe619573ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0fbc15-7414-45a2-9038-ff3443092db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f4baef-6375-423c-a383-2a78d9a9caa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768de08e-1b5d-4a7b-8202-c64d08660891",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf061444-5af9-4aab-ae5c-a88afdf94dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9856f7d-32ce-483e-86cf-486ad35cfe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e871ff0-1d5a-4ce1-9bff-56f9116ae976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bda679b-9dfc-4b0d-942f-9456804baa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ff3db1-8d4a-47b6-8bfa-17259a61ba04",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27b64c2-5fc5-4a79-ab4f-a15a1474259e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8149f7-463b-44c6-b2dc-8f9da98a8df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdef98e8-0aa5-424d-8bf8-ce7f51486960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdce043-9c27-4029-ac15-41d7139ee4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc2944-c0d4-4640-a8aa-d959418f1e40",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0daf66-b489-4846-8971-8a12b93d81a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232ece15-b2b0-40bf-ae91-09f89210082f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b58809-2004-4007-aa32-f718b37dc034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "79edc720-4158-4e35-9544-ab9ce7e08e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d48a00-4c8a-4a6d-9d47-442ae94f2308",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e850d7ac-e65a-4d0e-a3c9-755373491f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e278b8d1-df2b-46fc-8fae-14b4338b8d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5badfd-745a-4451-aa3f-0f4ef74f9757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc72dca6-1911-4e04-87df-8886c174b6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df41df70-7ccc-420d-8e5b-e2fe5db35540",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df51c6f3-25d6-4efa-9611-3a727e7f2fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc67c42-6af1-4139-8d56-8808be2bb715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03752b77-0373-4974-8818-cab3f9133ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0934304-24d0-4678-a98e-1e6e4134d6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f92124-9c25-4948-a1d6-945cf10bbae7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d67ccd-3584-49a6-9219-afbbb33d63b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d77339-fd12-4471-9498-332dfacd2f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab167ab-6a25-46ca-98b8-f43d2d51e84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a9a180-b9fe-4cea-8510-f6bf1f2ad1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f10079-ec47-48ff-a995-1da91a5c6ec8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811cc384-d5ef-4763-8672-f8e887fff6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85fc345-fc59-487d-b954-eee9df68a932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c0a701-d27a-4d75-8cb2-264a230cf013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56c4d24-bd23-4bd6-9e63-cd8dcb1ee10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e605e5-2627-43ed-b06a-294b85ab3702",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4af528-9591-4a26-bcaf-4c6882f844ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5de68f-42b0-4fd8-85db-964b58a20d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481ffebe-f47e-4b78-b96a-c19fce1f734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29bf3572-7f34-47f0-b8d7-ca5627f43552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e11954-a181-4a71-b288-982b33ae947c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20d993c-1135-47ef-a894-a823fd1da2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90543fc-5a54-4234-a0e5-3862649ff447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fe7e03-a2ad-437e-b7f0-7771e2a060e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d594c91-f13a-4803-8b54-7edb03c98abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6672d2c-bd4c-4e28-9bcd-163dfbd463d5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a410ff-e08a-4599-9815-081cb93bb2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a16079-8a83-4e3b-a4b9-71445ce0e41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db51257-e1e2-4305-ade1-1bcdc6faf855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be2384e-7529-4c59-80b0-a78d09f43bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5ebbbc-7eea-4cd9-8436-cd68fb974c2b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7975043e-be41-4cb5-bee6-2ad5adae281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea3504c-4829-4cb8-bb1f-d7a427bfda66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670e43bc-98ad-46a1-b836-77ecfb65230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d25b7290-24c2-4fd9-8490-4bc8891da8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e107b87-1c50-46cf-9446-28c7b5b89037",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a795b4-ef82-48e0-a4da-3b627e3d4ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803653a0-1590-4dfc-9bbc-0f8c5ccd332a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288a8342-f846-4ddc-8781-a85e0888a8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd54bec-b7be-43ed-9736-b39313ec3db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ad3eeb-fcdf-46bd-80b9-490c11e5b66c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b20e16-cf45-432a-bb83-e982d6aa567c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2f2434-2f24-4ddf-ab0b-4c3bc3d2b4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e89d897-9e4b-44f5-9203-42ea4d40394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14cd9bd-13ba-44b0-b2cb-80ee34d8e18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bd1724-12db-4301-8b45-38f11e20d830",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed48076-f71b-4f8b-85c6-529e64a02371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa89f92-dd7c-4ecf-b083-bbebea0be90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8577fb-0af6-49a8-bd60-566c667571d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb3451a-1e51-4741-9b57-150759a192af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d26e969-8cf4-45cb-a146-3806649057a7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d122971-adf9-4991-8f03-cd2ead24cb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc478f3-c6b5-448d-88f0-c255958a71a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5042a-441f-4847-b2ba-46e3ed60eebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd490e3-b661-41f3-bffa-ee1f1a218832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a532cd3d-1932-4d32-9131-049a9cf4f8cc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a7f95a-91a2-40ce-8543-8ebb13c4dffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3241b1ca-54e0-470b-9922-a2e8d4a81c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64f5db5-ae9d-42e7-b973-e5e1dce19e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef62518e-02cd-490c-bcb2-42399ef78919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd607867-587e-4f61-b4cb-c739d5cce209",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f13907-8e1f-453e-b9b1-f476fb7dbb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c1b780-6e60-494c-9e14-c03f6c442ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc9e0a2-a803-4123-88bd-9a0c22ab892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a32f2034-372a-438e-94d6-0712bed3a3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb25e58-8b92-42cf-96a3-cbb99dc71871",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988688bd-c1ba-4e95-9a02-184b58538eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f846e848-8b9f-489f-9076-37538fae4738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385b0bc0-7674-48d4-a1bd-f3f562d80d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e267b2-7d46-4a53-9f5d-f0ea3008aedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8952e4cb-bdc6-4378-8088-706ac57d3052",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f37a78-8bc0-48a1-8d3d-fb6e991d61ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5242cfde-e4e9-4adb-b6fa-bed8ea10a13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfecd1df-7335-4a4f-a8e3-b41cc8e7d946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54ca4187-8187-402c-aa7c-f6ae31c7889c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9081634-5bd6-4c78-bfd9-af9b461c3f97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d732826-4970-4b55-a384-487586a93ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05e7fc2-8d13-4b49-9c48-507040c4f7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679817ad-cf44-4212-ba02-d642f79f1077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "737895bb-a7ba-4c2a-9533-1367d5b3eb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be94bf02-f236-4f75-82db-dd2c7172aa6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12526bb7-5b5f-49d6-9ae2-9d0af4e5e100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32654b0-b337-4694-ac64-511375570481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7e1568-88aa-4767-b13f-9c886053324d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c12280-4dac-4930-8806-411a6be889b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4c51f9-6395-4972-a89f-7bf627e1fc28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc733cd-60a5-468f-a1f5-85cf19ee37d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46e0601-2f65-4dca-baf2-43217d367e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff86ffd5-ace3-4ede-86b4-b6ff39532fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e45ef090-c338-4e5f-8ae3-21f74a95079a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0599f5f2-496b-4783-bd1b-cfcec9f96e5b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404f40f0-47a2-41a6-991f-7ab03b88bece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df51364-3a09-46a8-a173-586183596be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dbbf8f-8cb2-4522-a300-817aa12ba7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f538caf-44db-47d1-95c8-53caf2f4bb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1005dbda-7628-4ffc-b8a1-1ff6e3930335",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dbfd63-6514-43e9-9201-0b1242d6d6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0f4dcf-d716-4792-9151-9dc0239edc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e272382-1db7-4c0a-8a06-52c4bd582af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3488892c-94cd-44da-9c9e-c84293630bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3beb2d7e-6b62-4992-b7fb-0039ae669f0f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad4a1a9-d9fc-4219-841f-e031c82763fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0402d2-78cc-4cc9-99f1-f0983c5921f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233dd2a-33b9-4378-953f-617b938099db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "022167d2-c451-49cb-83ba-a6931f81968e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f5854a-5414-49c8-a480-19cb18f6f53a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3bc2d1-0034-4290-b4cf-e6696c7fe47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d97d82-b661-4f47-a500-9a2a22e60947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b654170c-4b3d-4969-ab03-85868ba0ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "753d6633-658e-45f1-b239-474abeeaaeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18257e3b-2e93-43bb-86a8-bd8a79e4033b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ea6170-31aa-4db8-a593-c7586ac76cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d394a9e-ae2c-46ee-aa26-da8c29e21c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cec66c-55e6-40ed-a073-e38d5ade64ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f301ea-1c83-481f-8eaa-ff2f8a37b87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd70941-c240-4bae-a832-acdb031a4586",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbe5feb-eaf4-4719-b9d7-269dc1a516b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2eb411-50f6-4fa0-a6f4-6e50040836d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fdc197-4d73-42cb-909e-b449b20299ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db91e4c0-6275-4f11-9d8e-5545e00f7226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b220c095-9ce2-41fa-9331-104d15bb7429",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c4d61d-5081-4106-9a48-c1ec1d24607d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c149eb52-6d16-41aa-944e-02432d74a3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dceac65b-e835-469d-b454-4a922770f55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdef7e5-f76f-493c-ae9b-2ee145516767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e02412-a750-4268-a4fa-67ce828c8185",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4e40d7-343c-4ff4-b6ca-9c0ec5dc7137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573da54b-fdc3-480e-8c2a-37c714d2fc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b308b3-3e09-4008-9431-1d728f2cd409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd04be3e-fbea-4d42-9377-3c0a158d8a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac54a58-524e-457c-97c3-ab888c9df999",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b765ac94-0009-4ae1-92a4-060986b1fe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ba0a88-a1ae-4e9b-a82a-7905b3cdbf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee04aeb5-0122-4eb3-9a83-0e1aa47b342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "800ff34a-9de6-4479-9ec3-2ab17bc6f596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ac1cb8-8848-4413-8de0-64b2d1abb1e7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308abe9e-0ba1-4bf3-9400-44a8105bdb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf19b14e-4e92-4252-8a08-f887447a5607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278fb48f-c32b-4d3d-a042-b2869871bce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c78b4951-90c5-4a70-bf18-756e5d2f893f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d498c3ff-acf6-4dee-9613-9544b58480c1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67adf9cf-bcad-4e0c-8129-c145aa277547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a7124f-24d4-4cfa-8f44-7e4c87eecff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a0ed5d-20a0-4ad7-96ed-f0f8d78cfe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7aef21-9f46-4e80-9c92-fc3be9558000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6844b970-4e8e-4aa0-a375-594b183a4e1a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d677a1d-2c07-4697-a271-ca8595bdad25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15794879-3cfd-4b44-a71b-fef0f74b1492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1783c005-2900-4590-bca3-3f5c6d9604de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99854002-5449-4401-ae43-d57cc2a3c8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafd40a8-4354-4aa0-a524-6784eba35e85",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb71faa-2fc3-415f-8abf-3390ba2966a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9376278-833c-4747-b869-2a197240c30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9167e6f0-a85a-43c9-8bd5-3bc1d02290ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cabf6c-9d8f-40a6-a4be-bde93ca60801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb18022-4f07-4b33-8c0f-a481892c2ac2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66a082a-bd19-4d65-bc1c-248348c19244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917c616f-2a83-4177-847e-23564a45d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8653d3b-0084-420d-9d81-01e925d6de0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd51e5d5-a499-4224-8bd6-adece2c7e5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8c9962-ece4-4df8-8e60-8ada6845b834",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9a11e2-458a-4e55-83ae-61e370908049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75eb25de-aebe-4ff0-b814-c8e404b5f311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e3966-7a56-4cc1-934d-479a44b6528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f44a37-0096-411e-9adc-e936db030f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23dd581-f66c-42a0-8776-cee14eeff800",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ee587-6d73-487c-9abf-491c0d81825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b8a059-2e58-4da0-b487-c5683f0b1f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0061e9-bbe4-484a-b56b-47c4da73e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ec4e5b-c737-455d-8d50-3b724357dc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f55137-5f33-41aa-bad5-d35a0a121414",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f985f8-f7e7-4df8-955b-c46b89e1087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d99332e-dc1b-4c1a-9d74-d92eee7db542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e775d31-5792-457c-8a33-96da15b6e711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63854111-02a0-4820-97fa-619f66a1e311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623ba48a-0aa1-4681-8a3d-1262a8f65f28",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d340135b-c6e3-4412-a0be-2c3385f82587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a283f9-aae3-4b92-bdf9-174df8927952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8bd930-1759-48ae-9e32-22f700cc4dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f072700-c3ac-49d2-aad3-3cb9e45e1f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e5beee-cab8-4adc-8eb2-01dbbbeefa3d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcb22f2-b4b9-40c3-9f35-39f3b875113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c10ec2-7fb9-48ae-a4c6-50386f31717e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f042e91-7c10-4539-9bf4-94bf783bc906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "673a487d-647f-420e-be8d-a27832ef1225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea296597-2c30-4a49-bad9-1f1a0d2b03e8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9cd3f5-fa1e-4e0a-a7f5-93f29a925fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7ee7b3-ce8a-41b4-958f-1762c16a655f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d286e3a-7cb3-48c1-9eda-d60cfeb09456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f6bc8d-f620-4fa3-8eb4-3735868acb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096e3726-aacc-409c-8c7e-fdfaf730bd78",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b4df7c-2e8e-4a53-ad67-8aa8b1e72358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0565fe96-9daa-4f05-a120-016537a6d8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7a4f6a-78b5-49be-a200-7a4402bddd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e94f37a-5f05-407f-a977-926dfe2ef443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d69414-1df2-43dd-95dd-9a09e51ed086",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb43b297-7cd9-4eda-9a86-465eb9ad47db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2246628-c17d-4bb8-a78b-3cec7e5f1004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78ab1b9-71c1-4b9d-a732-371a446ef473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37203a7c-7f39-4d86-a923-b662fcdc411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1701e0-5703-4726-b45d-18aa5184a0f8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec3dfcb-9fd3-4adc-85c8-0761a1567153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f485b0c9-67da-444e-af3e-9cc9e40c0c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3451e49c-c80d-43e9-a942-1598ca7bbf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb154bbe-ab1d-4d77-a980-d5d93d5877e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753b5dc8-807f-4ed2-97eb-4b466a63cf47",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27dc71f-b0cb-4283-8237-a7b711efeffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a070107-85ef-436b-8999-ad7b2312e1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd5ab62-2ce4-498e-9799-8ff8460caea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "690367ec-4868-4cf5-97bf-e2d66357f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c238aa-3393-445e-b734-30a76afdf386",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059fde50-5c83-4dc7-8b8a-c366b4033c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578d439c-f7ff-4ffa-bd61-90745b33037e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa317f33-9269-450c-a9cc-10582bfc0be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0913a2-38b7-44cb-9924-c4b7ec085089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3875c8-b21b-4390-a9fd-01c8d3b17b91",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1dc8f1-8d40-4c56-a0e4-a5ec5df18fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f293500-08bd-46f7-a76f-df6a6beb8066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a95ea17-dfd8-486e-9859-f58b354ba2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c037d5b4-8e5c-48fa-b2ef-8c71f6e07f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a101c3f-5c0a-45af-80e4-7c5cde5513ad",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af63c7f7-c61a-43c8-a525-8266d4e64aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb173b0f-e244-45fa-aab1-134248847306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f53c29-a662-43ec-af85-94fae33e5f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a248ced-903c-43e9-8eb9-c5390367aec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6cb873-809a-40e8-819a-cb276e05cb82",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed92d5-3e10-4a27-8e4e-bb69c628fe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582d6de0-5367-4251-b538-ae27df28de11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57105154-1e58-4497-9acb-0dfe3742aff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "852ac884-40b7-42ba-9250-54f906fa2972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243dc4c9-b6a7-4f4e-8182-aad9cce8fe8e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b238bcf-edd8-4ef5-a9c8-2da2faab740b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b5aa19-5f21-4a34-9e4f-874a45e5df7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d092065-a0a3-4cfb-9dbe-e5143145598d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d14a39ae-ae8b-493f-8010-2c6c1c3a01a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8688b6-55cc-497e-8a0f-ff3ef1131a6a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e9cd73-83a8-41f9-9a06-857afb403062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89fd788-86e5-400b-bb93-b0417f5d76ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dad029-d589-4276-a343-c9120b6a42c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84eb234e-d9cb-451c-b459-c03eb8be91fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e1f899-1db5-4d5d-9fb0-b00257ce2bf7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a46f780-59b7-4277-bceb-3d68bb702c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a0c8ec13-5538-4cfa-8729-e75cef66e090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14a2e8d-a624-4d28-b7cc-d8b64c44b28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce99d6da-c10e-425b-9ad0-c88bbefcdb14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6cfec0c6-d67e-4236-b023-9427f2d357de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "916c5685-acab-481f-a48c-92a85471075f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae805b2e-da95-4fe7-9ade-f4356e5196e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fea0bb30-ec0c-4f7d-9b39-a0707202f4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8eff1b-f149-441f-9c07-dec8213ffc15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "822ca262-190a-46a0-8742-40a037eed48d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0344a5ca-f1b4-4c86-bd73-518dba6628fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86b610f8-4240-4166-a749-997b05942181"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64333b4a-1c6a-4954-97bb-d8b5c2976e9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85966a2f-b5a1-4055-ab70-3fa5f5380382"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff4fa2b4-8dd5-4b85-8359-e75b9e0a3402",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11daeb89-e3b2-4dd6-84a7-db8e3848b2be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3ec8ebb-5d8d-466f-acaf-84504b9e1536",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eff98eac-30e0-415f-9d23-804b50c3ca02"
                }
              }
            ]
          },
          {
            "id": "aee8935a-fda4-4006-bd53-a48352646d0a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04b0bb29-94e7-4abf-8df5-b4357c1d806c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "563e3763-7156-4811-8400-64a0ac7088c9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c781ec6a-c28d-4eb6-97d2-5ebd3d33fc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "63d49917-b91f-45b4-907f-86f9e850617c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db24f973-a7e3-4718-91dd-64d325239631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd71f17b-e24e-4856-aa19-0e1e743f1fac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35eb34c1-bd10-4eaa-a292-7de6b90b0c8d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f695e2-bf23-450f-bd4d-ae22a1d912be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f1039d4-e847-4634-817a-f254d44d2a3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b88896dd-ffd8-45da-bc54-4c820853e00c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0d123dd-dbb6-49b2-b174-be23ee86696b"
                    }
                  }
                ]
              },
              {
                "id": "b8261748-70e6-4796-be92-f112ca24721b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d25ad70-e0d7-492b-9193-42713868cc0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fcbc662-8a50-436b-92cb-e9163e41347e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa2f56fd-0033-4ba2-8430-7d8a80b46a24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61fddeaa-6208-466d-9849-d08d5c571cf5"
                    }
                  }
                ]
              },
              {
                "id": "bb1d814f-43fe-42e3-a7b9-204a05988a1b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dd0916d-3dc1-4ae4-9d81-74bab02779ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5e1f167-eb22-4acc-bfab-aec583b83c19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deeb3d27-ec7a-45eb-a5eb-bd0e124da1e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47a28a84-257d-4b12-bc02-3afd66bca55b"
                    }
                  }
                ]
              },
              {
                "id": "c2baacbd-26aa-4afe-917d-58539ab1b506",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec206de8-c470-436f-942a-d4782f7a7ee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9108de1f-e9dd-4348-8ad6-174142bee0f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c57ea061-673f-48b6-91c6-fdcbc9ee6e6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d65351a9-7ba9-4586-abbd-9585d55c807b"
                    }
                  }
                ]
              },
              {
                "id": "574ebf3a-5403-4ecf-8dd8-4c6a68995702",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b2d733b-9c64-4fe2-8065-0f7360fd904a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5143517a-55af-46c3-8370-2446d353ce70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1edd0e4b-598e-4341-b4d6-24dd0248e7be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "24a585c5-146d-49aa-89fc-f17a77d0712c"
                    }
                  }
                ]
              },
              {
                "id": "1e88488f-98df-497e-b15a-65034e472d70",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de5dc06-b65c-4ae1-84e0-50b7db28c5ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "647e8bd0-da8e-4a60-92ff-25e0e85564f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdf3d8c2-3177-4762-b4dc-d25574831447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6044155a-b138-4b8a-adbb-7df2cad13400"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c0ffed8-8aca-4b63-baed-0e1a0ebfaa04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30e96d66-e70e-4b27-b278-d625f57ff626"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "effa6008-cab2-4bf0-8957-8b4abc30a406",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9317f503-54c6-4209-afa9-ed131e322f6d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88b9f7d8-e02c-4621-9a1f-e1ca596b8681",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4a6c6834-c297-494b-a5e6-cf17f87c60cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3681655-0b5c-4982-9d59-bed12fdc8839",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b224af40-2d3d-4ad6-ab9c-ec2df9ccf5fb"
            }
          }
        ]
      },
      {
        "id": "f1a513bd-b1de-480b-9881-0a5fc3603811",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "77ea1b7f-6ea1-4491-9270-564b06e6da76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9b4d246-b222-4ee5-99a6-6c0fc8703304",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85509933-3b9f-4e9f-b2eb-023202e89aba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35270ba1-1a63-4539-92dd-90060887b9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92312043-e4f2-4393-9e32-3d9892326e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd669c25-b603-4445-b539-8ea6ac636fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "945e4013-eea7-48d5-8935-077e167ea36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0172782-aff8-4c44-bfca-24f1aec1ec40",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa4fe40-216a-44f5-ac45-f69af583be73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bf896d-9b36-4620-84fa-daf164676cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27feef3-ed0a-4b69-8aec-7c57e7d026ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8aa3b0e-3556-4de3-ad58-5969f12b3d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8898960b-f57e-4db3-8050-59daa995a571",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a9395a-cf35-4c2a-9c31-6ac403cada60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af304ef-ca30-451f-8eef-2f1600a689aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d794de-2547-4276-805e-c11d4f993b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc9b490-8e9d-4113-9faf-bcb8c3ec5cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b132f4-8628-4c51-8ae0-9226d7e0c855",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40bb86e-6292-4441-9f2c-e91d023e61d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6a2e79-cccf-428f-b6a2-48010078f45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac30c98-f5c7-4a8c-b4d7-21336218d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac48a91-2e0c-4763-8a42-f8c28b040572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de52d7a2-8883-4735-bd5f-761b5edba785",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fa5324-4476-4f81-a1a6-8e1d9e6fe3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2475fc87-ee35-4b38-8301-9c5ac7558339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12162df-5dd0-431d-a683-6d61cf2cc048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac2b5dd-ce2c-43e3-8d18-8a4eaef65202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef44659a-97f6-4ddb-9aa3-ac7c02d8c196",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc1f58c-0263-4cdc-9522-f22c53a9d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862ffe7f-2196-4478-9afa-fe25b3f0ab01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a8ecb4-4e9d-4bc5-a19a-1d35acc65039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a085ada4-9d4b-45f0-b5d6-0697f0325549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95825aa4-b9b4-4650-8655-d48a9d1b7509",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f26cdcc-8bf5-492b-ac33-98a55d27ce92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ea9eb9-9ac7-4999-bc8c-83202e159217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401bebbb-e905-42de-b8f3-f9df04c76a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f099b9-c9ee-4f2c-8fb1-d679fd964baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06729525-89d3-45f9-afd3-ce0cb9a61f0f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f7eefa-e4c6-424d-9802-0297853cf600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f881807-6243-4e2e-a09f-442db7e3bced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d947f-a097-432d-b745-ef3ff092556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ec32de-5626-414f-b472-6d6e4a2394d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b4bcf9-3fa8-4580-96b1-23e0025a908b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09777e60-1047-430f-8a0e-d315a2573073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da10894a-b0cd-49ed-a369-1c05ed887565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26d4773-651e-40ea-8ce9-aed7445103d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "792028cd-74d1-440c-a744-d3e050b0a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78a7851-bfce-4087-891a-39a95b404780",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4385dda3-b81a-4195-9d68-1ef8d6b05bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d6102a-00a6-4964-9459-01f41b41659f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4834118b-c400-4281-83a6-a1fe8eb92db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b59104-cb62-488b-8846-c743c056e11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f77f9a8-27f6-444b-96cc-de00baa0b4c6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0907a7-50bf-4406-8535-a7889e51ed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1864c9a-3e9c-4abe-a26c-0345d5e04512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe9fe0c-fec9-4f7f-a1f5-614f57da6b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e2dfffb4-5c2b-4aee-a008-072d2619a694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a687e419-8fb2-41ec-bcbe-c1f6846eba96",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3fd9c1-463b-458f-a5b7-caa3383b729f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e85c5e-b62e-47ab-b2b7-2c300cb5d266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9919806-3879-4d9c-9ebc-efd0ba2a54ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6114abe2-12d9-4b75-91ed-9bf1a43b7e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7674d95a-3def-48db-bc75-1749630becc6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abc6ad4-60fb-46d8-8b2c-9c4677ea825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5ab862-3637-45a0-ab67-02ebf60567c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f59a2cc-e833-4071-964a-311285f2b6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78bf4d3-fcf5-4292-9910-0c78b727fb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334ab0cd-4e31-4b48-9459-4c9af7ab874a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54b8271-32a7-4b6c-97ba-6081469c3391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14372fbe-1737-470c-9ec2-6432e83866d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7a21ea-3cd0-461d-a1df-9e7052dfca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8cbbed-e1c2-4f63-aa8e-8cf098b2601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5982110-a3af-45a4-85f1-f517da3a3988",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e404d8eb-27bb-4177-b473-e148f5910c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef8f584-6ffe-4f0a-8339-f295d88b3ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edd6dec-3738-434d-917c-cad5eebbef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "546a659f-caaa-41e0-b6f9-1639f215d7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ff5811-5c0c-4d95-8dab-1d4a94e2d108",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d1d288-93d2-44fd-97ec-b1fb9213522e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6301eaa8-69b7-4cee-90ac-4af911becc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2792ee-d595-4f12-90e1-cd526780ae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "28d1c306-a729-4bbe-8364-a8a7c76a38ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9d22b8-c547-4878-bd2a-3e1a9d3fa528",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7cc000-020e-44e6-8ff6-94168e6f476f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19d30c5-fabd-488e-ba4c-4bf050d26d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c5470b-f218-46e8-b98f-127a155f3d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "248b0d67-f046-42da-a325-830eedf14b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741f3f97-a1d0-49b3-bb20-df129521fcc1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bb9858-82a7-4ca7-8e64-ad621642aa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecaa8d3-c0ca-4307-88d9-ac59f2626adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb3de08-0e1a-4111-8ad2-7246e6aadaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5293b3-5e06-4efe-a060-7629972266cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62294c0f-1ad1-4748-9827-80437424f60d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89171f76-e5eb-4729-b8e0-6175924e237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fffed3-9dcd-4f89-957b-75e864b2b627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe388e9-5fbd-4ee7-9e88-762117025115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4245aa12-d39d-49c6-9cca-6e6dc12a4787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db18392-8b68-4144-a63b-35fb79d2063b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67ad692-0d02-486f-8334-f21b43a0c64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbf4849-894d-4231-a239-c3ff11ce5216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c43fad-bb3c-4e63-9101-9a52f294fb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be11757-18c4-4f54-85c5-85b010b5893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692286a6-743b-4523-bc40-44ef60e7b92f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed678740-b1e7-4303-9a63-7fd332c4d6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75045f6d-1585-4ca2-a05e-96cb6ada6310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8875c9b5-e61f-40d4-9364-cd51e0dd55dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f443bad7-edd1-4fcb-a984-d0cb6b0789a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3355ab30-b1cf-430d-ac0c-c2dfac94833e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b4606-b781-4e47-9f9a-f88c7b72b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b44526-0f5c-4e2a-a3fe-55e8f07ee1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e543972-f077-4d49-b18e-dfc95e31a217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06077787-9060-43a0-b91a-65c626877865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa28b044-5893-4d6c-928e-e79e0c90c4fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3426e6a-5bad-41b2-b3f5-a7654b4a230d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44bbdca-810d-41cb-8e0c-5f6de1bf43ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c60bc-502e-45d1-a5eb-d7490a71e96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcc855f-ac08-47a1-9c8f-88e1a4609d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4030d3c6-7ab7-4342-b825-5f6d16a17d78",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145123da-1df6-4c19-8e8f-6b3cff616328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7033406-f435-48fb-833e-d96b3dba5162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef9f657-de92-4297-84f5-35bbbe74a1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afac8c39-185c-41f5-851f-d7374b890cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e595c06-5222-4d4a-b063-1f9f93ebab2c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc65344-a311-4b04-9f6c-798c5ccdb161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca518c2-17db-4a7f-8f29-d606e71979de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f39690-793b-4ebe-85f1-810c89685d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd3cd42-63fa-4b86-9daa-419e101be1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b258e626-4c07-4dba-8ed5-063057ea4dca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1375e681-2b84-4b3b-b011-fc1c78db0f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cea4096-5950-4fe3-ac1a-badafaaaaf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137b5298-4c7e-4d8c-90b5-defdb4bc2d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3598d97-3e54-4891-b95b-aeef50233d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef067662-d65b-474a-b2fa-982301b4684a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f4aad2-258c-4686-80e5-a9a02495e03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fe4a92-63c1-42fc-bad4-a5bd6799dd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3de5a1-4fe8-405f-afed-9a2803743d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0b5a71-7ca0-4992-8ce0-4c8910821bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a271a6-3e84-40d5-b3f0-0188db58bf18",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ae942-e7a6-4cc8-89f8-00b82aab2dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b977b4-ac67-4cbc-b885-99af5d740d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9a07fc-6e73-456b-8055-4f518c604aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b6c973-9a0f-4e53-b798-22855cc729da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc4120-563d-44da-9a94-62890fa44dee",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc54a779-fd4d-4601-a99d-1840d91db568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58371c93-a416-472f-ac7d-cd6daf52c9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b63242-1789-4a58-9942-229152a53fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9621895c-f14a-4161-b0b2-83a7671f09fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06918d97-2c44-4c18-a4b4-16e7442806c3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd83f1b-c97b-40c4-a685-f23a0bab72ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9960615-30f5-4808-9dc2-6862ae1950ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4edab9-6d6c-4845-8c59-85a54426fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad75169-8b70-4b9d-9998-d069e03e8c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7491eed5-3b9c-4f02-bc7e-00988a8b8f28",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce25101-e589-413a-8e79-87483d2e5063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d0a3b8-1ff4-4dc2-8c4d-4cd86bc80a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f0cdac-69d2-416b-abf1-89b919cc9ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36708186-4805-4f96-90ab-4bf3d8dd0412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0f4996-85aa-4749-bac2-427e100f8939",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db5bcc4-ffa7-44ed-ba24-2dd9ec4fc9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514422ff-9f2d-47d2-a2b4-55aae3632bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22a3232-a0fc-4f86-b98b-32336e1598cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20460589-f782-443a-ac32-f217e620ada4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab6194c7-4575-40db-ad75-e33cffc2f0cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0aac57d-b17a-48f9-aa79-e680d1f5f161",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9958808b-94bb-42a7-8e79-ec14dc69152c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b908b6a2-8fd6-449b-a413-02156a8b739e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe15cd0c-1218-4089-996d-27c712c51970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e246854-5b65-435e-bda9-bb31c30963c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d81eeebb-496e-4aa4-9908-1fb6be5564ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "329be75b-c043-4a8a-864f-fc9340e63039"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be8fb4f7-ab00-451a-8f96-ec1df78f17c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6ff57f1-26c2-45b4-b8c9-05129ca77c9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "511fc5eb-5c5c-490d-b056-8b64368610e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8243e0da-5500-46e2-88a4-234dbae16ab2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62cb4cd9-61cc-4084-9522-c8b252939102",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "657c3625-91da-4c8a-8c14-62df12ab78f9"
            }
          }
        ]
      },
      {
        "id": "7ad87b54-a19b-48b6-b69f-cd319a8f4a4b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ac5e6353-37f7-472f-b6b5-6716e5e85979",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0aa5093-0a0c-45ed-8bd6-29b3d226ea4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f44f2d52-0d66-4123-bc7d-9ce3cbe229fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5885089e-2dfe-4592-bd8b-fbd20df5c479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8e9f24-5f2a-4b68-a808-54eaab395882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284b45a1-2439-4f48-9966-6e9e51f2d72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da29a56-b309-4b82-9b43-ae855f94d0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103f9fdb-af72-43cf-aa19-bdde7f766557",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc0d561-4e67-4992-817c-ca9d11875554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf259583-7f98-42ac-a8f1-cb9fd25c7d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafd6933-0ca9-477b-be13-7cbfaa3cb472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d762c0-612f-44c2-b8e5-535472cf8147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0dd580-0bd8-4d2a-937c-3fa20afc6bf5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ce3515-2208-4fcf-bb82-4bb7975adc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c5c9cf-fd49-4d08-bf11-d1b07dab8db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6b5bd9-4f02-400e-a3f7-35716467f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be3f609-dc78-45db-b93a-ecc5a631a7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d4b007-c528-47c7-8a11-5841f8fabbce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8e70dd-0c2d-4d3e-99b5-bb77e5511240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f2563e-c8ad-442f-8b3e-180d71ce5053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2062b9-75f3-4fb2-b1c9-ae9306d9be60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf303ce2-76ea-4d72-bdf3-eec5e974b9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7c16ee-9dd2-4506-a833-68ac8d511f92",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c9b99f-64c7-4d2f-b70c-26fcd03fd5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee0d2d6-0bdd-4835-92dc-b6b3cb3feb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6dd714-7372-4c4e-a795-b8b5284dd358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1ae002-716b-4de8-a23b-a972b7a220a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5375e9-b314-45e6-bdc9-08fece4722a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be758ba-546b-429f-8df7-07a93021a033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bb0f81-c700-40f5-8109-0429db94915b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245dcc33-44ae-4510-9512-d078d949b9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0351d586-1be6-4ad6-bd74-e09271e5f1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3077a69-c1b0-4a1f-8cbc-f05c894244d5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2129ef91-abe5-4e27-8ca2-17ae1ce91cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871b09b5-c4ce-4eab-a7f3-07c93283b875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028edc87-dcbd-4d15-9d9e-02d56dadd694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b23d13-cd2d-40af-a87c-a1a59543dd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25ac74e-315a-457b-9941-214c4f436325",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ecd536-e0bc-4864-a0a5-f59b2476b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a80371-a38d-43ac-beb6-d43f29710ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8afffd-6905-4ace-b407-81534adc7ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e38892e0-8c81-4a0e-bb82-c29cbda8d927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56180efc-61c7-4f97-a092-3916ad3a0a54",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09459773-5fd6-4593-ba34-d316ae8430de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a001ba79-f10e-460d-9b9c-a94e769e567c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841800ea-492c-4038-b7b4-a58f595930b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e232ee-bfed-4184-b5b7-4e6b78252ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bc9bf2-4eda-4d32-a436-5001f1919c59",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bba9452-d858-4848-ab0d-a9858da9d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b02741-c3af-4d12-9c0e-ad7a5360158f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c69a019-ef58-481d-862e-f5ff1d346c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ee8bc6-7527-472d-b25e-5d1e55cdb9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da0d11c-dcdc-46d0-85c9-8904cb8d7cf4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84f8475-e5ac-4c90-97a8-19f9387d8657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d092ed1-2d08-4e3c-a23b-c1632101d635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9f4a67-ab90-47d9-9496-941479d9aa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c8726388-448a-43f5-880a-13a52c152d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3988995b-e21f-4c6c-8cb8-c6965db9baaf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dc427f-c231-450e-90f0-8f763b63b812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b66651-ee6c-4535-95b6-416ff43c290f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255b8664-9838-42a5-8cb0-438e3cc57e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5adfde56-f594-471c-83cc-1e375e8453fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125ddde9-52fa-4c68-b21f-81f87fb4c4fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebb24e7-1ec1-4669-ae96-62b3c1310458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf56a89-c9a8-4fc6-8e8f-05ea0fa91c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b044c841-6ef5-4c67-b8cf-ec7cd58c975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f28cd08-4151-4e13-88c8-52b42f0c2062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759c93c6-ad98-4e91-9854-ca4bc78e01e2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9705aa75-3977-45d6-a3be-1c9c5d20930b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8999093-fda9-418d-8a33-c9fdb23d3e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577c41ae-c5e1-4c9e-80a7-2fc3d0810c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bac2e1-6c91-46a2-9ade-32542372f0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb35a61c-afc8-4e63-97b0-a5e4dcf86179",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d812621a-555e-44f1-9a01-2c41ed0e0ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2039bb4c-7716-4418-8a1e-0808614d6491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0463214d-f70e-4e18-9548-911a403b146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "16575bc7-0df5-4172-893b-1f74123ad31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38548d4-3f4a-4382-8ef2-dc975e72ed20",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02987894-094d-42ac-be4c-83b07345bbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bda821-3f1f-46aa-a547-ed3b42d1afe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a50175-d485-4888-8db6-d6c295d4d675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8e56d5-7d71-4c27-80ac-4fd0dcdb00e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e5a74-2587-46ca-ac8b-bda06bb116fe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2424cf-8a94-45d8-ac58-d54243216778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f753d61-7131-4651-a2e3-86959e4212f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878b416b-40bc-4b79-ad45-b62a3047f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc21b77-04fd-4076-ac83-8197646fd780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9850ca90-3c26-486a-b37a-fbaf3031154d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a194f2a6-a14d-4b7d-9657-17ddcc83738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1824d81e-57a9-4e5e-af1f-ec9be73bfe83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76eb4ce-c9b0-483d-aa50-bfd5ef056287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "190775ab-740c-419b-a6e0-d107a48f4c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbcc24a-6a57-49ec-85f6-72ba9cdf97f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7019a9-77c0-4cf3-92ad-cb992d933b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d71e88f-632a-4431-a31d-6cfbac88a556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c70f0a-25aa-49dd-8fa2-03279e07965e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d6fab6-490e-47b9-826d-01fd4b840e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47351336-700e-4435-8c04-c7ca8fcde1bc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb43ad3e-1303-499e-b3d2-05b2e9692676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e56bf8-8b89-4a3f-8b3b-06b2275fbbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493210dc-81b5-4ba1-9583-44ef5d2c3bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6fdc07-074d-446d-8f21-704ba7c2951f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b847ba1-beff-42e3-9e9b-1ffb9d2463a9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d87581-cce7-46de-93e5-ea1cfafa4d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3f39d3-4e25-46ff-8b56-26699cc19da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc00838-08b2-487c-92ea-86abd8f2c4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a690ccc-7434-4c18-991b-6ae67691e3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0106e4a6-fc9e-4fe4-bb9b-abaa5fe61266",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277d335f-ba38-446d-893c-ac04f7144b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4aa16b2-0d95-48b7-8fb4-a4fd168afe5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04ae20c-8543-4bc0-aa78-0318cf31e360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d5b3d0-0219-4026-9822-bdd3312e76f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e67fcf6-d835-462e-88a2-3a148b877894",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2183458f-4072-4809-85c6-2c2f1e046d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a03715-3768-45ba-b466-c0252cb983d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e1d2fc-d4d7-43e1-a4a0-d71ced4ae1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89107e48-a6c7-44e5-95d3-7bce3c922932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096af926-ed0a-4e74-8e53-260fcb77b359",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a8e143-90fb-4943-b2f6-d6627c040c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369bb2dd-5b11-4617-8f29-dc7025bdf288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1084b8-5a6f-40a8-94c2-aad97e756ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb0be89-f333-4d7e-9ce8-9cfb3cb03c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f02143-81f7-48bf-83da-a210d662f7dc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2ac4ee-4faa-4d7d-b17f-c873b2d4696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1acc23-32fa-4239-b2cd-e10bccd2cadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e765aeeb-df83-40c6-9786-55b6bfb31d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c995df4-b85f-430d-b0fb-c2428c56237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3a5760-984b-47f2-a3f3-b84dfcc1bf05",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2e3c69-c4d1-45c0-aa2d-4c1992f18d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f17e634-ff43-4e1d-a217-eb4ae4564031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc400d6-8649-40ad-8843-8143950a5c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0226b18f-8537-4c79-98b4-0d68bcf8d635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebc6ea0-2143-4d50-8efa-775eae97c8bc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c5b422-f85a-4ad9-986d-03b87c6b57fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc411a7-43af-4eff-bf50-3c48f8f963da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1707df-920a-4fc3-809f-8e1e789a7b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae2f0e3-1a2f-4638-a8a7-80d68bc384b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2fb623-7414-41e2-9e75-f51e6239f014",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01d7b7e-9d57-433a-b7ca-88a9aa0b031e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb6a506-d1f1-4db4-8b29-c31f71a71cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3634e10b-35a8-4c2c-810c-c20b946f941a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b10b1b-9974-432d-8301-21342e747c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e807edfc-3a99-49b5-8dd2-2ec1a8022afa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e731cd17-9289-48ca-a456-b094cf61b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad37714-2baf-44fd-a6d6-c9ffc905b500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90057604-c1a9-477f-bc9e-c19996ae1b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0c2ad8-3adc-4c35-8eac-527dc6ceef09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe5848-849d-4815-98de-7851816103b3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedcbce4-c4a9-44a6-b03e-09a2360ae112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db2e639-653e-49f3-b8ae-afc8992af85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dc5732-ba10-4f05-bdd2-ab57d880b366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "193a1a93-62ac-4ded-afb4-4042a9f08200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b14c011-f0f8-4809-bfa5-5d0251667945",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ac57f5-6d86-4a38-a85e-58b60222b9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb9792b-0c57-4a34-aa14-350e7177419e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940dbed5-396e-4134-a4e6-6357e293ba92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99ff7ab-95e2-4035-b7ef-98980017b4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a1ad13-4ed7-4430-8ddc-425b24a2fc95",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2819579e-8f42-437e-9b13-1369de8e1f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8961ef9-5928-4e33-ab0d-99a3d993d594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f7239d-450b-4b08-a3e8-194a550a0a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0750c9a7-3b2f-4978-af9c-424094cc5854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d706b5-ee4d-4764-a81c-99b8b729a73c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef4613f-6358-4d9e-addf-55d0054e62a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b298f10f-b3d2-4a34-bd9f-dffdc796da50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57931f6-0521-4b5c-a8ee-a76cb52a723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0fff4a-1ec8-47e5-8264-e00ac49ddeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1797ccd-1e98-4ac3-8615-42d644d56c3c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c451cc22-645a-4caf-96e9-5f7e34a003dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd7c93a-c5d7-41a8-a5e9-1d97d5351bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c272a-a3b0-4452-922d-8360a95e88b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8a26da-64a6-4a49-8a33-4f41718e6026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ba4957-ed4f-4e59-96f9-7ef54c32452d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08105bc8-4a22-4dcd-99d3-968bad65f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a584cb-3013-49f8-bdfb-855a89be31bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184133cc-01ef-4f8d-a807-2abb6a6d2420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee34179-dc17-44a0-bab7-d848ba29f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e3345b-8d4a-4cbf-88e0-76039227bcc7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3386ea99-351e-472d-9552-8da86f025d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb474e59-cfcc-4cde-8287-67bd04477dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b61aaf-6ca2-4813-a332-0f277cae1bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0ef5f4-f6d5-4f90-b46f-8028ea47db2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e800ae8d-bcdb-4ced-aabe-c6eba817be7f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38938a13-6c6f-44c1-b7f3-cd0fbd693f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3a68d5-88be-48af-8eb0-16dfcdb6ae83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2767371-4db1-4dfb-8ee1-da09fa69c32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50675f8-75b0-4c42-9b07-a09dfbc516f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21104231-3642-4590-a7f7-179c5cf1ad0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d305ad8a-e6ec-46c6-a33a-aa498f4abadc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4762d2-0c0f-4809-903c-f85b17b3bee4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f366d814-4159-4ab4-8579-951db2a4754b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a8a1ff-b2d7-4b37-bb7e-308429b1cdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f414f041-5038-416c-ae1b-f7fb180e438d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbce33ee-e8d3-4185-a16a-e60f2c49502b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87f59030-9af9-453f-99ac-5aa5652f9109"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69ea3fdf-f543-431a-aa66-10e9629a9408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c29cfaa-2095-41ce-ab9e-dd7f0f02194e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc14095f-20e6-45b1-8a1a-970a36105bfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d8ce6a6-cb10-44d5-b61d-3eea909b1ade"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f64e3665-4421-4db7-8ec5-69b009a2b3b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86e92626-7da8-4ffd-9844-07d22ff8cc16"
            }
          }
        ]
      },
      {
        "id": "6ae2d79d-e67e-4c0a-85bd-cb8ca3f32888",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4f709c0a-a0c5-4aad-9067-2bd133c31f2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fde2c4c-12e9-4d85-bf9b-400a2890eae7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7bde7758-7197-48d1-bd9c-6ec831c8e1b2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e751d6-8094-4b2a-852d-11a1b9916852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a28bf8a-411f-4d00-938f-228acf59c095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1250ad61-b7e1-4120-83ed-e18867f833cd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c7826c-0d1b-4f01-ae0c-2235cd16904d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6ae5c5-0a9a-4b2a-b8e0-4380e38ce58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a8d84a-90ca-40b4-b32b-97ccb4b7d299",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccb6d51-02f3-4b1e-b80c-0137ebbb0fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20915a56-53b6-4ba4-a0b4-4ff2d45b9d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a75d486-800e-45d9-8edc-1c69ba67a5e5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d83b99-4150-441c-82dc-bab6dd9d4680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c77ab9-1d0a-4581-9d49-9399b05980c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629c3612-fd15-4a6f-8de6-f0cb3c4bce4d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3078b2-71a4-4973-aa7f-311db7df78fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983519fa-1032-4ec9-98a5-f65d317d573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055ac261-9104-4022-915c-b284e0cb83e1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb56cb2-8f37-4860-8cc5-7359b08da254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c789f567-80d7-47b5-bcfb-fd193f98f28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69992960-3f48-4e37-9ded-fef2475edbce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5abaa7e-e8d2-45b6-a124-5464b0131e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9c49d9-f2e4-40c4-8f1b-34f271f671e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652db85b-b8d6-4e90-a659-4ca08b616f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22978bcc-28d3-4f84-b970-37450d7e2668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8351dc87-aa48-4b5a-a691-afd0f071191a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48c3923-3ad9-4480-8511-eb72eeda0346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c42e81-ea56-4ce7-b0f7-94b156b58b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3c6efe-98b7-498f-b530-3d86094758b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b6f609-4ed8-4b2f-b938-71396be915ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b9e12a-bab5-4537-b30a-5299387bbba9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf94ca20-4625-4da8-8b3e-daef06cc8372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57ce392-99e8-476e-a14a-feb5b9289f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b999b6fa-9d55-4999-b981-7656a38b58c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7177e2e-d641-4749-9f23-f77db966ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01a37f7-8058-41e7-b847-c4bab14ae558",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e476cb-54c6-47ea-a449-5dce1ca1b635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81075b5-6a2e-4300-b3e9-45e1d65e4284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c1329b-e778-4b47-9e86-c65e92a6a891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba480f7b-47f7-4621-8304-f8f2beb9b516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226bb7d3-783d-4681-8429-67a7babfe3f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773391f5-a138-441d-aef8-18f192302f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28673413-fb37-4ff3-b25a-ae9de24ee222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4332e15e-dc43-4869-af32-4cfebc12680a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaf53a8-1ec9-4e88-9e44-234a36822d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277e5492-def7-454a-82e2-2300f558f104",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f577d101-4b29-4998-a76d-d24eaf581110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f0f229-f07f-4300-9dd6-897e36b22cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4c32c-6c72-49bf-bb12-78c5a8c0782f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a75774-c0f5-4e90-b146-3662b78284ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee7e3ae-e2db-4283-bd2a-17e8e4c0c8d6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62b578b-ea27-4782-9a8e-63657ec040af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2d2502-b424-403e-8223-dcdad628bce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8412275d-5912-47ac-8c57-00d5e210a2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4349632-2674-4016-b3ed-a7cb12cd33d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73be2194-f90c-480a-a7ff-ba168352dadf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a49890-e204-4124-9f89-b6ff4918506d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0057d52-bd79-4f21-9cf1-d0540f24cbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cf2cca-9f1c-4e42-9e4b-7deb15295994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535415fc-a1e7-4e4e-84b4-c81f57aaa4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c235d9f-fed2-4adc-8c86-dfa3ee49aa1d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb7d5d7-8318-4a2d-9491-ecc675e43504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c05542-1ec8-4620-9b39-2f8fff1d2b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be6e99f-5595-466b-864c-cbe83fbda280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd374af1-5b56-4e44-9c31-104a815bfb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9feed98e-db08-44db-8096-351597a3dd0e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a172ae6e-d4f3-40b4-8f3a-15c8f9b39bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92b068a-bf67-4692-89e9-16e3eb9233cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223b951-008a-4ed3-ba1d-3ad2a86281d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8091afd2-5c4a-4010-9e15-d45eba5fd1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a505427e-8232-4b6d-978a-5f3096862151",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edcdf02-451c-4870-a676-4f4163652173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42be49a5-b7fd-4146-85c6-2cb74036bcdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415f13e7-c56a-4ad5-b0bf-f64abe015950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51858e44-7863-4dda-a28b-0f3934ac01c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c07adfe-e1a1-413b-ae81-4f4c6bf4c10f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d1a554-33c8-47cf-a529-fcb0da89e126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcfed88-ed55-45fb-a008-72e9a209e0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beafc587-3060-44e2-9737-51df199b4904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e280bd-1981-4972-9667-2fda47702d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c2a8f7-62ea-4ef3-b40f-7b88de7f7322",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279733d6-9a45-45b2-b232-0dcc2752e089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d8c18f-a756-4166-802c-66574c076763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ec298b-6a28-4990-a3db-fd13cbbeb88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7a112e-214f-48ee-8248-c6a4d2ea2a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9baeb8e-dd90-41d8-bacc-dbe3e1978aef",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d498eeb-a91e-4754-984a-37ea49637bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a88bb65-449d-4323-8299-bce1bf11b555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282eb981-98d5-4f9d-9439-322d4cb4a94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a3d6fd-5a4d-4c28-b74e-417a6648ebcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b547ec-0850-4461-8efd-27d2ba7fb961",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0464e775-4817-45c3-aa37-50ab2b0a74d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722b649e-99c3-4c12-b117-501e4133fccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcde3273-80f6-4a5c-b78f-cfa3b896a0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee637bf-f6a9-4692-b1ef-9f335ca7f37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c0bad7-a50b-42b5-ac3d-47ca097a10d3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4796a9-d5f7-433a-bf0f-52a44f3cf67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e73e0a1-831c-497c-84c2-e890c366b64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc44259-c748-48e0-a90b-fa184bf181f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3e8084-d02d-4c3f-83c6-c9fecc01b46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea3d108-e492-45a9-8656-195360c79491",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe2993a-5125-44e6-b9a1-b6b60065205e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36be3922-bd56-40e8-a65f-4f2d711d9aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6572a38c-a9c3-4dd8-961f-0beabff40943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d879d7e-4fe3-46f2-88e3-8a5d789e4629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ef155a-8da7-4f95-bc02-8ab756dbd3ec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb01f541-c35b-448c-94a9-d69b1db20dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca28af1-1c1d-4a5f-ad65-7d3e8a58a64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef5e06-7bc9-401a-9736-fbf5e7a6a7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30530c3f-c3d0-470b-84dd-87d3fae07e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82811d3e-f25d-468b-b313-1e8de24dfe17",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4823e178-69eb-4331-b05b-42068206991a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec8799a-e318-4aad-9a16-536477d08443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640074c7-a3e2-467a-b281-f23816cdd89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab8fa9b-e126-4e31-8e5d-a5f25e15c838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589212f3-8cf8-4a6b-be2b-a22861d772f2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bb4d79-bb44-4906-a9e2-f048bd8a04e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de993786-a715-491c-a20b-33f1a8d26ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d85a3-1a5c-412e-9d56-e31862481b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86910aad-fd2e-425b-bfad-7f1d973fc164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e780434-891d-422d-89b9-c5d8423f782e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90524afd-8e78-47f7-9623-39a34df7f542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa983d0c-a41d-4fd6-b658-92c64a6ff24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0103a003-b591-41dd-9c47-93a3e6acea6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6d0d6f-4c51-4e0c-81e2-f6dd6cbadd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fd7e82-be52-4685-87e8-8ba72acb976f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8ed8fa-e4c3-4773-a84e-d17e40fc1871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d416a0-bf9c-4ecf-9521-201349e621c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c53944-c262-403a-b32d-8a098a208a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e32834-665a-4ac7-97fb-18dba9f3a83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956b0e0c-3e40-4827-ad6e-34229dfc0845",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727f7246-50f0-42bf-ad9c-5690a2607acb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ee0277-115e-4adb-ab50-a3d6e9a52107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b207646-7612-4dda-9bd0-a7fce5cc5bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b44094-338c-428c-9f18-be32f8ef8f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a70c9-3ac0-463e-992d-26e09b2c3518",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87f96e6-1ec0-4fb5-9f68-42f4ad3ff89c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2307c72b-0e46-45cc-9cc3-91e75557b605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af918b0e-eb28-4781-8cf8-40090927d64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e6b2bc-024c-45da-b51f-3f32e801194f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f58ba89-c9f4-4cff-b458-f45de8186d3c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0364ec2f-b113-46b9-848d-0f6ae5e97cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c2f416e-7868-488a-9818-7b4e25a3ef66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa27ea31-d9a2-47bf-8733-24a80ae80245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92891f63-7ff2-4248-8939-1046136b0ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d681e2-c882-4d03-9862-ed60da7a2368",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e84abd9-479f-4bbc-a24e-3138f01d8e21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea9b23f-5101-40c6-9767-872614ce067d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57693a52-5ee2-4307-ad56-87c8617b972a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90888724-a74c-4630-9f1f-cc2fd904225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e633d27-c48f-447f-bad7-335e72ec7c75",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9aae1f-a2b8-4562-b895-9feac849e4db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05c631b-fcbb-49db-ac66-7c0405b78c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aa7222-a23d-4382-898d-beed3a4cf9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61444920-ab48-4179-bf26-9c1c8a870099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222e4088-a8e4-4cd7-b84f-288b595d7cea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0c26d8-6e65-4881-b66a-57ddc86af41c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97804909-c109-4cd3-9d72-d42b3e9bf0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe410dd-a726-4a1a-bd84-3daa5a1d2568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b3b2cd-f5eb-4b2c-9e9a-a1b2290c9a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c9664-3df7-4923-84db-cb1e66914bca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ccf931-693f-46b6-ad6a-72ea11ed4c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd63dec1-a3df-4532-acc1-961e58fa3537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98e1bc2-e9bc-415e-96c7-096468f18f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86074bc5-3380-4e81-a138-daf47f90026e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44469ff-b361-4961-b9e3-600667776386",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110766fc-31c2-4933-a7ce-4474677c75a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a675241-363e-4e77-9535-148d14056b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4205145-8666-4d67-9972-c3bab9b19bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d6ac90-7529-419a-a1b3-a23f1fa311ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09af5bf4-2c6e-4676-b6e2-c7eddc571c73",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba3286c-7e21-4692-b4e4-0a4681403139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e930c01-aecd-4328-b744-4185f6e0a2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff24119d-c82b-4cf2-8433-dc7b1ec0c7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a220a9d1-ec00-4eaa-aa1f-565e0ac8ac0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d49fe07-150b-41a1-a830-c4442566c32c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bc799b-6748-443e-a6a5-42ba7785081c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de12142-c785-460e-9a92-2e907c2efecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845ae2b1-8a13-4cd1-b56e-343fcbd00811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a4be61-f2aa-4a99-bf52-e390108e088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db041ace-de11-43ec-b9c0-72aa34d6965c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd14750-73ee-4c4a-9ca8-5b7df888e6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e326dd-5a81-47c6-a537-a6bbdcc8aaae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1e6518-5410-4d9e-a204-51f1ecc55ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afb933c-c779-4a8e-8d99-c98f3de36158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dfe65d-06de-4c82-b21c-e5b6c0b8aa47",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b7bd00-e6bb-44ff-8b33-00fb4f4012e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cece69bc-f853-4b20-b3dd-e69081bd28e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d44642-4bdb-401e-8c59-879fa9dca02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26751b91-6434-4070-abf8-cea463a9afee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fd1d02-b413-47c5-988a-39e47d519e75",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10cfdc5-8be6-4cea-bd1c-30479559b876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1264ec-b7c6-4599-8614-4ddf4b87dd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95065c0b-0b80-4ef3-95aa-cb5aaa4003ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d22e006-c78a-42f4-9e57-4399f09204f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bf4197-602c-43c9-914f-310472abd6b0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9db346-5820-421f-9444-9b0ce28f9a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28b8a41-be10-4088-b3ad-03396beb4589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9c750e-5c27-43ba-9568-d3ad1f684297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624fc46f-8f11-48c4-acac-80da49365c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0db55dc-5e44-44a5-8d8f-d0cd04d57d15",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47355237-c9f9-4ec1-87bb-d983bd85ac53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c60786-2a14-41e5-9c26-dcca50631066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb671f-61cd-4ba5-99dd-3643ab2ec82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2793d08f-fe37-473c-9dd4-c0339443cfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f7f5f2-b950-4ef8-96ee-ffc7754eb3a6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d58d0c3-fa03-41b7-ac3f-011d1d2992eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc87440d-6159-4ed1-8f29-eac21ea0ff88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb09f30-b087-4432-94fa-c80d99e5dddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411db9bd-f4f7-40bb-a12c-e5e63cbef9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ddca35-b128-4ba8-b80f-c7574c795797",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cdc03f-3684-4b8a-8bdc-aae2ce073e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f44dfba-d050-4fa7-80ef-d56d2ab9bfe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a7ea87-634b-4b9b-b224-fdad5a1b9fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fc8123-fd16-4292-8f90-e473b3bf08af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55087aa-b070-432c-b404-bd0a08de3bfc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545818f1-184b-4372-a434-a339134cef4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c64349f-69e3-430c-8b58-a9591242b5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7fd5d1-fe00-41f6-85c7-a787ecc60103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f321eb-cb7a-4850-8ddd-fbae3e800957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fed44d-a947-4ba7-9e07-ad073f746cb2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7293901c-9312-40b6-9dc7-98d483957793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f64ce61-6605-4868-9a02-d505b580ac9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68704d2-44a0-4e30-91e4-b06d633af79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62fa977a-70fe-4ce8-b645-13b833a98140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164ef24d-c5e7-47b2-8cd2-d3d31b42faf4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a68171-5b1c-4c00-809b-28deb378d013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a001a7-c325-4d77-98d8-9ac73149add5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afafb0-c47f-4143-a0fd-9ffdcd55d60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245b17bd-d648-4ae4-b01f-b4400bea172a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18257cfe-71c5-4262-b12e-57ff8d1ca781",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4a16ac-5b26-4606-9e3e-a0b8981ac10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506cf135-60e4-4550-acb3-1f62c05c011c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd4f0e9-44fd-4b8c-9177-eb29dac63999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5b754a-7a7b-4eed-ab18-022486d70d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d3701b-c600-48ff-9bca-05c1f8f82141",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1736b3-dda8-4d30-9d5a-51883d5a8eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b7ea08-a7a2-4be8-aa28-1df30b4d4da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3723a35d-0990-430d-92d7-c8d229e51adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d4a687-39b4-4d84-930d-823afbf51238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8589c7f3-b036-496b-948a-4f30994847d2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5306c3-c314-4cae-b19f-7c9eed4a86be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88972119-5e48-4e36-8f40-2f87fe305101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb0c0fc-6890-42de-b2cf-d4593042e6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d85fe0-52ac-43e3-984d-f32e497eaf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d454b6-1eeb-4838-8437-d2e8eaaf4b24",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9172f080-16f2-43a4-bbfd-ba28b5d3fbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9912b670-e1f3-47d6-8275-730633d16f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e3ee83-e8de-4fc8-807c-b6718e695b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77873bdd-187d-44b2-baf0-162c6174341e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa43078-658b-49da-8ed6-46dbd80b2513",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b01c4e-9cc3-4941-b308-2785f3ddbad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321457ee-59e1-45f9-b16f-7682470e1998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd97ca5-61a1-4d01-8a90-9c551650d37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de39895-fd3d-4739-a656-42e37c252217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06885bd9-0639-48d0-988f-3223e586479e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f6a13b-a381-4098-a5a3-c2c2f7a7b049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d11bda-2242-481b-a85e-3a4fee3e0152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9431deb6-517b-4058-a6a2-ff550882aa19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff20c580-78a6-4039-b3e8-5c27a76ae864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d97f110-ff1e-4463-b572-cbbad1bf1e3d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90821bf6-cf43-49eb-8caa-01d3d15fa1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271a0abd-655d-4349-aa01-3c04064d7bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1956e014-690c-4996-b00b-e943615819b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5762e18-2c2f-4531-a9af-10ad76995243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30dcfe2-1e39-4e88-8a6d-cf91c1af7792",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9799263-0603-49d3-b7d2-9fc85eca09dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5687bb96-7056-463a-b044-f8853a021e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b740fc43-5cc1-4412-8b9f-ab4b88e8dbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd775a3-5648-42b9-ac19-883e87ab6a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f159804d-edaa-48d6-b94f-97e5ab4d1de2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf50e2b3-8633-414d-90bd-14c49ec02993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2939a524-dd5c-42e7-b618-6a7e9c996ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bc4c86-9709-45b9-a95b-591f0bee9579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7ab07c-4589-46a0-ab31-5c9813bc2ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54833281-4021-4fb6-ac61-62acd55def1d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5fe341-4771-42d3-8efb-1d1a34e1a0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd620039-614b-4118-bbac-fe57190f523e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36b23f3-86d7-4414-b630-5a6f28cca6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc7604c-27c5-491c-8991-283cdf2ef5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c4a20-5611-4b44-b633-ae814ca7870b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897b88ad-a0ed-4407-9435-6473ca38db3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e4b535-2b8e-42c2-b869-71664ecc3ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2899ee9-c0f5-436a-a6e4-bf878be28380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8c9b4f-35a0-4e49-9a13-984fb82960dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aa598e-a45e-41cd-980a-64512a0b8bb9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c7d189-e6af-4bb8-affe-2eb7b4632430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed57f33d-baae-4b31-978c-340cb2f56064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00fba43-a3e7-41cd-acef-e50b3ad2affe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01c9877-b1d2-4bac-9a09-5a40d074dfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa4fb2a-d378-43e2-9a11-48cbb6a37e3f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd8d568-7f05-4e0c-bcf7-a7a850348b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d839f983-cc76-4708-b76b-d65ef7ecc282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e691e0-9ea5-42cc-83fc-fbbf5907af4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b03b833-9942-4117-863f-440a0f24c854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e028f26a-9c00-4fc9-b80d-4665ee046e5f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ff0ed2-3672-4956-80b8-b48e42fc34d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12c9aaf-d233-4774-a5c5-19c75df09d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b79040-938f-433e-8f4f-ff44420a242c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fbe74a-a024-44df-abaa-5458274dc264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbb101a-a981-4ae9-8186-e496a377895b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071b9b27-5c08-4461-ad9b-7d9fd840fe85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8305500-8e47-4466-a66c-8015006b6ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9262ae-3b0a-4718-acb0-9994d8e5b94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85949c2b-5eb2-465e-817b-41d022729ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6af71c-d689-428b-b3f0-f8fecb3af151",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182a3d76-392a-4667-8161-29d198405e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d1d8d3-103a-41f9-b6ab-14ec9bc8f490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776697c6-489b-43cf-9847-5e9363f5e698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e959da-1f68-435e-acb4-963785594e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a958c8-3e33-4351-9162-3cf70207fa1b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d679c5-77dc-49dd-b74c-42fc95516bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38860f5a-c3fd-4466-953e-e907d6d2756b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be2e8d7-b25c-4205-8345-84bf3b50a965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61a529a-16c1-41ab-a849-6b6437fd588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b21a2e-ff68-40aa-b93e-1746039fa360",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ad8b46-5528-419a-8b04-db8368ce0339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5cfe797-f411-473b-9493-94c38748c99b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd63c8e-cf05-4c63-9002-52784ebb7ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8af70c-eaad-4d77-8cd8-2aedc7c8acfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341944ef-a535-4673-9512-e8019a19f5c6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ed4b10-ee08-4edd-bb6e-152e06456119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e778cb4b-50f5-4828-9c5c-cd67ac212368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed14a9a7-b396-4dc2-828a-307d0a3a044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4481f9-8f3b-46db-98b0-14629ac07b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc76219-4acb-4b41-a168-7c1efd48ba0f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639766c7-a24b-4af1-ad2b-39ae83b1cff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7468c992-d47b-4ecf-888b-867a8fba0a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681d9709-2147-4536-aed3-ae20af82dbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c904cc36-39db-4c1f-b1c8-fce7014889a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a06dcb-35be-4bc4-8779-a14f528516be",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e555d0de-4525-44df-b8cb-6bba10fbc24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cbf3c5f-5348-4a88-8418-44f4d4eebf7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20317a68-9b70-4b7e-b779-24a4e73a4008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c8c9c5-cb26-449d-84e0-49e2ee20d0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fefef2-fc36-46e4-8a7a-27937294efa6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bfd415-0260-4218-bde7-e175928a56e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc5098c-74c7-4db8-858e-6db0dd74e496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c746f1-0717-4908-93f2-7a010df5ca06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5615a7a8-547d-429f-b775-9d6e6340a142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70e0e01-23da-4ba7-bb48-abf0dc5ca714",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5340b58-2f5e-4384-840c-bf94299076da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "099874f2-0b45-4c1f-ad6f-a93ee4cefab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0f128f-39bd-488d-b9b7-7757519f1fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f027cc60-df26-4983-a193-7d470e8fd45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89960cb7-2a2f-4ea5-a646-b62cdb0302a0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278787ca-2ce4-4a48-8060-cfddcbaebf46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9176ce-af5f-4d43-b392-80f71ac7a727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c11cf6-6055-4075-8441-6f10cc790e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53657404-c7da-4f67-8964-bb29395982c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec09faf-f472-40f6-afbf-245ceb2e9449",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db08ad7b-ea7b-4e2f-890a-6e5a891a7b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae79307-27a3-4419-88c7-de691bfecce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2116255e-5eff-4594-8e48-681fde2e5a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5b8f8b-eb8a-4318-aac7-fff2560b662b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c023f582-3a67-4867-b7bf-10b00a7e6f0f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db245127-6d01-4170-bf9c-9886b640cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc05a72d-ad76-4437-af6a-c3deed613ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751c6118-1c39-4f4a-b9c5-a33c8a0e91d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcd6997-329c-4bdc-9f8b-633f1e132eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bafa8d-b1c9-49cc-a7df-385d5b4c7fea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1d1999-835f-4099-9ba1-98937f52cb94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583ae88c-df94-457c-97f3-14937e7bfcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40afb32f-98d9-48be-92d2-16267a3ac6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7b7433-3067-4dc2-a03d-bc711a0c004d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f39523-78ce-4c49-bb10-0343753032c5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48d7f08-dbb1-4bae-a0be-b2acdbce01df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f700b91-36c9-4220-a44e-3fa187f4e679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e939e4-0df2-4750-9378-0deee9c98278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f59ddf9-44ec-4801-8401-797e42c429af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23222fa-8ba8-4df2-809a-c78193105764",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71804481-1e92-4e70-bf94-2ceafef4d302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b5acd5-a8d4-4578-abc7-94dd20c86b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7559c25c-2c4c-4558-99e0-8204aab511be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd977f4-f7dd-4abb-9645-2899150ff02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd9fbd9-120f-42bd-9a54-adab9c5b6996",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eb73f8-28ba-4e84-adef-1c4966c922a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4fe9e5-da7b-45c2-a3a4-1e630acbe40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23dfb82-39bc-496b-b251-8809eedd61a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff547a60-b212-4808-8ba4-ca4de055998f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776b67e2-e680-448c-818d-2c769e41e81d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21bf090-cda9-4c25-bac9-6aa4042b241f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee14005-0d48-466c-94ef-3d20d47f7546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9258c77f-aed2-4120-8b73-1f2211db6b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034e6455-4f2b-47d2-befe-1d34d94688d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4ebea5-ed85-4370-a402-fe11e5adc94e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cceebe-619e-4a0b-a21f-db2c9ff1d608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f5ee48-eea0-4ca6-afc2-7a7690f42c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daee8f8-25a5-4471-8440-2b89cff0889d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea165940-5941-457e-a9c0-4457421fe3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248cdae9-c317-41d8-af77-a2c984201572",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9956ee-d8dc-45a4-be3d-7d3737d05784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be3e004-0526-4e18-ab1c-c48949df87de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a272aa4d-c387-42c7-9e60-90493f00fe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74963d19-10c2-4ae8-b194-a5d03d95c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7066af-6543-462a-8de7-d380072fc560",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd71884-d036-4806-9c32-94b66e9d7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0defc1ec-ca0a-4ae9-800e-a710f79ae3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6f5c6e-f50f-4b1b-bead-28b93cfc51c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28aac716-80f1-4eb8-a999-d40d6cd8b37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e3bded-d3bf-4250-b344-f725e39e06f5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4465ef21-0087-4180-a8d8-2bdd63d162c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967183a2-98f4-474d-b58a-dd51c3580235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371211bd-df50-49f8-acc1-5df416d2782f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272763ff-53b7-40e5-8648-a98ca9fa9382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf439df-0413-45b0-86be-7a0a46f192e8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4008b08-60f4-440f-94da-2d9524ec73fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c93ed8-c38a-4429-bea6-3031fcb167cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a9cc70-4fcd-4cb3-94a0-31bbb12552a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a9c19d-d1c3-4ffa-a472-83ecab7422e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1100c2c0-1a0b-46f5-b0ae-ce86250a6ef6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f442878e-07f1-461e-938f-ef7e957ff468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc196da-1498-4326-b018-4d641f97beea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce13b1-cdd5-43ea-bb12-7d1c1913f8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db136dc3-7440-43d8-b764-a311934a5735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b03e148-f59a-4108-b182-c9ef0bbe301d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5afa737-bdff-4021-a77b-514ef97e40a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7b9f2a-4a67-47b3-b9eb-f9a5d0f832b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b24b70-b7aa-4c9f-ba8c-395f027e43f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce28dbb8-f123-470b-8ca0-ea12d30dd1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fd0b3c-e9a6-4ce6-86f3-76a213a55ed9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b141a7b6-21df-4611-9eac-8d482ca65179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71a1acd-6cab-4a07-8b15-da7c519afe64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e494b975-d618-4704-8aa5-eb1d4e61fcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1da5e9e-0396-4a45-909e-2c3535985e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a514c446-3f0a-41ea-baf7-72633576cf25",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d4bb16-f283-4a8c-9f45-e15aaacd63a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0647521b-e094-4d9b-b259-ab1af945a890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a15f48-1191-4897-8bb9-456aae8a62b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a950ef0e-e5cc-4578-a16c-49002ab4e49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8373fe-3993-4fd6-9998-deaaa659b864",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecd8c45-32c5-438b-966e-fd862d4129c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e08b1df-f9af-4638-926a-f06ca8ff14a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4c9dfb-b9a4-4e05-9f30-a4cf9b14dcc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b28bfc-dcf7-443f-85f3-393114b5f89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38edf9f2-4214-47ea-b2c0-90a7a3adba80",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c6d140-91b4-4013-9e98-0d05a18d6a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d54b893-af91-4bdb-a3fa-e4f2a70ee141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d5b105-7aab-4fc4-961a-352ecc2d94c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11903ff-e513-44ca-90a9-1e719e0c235b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d1cc37-cc98-42fc-9211-8beaef6db592",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20003681-046d-491c-8c89-478e4c1220be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86fad1a-783f-443e-817f-3cf9e1296840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e119c5e-0958-4020-a2eb-67b9b8dbdfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d9702d-534a-418f-8bea-967a164095fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f2c099-2ff0-405f-8b22-be4169f51847",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e2aff2-4dda-49dc-81aa-e35ca11de47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c8513a5-904f-464f-8994-b6c25c5ce0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a338b8-4971-44a0-8b57-451c585e048c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4417f4-755b-486e-9119-17c41368c453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c073b073-556c-484b-85c6-e8a317b9243a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585e8d7c-0748-4862-ae0f-396b2c1a8e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba3717a9-0909-402e-9155-3dc8f44f4ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb98f890-3394-4690-93b8-b171977ea405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9a8f4b-63a6-43b0-9343-9978606383f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e61767-e3bb-4678-9590-e7fa4a6851d7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc2b5ac-8443-443d-8cf3-3aa1b631e5ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778fa440-6606-4d53-8d9f-627d0842550f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3a4851-276e-4045-9e50-b0267fbf9b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f76a4c-b6f1-476e-a697-e51b020c9449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b707cb-55bc-42d9-898c-855863bc29a1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadbcdf6-9b78-42f4-bdc4-9bc9d91121cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6dcc57c-6d2d-494b-b0c5-4273bdce7750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fea2f2-fe9e-438d-b52b-436f403cd6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c04559-c501-4f54-82f8-31f278505a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603a5563-af3d-4e0d-b7ec-59a07e894cd9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5624afd4-c247-4b89-85b8-4e8728f6648a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8998a3c4-24cc-47d6-a470-27eb597a5def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b07ec00-b1bf-44af-98c5-4c623e11bdc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a4355f-26d5-48cc-84b9-003dd50c5183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cd05a3-0873-48dc-9fb5-5c5d56827574",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afbfb3c-4f87-4d03-ad21-e191ad3aae26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237fd58c-1a21-4277-baa4-15ee0e531b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb7a66c-9fb7-411e-b356-f4b3ab3e22c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508e395b-bbe1-4d5c-bf11-5c4e1a80fcfe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "142d5218-0364-4220-99db-aea1cec5b230",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "460bbaf0-be51-47a2-ba02-d56b56820040"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9420973f-ecdc-47f7-8905-e0b3b9800e76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a8e210a-e2bf-46ea-97e1-32674d856175"
                    }
                  }
                ]
              },
              {
                "id": "42621b2e-9142-4fb7-8ace-2b75e2db33fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aa84673-2102-44a7-8538-449074875c84",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b34da3-664c-4242-8739-e5be9020a231",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "031ad0db-340c-4efd-a2b8-a6edf4e14b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147c5439-568b-4fc8-9c36-5ffd53d08571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5f5e418-7fc1-45ad-b11a-718fbcea451a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31f62099-b753-41b5-9266-b6a4467489f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e49be6b5-6823-4b70-b93c-476130ba3b73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6959b1d-1988-4d87-8bd6-27c405d261b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a89a8a8-638b-47f8-b0d1-5c444bf442a6"
                    }
                  }
                ]
              },
              {
                "id": "b352ca94-f0d0-4de8-9120-bae1630d9194",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2e281437-4502-4cf8-b47d-c334a507f72e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e17f31-8bdd-46b4-a63c-a95b936aceef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "65c4ebfa-2bd8-49e8-a0e0-4db6e44049cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dd915d-b413-421f-81b6-50c2f8ece170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d6eac1-9787-42d8-855b-f5b4082b2394"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "278c5111-b2df-4a66-a1b1-86d8f852b669",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fd5ea88-4b49-4337-95ba-9c895ae6133a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b336dce-ee9c-4d43-ba67-1929bcd53704",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "81a1e96d-d154-4f03-80d4-37b3c5784b67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60215134-db00-4435-b67f-c8c22e9637c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "861500ed-11f4-4b9a-afb7-30f1d34a4ad9"
                    }
                  }
                ]
              },
              {
                "id": "ca8abd76-5676-46ef-9b81-de10c5e740cb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d5040c5-2166-426c-9ec2-94fcbbe9b1dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a01c3acf-ec3c-4a3e-9a9e-b05d9ae9e400"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ccda501-8eaf-47b7-8f3f-848750d507ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65193d14-a119-44f4-a08c-9675a5ad35bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97bb1b05-4b93-4884-8b75-537ea46d4673",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "34d564f0-d9ba-4f7e-9628-9471771829eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7c1a1f8-b6b5-4fbc-a8b0-e3d59153eca9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2f885aa-1cae-44d1-b378-34e363c4aaa9"
            }
          }
        ]
      },
      {
        "id": "9feb14c6-72ef-4cee-8f13-64c10edf9bf8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "73e38e85-6d39-4b1e-af46-8188915e1961",
            "name": "Negative Testing",
            "item": [
              {
                "id": "681e7144-c10c-4646-ab6a-ae1b610f9577",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99f3c552-0774-48d1-be98-2379dcc5fb49",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db6191a-1908-46fe-8361-7d2a7ecab06c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a1f756ce-a49a-4ddf-908b-b5a53a6da4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8bb772-903c-4b7f-9cb1-a6fed516585e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36602378-79c1-47bb-935e-842ef611696c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60ffc0bd-15fd-4f48-acd8-de406514e792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7814bbdb-a42d-4926-8baa-9dbce51e08fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52d3bbc1-c0b7-4fe5-85d3-14fe134d33d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "237135dc-f6bf-4c74-918c-54bc5942a4f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0e3ed61-eb76-49eb-959f-16b6a6adfcfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "18e4398c-337f-4f0c-bd7f-093b88d02b9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ebccacb-6056-41ae-8fae-046e9d27b85c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "caa8e7c9-5fe4-439f-812f-6dea59d33458"
            }
          }
        ]
      },
      {
        "id": "a277b002-740e-4479-bc74-b1190f2194b6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "13304414-7de6-4e24-b6f7-9b3f453ac63f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfffcba1-85ff-4d30-939d-15f0003199fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f3f132c-3b3b-48cb-aac1-050943ec0e67",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbc8de4-ade6-4559-aee3-7c312c798598",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6fc7f99-7503-4fb7-a53c-bdf2c302ca42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e974495-1a9d-4b6d-a40e-a04423a010cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dad0cd9-8f6e-4b64-928f-704156bfde9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0b3d718-f6f8-444b-b3aa-1ff2276644de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b11256b7-ebcf-4e9b-a98c-88830cc3d1db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab886e5b-5db2-4aea-a795-2f6f776ce308",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "507f1daa-ce0b-4372-b8ff-bc645588eca2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b795ddf2-3e20-493e-a60f-1559d9d9a82b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d71f4e4-2d08-4f84-a3f3-a2fa5dad8c2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1608ab9e-2b5b-419a-a8fb-9c0ca784a1aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffcfac03-be8c-427d-8397-b25fc5dacce1"
            }
          }
        ]
      },
      {
        "id": "771d53e5-7808-4070-984c-d425cccd5f9b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a612c73f-4402-43db-b5f9-238ea9ad9d46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e0e8bd8-ede5-40fb-bb65-fe69184b3537",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f096e07e-5970-4ea6-b5a1-977d4e07f2b9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db08bc8-defd-4900-bf59-421c3f45f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d5099d0-5961-414b-8150-553502e779cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fbe42b-5fb0-4889-8257-3fd15871ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "185bd314-f52a-4020-82a3-6664387148b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36da2f24-1743-4f83-855f-6a42ecf50595",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8accac62-c23a-448f-95a2-3272a7d26e82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e02509b-5e82-4434-a268-631eb2b4007c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "450e2c42-f4a5-4075-82c5-0e94699c7506"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ce933eb-e1eb-4035-86be-7d7ebb50d334",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c03f9652-97e0-417d-8531-cfd88b862fbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d791ce9f-7d72-4984-a73b-489d9c16ba49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18348ff9-48d5-407c-8e65-1318d2699852"
            }
          }
        ]
      },
      {
        "id": "56697fca-0e37-43bb-99a1-a39078a04ad0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba6bb88a-db75-4ea8-a00a-871d76a67970",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e980237a-a70d-45fb-a47b-da315d39bbb8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6bc0e6e4-58aa-409d-af11-cebefe3c3db7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8f42c5d-e293-47e2-a366-792909a90ffb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "674e90f4-78f0-4378-9535-0c25142bd21e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.221052631578964,
      "responseMin": 19,
      "responseMax": 247,
      "responseSd": 24.308620497077047,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702859818597,
      "completed": 1702859842045
    },
    "executions": [
      {
        "id": "b01246f2-53db-4f50-9614-1c112bca84df",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "441d74ae-af2a-4608-8cc3-b4ab6e7bf423",
          "httpRequestId": "4fba91bd-f916-4862-9bf0-18e27a892e7c"
        },
        "item": {
          "id": "b01246f2-53db-4f50-9614-1c112bca84df",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c403bf32-bd58-4020-b0ea-fec3452709aa",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "fce55e87-3bee-4656-ac4a-993164cbcdde",
        "cursor": {
          "ref": "49f2e4ec-7cca-4fac-9e58-83432b0a09bf",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e01b0eaa-0e0a-42e0-b252-d6cbb5778109"
        },
        "item": {
          "id": "fce55e87-3bee-4656-ac4a-993164cbcdde",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b4fe64af-885e-4653-b35d-e81be51fcc6b",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "5b78d83a-784f-4be0-a43b-52b02981c616",
        "cursor": {
          "ref": "32546dd5-c29d-4798-8b92-ee94124d20f7",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5c910c8c-52f0-41eb-9706-70ce7e9362a0"
        },
        "item": {
          "id": "5b78d83a-784f-4be0-a43b-52b02981c616",
          "name": "did_json"
        },
        "response": {
          "id": "ea393add-7ad5-4ad6-a969-3f7820a5694a",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff3112e-d587-4a0e-a0e2-79a5852a03c3",
        "cursor": {
          "ref": "e206a821-5f80-446b-bb4d-507e63905b17",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ea53c52-6115-49fe-88d8-dcf7a05d9c56"
        },
        "item": {
          "id": "1ff3112e-d587-4a0e-a0e2-79a5852a03c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2626838-ea8f-452e-b0a8-907cdf681f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff3112e-d587-4a0e-a0e2-79a5852a03c3",
        "cursor": {
          "ref": "e206a821-5f80-446b-bb4d-507e63905b17",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ea53c52-6115-49fe-88d8-dcf7a05d9c56"
        },
        "item": {
          "id": "1ff3112e-d587-4a0e-a0e2-79a5852a03c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2626838-ea8f-452e-b0a8-907cdf681f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2effd577-b0a0-458b-96e3-02486d1bd9ad",
        "cursor": {
          "ref": "b2bb8da3-288e-4ff3-b4a7-49bf426c9b5b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4be13c00-24b4-454d-9ad7-5983a7c99d2b"
        },
        "item": {
          "id": "2effd577-b0a0-458b-96e3-02486d1bd9ad",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "02beb923-47c0-444b-8436-b3eab7ed442d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 146,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08a5b14-631a-4185-bcf6-4ef242e340bb",
        "cursor": {
          "ref": "c459d418-7411-406b-b3a4-0b994f509fed",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e599c36-39b9-4164-82fa-360b248b79e4"
        },
        "item": {
          "id": "a08a5b14-631a-4185-bcf6-4ef242e340bb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "16b0dc1d-62c0-4820-8bf1-44ae37aa7647",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3a8f5d-0954-4bfa-9b86-23a0b1ddbbcf",
        "cursor": {
          "ref": "f7bc53f1-a464-433f-89ec-36de23afb64b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "46e310fd-2972-4cdf-a216-2f1225472285"
        },
        "item": {
          "id": "0a3a8f5d-0954-4bfa-9b86-23a0b1ddbbcf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "24d0bc41-134e-4ca2-a168-383a1d2cb206",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679a8eff-1d49-46df-896d-3f8cfbedc10b",
        "cursor": {
          "ref": "6aabff1a-3a25-41ed-94aa-cf892619eeb3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bf74fe92-147a-45d1-ae00-917a650723f2"
        },
        "item": {
          "id": "679a8eff-1d49-46df-896d-3f8cfbedc10b",
          "name": "identifiers"
        },
        "response": {
          "id": "e370ac52-89e3-4b47-84ed-fd60979bb4d6",
          "status": "OK",
          "code": 200,
          "responseTime": 247,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84b004f-d9f6-40f0-801d-6d124b0cc978",
        "cursor": {
          "ref": "eed39836-64de-470f-a704-556c1e2e2d4d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8569fd85-a4ac-4e50-ab82-a42565d0496e"
        },
        "item": {
          "id": "a84b004f-d9f6-40f0-801d-6d124b0cc978",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "05ee3b54-6600-41e6-a645-e4002c196f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2c2c9e-4f72-4675-b5a1-9435d7affae7",
        "cursor": {
          "ref": "54abaab4-88e6-4d64-bb1f-3ad90e67e1f3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "133e0c9e-b9a6-4e5a-a241-0e8d48a7339b"
        },
        "item": {
          "id": "3d2c2c9e-4f72-4675-b5a1-9435d7affae7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e99c14cb-d199-4d84-9bf9-36ff60c62419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262666e4-2e14-4004-b993-2277b15af645",
        "cursor": {
          "ref": "4e5bfa5e-3cf8-47cd-9ca1-186e0881bcec",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "97bfa1fa-c2fd-427d-9746-9765972ba555"
        },
        "item": {
          "id": "262666e4-2e14-4004-b993-2277b15af645",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e77b73bb-86f2-4a55-bfb1-ee128d0cd91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f42beef-bebb-4fbf-a35d-36c574aa2376",
        "cursor": {
          "ref": "5206001c-638d-4b0a-a535-c04ad1e7ad99",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1be9b57b-300a-4a81-bbfa-10b9b9d4c4b7"
        },
        "item": {
          "id": "9f42beef-bebb-4fbf-a35d-36c574aa2376",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "966ea598-a592-48da-bfcd-42c6efd62efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f5d7ab-4e90-4785-a608-d48986a90c3f",
        "cursor": {
          "ref": "b883e33c-4521-4f73-9aef-1ed8276a93c9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0cc935b7-1cf9-4563-90aa-0a7d6e359011"
        },
        "item": {
          "id": "54f5d7ab-4e90-4785-a608-d48986a90c3f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a42c9cfe-c478-453e-8110-9552b5ae0460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc013428-9229-48c4-a0ef-be8ace893089",
        "cursor": {
          "ref": "7ef31d68-a4b6-43db-b279-69fca496544e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "845148e2-1140-4eb7-9ce6-c8275eefe71e"
        },
        "item": {
          "id": "fc013428-9229-48c4-a0ef-be8ace893089",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "18aedea7-be94-407f-9552-48d005258a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745f4ca1-0937-4d07-b4e7-2f1f08f14218",
        "cursor": {
          "ref": "b381bb1f-ae5e-4fe7-9dfb-23b6c6de0f9e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "83ff3ce6-39cf-41c7-9b7b-0c6092641cc8"
        },
        "item": {
          "id": "745f4ca1-0937-4d07-b4e7-2f1f08f14218",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f4878205-561b-462e-82e6-aa5bacb0e5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af774048-9116-4804-b022-feffa83b4e0c",
        "cursor": {
          "ref": "683b9e49-a70c-4aae-9ad1-76880b3a3d7c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3f94c57-9995-4efd-b728-38f27b50b09a"
        },
        "item": {
          "id": "af774048-9116-4804-b022-feffa83b4e0c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0f92287a-e90f-4178-a482-abcfb9a1cf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e99007-ad55-4afd-b5bc-5ba7779c2cf9",
        "cursor": {
          "ref": "7fc2fc7c-dd45-46f4-bccb-4f83a4849049",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "61d6d6af-3dff-4627-ac32-d7ce924eaa25"
        },
        "item": {
          "id": "86e99007-ad55-4afd-b5bc-5ba7779c2cf9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bb155838-1050-4d33-ac16-cd33499ce14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04593bb-2ec1-420d-b578-29fa22d1abcf",
        "cursor": {
          "ref": "69c7b83a-c306-4ba5-bb08-c44e13edfbef",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "68b0550b-5f31-4a12-a0c3-b3aaa45fedf4"
        },
        "item": {
          "id": "d04593bb-2ec1-420d-b578-29fa22d1abcf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e51b10c9-0bfe-48fb-ab1f-74b003bb3f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2412f4-2c2a-4dcf-b965-7cfe42664570",
        "cursor": {
          "ref": "aeb939b1-712e-4c3e-9187-58339b45c736",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e5e16f08-2440-4f8e-a0d8-c2d1517e9853"
        },
        "item": {
          "id": "cf2412f4-2c2a-4dcf-b965-7cfe42664570",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6f239683-ae1b-41be-b839-cfaebf606e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714f2ca4-522a-416a-bc13-1f56385b0795",
        "cursor": {
          "ref": "0bd9caf2-4f37-487c-9f09-930d62a70753",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0081414e-a350-4c32-94c5-52b34b875f34"
        },
        "item": {
          "id": "714f2ca4-522a-416a-bc13-1f56385b0795",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eb62f5ac-82b5-4edd-8dbb-dcf26da7e73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5469af-a70b-40f9-b440-1a6adbda5132",
        "cursor": {
          "ref": "3cdf7a67-088c-44be-adbf-6a247b432ddc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "27b2827f-895b-474d-98d9-6f61ec51f9ed"
        },
        "item": {
          "id": "ea5469af-a70b-40f9-b440-1a6adbda5132",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0a6eb3d3-6df0-4913-a953-30ee41fa254c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c36c43-655f-45eb-bf8a-0b4a0f50b020",
        "cursor": {
          "ref": "0e5cb052-e695-4710-9bc0-0e2479ccd4c3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b8c1d588-f8cb-4853-989d-5dc2d2e9ca99"
        },
        "item": {
          "id": "49c36c43-655f-45eb-bf8a-0b4a0f50b020",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5caae125-02c2-4f24-b5f6-b36d0c49d4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc973758-da96-490f-9572-ca36fee0ea3f",
        "cursor": {
          "ref": "c22360fa-f157-4430-94dd-4ab745d5a009",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "65f0942d-e5a9-402f-9e9f-861169949578"
        },
        "item": {
          "id": "bc973758-da96-490f-9572-ca36fee0ea3f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "59f9f87a-1cb5-4a9c-97b7-4abec0d59372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162f5520-5c51-42a7-bcfd-84539e7f773c",
        "cursor": {
          "ref": "e3aaea87-d868-4c6b-ae13-fe11c8c01107",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5a50dbe0-74bb-4ea6-9823-4764827d3c23"
        },
        "item": {
          "id": "162f5520-5c51-42a7-bcfd-84539e7f773c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fc6e5c4d-f884-4997-b255-e1accd92f950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306cd132-0755-4b0b-9242-b87309de0e9e",
        "cursor": {
          "ref": "10aa226a-7311-42ca-a540-725fc8f4f26d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f40f697b-5470-4673-bcd5-4b22a0e7477e"
        },
        "item": {
          "id": "306cd132-0755-4b0b-9242-b87309de0e9e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6702525e-7a8e-49a2-b4ef-9a0f7dcb637e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dac145-6d65-4b52-9a64-9f943196592d",
        "cursor": {
          "ref": "8823892a-b456-407a-9fc8-45fe1f9259a0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8500353d-0a0a-4105-b7bc-fb89394e84f5"
        },
        "item": {
          "id": "03dac145-6d65-4b52-9a64-9f943196592d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "85ccc429-4e27-4caa-9f4a-0ead3bd50a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6845eab8-0157-46b5-bc18-99542a816eac",
        "cursor": {
          "ref": "28e963fe-78ee-4d67-a8f8-8757e5ee580d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "318899f3-8188-4802-b5a0-1dc66f55ce61"
        },
        "item": {
          "id": "6845eab8-0157-46b5-bc18-99542a816eac",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "92c83aff-9930-400d-95fe-f4e5fc8bbeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6da151b-afd1-435a-a637-5506e1b8ed24",
        "cursor": {
          "ref": "c93b861e-4b3e-4749-ae78-b921c2bdd399",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2dcceae4-333d-42ac-8035-9f8c220632ff"
        },
        "item": {
          "id": "d6da151b-afd1-435a-a637-5506e1b8ed24",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e7faff53-256c-4237-98d3-3d2190e6833c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dcd167-89d4-4201-be56-397d0927736a",
        "cursor": {
          "ref": "3515cf06-0d0f-4e00-a2ef-3dfae04ce494",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9bf9dda1-cdcd-4d6f-9bac-85a6a3469f4d"
        },
        "item": {
          "id": "f3dcd167-89d4-4201-be56-397d0927736a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "093fb9bc-b2b6-44a7-bed6-6b6dd21cab98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16225964-3e7b-4023-81f0-ee3c909a2bc7",
        "cursor": {
          "ref": "d4e234ea-25b5-4007-8878-803f5103741f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "47827cd8-362a-4895-b264-5ab3407d9568"
        },
        "item": {
          "id": "16225964-3e7b-4023-81f0-ee3c909a2bc7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "15fb5cc4-7e48-4861-95da-1d96c85726a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901e7877-c234-473c-8610-a2f4c9d7cf16",
        "cursor": {
          "ref": "d6abf353-58c3-4892-932f-f99a9dfd8c58",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "00960381-163c-4d44-940f-c16e2a87f6bd"
        },
        "item": {
          "id": "901e7877-c234-473c-8610-a2f4c9d7cf16",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "554f7701-2fb1-4c6e-a0a5-be6a9a2f6885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700f3df0-83a8-4ed1-9209-f00aaefd4f19",
        "cursor": {
          "ref": "0280db5d-7407-48a8-9ff6-ffcf8d0f6048",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7b34e4e7-8107-4f20-b38d-aa43f1816e06"
        },
        "item": {
          "id": "700f3df0-83a8-4ed1-9209-f00aaefd4f19",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6ae051f0-e8ae-42b9-9d76-622a54e49f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6e4c42-32c2-4d43-8862-7a5c5acc65b7",
        "cursor": {
          "ref": "9b0f5bd0-38ea-47b9-af6f-8225a84a5acd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5ce4c5d9-1c89-4a90-80d5-7449dce49b7b"
        },
        "item": {
          "id": "9d6e4c42-32c2-4d43-8862-7a5c5acc65b7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9820251f-12f6-4239-8032-428a582171e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e1a95e-847e-43da-b161-d07013cdc1b5",
        "cursor": {
          "ref": "e248dc5c-0a7f-46af-9953-e575da670d2d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "06427e57-818b-42f2-b4c9-9eff4954ea20"
        },
        "item": {
          "id": "97e1a95e-847e-43da-b161-d07013cdc1b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9a0138ad-5d95-4687-833c-d817842e42bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d4dae4-9820-4803-9c48-bd43c1b8a1d7",
        "cursor": {
          "ref": "c2525b9d-c273-439f-ba71-5c96f0ecc166",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "51b016df-f14a-437f-b324-21dfeb51bc3b"
        },
        "item": {
          "id": "f4d4dae4-9820-4803-9c48-bd43c1b8a1d7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d584b61a-6dce-4a9c-aae6-efde9587520a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d98a84f-7e95-4875-93c9-cac58313ecf0",
        "cursor": {
          "ref": "f52c3cd4-7191-487b-b38b-a7d509555866",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b0e012a2-1f4f-4d70-9120-aa08b7bef230"
        },
        "item": {
          "id": "2d98a84f-7e95-4875-93c9-cac58313ecf0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "64064d46-1c9f-4e90-8c70-12088d4991a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ed8481-c873-4d88-940a-37d62537f180",
        "cursor": {
          "ref": "169e547f-be06-441b-ab45-7d53180846c2",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8b8c89fe-4536-4164-b301-355b1d96662f"
        },
        "item": {
          "id": "62ed8481-c873-4d88-940a-37d62537f180",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f7050f8e-5ad7-427c-9bee-647c1263b645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15caf3dc-2456-4aa3-af80-ffc97bc59445",
        "cursor": {
          "ref": "09f0d22d-a6e2-4793-8d75-ea6e6d713db8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7d806172-7bfc-4a07-9532-001383b32251"
        },
        "item": {
          "id": "15caf3dc-2456-4aa3-af80-ffc97bc59445",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9c05533a-8049-44ea-8a06-483254f6d690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb2e926-9b56-4fd1-85e7-2c5a81cdacb6",
        "cursor": {
          "ref": "8bf20a5d-5f2f-4d8f-a90a-13da8c2fb7a6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c861d02c-dc20-488b-b8d9-7499db21bdc9"
        },
        "item": {
          "id": "bcb2e926-9b56-4fd1-85e7-2c5a81cdacb6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c12c3478-9756-49b5-930c-40a9346c7cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dcb241-eb77-4e7e-a4b5-4a2218c93957",
        "cursor": {
          "ref": "a2daa60d-f5aa-4ab3-9cd1-708093e9418c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3d63cae8-c07e-4efd-9ed6-51643158730f"
        },
        "item": {
          "id": "14dcb241-eb77-4e7e-a4b5-4a2218c93957",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5f155d6c-1da4-4f74-889a-a3156a720590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935bfd31-d35d-47ce-8bcf-ef2bfe9bbcdb",
        "cursor": {
          "ref": "5a70e868-4149-402e-9401-32ded29a67c8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "da5937c0-afc1-4714-a1c5-01497f47711c"
        },
        "item": {
          "id": "935bfd31-d35d-47ce-8bcf-ef2bfe9bbcdb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6cab31a6-4aab-484f-9b60-2c4f73495b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71468ebd-eae6-49f7-8ed5-2a7e44649c27",
        "cursor": {
          "ref": "f09bddbd-f634-40e9-ac57-f90acf34ed25",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "999483bf-b1cd-4112-8e2b-8fb9da87bfe7"
        },
        "item": {
          "id": "71468ebd-eae6-49f7-8ed5-2a7e44649c27",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0c67479b-3195-4a59-903c-4adfd530cc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d515145-0057-4c71-be5c-2cb4f99ba59d",
        "cursor": {
          "ref": "8a19346f-edfe-4335-983f-5c4bbe694554",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f557be7a-98fb-4589-9a87-6a570fbac468"
        },
        "item": {
          "id": "2d515145-0057-4c71-be5c-2cb4f99ba59d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7423a5ad-9160-4fbb-a54a-d092f9cffc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1293e6-90ab-41b6-b139-a83c0191e336",
        "cursor": {
          "ref": "a46dfa36-f518-49ef-ae92-4580d91bea08",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "85cff584-7585-4f0f-8e48-bf253c304665"
        },
        "item": {
          "id": "ab1293e6-90ab-41b6-b139-a83c0191e336",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ed7db048-2d89-4c22-8b08-58571595f7dc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9328f9c3-fb43-42db-809f-51f609d1719f",
        "cursor": {
          "ref": "74b86329-1dce-4ebd-92df-e846410e9e03",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7205bd82-8467-43f9-a23a-00e58c87069f"
        },
        "item": {
          "id": "9328f9c3-fb43-42db-809f-51f609d1719f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8030d03a-23fd-490a-b376-40d2f44e7723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd7cbab-99ce-424a-bdfe-abc1316c58e1",
        "cursor": {
          "ref": "ab48b06d-f5b4-4257-867e-c1ce6b60f618",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f747b556-0771-4b58-8266-5354538e86a3"
        },
        "item": {
          "id": "afd7cbab-99ce-424a-bdfe-abc1316c58e1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9cbe7502-3458-4de5-814a-c11a9c8c8f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afc6be4-56ca-4360-9ca0-2dc9e4424142",
        "cursor": {
          "ref": "765ffd24-fd04-4a03-91c3-dbb152ee524e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e036c922-0809-4abe-a630-f7fca92cfd27"
        },
        "item": {
          "id": "2afc6be4-56ca-4360-9ca0-2dc9e4424142",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "85592259-bbb4-44b5-bd7a-d17f091dcae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768de08e-1b5d-4a7b-8202-c64d08660891",
        "cursor": {
          "ref": "6c9e4fb6-ac00-448f-9774-726a9d24cbd9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0f2fcd94-9592-44b5-ba76-d6c99f584a73"
        },
        "item": {
          "id": "768de08e-1b5d-4a7b-8202-c64d08660891",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d796e817-b125-4af1-8f01-7c599cf19ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ff3db1-8d4a-47b6-8bfa-17259a61ba04",
        "cursor": {
          "ref": "a1ae4c25-96a7-4859-9e8f-ac84a3a81b33",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a11ab9d5-66de-413b-8b3c-811f0aaeb9cb"
        },
        "item": {
          "id": "e2ff3db1-8d4a-47b6-8bfa-17259a61ba04",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab2e3cd0-2eb2-489a-8a4e-095ef18dbbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc2944-c0d4-4640-a8aa-d959418f1e40",
        "cursor": {
          "ref": "2ca4a1ff-c778-4575-9556-b65ee829c731",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "53ddfb00-ac81-4ac4-9950-91d0c413ed7a"
        },
        "item": {
          "id": "a9fc2944-c0d4-4640-a8aa-d959418f1e40",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "74a188cc-64cc-4137-b580-6689b4f6db28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d48a00-4c8a-4a6d-9d47-442ae94f2308",
        "cursor": {
          "ref": "53500b84-3b93-4b00-9254-2333d22080cb",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e34da96f-86d4-49c7-8d9b-2e8a7632e4e7"
        },
        "item": {
          "id": "c7d48a00-4c8a-4a6d-9d47-442ae94f2308",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3f6d5ba8-583b-4b1a-a0c1-7a7f04d28525",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df41df70-7ccc-420d-8e5b-e2fe5db35540",
        "cursor": {
          "ref": "ff243223-bb83-4485-a830-ea996e7c03b9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ff90527c-138c-4894-8559-c86bf725f2aa"
        },
        "item": {
          "id": "df41df70-7ccc-420d-8e5b-e2fe5db35540",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f3c48142-ddf9-4375-8168-84dd496f7d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f92124-9c25-4948-a1d6-945cf10bbae7",
        "cursor": {
          "ref": "94883972-a796-4fe3-b5d9-8f1bd7337956",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e3750cec-4936-4e10-a4c1-a90ab01fcada"
        },
        "item": {
          "id": "00f92124-9c25-4948-a1d6-945cf10bbae7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7205f973-4314-42ff-8bab-879035312805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f10079-ec47-48ff-a995-1da91a5c6ec8",
        "cursor": {
          "ref": "62cac8f6-059a-4f6f-815e-bc211d8d1040",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b8e8f550-7047-4fde-b633-f63757fb8124"
        },
        "item": {
          "id": "e0f10079-ec47-48ff-a995-1da91a5c6ec8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7e5a3403-6480-41a8-ae5b-bdd7328a64fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e605e5-2627-43ed-b06a-294b85ab3702",
        "cursor": {
          "ref": "de448da1-7115-4602-8e46-fd498b46abb4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bf9c141e-faec-4467-acd1-af4560ee9dea"
        },
        "item": {
          "id": "b8e605e5-2627-43ed-b06a-294b85ab3702",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a2bc8ab2-b0c4-415f-ae4a-16d383e8e332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e11954-a181-4a71-b288-982b33ae947c",
        "cursor": {
          "ref": "98932fc7-63a4-4fbe-8aa1-fd2a27d1c074",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "45d9138b-693c-4ddd-97e1-60ca3a113a18"
        },
        "item": {
          "id": "28e11954-a181-4a71-b288-982b33ae947c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cbd5b095-003b-415a-b431-a6be2b2e20d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6672d2c-bd4c-4e28-9bcd-163dfbd463d5",
        "cursor": {
          "ref": "f65fff29-19b8-456d-b90e-f5b3b03a17bb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b1865156-120d-41f5-9796-1f0f372b58f1"
        },
        "item": {
          "id": "e6672d2c-bd4c-4e28-9bcd-163dfbd463d5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6d4555ea-b41e-482a-a132-9140b58ee531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5ebbbc-7eea-4cd9-8436-cd68fb974c2b",
        "cursor": {
          "ref": "80a7ef09-7fae-4905-9ab8-2838a1e7528b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "64f852a3-5ccb-4d8b-b68a-a161d7aa7560"
        },
        "item": {
          "id": "6f5ebbbc-7eea-4cd9-8436-cd68fb974c2b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "10368913-9f62-4e80-bec3-be80cd132794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e107b87-1c50-46cf-9446-28c7b5b89037",
        "cursor": {
          "ref": "e86a3ae5-d5e3-4143-9d45-6ae5340d10c2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c8e1c5d8-ec6d-4f91-9009-c794515669bb"
        },
        "item": {
          "id": "5e107b87-1c50-46cf-9446-28c7b5b89037",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e3786b97-335c-4c93-ba28-f21b9e9095e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ad3eeb-fcdf-46bd-80b9-490c11e5b66c",
        "cursor": {
          "ref": "05ac46c2-8318-4f3a-bd34-fefc25f73da0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a6586ffc-45be-432f-8553-6040401abbb6"
        },
        "item": {
          "id": "f0ad3eeb-fcdf-46bd-80b9-490c11e5b66c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d704be2a-0cf0-4a65-ac8f-fd929afeeaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bd1724-12db-4301-8b45-38f11e20d830",
        "cursor": {
          "ref": "3d690e7a-e077-469a-9acb-91d664d79265",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "de85a1d9-18f5-4d09-aae2-a43357e1bc94"
        },
        "item": {
          "id": "79bd1724-12db-4301-8b45-38f11e20d830",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3ff9f850-25a2-4315-ae53-29fc9186297b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d26e969-8cf4-45cb-a146-3806649057a7",
        "cursor": {
          "ref": "903e9796-29eb-4575-9381-1e96033b8b50",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "045fed6c-653d-4ed0-87a9-d6fc8d16d809"
        },
        "item": {
          "id": "8d26e969-8cf4-45cb-a146-3806649057a7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0fdc4e65-6300-426a-a873-0e88902f2525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a532cd3d-1932-4d32-9131-049a9cf4f8cc",
        "cursor": {
          "ref": "e43c14ea-4c79-4775-9eb9-c90566603df2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f8d6a81e-d850-424d-b8e2-e84fb5aeec0d"
        },
        "item": {
          "id": "a532cd3d-1932-4d32-9131-049a9cf4f8cc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2a66db7a-a8c5-4b1c-8f01-cd581a964081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd607867-587e-4f61-b4cb-c739d5cce209",
        "cursor": {
          "ref": "631e2cc3-f73f-43fd-a322-3da9a4d09a95",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "624faeb2-d975-466f-9e35-1248f39ff288"
        },
        "item": {
          "id": "dd607867-587e-4f61-b4cb-c739d5cce209",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e0b13ce6-1f40-4865-91f2-418f927ec894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb25e58-8b92-42cf-96a3-cbb99dc71871",
        "cursor": {
          "ref": "927647a4-741e-4193-a1d7-473c537b6e5a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "30438566-76f9-43ef-957e-9d542c4713ac"
        },
        "item": {
          "id": "8eb25e58-8b92-42cf-96a3-cbb99dc71871",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "60ed37b4-0195-49b2-901a-de435819bca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8952e4cb-bdc6-4378-8088-706ac57d3052",
        "cursor": {
          "ref": "e45538d2-6e75-4f23-91b4-53f6fc02610c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "596670ee-18dc-466c-b6b5-2dba7678c58d"
        },
        "item": {
          "id": "8952e4cb-bdc6-4378-8088-706ac57d3052",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d41a7b09-d06f-4e33-a819-b9e6cfd76526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9081634-5bd6-4c78-bfd9-af9b461c3f97",
        "cursor": {
          "ref": "5340cb8d-886e-47ab-af39-be83a0fc62e6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5d25b27c-4b2d-4d9f-85c1-1fb28bff2cd2"
        },
        "item": {
          "id": "b9081634-5bd6-4c78-bfd9-af9b461c3f97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2dd2b07d-bc7b-448c-be2a-85e66bd550ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be94bf02-f236-4f75-82db-dd2c7172aa6e",
        "cursor": {
          "ref": "42de01ae-33f7-4b62-beaa-56c4761d157f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d4632393-86b2-4fe3-b859-1b58ae02110c"
        },
        "item": {
          "id": "be94bf02-f236-4f75-82db-dd2c7172aa6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b5c38a01-7e40-4b19-a7fb-15e46bb7ecf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4c51f9-6395-4972-a89f-7bf627e1fc28",
        "cursor": {
          "ref": "75515457-8b91-46df-a56b-e9c05571e113",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "64f85f90-c9e2-4b03-8b40-5df6d9dfa3b2"
        },
        "item": {
          "id": "ce4c51f9-6395-4972-a89f-7bf627e1fc28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c6ae7ca5-4c39-448e-a876-1636eb46a270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0599f5f2-496b-4783-bd1b-cfcec9f96e5b",
        "cursor": {
          "ref": "54f7366e-5e33-4bde-82e8-be3049e9b305",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4530d628-66d3-4661-9013-4bcb72ddcf66"
        },
        "item": {
          "id": "0599f5f2-496b-4783-bd1b-cfcec9f96e5b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8edb9019-9f28-4b79-bb91-b31a8ebd9844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1005dbda-7628-4ffc-b8a1-1ff6e3930335",
        "cursor": {
          "ref": "876b76be-d00f-4a5f-96fa-529a069560e3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "418628f8-2cfb-4270-83c5-1ccde127feb5"
        },
        "item": {
          "id": "1005dbda-7628-4ffc-b8a1-1ff6e3930335",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d426ccbc-c7fa-4e7a-84b7-746bd92261a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beb2d7e-6b62-4992-b7fb-0039ae669f0f",
        "cursor": {
          "ref": "a50eb384-f73c-4fa9-9abe-6d2a26b7398b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4b2b588c-96c2-4523-a878-2437b2a989bc"
        },
        "item": {
          "id": "3beb2d7e-6b62-4992-b7fb-0039ae669f0f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6696e553-cfb2-4eaf-aedf-9caf513f4b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f5854a-5414-49c8-a480-19cb18f6f53a",
        "cursor": {
          "ref": "eb5c8bd5-2303-46df-b3c0-8a50faaa62a7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "24aebf78-116a-400b-b340-c8d2de9346ba"
        },
        "item": {
          "id": "58f5854a-5414-49c8-a480-19cb18f6f53a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c35fd3c6-31d4-4224-b515-d437860085e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18257e3b-2e93-43bb-86a8-bd8a79e4033b",
        "cursor": {
          "ref": "4edf7ae0-dfcd-473a-bdca-f896f378e3aa",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e4708b08-741c-44ba-a0bc-cb700a7f1a99"
        },
        "item": {
          "id": "18257e3b-2e93-43bb-86a8-bd8a79e4033b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "243b7520-d3e7-4e17-be2a-2b8ffd6d7d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd70941-c240-4bae-a832-acdb031a4586",
        "cursor": {
          "ref": "6844a37f-ec1e-42ec-ac3d-c78ffa61dc60",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a7220c69-e336-4848-802a-84b02a8889eb"
        },
        "item": {
          "id": "fdd70941-c240-4bae-a832-acdb031a4586",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c34184fd-bbf1-4836-bbf9-f6d0ac8bfc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b220c095-9ce2-41fa-9331-104d15bb7429",
        "cursor": {
          "ref": "865dcca1-a566-4503-9fe8-9a74e920b353",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "66cd9ef1-8bfc-4ca2-a068-a1de5e6f4674"
        },
        "item": {
          "id": "b220c095-9ce2-41fa-9331-104d15bb7429",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "770f4edc-56b4-42e1-9b63-354659ca7c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e02412-a750-4268-a4fa-67ce828c8185",
        "cursor": {
          "ref": "4bb0c0ba-bce5-4137-8d04-c7288190a4ff",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b2532e7d-2664-4b21-a888-a545d5ae490f"
        },
        "item": {
          "id": "52e02412-a750-4268-a4fa-67ce828c8185",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "11d49db5-be27-4a40-883f-52f14a1a55bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac54a58-524e-457c-97c3-ab888c9df999",
        "cursor": {
          "ref": "a61e47f6-0538-4aca-a079-342efdab2886",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf81654b-2dff-437b-8c65-e221dc22a9e5"
        },
        "item": {
          "id": "3ac54a58-524e-457c-97c3-ab888c9df999",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b6e45259-5c08-43bb-b138-4b27ce6c427a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ac1cb8-8848-4413-8de0-64b2d1abb1e7",
        "cursor": {
          "ref": "5c70036c-0ab8-4cea-893c-f2757bcda11c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9adb9608-40c3-4acd-9dda-8b09446866dd"
        },
        "item": {
          "id": "46ac1cb8-8848-4413-8de0-64b2d1abb1e7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8da8b8c4-84d6-4aaa-a768-007d8f547ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d498c3ff-acf6-4dee-9613-9544b58480c1",
        "cursor": {
          "ref": "d76791e6-6a05-42ad-bf39-41ad7dd2da38",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "09be7b94-aeee-44dd-8678-482a538d9d13"
        },
        "item": {
          "id": "d498c3ff-acf6-4dee-9613-9544b58480c1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e6ed4d5f-fd81-4195-94f9-8217ddc0862f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6844b970-4e8e-4aa0-a375-594b183a4e1a",
        "cursor": {
          "ref": "076f800b-4ad0-4010-b553-b7e856713ddd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ff598dbe-c96a-41f3-8c1b-5ee8b267c2c5"
        },
        "item": {
          "id": "6844b970-4e8e-4aa0-a375-594b183a4e1a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "42bcb5e0-430c-4467-962d-0b1f8b5c9be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafd40a8-4354-4aa0-a524-6784eba35e85",
        "cursor": {
          "ref": "be1c35b0-7288-4016-9d24-3f013c695c80",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2b0a7d4b-9409-4bad-a6c7-c7cdfb5a6756"
        },
        "item": {
          "id": "fafd40a8-4354-4aa0-a524-6784eba35e85",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6d90835c-3c4f-4ba2-bdc7-2b55291a976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb18022-4f07-4b33-8c0f-a481892c2ac2",
        "cursor": {
          "ref": "7ccc3395-ea45-46b5-84d4-73ae2961c774",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "73f0b97d-d43f-433c-94c5-8a59d74cef1a"
        },
        "item": {
          "id": "bdb18022-4f07-4b33-8c0f-a481892c2ac2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "79d58db3-9d67-41d6-a0d1-15bf82ddd678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8c9962-ece4-4df8-8e60-8ada6845b834",
        "cursor": {
          "ref": "d9dd2f4c-aa01-4b40-9abe-44de28648cef",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a0ace39e-de46-417e-a629-2e2e38859f3e"
        },
        "item": {
          "id": "aa8c9962-ece4-4df8-8e60-8ada6845b834",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1cae2fd5-6c2b-4d4e-86e1-4ff316c22445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23dd581-f66c-42a0-8776-cee14eeff800",
        "cursor": {
          "ref": "2a1dab8f-68c8-468f-a807-8b5b027a9993",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b5677b31-61d1-4004-a903-82258a1aaf08"
        },
        "item": {
          "id": "c23dd581-f66c-42a0-8776-cee14eeff800",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "06eddd75-2e5b-4962-a882-521391d33da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f55137-5f33-41aa-bad5-d35a0a121414",
        "cursor": {
          "ref": "2c62f205-335e-4f8f-adad-a315f85f8193",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "92051f11-ae26-4c6c-9f95-cd14d4f348f5"
        },
        "item": {
          "id": "46f55137-5f33-41aa-bad5-d35a0a121414",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f53f61b9-01c9-428b-ab0d-5b21a715d379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623ba48a-0aa1-4681-8a3d-1262a8f65f28",
        "cursor": {
          "ref": "bf686293-5fa1-4b8d-ba1c-e9eeb7631edf",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e2106e93-aa1c-432e-8e61-b51140b2ebd9"
        },
        "item": {
          "id": "623ba48a-0aa1-4681-8a3d-1262a8f65f28",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1b540560-433d-4075-9cf7-20e6a4cc9f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e5beee-cab8-4adc-8eb2-01dbbbeefa3d",
        "cursor": {
          "ref": "a9d6866d-b485-40b4-95f9-a3692e5a960d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1da4941c-2ff4-44ad-a977-cb0a519cd42c"
        },
        "item": {
          "id": "67e5beee-cab8-4adc-8eb2-01dbbbeefa3d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ad9f6d0d-1136-44b2-93bf-2702177edba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea296597-2c30-4a49-bad9-1f1a0d2b03e8",
        "cursor": {
          "ref": "02addea7-0ed7-421b-8c1c-c70a6bc8c4ff",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5ffd24d2-d60c-4936-9472-dca427bde9ca"
        },
        "item": {
          "id": "ea296597-2c30-4a49-bad9-1f1a0d2b03e8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1e1649c3-5031-4d17-85db-217928e03da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096e3726-aacc-409c-8c7e-fdfaf730bd78",
        "cursor": {
          "ref": "daa5d736-0ff2-4ab9-91c6-a5fea40db195",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "85822e06-3c22-4c52-98fd-74b4ff725243"
        },
        "item": {
          "id": "096e3726-aacc-409c-8c7e-fdfaf730bd78",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4c85eed4-8788-4522-babb-89a4c79d727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d69414-1df2-43dd-95dd-9a09e51ed086",
        "cursor": {
          "ref": "a2989175-d38c-4346-9fc9-2e6fdc411ca7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ef44269f-42e9-4959-92df-0ebfa01f87ee"
        },
        "item": {
          "id": "e3d69414-1df2-43dd-95dd-9a09e51ed086",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e39174e2-02d1-404b-9cef-49d566ed7c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1701e0-5703-4726-b45d-18aa5184a0f8",
        "cursor": {
          "ref": "c4890999-9019-45fd-8cc2-4cc7b5fef5f5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d0471c95-3bda-47dd-897e-7e420df42cf7"
        },
        "item": {
          "id": "9d1701e0-5703-4726-b45d-18aa5184a0f8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "14be03bc-8dca-404f-b38e-5b9e98b627ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753b5dc8-807f-4ed2-97eb-4b466a63cf47",
        "cursor": {
          "ref": "bf85f329-3fd2-451b-80ca-ef8472a5088b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "13cbd30e-56f6-4dd2-b7f0-c89dad58aec8"
        },
        "item": {
          "id": "753b5dc8-807f-4ed2-97eb-4b466a63cf47",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "45d84cff-33d6-491f-9008-e96edc2de738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c238aa-3393-445e-b734-30a76afdf386",
        "cursor": {
          "ref": "11678b09-1fa8-434f-bb17-e56b47ffb73e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2968a867-613a-49e0-8438-a49bc1113653"
        },
        "item": {
          "id": "b1c238aa-3393-445e-b734-30a76afdf386",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aa1943de-811a-428b-b811-40405cd015ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3875c8-b21b-4390-a9fd-01c8d3b17b91",
        "cursor": {
          "ref": "a4681a16-bf0b-43a0-9705-2e509348ba07",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5b3e424c-eb10-4227-bf0f-dd42c5511c3c"
        },
        "item": {
          "id": "ef3875c8-b21b-4390-a9fd-01c8d3b17b91",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0194df8d-676c-417d-ac85-dd012f695b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a101c3f-5c0a-45af-80e4-7c5cde5513ad",
        "cursor": {
          "ref": "bf615092-d788-4521-95f2-fba7209cfe17",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "30413df4-da54-400d-b23c-b408073cb16f"
        },
        "item": {
          "id": "5a101c3f-5c0a-45af-80e4-7c5cde5513ad",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1d49fb6d-113b-4248-9310-229ac1d37e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6cb873-809a-40e8-819a-cb276e05cb82",
        "cursor": {
          "ref": "8a503ed7-b019-4787-b7ff-46c9ba9768cb",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1f1db7ac-b425-4df3-adff-5504172d2f80"
        },
        "item": {
          "id": "9a6cb873-809a-40e8-819a-cb276e05cb82",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1c59f867-a35b-4125-a5d9-8727dbc6f91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243dc4c9-b6a7-4f4e-8182-aad9cce8fe8e",
        "cursor": {
          "ref": "ad54931c-65ca-42f8-93d2-135290a65ed6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e307a617-18c7-4570-a347-eb2b09f10e13"
        },
        "item": {
          "id": "243dc4c9-b6a7-4f4e-8182-aad9cce8fe8e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b94ba510-989a-493a-b954-aa6fd09cec81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8688b6-55cc-497e-8a0f-ff3ef1131a6a",
        "cursor": {
          "ref": "10910513-945f-4fc6-ab43-e1c83bc1aee8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f9a8e600-65f2-480a-84b3-0b12fde09bcd"
        },
        "item": {
          "id": "7d8688b6-55cc-497e-8a0f-ff3ef1131a6a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ea851752-ffa8-4a81-ae17-b0cbf93de461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e1f899-1db5-4d5d-9fb0-b00257ce2bf7",
        "cursor": {
          "ref": "3550c4f7-bc19-4e65-9067-9ea0f4d9e979",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f242fdaf-d8bb-4bc9-aafe-2923544facb6"
        },
        "item": {
          "id": "16e1f899-1db5-4d5d-9fb0-b00257ce2bf7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7ccd16f0-d25b-48c4-94e5-4265d5214b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916c5685-acab-481f-a48c-92a85471075f",
        "cursor": {
          "ref": "ffefa492-2ea0-4835-b8a6-a933b1ee6d24",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ef9a1faa-ba1c-4641-a911-36049fda2f03"
        },
        "item": {
          "id": "916c5685-acab-481f-a48c-92a85471075f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3cd3cad4-93bb-43d2-8d9f-be751f37d45a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563e3763-7156-4811-8400-64a0ac7088c9",
        "cursor": {
          "ref": "df2d793b-afd3-485b-b26e-e4d69d1bab5c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4b626000-c3e3-4c28-bac2-657780bfe552"
        },
        "item": {
          "id": "563e3763-7156-4811-8400-64a0ac7088c9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f2262e8f-ec46-4da0-b2bb-75b6db9b8b0c",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eb34c1-bd10-4eaa-a292-7de6b90b0c8d",
        "cursor": {
          "ref": "415bd1f7-75ee-4504-ad43-811de628c9fb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7ae12440-2f12-45e3-a04b-f8fda039daa1"
        },
        "item": {
          "id": "35eb34c1-bd10-4eaa-a292-7de6b90b0c8d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c76fb33b-0e4b-4861-9b3c-69823cc3810c",
          "status": "Created",
          "code": 201,
          "responseTime": 242,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8261748-70e6-4796-be92-f112ca24721b",
        "cursor": {
          "ref": "5fcb8501-4762-451e-b4bb-c0f52a1bf9a5",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ec56bb62-9895-4653-8729-f5d87ee60bd3"
        },
        "item": {
          "id": "b8261748-70e6-4796-be92-f112ca24721b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed29355e-6aea-40ac-b97f-57d235444d42",
          "status": "Created",
          "code": 201,
          "responseTime": 115,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1d814f-43fe-42e3-a7b9-204a05988a1b",
        "cursor": {
          "ref": "f68becf7-501c-4742-b934-35714b890ec3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2ee07598-c7ff-435f-ac93-b469abbb5681"
        },
        "item": {
          "id": "bb1d814f-43fe-42e3-a7b9-204a05988a1b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b23c4e85-1282-44bd-bcff-71f7c4807956",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2baacbd-26aa-4afe-917d-58539ab1b506",
        "cursor": {
          "ref": "4f1a0690-e2c5-4277-8d6d-dd423b868fb8",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4d2e4323-0551-4afa-91ce-411630f171b9"
        },
        "item": {
          "id": "c2baacbd-26aa-4afe-917d-58539ab1b506",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "41d554ba-3866-48d1-8b44-2e477ac433f2",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "574ebf3a-5403-4ecf-8dd8-4c6a68995702",
        "cursor": {
          "ref": "324141c5-ce84-4bdb-82cc-a6d5085c1ca0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4f402450-d6ff-41ca-bfa3-eef3a14c349d"
        },
        "item": {
          "id": "574ebf3a-5403-4ecf-8dd8-4c6a68995702",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bacb3307-008f-4b45-b377-b305621c06a1",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e88488f-98df-497e-b15a-65034e472d70",
        "cursor": {
          "ref": "dab90656-fe8a-4b28-8b0e-df086ec847c0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "aa1ae016-3841-4724-b7c2-1eede68d8a04"
        },
        "item": {
          "id": "1e88488f-98df-497e-b15a-65034e472d70",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2e9e6a6f-296a-4083-8859-924a9f7ac77d",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85509933-3b9f-4e9f-b2eb-023202e89aba",
        "cursor": {
          "ref": "9308306a-572e-4356-bea2-7aaecf3dab86",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "947e635e-6e56-47a5-8cb3-b59ed0494f25"
        },
        "item": {
          "id": "85509933-3b9f-4e9f-b2eb-023202e89aba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "958a51a4-c4d6-4d3e-9a0a-4ac716896a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0172782-aff8-4c44-bfca-24f1aec1ec40",
        "cursor": {
          "ref": "762d01ac-13d8-418d-8c35-764538d800a1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "623a34bd-fa01-4122-9974-84b31c27030e"
        },
        "item": {
          "id": "e0172782-aff8-4c44-bfca-24f1aec1ec40",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9df6bb9d-3c91-4395-9e20-5f5fcc4f90b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8898960b-f57e-4db3-8050-59daa995a571",
        "cursor": {
          "ref": "3c61cea5-3054-45d4-b835-b25e9d168f22",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0b207e84-7492-4b5e-bb41-a38628424e9d"
        },
        "item": {
          "id": "8898960b-f57e-4db3-8050-59daa995a571",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f95c999-23da-4890-b909-e54aed14d305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b132f4-8628-4c51-8ae0-9226d7e0c855",
        "cursor": {
          "ref": "a58539c8-d70f-44ba-b159-4ce6b9627aa7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "700c5869-03f2-4156-afeb-99a53307dc03"
        },
        "item": {
          "id": "34b132f4-8628-4c51-8ae0-9226d7e0c855",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "453a6c77-aca9-4071-97ec-d602262c7cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de52d7a2-8883-4735-bd5f-761b5edba785",
        "cursor": {
          "ref": "6e95eeca-5b71-4cb0-8698-f9da90a2b555",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9a6c2909-d279-4f6d-acd9-c9cede6e1091"
        },
        "item": {
          "id": "de52d7a2-8883-4735-bd5f-761b5edba785",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7db9b8ca-2fea-4553-a87a-7676bb7dbab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef44659a-97f6-4ddb-9aa3-ac7c02d8c196",
        "cursor": {
          "ref": "f3b1b339-c0a0-4fb4-a3c4-10281396e38b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "26ff24c4-28d8-43e2-8deb-e7fcca43357f"
        },
        "item": {
          "id": "ef44659a-97f6-4ddb-9aa3-ac7c02d8c196",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae771390-0e50-4e65-9951-052caae95ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95825aa4-b9b4-4650-8655-d48a9d1b7509",
        "cursor": {
          "ref": "be0379d0-46a7-4c26-8c34-d8f5cad85558",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3068c5be-0844-4bc2-82fc-056c1fb1e6aa"
        },
        "item": {
          "id": "95825aa4-b9b4-4650-8655-d48a9d1b7509",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "397a5790-337e-4374-a269-787782969094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06729525-89d3-45f9-afd3-ce0cb9a61f0f",
        "cursor": {
          "ref": "7582e68f-4fb7-4861-9ea3-01a0f9c818ca",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a38c57af-6f72-40d3-89ca-a1828523eb69"
        },
        "item": {
          "id": "06729525-89d3-45f9-afd3-ce0cb9a61f0f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92466f4a-1f11-4675-b6be-3fce9b1cf755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b4bcf9-3fa8-4580-96b1-23e0025a908b",
        "cursor": {
          "ref": "e0db7a14-306c-49e7-a789-780cfa91cb8a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d7645edb-f8b5-46dc-bd92-62cbe7795610"
        },
        "item": {
          "id": "c5b4bcf9-3fa8-4580-96b1-23e0025a908b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0addffe5-a748-4300-ae0b-0fb4952d3148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78a7851-bfce-4087-891a-39a95b404780",
        "cursor": {
          "ref": "cca6e2d1-2713-420a-b6f3-5388111171e7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "766fb1a7-2d2d-4539-88d2-c4f81e8a9c94"
        },
        "item": {
          "id": "b78a7851-bfce-4087-891a-39a95b404780",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b63cf380-1154-440c-9790-14661d2be6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f77f9a8-27f6-444b-96cc-de00baa0b4c6",
        "cursor": {
          "ref": "463f04c4-1b4a-4a85-a462-3deefc869a26",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1e5a70a2-4744-403b-b293-4714f6736810"
        },
        "item": {
          "id": "3f77f9a8-27f6-444b-96cc-de00baa0b4c6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "45742251-b7b0-4576-b30f-1f57a5448f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a687e419-8fb2-41ec-bcbe-c1f6846eba96",
        "cursor": {
          "ref": "b67b0140-8f63-4e1d-8b6e-d2b0dbfdac9f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e654cded-3875-405f-8865-98c4638b374b"
        },
        "item": {
          "id": "a687e419-8fb2-41ec-bcbe-c1f6846eba96",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ffe670f7-2b9f-476d-8d69-8b0221bb01e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7674d95a-3def-48db-bc75-1749630becc6",
        "cursor": {
          "ref": "85be9d79-202d-473c-b421-f8145ff78f6c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "23c7cb05-83b4-4a73-8fff-df410a24aab5"
        },
        "item": {
          "id": "7674d95a-3def-48db-bc75-1749630becc6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c225122-f39e-429e-a467-13fcd6edc92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334ab0cd-4e31-4b48-9459-4c9af7ab874a",
        "cursor": {
          "ref": "30a1743b-608a-44f5-9b61-238f86b30167",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c1ad21cd-537d-4d90-a849-9df887530b80"
        },
        "item": {
          "id": "334ab0cd-4e31-4b48-9459-4c9af7ab874a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6da5eea-44ca-45af-9569-45fc0e643094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5982110-a3af-45a4-85f1-f517da3a3988",
        "cursor": {
          "ref": "27c97367-96e8-4f06-9988-cbedf06f58cc",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f528f9c7-3d3c-4847-95bd-3ab391ca24ab"
        },
        "item": {
          "id": "b5982110-a3af-45a4-85f1-f517da3a3988",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "efb91d68-b26f-4101-85a4-b935d86e677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ff5811-5c0c-4d95-8dab-1d4a94e2d108",
        "cursor": {
          "ref": "678acb88-eb0a-4333-8cb7-41c8c3b55ebd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "520b9f1f-4830-479b-9051-a46c403295e2"
        },
        "item": {
          "id": "c9ff5811-5c0c-4d95-8dab-1d4a94e2d108",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bb57d066-b3e3-49f9-8774-da807e2a13e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9d22b8-c547-4878-bd2a-3e1a9d3fa528",
        "cursor": {
          "ref": "aa94c1af-070d-4ea1-8955-a78d9a1f1515",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0a9067da-3e44-4f7e-9ed8-90dba4d84d7a"
        },
        "item": {
          "id": "de9d22b8-c547-4878-bd2a-3e1a9d3fa528",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "89838336-d87c-43f8-a195-94d4c46e4c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741f3f97-a1d0-49b3-bb20-df129521fcc1",
        "cursor": {
          "ref": "7012865c-25ba-415b-a03c-70ee01679d28",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f45f53d9-d167-47d4-8d7a-872a0fce0361"
        },
        "item": {
          "id": "741f3f97-a1d0-49b3-bb20-df129521fcc1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03aa97da-491c-40e7-a1d2-1d06d7c1c7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62294c0f-1ad1-4748-9827-80437424f60d",
        "cursor": {
          "ref": "892b3a48-cde7-4a0d-8a3e-f3c848d82dae",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "975c311b-c617-49d8-bc3c-691087e0a31e"
        },
        "item": {
          "id": "62294c0f-1ad1-4748-9827-80437424f60d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "65449b1e-a994-4331-b1b1-da71906a0c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db18392-8b68-4144-a63b-35fb79d2063b",
        "cursor": {
          "ref": "7e15a5c7-5fd0-47b1-bd5b-05dd30de00b5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7dfc514a-5ee7-442e-bdd4-98d95a1d32a2"
        },
        "item": {
          "id": "2db18392-8b68-4144-a63b-35fb79d2063b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "216472af-1477-4083-ac80-1f0cee256e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692286a6-743b-4523-bc40-44ef60e7b92f",
        "cursor": {
          "ref": "eda805f6-a051-42dd-bdf0-16df77598fce",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "165fb662-751c-4c53-9c56-c751fe96279b"
        },
        "item": {
          "id": "692286a6-743b-4523-bc40-44ef60e7b92f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "06b626ac-485a-4d57-afda-f869861cdd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3355ab30-b1cf-430d-ac0c-c2dfac94833e",
        "cursor": {
          "ref": "2697d6e0-b621-45da-b43b-cdab390ea3c4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9931dc6d-f6bf-4052-b57c-b428ee5ef579"
        },
        "item": {
          "id": "3355ab30-b1cf-430d-ac0c-c2dfac94833e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce5aab5b-f164-4568-aec4-d9f535dd9713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa28b044-5893-4d6c-928e-e79e0c90c4fa",
        "cursor": {
          "ref": "69c388f1-5bb3-4e0e-95f9-bbdcd9a37bc6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "932f57e3-9487-4006-88a3-fb243167bb50"
        },
        "item": {
          "id": "aa28b044-5893-4d6c-928e-e79e0c90c4fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c6b9d4ec-bbeb-41ea-94c0-e070f73c396e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4030d3c6-7ab7-4342-b825-5f6d16a17d78",
        "cursor": {
          "ref": "df9bd881-595b-465f-84de-33edaaa75f8b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cb9a73b9-7cdd-4e4f-a3d7-22fdcf1c42ab"
        },
        "item": {
          "id": "4030d3c6-7ab7-4342-b825-5f6d16a17d78",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "366f1603-f43f-4e9f-991f-e9676679dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e595c06-5222-4d4a-b063-1f9f93ebab2c",
        "cursor": {
          "ref": "36c7b802-819f-4bee-a14d-57048738d474",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "87bbea24-2e46-4f4b-b83f-c1807be02ea6"
        },
        "item": {
          "id": "2e595c06-5222-4d4a-b063-1f9f93ebab2c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b69c1e5-d264-4b38-926d-87bde9330b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b258e626-4c07-4dba-8ed5-063057ea4dca",
        "cursor": {
          "ref": "13c77a8a-1800-4ffd-ba39-50d3d532145a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d2b7a914-7889-41a6-8ff8-e34162f61ffb"
        },
        "item": {
          "id": "b258e626-4c07-4dba-8ed5-063057ea4dca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1394ecc1-4d41-4ef2-b71c-b421189fc39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef067662-d65b-474a-b2fa-982301b4684a",
        "cursor": {
          "ref": "241b25ab-64d2-49d6-b343-4237b6de7571",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "086a8570-6e9d-4c07-89c6-070381dce2ab"
        },
        "item": {
          "id": "ef067662-d65b-474a-b2fa-982301b4684a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ce866fc8-ab51-437d-943a-0629edc9a320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a271a6-3e84-40d5-b3f0-0188db58bf18",
        "cursor": {
          "ref": "51d79db2-e699-4d79-8f1a-f5f127b17c0b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a1675b7b-555f-4712-bbad-f85169647892"
        },
        "item": {
          "id": "01a271a6-3e84-40d5-b3f0-0188db58bf18",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "231c928c-f85d-4b11-95d5-64fa339252b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc4120-563d-44da-9a94-62890fa44dee",
        "cursor": {
          "ref": "7000a737-0ebe-426a-b9ce-a97626fa195a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "788d12dd-92db-4423-9df4-ea9cf40e3e2f"
        },
        "item": {
          "id": "4dcc4120-563d-44da-9a94-62890fa44dee",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e7139011-df5f-4d05-a423-e5c7372d1ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06918d97-2c44-4c18-a4b4-16e7442806c3",
        "cursor": {
          "ref": "70da9f9e-fbcb-457b-ad6b-e962b6067ec1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7c1cf38d-5111-49aa-afd9-7590cd135c16"
        },
        "item": {
          "id": "06918d97-2c44-4c18-a4b4-16e7442806c3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "54569436-9e2c-4afb-af68-ea10d6ab5bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7491eed5-3b9c-4f02-bc7e-00988a8b8f28",
        "cursor": {
          "ref": "0aca1f76-72f4-453a-8b8d-986aa874365d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c4fa6a4a-fc7c-4ab9-a130-c87541460a81"
        },
        "item": {
          "id": "7491eed5-3b9c-4f02-bc7e-00988a8b8f28",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "feccd90f-8f80-4f71-b67c-84cf638863b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0f4996-85aa-4749-bac2-427e100f8939",
        "cursor": {
          "ref": "48929603-2248-40fd-847d-56a4087b1915",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "244ea52f-08b0-4738-b7a4-60ac89636fcc"
        },
        "item": {
          "id": "fd0f4996-85aa-4749-bac2-427e100f8939",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "33f95fc5-cc82-43cb-b6d9-fe9f0b74407c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aac57d-b17a-48f9-aa79-e680d1f5f161",
        "cursor": {
          "ref": "7c702afe-27ca-48d3-a9bf-162160f02bea",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c9494225-3675-467d-ab04-45362178eab1"
        },
        "item": {
          "id": "a0aac57d-b17a-48f9-aa79-e680d1f5f161",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8442ae7e-af9b-4ed1-8a93-1f278f45b543",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44f2d52-0d66-4123-bc7d-9ce3cbe229fa",
        "cursor": {
          "ref": "d54b7114-fac8-4a66-916a-c5377c3fa0c0",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "417f4b5f-f867-433e-ad65-7926fb86d53e"
        },
        "item": {
          "id": "f44f2d52-0d66-4123-bc7d-9ce3cbe229fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1929bfc8-8133-4289-9676-16e43c35a075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103f9fdb-af72-43cf-aa19-bdde7f766557",
        "cursor": {
          "ref": "8d9a15ae-feb9-47cd-b800-576d547ac387",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0a638ca1-6a90-4842-80f0-1880f2cc0a30"
        },
        "item": {
          "id": "103f9fdb-af72-43cf-aa19-bdde7f766557",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "202b3684-efd2-409d-b805-75f788bd8439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0dd580-0bd8-4d2a-937c-3fa20afc6bf5",
        "cursor": {
          "ref": "1ad4322e-3390-4266-8e57-9d4d81f27353",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b79ef1e2-7186-45a3-bd71-90605a6f38fc"
        },
        "item": {
          "id": "8d0dd580-0bd8-4d2a-937c-3fa20afc6bf5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3d444cf4-2424-4e17-af48-960625b87ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d4b007-c528-47c7-8a11-5841f8fabbce",
        "cursor": {
          "ref": "b6180269-18f5-4608-9441-1e207fedbf9a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2542dc08-4907-4600-bf69-41fb3333a62c"
        },
        "item": {
          "id": "e1d4b007-c528-47c7-8a11-5841f8fabbce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e9809b59-df4f-4efc-aecc-dd1247e5068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7c16ee-9dd2-4506-a833-68ac8d511f92",
        "cursor": {
          "ref": "f5641f83-20d4-4f46-8e4d-0925c60e1ca7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6a2a3dea-aecf-4ad1-a2cd-f6ee7b51f76f"
        },
        "item": {
          "id": "ba7c16ee-9dd2-4506-a833-68ac8d511f92",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9f013a8f-43da-4aa3-bdc2-d000e3b805c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5375e9-b314-45e6-bdc9-08fece4722a8",
        "cursor": {
          "ref": "99afd9c9-b27b-49c6-8042-ac9616deec16",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2b9b02b6-2a9a-47b7-b117-65bb6785a7cc"
        },
        "item": {
          "id": "8d5375e9-b314-45e6-bdc9-08fece4722a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b9cc210e-2533-4e93-96c8-a11012b1e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3077a69-c1b0-4a1f-8cbc-f05c894244d5",
        "cursor": {
          "ref": "c5a99fbd-7c88-4e23-a669-d89120834121",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a9a75dec-e82e-49a5-aec8-1c743b619e19"
        },
        "item": {
          "id": "b3077a69-c1b0-4a1f-8cbc-f05c894244d5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "47b4b8b8-863e-4dba-a7f3-ac82bbfc6b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25ac74e-315a-457b-9941-214c4f436325",
        "cursor": {
          "ref": "51140f87-c4bd-48ac-891b-84666e199a2f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "18bf1b6a-6222-4f2f-8dcb-e1d109b9b831"
        },
        "item": {
          "id": "b25ac74e-315a-457b-9941-214c4f436325",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "45d589c6-4518-4990-a113-c6e405d8ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56180efc-61c7-4f97-a092-3916ad3a0a54",
        "cursor": {
          "ref": "667c40db-e7a5-4675-9e0e-edab31ef0d81",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "22dcad64-ee03-4094-8815-19c305ec62bb"
        },
        "item": {
          "id": "56180efc-61c7-4f97-a092-3916ad3a0a54",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c771e8b9-9864-4a72-a764-59bddb60a793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bc9bf2-4eda-4d32-a436-5001f1919c59",
        "cursor": {
          "ref": "3bcfc100-1c4d-4410-a319-29c1e936263e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "11a52afd-7ff7-4d22-9243-68d7f5544050"
        },
        "item": {
          "id": "44bc9bf2-4eda-4d32-a436-5001f1919c59",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7f8e8942-ef45-41be-975b-e06bda777b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da0d11c-dcdc-46d0-85c9-8904cb8d7cf4",
        "cursor": {
          "ref": "9be4a549-8d57-4723-937d-045a6676ee2f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "07470c92-8fef-4309-b244-0361b5ba08c8"
        },
        "item": {
          "id": "1da0d11c-dcdc-46d0-85c9-8904cb8d7cf4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "45485941-6ffb-4626-9a7d-1f7d36caf379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3988995b-e21f-4c6c-8cb8-c6965db9baaf",
        "cursor": {
          "ref": "52ea7c8b-2ea1-4a45-bf59-6217400a249f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ea5771a8-0391-4e4d-949b-fa058344fed8"
        },
        "item": {
          "id": "3988995b-e21f-4c6c-8cb8-c6965db9baaf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "376f3d70-43c1-4778-a6b8-5897db6bb4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125ddde9-52fa-4c68-b21f-81f87fb4c4fe",
        "cursor": {
          "ref": "7df18cc0-2eb2-478d-8010-955c413f8e26",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9b8fa062-8ee8-4158-b651-0b2b97702aa6"
        },
        "item": {
          "id": "125ddde9-52fa-4c68-b21f-81f87fb4c4fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "35c22bb1-d3c0-493a-89fd-64879e455c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759c93c6-ad98-4e91-9854-ca4bc78e01e2",
        "cursor": {
          "ref": "6adda83f-95af-485d-becb-de180d453caa",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "61354002-1d24-4361-931c-89b9f6a63606"
        },
        "item": {
          "id": "759c93c6-ad98-4e91-9854-ca4bc78e01e2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f490e1fa-40b9-4c2e-9664-982fc18f8221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb35a61c-afc8-4e63-97b0-a5e4dcf86179",
        "cursor": {
          "ref": "e4794df9-7f01-4804-865c-26a000eda17c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a189c86e-b520-4e88-8688-95d9a4f2df5d"
        },
        "item": {
          "id": "eb35a61c-afc8-4e63-97b0-a5e4dcf86179",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e801e576-6f0e-4135-b720-c36d441b3c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38548d4-3f4a-4382-8ef2-dc975e72ed20",
        "cursor": {
          "ref": "ab369fbb-2834-4681-b492-9ed79024c871",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a20861a-4e9d-4499-b4bf-0c5a63059f58"
        },
        "item": {
          "id": "c38548d4-3f4a-4382-8ef2-dc975e72ed20",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "078bff42-08d6-4166-ac24-38bbe7800896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e5a74-2587-46ca-ac8b-bda06bb116fe",
        "cursor": {
          "ref": "9e2fcd40-29ad-4043-a47b-02eebd90519f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a8d9a10b-f146-47ca-872b-6af751b9413a"
        },
        "item": {
          "id": "cd4e5a74-2587-46ca-ac8b-bda06bb116fe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b7a77461-9951-45ff-93fe-2d40ccafaa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9850ca90-3c26-486a-b37a-fbaf3031154d",
        "cursor": {
          "ref": "13dde56a-4174-416d-9867-f46484a733f9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a6728d73-5695-4bef-a10c-90d8d0aff903"
        },
        "item": {
          "id": "9850ca90-3c26-486a-b37a-fbaf3031154d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "29e9a449-52c0-4c3f-8e45-421fd012bdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbcc24a-6a57-49ec-85f6-72ba9cdf97f2",
        "cursor": {
          "ref": "07661fd6-b7b0-439b-8374-74ddbf0f4c42",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0fd749af-bba0-42f9-b74b-67eabd9d5f40"
        },
        "item": {
          "id": "2fbcc24a-6a57-49ec-85f6-72ba9cdf97f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "40f93ea1-d517-4bef-b8c2-bb429f010e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47351336-700e-4435-8c04-c7ca8fcde1bc",
        "cursor": {
          "ref": "c8325342-3406-4e2f-80b6-36e4a63071b3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f80f2f26-4e3c-4dbf-aff4-8fe6c43bd1f8"
        },
        "item": {
          "id": "47351336-700e-4435-8c04-c7ca8fcde1bc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b15b8e69-c3f2-4706-a115-dec742615f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b847ba1-beff-42e3-9e9b-1ffb9d2463a9",
        "cursor": {
          "ref": "cfda06eb-e19c-49ba-8610-c10c11b40798",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ceec991c-4bc7-4363-b405-af165fd03d77"
        },
        "item": {
          "id": "8b847ba1-beff-42e3-9e9b-1ffb9d2463a9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9851881e-7846-48cd-9fa0-d66ff27ce5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0106e4a6-fc9e-4fe4-bb9b-abaa5fe61266",
        "cursor": {
          "ref": "0e242c14-e8b4-46b6-accb-130bd237bbac",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9e9576de-0370-40cf-8cc1-f8264b7e945d"
        },
        "item": {
          "id": "0106e4a6-fc9e-4fe4-bb9b-abaa5fe61266",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "208d6818-3c11-4cef-bde3-e166e06883c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e67fcf6-d835-462e-88a2-3a148b877894",
        "cursor": {
          "ref": "21bb6b7e-1965-4dcb-9cce-111728bc7606",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "721cca0b-1e0b-4239-ad1a-40840cbf9a40"
        },
        "item": {
          "id": "6e67fcf6-d835-462e-88a2-3a148b877894",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a6a883f9-35b8-4da1-af56-6203bb637b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096af926-ed0a-4e74-8e53-260fcb77b359",
        "cursor": {
          "ref": "ae857cd1-c06c-4310-bd23-28c09956aad4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ed7a0754-499b-412f-9bad-d5ef004658b1"
        },
        "item": {
          "id": "096af926-ed0a-4e74-8e53-260fcb77b359",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8bd2071d-10b1-47b2-b001-1e3c9d7edb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f02143-81f7-48bf-83da-a210d662f7dc",
        "cursor": {
          "ref": "53675aaf-e2ed-4694-980a-d4badf615692",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "98ca9862-e25d-43be-bc0d-565c4b55c783"
        },
        "item": {
          "id": "e0f02143-81f7-48bf-83da-a210d662f7dc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a9306491-d576-480a-a0e8-42babd9141d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3a5760-984b-47f2-a3f3-b84dfcc1bf05",
        "cursor": {
          "ref": "19fb9a9f-82fc-4f43-a4f2-36392faddc86",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1e95c4b-8f17-4f77-a16e-bc8562630f7c"
        },
        "item": {
          "id": "cc3a5760-984b-47f2-a3f3-b84dfcc1bf05",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "46e0ed99-4fba-4ee8-be64-ad7e14e2eff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebc6ea0-2143-4d50-8efa-775eae97c8bc",
        "cursor": {
          "ref": "b12b4195-fefe-4f10-b88d-79c104fb4069",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8db8e636-a140-43d6-afd8-78b7489b5364"
        },
        "item": {
          "id": "aebc6ea0-2143-4d50-8efa-775eae97c8bc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0b89430e-e387-456d-bdb0-1086e8f294ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2fb623-7414-41e2-9e75-f51e6239f014",
        "cursor": {
          "ref": "95cd8453-a151-4ef9-a75f-e9bde101fd28",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "86a278c2-bb32-42b1-93a8-c1ab6640c48e"
        },
        "item": {
          "id": "bd2fb623-7414-41e2-9e75-f51e6239f014",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25bf7141-fafe-41fb-a68e-ed460f1c569e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e807edfc-3a99-49b5-8dd2-2ec1a8022afa",
        "cursor": {
          "ref": "84baac86-fe92-489d-9375-577beca2573d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "69a484f9-7489-401d-a258-1b432d94ae8f"
        },
        "item": {
          "id": "e807edfc-3a99-49b5-8dd2-2ec1a8022afa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "229df52c-7f36-4f8f-b560-9198e3e344d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe5848-849d-4815-98de-7851816103b3",
        "cursor": {
          "ref": "10524708-b377-469c-aae5-224d0002d15c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "09fae729-fbfe-4483-b604-c4bd227b3051"
        },
        "item": {
          "id": "c4fe5848-849d-4815-98de-7851816103b3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "441bf645-f7d8-420a-8d31-673f66d89f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b14c011-f0f8-4809-bfa5-5d0251667945",
        "cursor": {
          "ref": "9a1b9d71-ca98-4eff-90b3-8a2361c9fa3f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fd43239a-a46c-4ca1-8b97-0fda67791283"
        },
        "item": {
          "id": "3b14c011-f0f8-4809-bfa5-5d0251667945",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e086061-8780-47ea-afe4-a0f18037f965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a1ad13-4ed7-4430-8ddc-425b24a2fc95",
        "cursor": {
          "ref": "ed348297-ef73-4448-b0f4-a78025c5fda5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3064d438-ed08-4137-a707-a36e970e0e7b"
        },
        "item": {
          "id": "b3a1ad13-4ed7-4430-8ddc-425b24a2fc95",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0592ab5d-bb3c-4eb3-a37f-b3016f49d4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d706b5-ee4d-4764-a81c-99b8b729a73c",
        "cursor": {
          "ref": "4fa3a299-bedb-4ec1-8c63-46da0893b977",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "797fd81b-7c93-4701-853a-7e8b351e3909"
        },
        "item": {
          "id": "e0d706b5-ee4d-4764-a81c-99b8b729a73c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1a3c741c-4d27-4b14-83b9-d8e1472b4dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1797ccd-1e98-4ac3-8615-42d644d56c3c",
        "cursor": {
          "ref": "e5e42df7-0394-49ff-9d54-1497d2c37326",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3a6a9007-f6ae-4480-a6a3-7ce4a2098c22"
        },
        "item": {
          "id": "d1797ccd-1e98-4ac3-8615-42d644d56c3c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ecf6a1e5-630b-4ae5-876f-76361311e44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ba4957-ed4f-4e59-96f9-7ef54c32452d",
        "cursor": {
          "ref": "5c13a7c3-d64c-4f05-b2af-75c0f9240763",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "464be336-db64-4fba-ab7b-4d37b74fccc0"
        },
        "item": {
          "id": "f2ba4957-ed4f-4e59-96f9-7ef54c32452d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d6a9a809-f84e-4bc6-a5e4-906d9124858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e3345b-8d4a-4cbf-88e0-76039227bcc7",
        "cursor": {
          "ref": "7b4be2e5-87ea-4e5b-a96d-a6498aa9c766",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8eef25b0-2a0e-4687-86c9-501c7328def1"
        },
        "item": {
          "id": "18e3345b-8d4a-4cbf-88e0-76039227bcc7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d1e0c385-b56d-4211-a523-8dde37ee0da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e800ae8d-bcdb-4ced-aabe-c6eba817be7f",
        "cursor": {
          "ref": "530b275a-59fb-4912-9d55-97aac1501656",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "78202a97-4a55-4ffe-b308-becdd6b33fc9"
        },
        "item": {
          "id": "e800ae8d-bcdb-4ced-aabe-c6eba817be7f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b0f03217-8e93-4684-b8a0-5da2a541db1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d305ad8a-e6ec-46c6-a33a-aa498f4abadc",
        "cursor": {
          "ref": "8e59feb2-6846-43f8-b327-3a91eadd2837",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0b23e894-a151-48b2-9b10-1a33f229beb7"
        },
        "item": {
          "id": "d305ad8a-e6ec-46c6-a33a-aa498f4abadc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7c707127-7610-4cf8-9fca-336dbe9d2d3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bde7758-7197-48d1-bd9c-6ec831c8e1b2",
        "cursor": {
          "ref": "2113bc80-8b9a-412d-b6b0-9ab2b41257ec",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "38174a35-b94c-4289-b31a-2c94106be1c7"
        },
        "item": {
          "id": "7bde7758-7197-48d1-bd9c-6ec831c8e1b2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3bda7f45-74a9-438c-80b2-7d7b0a5c8aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1250ad61-b7e1-4120-83ed-e18867f833cd",
        "cursor": {
          "ref": "16b7736a-48e0-4805-8830-fa3a20dfba20",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "60a72e44-0b5f-4ec0-acea-bda3369b36c6"
        },
        "item": {
          "id": "1250ad61-b7e1-4120-83ed-e18867f833cd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dd8cd652-8286-4abb-997f-bddc43c13c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a8d84a-90ca-40b4-b32b-97ccb4b7d299",
        "cursor": {
          "ref": "5ed74560-bf49-4817-9c13-e7052ba1aa0e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0638b4f2-d3b0-4c06-a632-447e98e840a3"
        },
        "item": {
          "id": "b6a8d84a-90ca-40b4-b32b-97ccb4b7d299",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e23490c3-025f-4ce6-babb-32aabf794019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a75d486-800e-45d9-8edc-1c69ba67a5e5",
        "cursor": {
          "ref": "215a0cb4-3089-4600-84f0-8ee21915408d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "443f5a7a-2865-446c-9e25-a09199fb54bd"
        },
        "item": {
          "id": "6a75d486-800e-45d9-8edc-1c69ba67a5e5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b3fb1544-d8fc-466c-8cfd-fced7c0d2cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629c3612-fd15-4a6f-8de6-f0cb3c4bce4d",
        "cursor": {
          "ref": "699c08ff-1d66-4cfb-abfe-859e61c19531",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "96dd903c-4306-4e41-b91b-b6b3f9421c19"
        },
        "item": {
          "id": "629c3612-fd15-4a6f-8de6-f0cb3c4bce4d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6882a170-b547-49fa-b7c9-082887d638d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055ac261-9104-4022-915c-b284e0cb83e1",
        "cursor": {
          "ref": "fc06a937-0302-4779-ac7f-df040d0ac34b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "91ad26ef-ab27-4fa2-9f0a-9611c8dac366"
        },
        "item": {
          "id": "055ac261-9104-4022-915c-b284e0cb83e1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fd316f7e-7986-43e8-9862-dc7a81e03ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69992960-3f48-4e37-9ded-fef2475edbce",
        "cursor": {
          "ref": "fe7ced2b-e50f-43aa-816f-caa0a5f50419",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b5faef99-e408-403f-87f2-b65872fa3233"
        },
        "item": {
          "id": "69992960-3f48-4e37-9ded-fef2475edbce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3b904f07-c22b-401c-9c75-8605d280ed7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8351dc87-aa48-4b5a-a691-afd0f071191a",
        "cursor": {
          "ref": "82d2c997-f790-44a6-947e-ef33d3345e44",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e709a848-2e98-4d66-a9d1-7c78f8f86f70"
        },
        "item": {
          "id": "8351dc87-aa48-4b5a-a691-afd0f071191a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "66ab302f-a21b-4174-8ba6-896f54e06761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b9e12a-bab5-4537-b30a-5299387bbba9",
        "cursor": {
          "ref": "1d028419-836a-4dda-8240-071f24038038",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "13056770-e59c-442b-8af4-4ebbf8e1d1c3"
        },
        "item": {
          "id": "a4b9e12a-bab5-4537-b30a-5299387bbba9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ed1b5cf5-bbd5-4f9b-9090-61d99b34e401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01a37f7-8058-41e7-b847-c4bab14ae558",
        "cursor": {
          "ref": "164fde95-88b8-4fc4-9c0b-5fdfd047d0d0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ef2d3d56-1247-4efc-8cd5-cd1299c8c6ee"
        },
        "item": {
          "id": "c01a37f7-8058-41e7-b847-c4bab14ae558",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "48b36aa2-6576-48ec-a829-fed47377646f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226bb7d3-783d-4681-8429-67a7babfe3f7",
        "cursor": {
          "ref": "33b74e90-55e6-48fb-93e8-7e504084e2f0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a8573686-630d-490b-a355-a698435462e2"
        },
        "item": {
          "id": "226bb7d3-783d-4681-8429-67a7babfe3f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e6c77230-a28b-4c96-923b-b4e9e2fade68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277e5492-def7-454a-82e2-2300f558f104",
        "cursor": {
          "ref": "174f7510-ba83-4d5d-b398-3018bdaf8b90",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8da128c4-3ed9-4214-8fc3-4f4af1851861"
        },
        "item": {
          "id": "277e5492-def7-454a-82e2-2300f558f104",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e1de5a51-b55e-4d9d-844d-1c377627a947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee7e3ae-e2db-4283-bd2a-17e8e4c0c8d6",
        "cursor": {
          "ref": "22b2a081-2412-42f1-aa95-0bd1b992dd49",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "46f7e136-3ffd-4361-995e-a90c1c3cd9fe"
        },
        "item": {
          "id": "5ee7e3ae-e2db-4283-bd2a-17e8e4c0c8d6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c0c9a48f-0976-4c7c-861e-fcd506aca925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73be2194-f90c-480a-a7ff-ba168352dadf",
        "cursor": {
          "ref": "05bac517-61de-489f-bee7-e8a9e9d747b5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7260045c-c6c8-47cc-8a61-8bbd10d19d22"
        },
        "item": {
          "id": "73be2194-f90c-480a-a7ff-ba168352dadf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "99096a5c-bf1f-4030-8992-e10c1a8164d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c235d9f-fed2-4adc-8c86-dfa3ee49aa1d",
        "cursor": {
          "ref": "0a5be4db-b959-4c67-884b-a033d04fbef6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b3a5be86-54c8-4bb5-9701-c28656c1041d"
        },
        "item": {
          "id": "7c235d9f-fed2-4adc-8c86-dfa3ee49aa1d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "02275252-9b62-430c-b0a4-57ad40c022cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9feed98e-db08-44db-8096-351597a3dd0e",
        "cursor": {
          "ref": "b92b619c-16e1-4cea-bdf3-679c84810d9e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2455ac50-7717-4fd8-9dea-3432d8b3002b"
        },
        "item": {
          "id": "9feed98e-db08-44db-8096-351597a3dd0e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3b6c186f-c9c8-4fc4-a5a9-943a27bbfdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a505427e-8232-4b6d-978a-5f3096862151",
        "cursor": {
          "ref": "563bad4a-c65b-4565-9c0a-b82d6406f019",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bb26d336-1938-4e3b-ae06-4a1e2775394b"
        },
        "item": {
          "id": "a505427e-8232-4b6d-978a-5f3096862151",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fdc95638-f9d2-4242-bbf9-b81c6b164b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c07adfe-e1a1-413b-ae81-4f4c6bf4c10f",
        "cursor": {
          "ref": "ba84d33e-223a-43b0-8ee9-82e99249370a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9ddaf1a1-4575-440f-a897-a56db8ec985c"
        },
        "item": {
          "id": "3c07adfe-e1a1-413b-ae81-4f4c6bf4c10f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "12a0a1c7-9b5c-444a-9eaf-963dc95d8da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c2a8f7-62ea-4ef3-b40f-7b88de7f7322",
        "cursor": {
          "ref": "fa9d568f-7c39-4912-91e6-def54395738f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e330608f-de58-4cef-be67-1e028ab5bc20"
        },
        "item": {
          "id": "b0c2a8f7-62ea-4ef3-b40f-7b88de7f7322",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4c30affb-0f3a-44fb-8481-e54117284057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9baeb8e-dd90-41d8-bacc-dbe3e1978aef",
        "cursor": {
          "ref": "6f821b34-f281-4fcb-81af-9dfaadaf7166",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8372c7f5-a3ef-42ba-a507-bbeacbe144bf"
        },
        "item": {
          "id": "f9baeb8e-dd90-41d8-bacc-dbe3e1978aef",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cf0b7c9a-1853-45eb-82de-293d4760e035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b547ec-0850-4461-8efd-27d2ba7fb961",
        "cursor": {
          "ref": "d8c1bbdd-9a30-411d-9842-551c1de690bc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "82da8aa4-5d04-45d4-848c-51b0579d92e6"
        },
        "item": {
          "id": "70b547ec-0850-4461-8efd-27d2ba7fb961",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "19551b05-c72d-42e5-bfdc-66c675ed20ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c0bad7-a50b-42b5-ac3d-47ca097a10d3",
        "cursor": {
          "ref": "4f64ec46-1c56-43d1-81d9-daa105ea7e39",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d1e07b44-719e-4af8-b46c-e453c3f84aea"
        },
        "item": {
          "id": "e8c0bad7-a50b-42b5-ac3d-47ca097a10d3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "85fc3661-70fa-44b7-bee6-e022495b37b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea3d108-e492-45a9-8656-195360c79491",
        "cursor": {
          "ref": "6f9be9ce-20e4-41e8-b186-9fdaae0b937d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c65d838e-a801-437d-a5d9-676b61af2c5d"
        },
        "item": {
          "id": "9ea3d108-e492-45a9-8656-195360c79491",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "22c4cab5-9f3e-47bf-b543-7192a017f994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ef155a-8da7-4f95-bc02-8ab756dbd3ec",
        "cursor": {
          "ref": "8684a430-9e7d-42aa-bc36-d9349e9647ff",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "77b251ff-91ef-4a19-96ac-755ae96e19cf"
        },
        "item": {
          "id": "07ef155a-8da7-4f95-bc02-8ab756dbd3ec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "addfe8d7-171d-41cd-abd8-06923234bd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82811d3e-f25d-468b-b313-1e8de24dfe17",
        "cursor": {
          "ref": "663bbfe4-c762-4a0a-b4eb-4a576b09d8d3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6ed0bb63-6b4e-4c58-a58e-b827690c96ff"
        },
        "item": {
          "id": "82811d3e-f25d-468b-b313-1e8de24dfe17",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2cb6122f-8531-477d-8633-ca348cd69796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589212f3-8cf8-4a6b-be2b-a22861d772f2",
        "cursor": {
          "ref": "711d3be8-b410-47b0-9a75-9db915cf857e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8b09b2f0-2ebf-46d0-bf75-f2509800debe"
        },
        "item": {
          "id": "589212f3-8cf8-4a6b-be2b-a22861d772f2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7d5dd012-1b2e-4347-a9e2-193e92a4078c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e780434-891d-422d-89b9-c5d8423f782e",
        "cursor": {
          "ref": "925f6e98-97f6-4c1a-a062-e1d1fdfc4a7a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c66b7d8e-010f-49a7-b602-d9224c1e123e"
        },
        "item": {
          "id": "1e780434-891d-422d-89b9-c5d8423f782e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a1243d72-7bd0-4d71-8169-1228ac961a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fd7e82-be52-4685-87e8-8ba72acb976f",
        "cursor": {
          "ref": "e6b6c227-ac23-4be6-ade7-bd6de9f180e7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1954a8bf-57d2-4ef4-84f6-7cd83e581dc1"
        },
        "item": {
          "id": "d1fd7e82-be52-4685-87e8-8ba72acb976f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f20dc72f-44d7-4ad5-839c-2fd0ea59bb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956b0e0c-3e40-4827-ad6e-34229dfc0845",
        "cursor": {
          "ref": "912f2575-5ac8-42e6-895f-028f7ad39003",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1e48f017-d650-4756-b7ee-4dcde7252ca9"
        },
        "item": {
          "id": "956b0e0c-3e40-4827-ad6e-34229dfc0845",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c64fe640-53a9-4548-9e5e-f9cedd4e5e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a70c9-3ac0-463e-992d-26e09b2c3518",
        "cursor": {
          "ref": "9f3e4873-4651-4f19-b25e-60917cba42cc",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7b80cd52-65c8-498f-9a6c-c1e1b9b1fae4"
        },
        "item": {
          "id": "2e0a70c9-3ac0-463e-992d-26e09b2c3518",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "67f3dbb1-001f-41df-9090-c5d63a8c51c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f58ba89-c9f4-4cff-b458-f45de8186d3c",
        "cursor": {
          "ref": "78741448-526a-4012-a09b-3dd8fd4c8066",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "036ec321-8634-4e53-b897-5508f81d4899"
        },
        "item": {
          "id": "6f58ba89-c9f4-4cff-b458-f45de8186d3c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e2cf6785-c168-4984-9ba6-22f7675926bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d681e2-c882-4d03-9862-ed60da7a2368",
        "cursor": {
          "ref": "354943fe-cee8-4358-8a58-ca5fa1387cc3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4f0129a5-2238-4f31-b258-e4ec2c10fb03"
        },
        "item": {
          "id": "26d681e2-c882-4d03-9862-ed60da7a2368",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "42a811bb-faf3-41f8-897f-879770b06010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e633d27-c48f-447f-bad7-335e72ec7c75",
        "cursor": {
          "ref": "5f1c130a-8378-40bc-8fae-00d50caf7551",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6fc43efb-b730-4bbc-af6b-d35f3575e94d"
        },
        "item": {
          "id": "0e633d27-c48f-447f-bad7-335e72ec7c75",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0543abd0-64f9-44ec-9b57-1d1997d295c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222e4088-a8e4-4cd7-b84f-288b595d7cea",
        "cursor": {
          "ref": "6f4cc9eb-987a-48f6-a8ed-e2595f06f558",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "949fcf10-6277-487b-a843-0c9209e929f0"
        },
        "item": {
          "id": "222e4088-a8e4-4cd7-b84f-288b595d7cea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b463abb-603e-430a-820e-84792f291c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c9664-3df7-4923-84db-cb1e66914bca",
        "cursor": {
          "ref": "617af5b8-2942-4374-8634-cbb5bad2a3ff",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b647b1e4-206d-4ba9-b336-0380330b24bf"
        },
        "item": {
          "id": "292c9664-3df7-4923-84db-cb1e66914bca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5db97cee-2203-4717-803e-0e1e67e87893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44469ff-b361-4961-b9e3-600667776386",
        "cursor": {
          "ref": "80cb6d11-0c08-484b-a560-e0612573a2b9",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ebd45cc1-8d93-4de3-9fea-6380ee562a98"
        },
        "item": {
          "id": "d44469ff-b361-4961-b9e3-600667776386",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "34390946-b76e-4fc8-9642-aa450963cb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09af5bf4-2c6e-4676-b6e2-c7eddc571c73",
        "cursor": {
          "ref": "42c3ca36-df8e-43e9-aeec-d522d4cbcd00",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0f7758b5-3f80-4b1f-9663-c95d625f8a3c"
        },
        "item": {
          "id": "09af5bf4-2c6e-4676-b6e2-c7eddc571c73",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2b3786c9-1a0d-4187-ba05-6deeda534ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d49fe07-150b-41a1-a830-c4442566c32c",
        "cursor": {
          "ref": "c59ba8ad-978c-4f5e-9de4-678c3f20a1eb",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "56faf118-11da-4e4a-915d-87f84c3b68f0"
        },
        "item": {
          "id": "4d49fe07-150b-41a1-a830-c4442566c32c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "19d2532a-0cbe-4e73-83a9-9ea0a11c342f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db041ace-de11-43ec-b9c0-72aa34d6965c",
        "cursor": {
          "ref": "914e329f-40de-40c4-aaab-d8694a8b29c2",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "31b46df0-172b-4ab4-bfcd-451a86021079"
        },
        "item": {
          "id": "db041ace-de11-43ec-b9c0-72aa34d6965c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "46632b3a-b97f-4b49-a3f9-243465248a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dfe65d-06de-4c82-b21c-e5b6c0b8aa47",
        "cursor": {
          "ref": "004caeea-ab12-4b84-8798-43b8a0ff0779",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "195d3f62-c099-4770-82dd-77b8b8887649"
        },
        "item": {
          "id": "a2dfe65d-06de-4c82-b21c-e5b6c0b8aa47",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0e401aa4-d6ab-4e2a-bcd7-1d256c82d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fd1d02-b413-47c5-988a-39e47d519e75",
        "cursor": {
          "ref": "eb20a233-2507-4a99-be47-49edbbeb372c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8af4da37-dcd7-4722-8ca8-6c12acc506a7"
        },
        "item": {
          "id": "36fd1d02-b413-47c5-988a-39e47d519e75",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6c4bea9b-8862-4afa-be99-f4b024c94f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bf4197-602c-43c9-914f-310472abd6b0",
        "cursor": {
          "ref": "057d1e23-3bd5-46a7-a12e-7efb14379410",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "682f98c2-7051-4956-9dfd-b467b3dc3ed4"
        },
        "item": {
          "id": "a8bf4197-602c-43c9-914f-310472abd6b0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d5d4b482-927e-4060-88c1-5b09cfc0ac77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0db55dc-5e44-44a5-8d8f-d0cd04d57d15",
        "cursor": {
          "ref": "0dfaed45-4e4b-4158-bc9a-6fdd2efd4a13",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "afcea91a-8a3a-40a9-8cf3-1f382204bc70"
        },
        "item": {
          "id": "f0db55dc-5e44-44a5-8d8f-d0cd04d57d15",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cb788b59-739e-4db6-b5ca-1b909fec3d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f7f5f2-b950-4ef8-96ee-ffc7754eb3a6",
        "cursor": {
          "ref": "fa334a22-77fe-4f00-b96e-e68e520ad6a6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c7787a5f-6118-48c4-bb9d-72a97d191168"
        },
        "item": {
          "id": "d1f7f5f2-b950-4ef8-96ee-ffc7754eb3a6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d990d903-fc65-4bf5-89f2-fff1482d98c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ddca35-b128-4ba8-b80f-c7574c795797",
        "cursor": {
          "ref": "9c2d2fce-5366-42c3-a325-5cc9fde4c5a2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b1c5118f-d2f3-4909-a348-69fc72ce1286"
        },
        "item": {
          "id": "c9ddca35-b128-4ba8-b80f-c7574c795797",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9bb27d97-0f01-4053-b06d-35e8f456faf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55087aa-b070-432c-b404-bd0a08de3bfc",
        "cursor": {
          "ref": "214e794e-bf90-42ea-ba9c-7e9ac1d4df89",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "163ba66f-5052-4fff-bc4d-0e85af8b48bd"
        },
        "item": {
          "id": "c55087aa-b070-432c-b404-bd0a08de3bfc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "60617082-c40e-45e0-a19f-549997d72cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fed44d-a947-4ba7-9e07-ad073f746cb2",
        "cursor": {
          "ref": "9eef79e8-013b-4f96-a4d2-bd81603523e1",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "580a9bf6-515a-446f-9068-1eefa77ca14e"
        },
        "item": {
          "id": "f9fed44d-a947-4ba7-9e07-ad073f746cb2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "99eeac0f-dee4-464d-b74a-f767ab080bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164ef24d-c5e7-47b2-8cd2-d3d31b42faf4",
        "cursor": {
          "ref": "a3439284-84fc-4f7e-afe4-14b0cb1aa95f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "84d2b47b-7977-4940-8cb7-72a3345b0be5"
        },
        "item": {
          "id": "164ef24d-c5e7-47b2-8cd2-d3d31b42faf4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "790c925b-ae52-47dd-aa1d-09f15ad29064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18257cfe-71c5-4262-b12e-57ff8d1ca781",
        "cursor": {
          "ref": "5b25f473-0984-459d-b50b-12eae239d926",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5c9c2e39-5369-4af2-a004-c063c86a3bee"
        },
        "item": {
          "id": "18257cfe-71c5-4262-b12e-57ff8d1ca781",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4ba63140-90a6-4ed2-8a12-ae05f758d10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d3701b-c600-48ff-9bca-05c1f8f82141",
        "cursor": {
          "ref": "997d93c3-b401-4d96-b2e0-d3e8a766456b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "79ff3dc6-065c-402b-b426-b3e36b927e23"
        },
        "item": {
          "id": "c0d3701b-c600-48ff-9bca-05c1f8f82141",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "990de64f-185b-4a1f-8339-d4a2b7756e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8589c7f3-b036-496b-948a-4f30994847d2",
        "cursor": {
          "ref": "60d1be9e-004d-4713-b407-6b3b5ccfbb1d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7c3e6f84-61ae-4e36-b732-8926fdf23f92"
        },
        "item": {
          "id": "8589c7f3-b036-496b-948a-4f30994847d2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d36fa591-c883-468b-a7f8-ccd5ebdc0b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d454b6-1eeb-4838-8437-d2e8eaaf4b24",
        "cursor": {
          "ref": "a7ed7b6a-fde3-4393-9ef6-9b87b2cd307c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "07e54010-9d81-450f-9080-33595e6c32a4"
        },
        "item": {
          "id": "69d454b6-1eeb-4838-8437-d2e8eaaf4b24",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b1afac24-be91-478f-a207-c08b876be462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa43078-658b-49da-8ed6-46dbd80b2513",
        "cursor": {
          "ref": "639da2ad-9304-4381-bc99-0e3e4c961c60",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a360e4de-c876-446e-84c7-e57d877e44be"
        },
        "item": {
          "id": "1fa43078-658b-49da-8ed6-46dbd80b2513",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "25b46edb-eb4a-45a2-abc0-2388cc7fab15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06885bd9-0639-48d0-988f-3223e586479e",
        "cursor": {
          "ref": "1bc55729-d565-4816-985f-fec7534a5d3b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "045d7526-62a2-4520-9ee0-c6a9ac23bf91"
        },
        "item": {
          "id": "06885bd9-0639-48d0-988f-3223e586479e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1e9af786-2d12-43b7-ab13-8a1174c10e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d97f110-ff1e-4463-b572-cbbad1bf1e3d",
        "cursor": {
          "ref": "0e737717-7be1-447b-b8a4-62872597865e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "31cf05a3-1951-4c97-b849-4a6e4a6e2fbb"
        },
        "item": {
          "id": "5d97f110-ff1e-4463-b572-cbbad1bf1e3d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3b56c2be-d28e-4de6-9cff-74fc4ee4530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30dcfe2-1e39-4e88-8a6d-cf91c1af7792",
        "cursor": {
          "ref": "fc0549b8-8698-45bb-a405-93c109e42994",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e5fbbb82-6328-4d12-adde-afe07a3c8934"
        },
        "item": {
          "id": "b30dcfe2-1e39-4e88-8a6d-cf91c1af7792",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9d8b311b-3576-4408-8d4b-b786b1a03333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f159804d-edaa-48d6-b94f-97e5ab4d1de2",
        "cursor": {
          "ref": "a6750470-1eba-47f3-bfec-be9c004a1aa2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d3b75dea-02d8-4e0a-af80-c09fdb5f9215"
        },
        "item": {
          "id": "f159804d-edaa-48d6-b94f-97e5ab4d1de2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f545de93-ef94-4707-90c5-6effe66bc60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54833281-4021-4fb6-ac61-62acd55def1d",
        "cursor": {
          "ref": "775cde24-823a-48eb-916d-af7b33ed7f45",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ae654436-b00d-496c-aa3a-d3c9d87f8978"
        },
        "item": {
          "id": "54833281-4021-4fb6-ac61-62acd55def1d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aee081a9-8092-4f1e-8ac5-a9c0ee123a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c4a20-5611-4b44-b633-ae814ca7870b",
        "cursor": {
          "ref": "915ab265-bd1c-4787-97ed-337b7ce7c0ef",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "553051ce-9e6e-4437-a561-e7af6d9adf3e"
        },
        "item": {
          "id": "952c4a20-5611-4b44-b633-ae814ca7870b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ecde77dd-9ce0-46c1-9dcf-71246e7d1294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aa598e-a45e-41cd-980a-64512a0b8bb9",
        "cursor": {
          "ref": "15f01832-4e62-404a-9f10-51e56e7a3774",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "445d5f2b-5835-4521-b7f2-cbb284983eed"
        },
        "item": {
          "id": "d0aa598e-a45e-41cd-980a-64512a0b8bb9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ffd6b869-65cd-4d5c-8874-c506d014cb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa4fb2a-d378-43e2-9a11-48cbb6a37e3f",
        "cursor": {
          "ref": "060a4b0d-9bf0-4c45-8153-0c239402016b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "77a32e23-3d34-4fb1-9933-c3e6a2261c10"
        },
        "item": {
          "id": "7fa4fb2a-d378-43e2-9a11-48cbb6a37e3f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "05aaf315-9e0d-4d20-a08e-050ee1ec3202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e028f26a-9c00-4fc9-b80d-4665ee046e5f",
        "cursor": {
          "ref": "207a41b5-79f7-45f9-9b22-e18abd05aa01",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ead5eb16-b556-466f-bef1-8f156cc4238e"
        },
        "item": {
          "id": "e028f26a-9c00-4fc9-b80d-4665ee046e5f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1bc1199b-a0c3-49bb-b3f3-6c021c48e52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbb101a-a981-4ae9-8186-e496a377895b",
        "cursor": {
          "ref": "99ecfd87-8606-4c2f-9844-049670422838",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1b343c99-81de-461c-8760-311a791ef887"
        },
        "item": {
          "id": "0cbb101a-a981-4ae9-8186-e496a377895b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3bc9edcf-5935-4c68-9462-dbad77efba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6af71c-d689-428b-b3f0-f8fecb3af151",
        "cursor": {
          "ref": "d864b880-0cc7-4cda-9962-ef722433d71c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "898ff4b6-e7aa-44a7-a745-f3a136c88646"
        },
        "item": {
          "id": "da6af71c-d689-428b-b3f0-f8fecb3af151",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f9612252-d36a-4709-a1bc-e95f6b1aa127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a958c8-3e33-4351-9162-3cf70207fa1b",
        "cursor": {
          "ref": "da0a1742-25fa-4b1f-8aae-7bd4014c2d8f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a835d3ff-1c6e-4251-8652-0e56ba95854a"
        },
        "item": {
          "id": "27a958c8-3e33-4351-9162-3cf70207fa1b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "94a93c6e-0d0a-49e2-9354-581a78c6071c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b21a2e-ff68-40aa-b93e-1746039fa360",
        "cursor": {
          "ref": "0f53fc18-0166-49b8-a4e9-218c5e0eb86c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6f6a087f-dc4c-4447-b2d0-fbad917a1d84"
        },
        "item": {
          "id": "32b21a2e-ff68-40aa-b93e-1746039fa360",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "57bb96be-8e8d-4a31-8302-b3b94ba7bed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341944ef-a535-4673-9512-e8019a19f5c6",
        "cursor": {
          "ref": "158945ba-b9a9-4da2-bb94-f89392c201e9",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "24945bb2-a96d-4d8c-b657-137f47ca64d3"
        },
        "item": {
          "id": "341944ef-a535-4673-9512-e8019a19f5c6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0e06c9aa-4e1d-4fac-8865-8dcaca448e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc76219-4acb-4b41-a168-7c1efd48ba0f",
        "cursor": {
          "ref": "9b40e50d-1225-4289-ae9b-1b767c4646eb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "82aea5e5-51e7-4679-a239-f6f55dec442a"
        },
        "item": {
          "id": "9fc76219-4acb-4b41-a168-7c1efd48ba0f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "34a5c61a-46e3-43dc-b5b2-e09c25b06977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a06dcb-35be-4bc4-8779-a14f528516be",
        "cursor": {
          "ref": "bad35e21-57a3-4c57-bdce-824f93c807e1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "20fbf5a4-7824-487b-9cf3-126a382afaf2"
        },
        "item": {
          "id": "13a06dcb-35be-4bc4-8779-a14f528516be",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1edd7654-9177-42c4-b922-44b80816f3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fefef2-fc36-46e4-8a7a-27937294efa6",
        "cursor": {
          "ref": "55e0ac30-233f-4bb2-8f4b-2b98f0ef9bdd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c62931b9-dd0e-45f6-a5cc-4908a8057cb5"
        },
        "item": {
          "id": "08fefef2-fc36-46e4-8a7a-27937294efa6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ac2e6cea-70c0-4ac3-a0f2-5f2176892e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70e0e01-23da-4ba7-bb48-abf0dc5ca714",
        "cursor": {
          "ref": "b1abf730-b2f0-4d18-b1fd-a34623326339",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b8d372da-4fe3-4859-9749-57357470f243"
        },
        "item": {
          "id": "e70e0e01-23da-4ba7-bb48-abf0dc5ca714",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1d4b011d-29dc-4334-a729-9731833077cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89960cb7-2a2f-4ea5-a646-b62cdb0302a0",
        "cursor": {
          "ref": "fd4bf4a5-e660-4d01-9c7d-834a48293c4d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f3c0d28b-0acd-449b-a3e9-1cc856423698"
        },
        "item": {
          "id": "89960cb7-2a2f-4ea5-a646-b62cdb0302a0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "564b237c-b98c-4dde-af98-ef8f13f667c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec09faf-f472-40f6-afbf-245ceb2e9449",
        "cursor": {
          "ref": "49cdb09c-349b-4703-8f01-1a8da6cb8d26",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "96426dbd-c21c-4bd7-b964-49639e7a270a"
        },
        "item": {
          "id": "fec09faf-f472-40f6-afbf-245ceb2e9449",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a8d1b0b7-03b3-45a9-bbdb-c95b1ac064b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c023f582-3a67-4867-b7bf-10b00a7e6f0f",
        "cursor": {
          "ref": "c38955ff-1dee-4b5f-92aa-00a4aeb53008",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "92dddae3-9c43-4161-b381-f5a8c0d2a61b"
        },
        "item": {
          "id": "c023f582-3a67-4867-b7bf-10b00a7e6f0f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "658236ad-fa94-4543-9d75-744ed7cececd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bafa8d-b1c9-49cc-a7df-385d5b4c7fea",
        "cursor": {
          "ref": "1f4478b4-14b0-4bad-8627-7cb7fab6baec",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c2b51ce5-674d-46c1-a0b7-36d8fb9022b7"
        },
        "item": {
          "id": "08bafa8d-b1c9-49cc-a7df-385d5b4c7fea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "586b464b-4463-4029-ab73-56b1607fafbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f39523-78ce-4c49-bb10-0343753032c5",
        "cursor": {
          "ref": "71ecb585-7050-450e-add1-f63e496aa90f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4468d51a-0f90-4268-ac98-803ecb61da58"
        },
        "item": {
          "id": "d6f39523-78ce-4c49-bb10-0343753032c5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6b214104-2b77-4a24-b5bb-2e2c7b771cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23222fa-8ba8-4df2-809a-c78193105764",
        "cursor": {
          "ref": "4aafb447-e8d5-47f2-b94e-8c192a98f460",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "37810715-6a9c-492a-a3f9-7963dcec2c0a"
        },
        "item": {
          "id": "a23222fa-8ba8-4df2-809a-c78193105764",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f99fbf1b-2a55-4a6f-845c-77d33111e424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9fbd9-120f-42bd-9a54-adab9c5b6996",
        "cursor": {
          "ref": "e95ed3d9-3862-4c88-b70f-c0f14332edf5",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "aebacbc1-11ff-406b-b0fb-ebf1566e881b"
        },
        "item": {
          "id": "ddd9fbd9-120f-42bd-9a54-adab9c5b6996",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fad839e5-e73d-4fda-b357-b75ee2ca3830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776b67e2-e680-448c-818d-2c769e41e81d",
        "cursor": {
          "ref": "0838e80f-2697-4525-bac3-4a2a8a86d824",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5359bbc5-c307-4375-abd4-bb4f85ee8397"
        },
        "item": {
          "id": "776b67e2-e680-448c-818d-2c769e41e81d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6c63ca8d-89ed-4365-9414-22368d017cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4ebea5-ed85-4370-a402-fe11e5adc94e",
        "cursor": {
          "ref": "9ba2383c-cbd0-4751-9172-1a3e75c4d37d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a0a7cb37-9fc2-4cc3-86da-9e1c6205f1d4"
        },
        "item": {
          "id": "bb4ebea5-ed85-4370-a402-fe11e5adc94e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ba493134-b9be-4ac3-b484-29955a314b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248cdae9-c317-41d8-af77-a2c984201572",
        "cursor": {
          "ref": "24a3394a-eb00-4489-88b2-9941aa584b7b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "86fb0739-c4f8-45af-b719-798a3a66e2ac"
        },
        "item": {
          "id": "248cdae9-c317-41d8-af77-a2c984201572",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f51ae5e9-9840-4195-bdd9-2e0fc750a2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7066af-6543-462a-8de7-d380072fc560",
        "cursor": {
          "ref": "aaa23ac9-adc5-42de-b48d-d8f260e852c4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "60db3c30-5c03-4ca7-86d5-36c488903df1"
        },
        "item": {
          "id": "de7066af-6543-462a-8de7-d380072fc560",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "386b43a8-725c-4530-a966-1bb60899dbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e3bded-d3bf-4250-b344-f725e39e06f5",
        "cursor": {
          "ref": "15c4164c-a809-4280-9819-e24fdac80ab1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9f47c34c-b185-428f-868c-4a3997b3349e"
        },
        "item": {
          "id": "88e3bded-d3bf-4250-b344-f725e39e06f5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "51d49a6a-102c-45f3-8ea6-3016d004de5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf439df-0413-45b0-86be-7a0a46f192e8",
        "cursor": {
          "ref": "19e3d9b1-6d44-42e4-8ee6-6bdb02400658",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "aadeb5d8-2920-4838-a827-351564ba1d55"
        },
        "item": {
          "id": "ddf439df-0413-45b0-86be-7a0a46f192e8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "160aedcd-5eb2-4027-bb2c-a51c3d6a8d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1100c2c0-1a0b-46f5-b0ae-ce86250a6ef6",
        "cursor": {
          "ref": "997db97b-4bf0-4304-8e7a-4470baf273e0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "057e61d2-9392-4e6f-9e4b-29b1bdc7fe51"
        },
        "item": {
          "id": "1100c2c0-1a0b-46f5-b0ae-ce86250a6ef6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32baee15-a498-480b-91aa-627456639f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b03e148-f59a-4108-b182-c9ef0bbe301d",
        "cursor": {
          "ref": "76f54b40-2f89-422d-b3a6-44d295197c5e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3d923a64-0357-40b6-aa90-e1c8c9e52c40"
        },
        "item": {
          "id": "3b03e148-f59a-4108-b182-c9ef0bbe301d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "20912e40-8f2d-4f44-bd14-bd3063802e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fd0b3c-e9a6-4ce6-86f3-76a213a55ed9",
        "cursor": {
          "ref": "c85c491f-1c71-42c5-a0d4-40e4c43b73de",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e1c701c3-1161-4e07-b434-cce38bab37c4"
        },
        "item": {
          "id": "02fd0b3c-e9a6-4ce6-86f3-76a213a55ed9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "743843b8-2f62-4fc4-bbbf-21b867e73bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a514c446-3f0a-41ea-baf7-72633576cf25",
        "cursor": {
          "ref": "0cf7dba3-b871-45e9-b5a4-33ee3009ab13",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5295a5b0-ca5b-4ca2-aed4-d780e4366e2c"
        },
        "item": {
          "id": "a514c446-3f0a-41ea-baf7-72633576cf25",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b172c2d9-e568-468e-a6a6-3eb3e2f690a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8373fe-3993-4fd6-9998-deaaa659b864",
        "cursor": {
          "ref": "9356f9e4-9d35-429e-8e0b-54ec651c3bba",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "30de0d6c-ecf0-473d-a44e-47623bc33871"
        },
        "item": {
          "id": "eb8373fe-3993-4fd6-9998-deaaa659b864",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "648a5d44-03e3-4dac-b0a2-20d1d20e19df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38edf9f2-4214-47ea-b2c0-90a7a3adba80",
        "cursor": {
          "ref": "b4419b8f-1223-47cb-aa38-9c3afa4d19a1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9a34ea77-8f1e-4ff9-9cff-36dc9a9c2845"
        },
        "item": {
          "id": "38edf9f2-4214-47ea-b2c0-90a7a3adba80",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ec400140-bac4-4468-9e19-f1e86ec5bd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d1cc37-cc98-42fc-9211-8beaef6db592",
        "cursor": {
          "ref": "0f373864-4500-4f6b-8340-27bb1d326e50",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e5022878-3c18-4d2d-9bd0-79611d597f8f"
        },
        "item": {
          "id": "51d1cc37-cc98-42fc-9211-8beaef6db592",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ce0314a8-9672-464d-8109-5d1d73b6c1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f2c099-2ff0-405f-8b22-be4169f51847",
        "cursor": {
          "ref": "3405e0c3-eb74-4d96-a72b-a8df56514b4a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "197ba2a4-daf0-492a-95d5-98a25eae26d8"
        },
        "item": {
          "id": "c8f2c099-2ff0-405f-8b22-be4169f51847",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "302cd658-d151-4ba4-94c6-5f621c4e48c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c073b073-556c-484b-85c6-e8a317b9243a",
        "cursor": {
          "ref": "39a2be41-5b5c-4c3d-ad60-235a59d396eb",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2b1fc096-778d-4575-bcb0-95026b77e5eb"
        },
        "item": {
          "id": "c073b073-556c-484b-85c6-e8a317b9243a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "64fed8e5-a74f-4edb-b55e-578b1f2a2492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e61767-e3bb-4678-9590-e7fa4a6851d7",
        "cursor": {
          "ref": "77437d59-0193-458e-bc3e-d7947cc17f53",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dbd399f6-9e4f-4beb-86ef-93262bd3c900"
        },
        "item": {
          "id": "80e61767-e3bb-4678-9590-e7fa4a6851d7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "86bf8f97-dd93-46ae-a798-91da47c49987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b707cb-55bc-42d9-898c-855863bc29a1",
        "cursor": {
          "ref": "8cc9a44c-249d-4d1d-8383-fdf4350ff6bf",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "87d03577-27c7-4ec2-97b8-96db8246b4d7"
        },
        "item": {
          "id": "75b707cb-55bc-42d9-898c-855863bc29a1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "423034f4-b723-40b3-a324-0b6878513fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603a5563-af3d-4e0d-b7ec-59a07e894cd9",
        "cursor": {
          "ref": "c2cc3c80-6d70-4254-9c5c-18f6bc8810c7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3f3a9275-e2bc-44b9-83dd-b58c28c9c042"
        },
        "item": {
          "id": "603a5563-af3d-4e0d-b7ec-59a07e894cd9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ffafb757-f496-48c2-bc2d-019249ebbe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cd05a3-0873-48dc-9fb5-5c5d56827574",
        "cursor": {
          "ref": "8623c87d-4d7f-4ca7-8438-cfc5373722b8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "11e74886-07fd-4102-af7a-a2b9e1f81a59"
        },
        "item": {
          "id": "e0cd05a3-0873-48dc-9fb5-5c5d56827574",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a884b8f7-37d2-4672-ab82-e1c828fede6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa84673-2102-44a7-8538-449074875c84",
        "cursor": {
          "ref": "129c91c0-a866-4a48-aff9-ef4c82672ebb",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "013694ae-d546-4236-94c0-d1652c6cf78d"
        },
        "item": {
          "id": "2aa84673-2102-44a7-8538-449074875c84",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5a264a42-1dd6-4499-aace-e1723cb039e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e281437-4502-4cf8-b47d-c334a507f72e",
        "cursor": {
          "ref": "048f6e69-b7f3-40ba-89b0-a85ce6daa496",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e2d1e9be-46c0-4f15-b0f2-6f0475316822"
        },
        "item": {
          "id": "2e281437-4502-4cf8-b47d-c334a507f72e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d840d9c2-a5ef-4ed0-b3d8-e09bdb3caa7e",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd5ea88-4b49-4337-95ba-9c895ae6133a",
        "cursor": {
          "ref": "38cb736e-7f4d-4d04-af32-d58a20f55796",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "78f1dfda-71ab-45cf-aebe-7ad4a2717d1d"
        },
        "item": {
          "id": "7fd5ea88-4b49-4337-95ba-9c895ae6133a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b10bab6f-a6dd-4870-815e-7c110059bdd3",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8abd76-5676-46ef-9b81-de10c5e740cb",
        "cursor": {
          "ref": "9e6a8834-ded3-4ac9-bfc7-e5d01ad7d151",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a1477054-4c0c-460f-9e99-380f848ff5d4"
        },
        "item": {
          "id": "ca8abd76-5676-46ef-9b81-de10c5e740cb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e1ffe892-5711-4968-8172-faa922c7aac3",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3c552-0774-48d1-be98-2379dcc5fb49",
        "cursor": {
          "ref": "41763723-376f-4be1-9ea0-38262955077b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dafe3709-ea9a-449b-9edb-9bf1ccd42d23"
        },
        "item": {
          "id": "99f3c552-0774-48d1-be98-2379dcc5fb49",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7d19e9b-bf27-4a26-ab55-8c68cffb3b7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3c552-0774-48d1-be98-2379dcc5fb49",
        "cursor": {
          "ref": "41763723-376f-4be1-9ea0-38262955077b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dafe3709-ea9a-449b-9edb-9bf1ccd42d23"
        },
        "item": {
          "id": "99f3c552-0774-48d1-be98-2379dcc5fb49",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7d19e9b-bf27-4a26-ab55-8c68cffb3b7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3f132c-3b3b-48cb-aac1-050943ec0e67",
        "cursor": {
          "ref": "a791dd96-0ee1-4634-9c9f-c6596392e74a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5c3271e5-c9eb-4f72-a9b5-b5c3a540a796"
        },
        "item": {
          "id": "3f3f132c-3b3b-48cb-aac1-050943ec0e67",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a866be64-e1fd-4946-982c-83cb52a45b94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f096e07e-5970-4ea6-b5a1-977d4e07f2b9",
        "cursor": {
          "ref": "a6b77d92-d704-4e0b-92b4-6756aac85e4b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a3b43695-2dab-4806-825a-a4053514cd91"
        },
        "item": {
          "id": "f096e07e-5970-4ea6-b5a1-977d4e07f2b9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b0b8a409-4e81-4b76-9c5f-02341ac20562",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}