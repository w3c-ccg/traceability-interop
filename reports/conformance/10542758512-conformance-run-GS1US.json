{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "84d68aea-e3ea-42e4-89e7-40614e317ad7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c5865306-32dc-4633-b768-2f90ea6a0a84",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54ddf728-08fc-4c49-899b-28fff21aab70",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e2d8079-d28d-4b29-aa4d-7987537843d2"
                }
              }
            ]
          },
          {
            "id": "e2f49ac3-f263-44fb-ad56-a4bc3cd0aab3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5fd0470d-a828-43f1-96c9-7a7d5a32a80e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c9faa407-60c2-4f28-9491-23b26d48f303"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8a74cf05-582c-4d53-84f3-484885eac131",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "119a3bba-2109-48c7-89f4-5a86940b2fec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a2d5001-fe5d-4218-9d3a-c881ca6acd9c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e5edcc3-be46-4b41-9d17-bcd9a6f924a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d52bd4b-1b1d-4059-900b-cbc40abf4659"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e45c3aa-8365-44ae-90a5-d5f41678a8da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed7f948e-6ee0-41f1-99fe-468e7520fbbb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "579bf251-2b08-4cd9-8bbd-78a21f123df2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7659de1e-d32b-485b-93e0-444234989ab4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fb80eac-e4d0-4124-9a57-1c8ae690550d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2e3a8ce0-fb04-48e5-8123-234b47dc99e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "864ee340-2df6-43fa-a2df-5bcb247a06d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b31b0cb-3edc-4d50-b0e2-15a2da791025"
            }
          }
        ]
      },
      {
        "id": "0270f8a1-135b-497d-9a63-281aebd7a02b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3344b5e7-11bc-4108-b975-b5fcf02924f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6098b975-3073-4168-ae6b-8ef912583823",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88ef7ea2-7df5-41ff-94bb-00d9224353a7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0f5b45-6a77-4b71-b766-818191015796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c401076-b8f1-40b2-a86e-dd9a81aeb501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b5938-5f2e-4b3f-9bc1-4a2872517735",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc6f9b6-b7fb-40d9-8f0a-12fb4cd0f3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a187affd-0c72-49c5-8eed-64ff94f8b3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ac7187-3ecc-43e7-a608-585bce7ba1cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33095217-4d97-403a-be99-7e7a20c14f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d6f07d0-2062-4361-9dda-6a230a344ae4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c48f81f-ca64-4a1e-8391-6707e7d2152f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b76b6dde-60fd-484e-aa40-7e2465d86028",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d04fc56-f575-4f2f-a752-e649202fadea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a5c11f6-35a2-48bc-8f8b-6aeab600c6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49992cff-9c9f-4d1d-b5c4-4340e885080c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a93e694-7528-4033-b397-d74f95577eac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4ef2b52e-7485-4aa4-b96c-fc98afbd049f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4239992b-2d65-4d6d-93f5-0386ec0e61ec",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57519a32-eaff-4d09-a6f3-890d738f54eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "da7d9664-8b0a-494a-8669-f57aafb37606"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a6b23aa-0248-4d12-a394-1359a55ec84d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ac7c9da9-2050-4aa4-b4de-a35ccbb4aee5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "742b7b70-76f1-4bf5-8b24-91bcdcd1f7bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d8466f4-43ed-4508-902a-8cbe91fe8479"
            }
          }
        ]
      },
      {
        "id": "dca92eb7-97d4-4dd1-a24c-d36aef2be7cd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b858a98d-9aa8-42e1-bf90-ae468e0ecb50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c221fb3a-7d92-436c-9690-b6553eba78f5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "70eaf8c3-b26c-46f8-bd48-59d8b58cc06c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab27f3e-faae-4c77-9cc5-a42527703cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9f2bf1-6c1a-4703-8794-0aea78c9b3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c2af8f-235e-4ea0-b63d-4077f6302ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d859f82-249c-4691-bdf7-aee1fb093f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a225aa5f-344f-481d-a03c-bb448c449192",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adce5cfd-886e-462d-a7a2-254a5ffd102a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f4f58e-474f-4f69-aeee-5c69ec8e2dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df268e2-3f14-4752-aa6f-f88c6aa1007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07576a32-dd89-4fa1-ae05-67ffd759a38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144717c2-c3d1-473c-897b-9537dc74a2ac",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b4b15-e5f4-4ad2-bf18-1e94e485bbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f34e086-cc48-4f85-bd29-2c9b277fca70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc4aac5-cf35-4388-b395-cddd3bfb88c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13f77cf2-3729-4567-95b9-1813e591ed95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d727efd4-0ae1-4af4-b1e1-b4b09ce4989f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ca29d2-8878-47e2-82d6-0f9da2cf84b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45044a2-6a82-4b71-93f7-bbdd342bf9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85fcf6e-0da4-45a7-a97f-43912e470451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db7ecfe2-ee4c-4758-92b6-3f1f5c5e56ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12905d1-abb5-4d87-9dda-b54297716e5d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ea0c2-a49c-463d-92d8-da1373b3570f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d84f3f-63e2-49e2-b819-d92b31453fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1ca794-3989-411b-add6-055afa80c465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "345ab1e2-8af6-4786-8777-f49d1f7e30cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfac9661-afc0-4485-8d2c-915dd7170bdb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd95a839-3a58-47ac-a5a5-3a36b3591b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef98bf7-033e-4575-8869-fa8324347ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a971db-966a-47d6-a000-6b588fc0fcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87355579-2bb5-4263-a167-78671eb64762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a27cd72-dd8a-42e3-8c62-d3aa308cebe4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4157c1a6-a333-4ce3-a713-bfba8b8a468a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d676c67-fc47-4c57-8f8f-e7042720d521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03998ce-a9a4-4338-ae68-e4725441c514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa5cdd94-cedf-4a0d-ad0c-f3797367bb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415edccc-4172-4cf6-94c0-c4f8bc984c3b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d0d7ff-ab05-4cdc-85e4-e7029bbecf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3ab38d-1dd5-494e-8e50-75024d181166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd012f9e-6dfb-4e67-a8e5-97e5d417d261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54df6601-15d0-4869-a16f-feb0b24f1360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a4a3f2-5287-4524-a600-eb792da848cb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0321df-7848-4254-94d7-f3cb51ae114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9c34d7-e5d7-453d-a900-4e9817f368e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e070741e-9819-456f-ad35-99567ea41ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987815aa-d0e0-4573-bf3d-a9aca0bb15a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0171321a-e39f-4ad8-921e-fc9cba816984",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e80d02f-f522-46f7-b9f5-ce6b3617f755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8373afeb-34b3-46af-99fb-404aedb9ab4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3637e2e6-00a6-44c8-a843-ae61ec74b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a111ad-3c5f-49ba-a107-6c9826bce83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd379fdc-4425-482a-bad9-63f3d1d1ff94",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d4b0e7-d83b-460c-ad70-8768a393a9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d26cd62-e652-4278-a048-e18fb602160a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f57081-10d1-40ed-8a5f-aed5ab392475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5181c4d-e207-4b36-8313-d43a4557c232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f049d949-5783-4e7e-9c09-ea2f66f44c78",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2b8dbd-212f-460a-9948-9a022c5c9ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9574ab39-e419-4bca-b688-3235b1822a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72b6c0c-5c5f-4161-b00e-78e2736a186a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e49080a-3986-46f9-8846-04af46e05c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f365ed-90bf-4c2a-b89b-485a8119fc3d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48954396-b772-4cc7-9b1e-699904dcfb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cdcaef-b730-4071-ae77-575173d41136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76213cc4-49c8-42e1-903a-2e0242bae08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "667a0d8f-7009-436d-8699-2dc26456df0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e632fe8-f578-4142-ad98-e59bae3e73bf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b35e3-3e7f-42b2-b364-fcb0ac3eae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae10a63-39c1-460b-8a43-a12fd92f6766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54721574-9ce0-4d8a-9917-a593c194c594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f99a491-b79e-47e5-8aaa-399e3b02d0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df3d41f-3cc6-4a92-97c3-1e9965890a38",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dd94e2-0a5c-48af-a3f4-af488402cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3682178-047f-4aac-a354-d299807e9242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34097e01-66ae-417b-a3d1-c928237b2d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5823f373-9585-4e67-9370-ee20c1cafd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9cea3b-bf90-44e9-8c85-c95f627cff14",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ae4f83-3f4c-4481-abf2-689b8dc89b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0e2744-562b-4bd4-ae4b-536ed04a59cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5c6884-8aaa-47c3-a7e6-5363dc8b3891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3376410-33f2-40c6-b1ac-d2a790e401ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165b19f5-a531-4fe6-99b4-962be7227052",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ee9323-ce61-4f09-87e4-1aba96bbc74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0794bc42-409a-4a6e-9a56-8222c8488cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01478dea-ab75-4648-8291-2938bbdfa27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "505ad4eb-dca1-490e-9938-64509be40d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933d79c8-00af-4e4b-9c80-b90cdc4de23d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc3fe4a-1d10-4942-9ba5-e66ab7813f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7cc804-d6fd-4a69-bfc1-f6256426a12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad38f3-2baa-42f1-bd8f-d6fa9d48ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecef8c18-f786-4a0b-9a92-e244164aee34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce815523-13de-4739-9149-583654d64048",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecb7362-e286-4a19-9833-9a6e8237754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb869a8-02e8-49a5-a859-c2fa1d5b3387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d759578e-ddd9-42eb-8d9d-433a5276ff87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcea2697-7ce0-46e5-9d4d-27bb734c68ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ca6c1f-df69-42e3-a59c-d87539e6445d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba98c706-f40d-4b13-8bcb-d4d43a94287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c95d72-d78e-4b79-af1c-3d40e9ad3817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c45cbf0-8e6d-4d09-9f84-f73e0b871b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ec7afc-1364-4aee-92b4-9411ba34e514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e44ead-f6ca-48c8-b02c-17d620937d55",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60be887a-8c87-4e0f-80a8-5e13aa6596ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd4aace-e2b8-44be-acbb-d8ae3d99faad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce54fd1-e43e-4c7c-955c-9c6bbf1a99da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12616b6e-71e5-45f1-bba0-4299f0a9466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f827440-bbe9-43ea-95f0-72fea1a4b9ba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6713b70d-808f-4737-ac30-81f44b38fd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbc8a37-da90-47f1-9d5f-5ae3c5b42566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5defb46f-6173-4e36-a7ad-e9d808a83d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "232080c5-8d75-42b8-a46b-c0c7abd893ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58409b1-221f-4b9e-900d-3cebdd172f50",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30ee40d-787b-4199-babb-d6627d310c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf1259b-65c7-4ee0-bfec-50beb6991659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5aedf2-4d32-442a-803c-a0df825fbc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e91ee54-97cf-443a-b8a3-d025ac2f326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c782831-d86b-4f5f-9ada-9970d686d3e2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6eaaa3-53ca-490c-ad38-85a10a5002c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d651a4da-552c-4d67-9711-d606ceae118a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39f0a45-4b47-4348-b349-54a6d0912fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6f916f-ec97-4562-a2bf-ca00bdb4cd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e46efe7-fad0-48f1-92f4-156b1a427e69",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab3a91c-872d-4b54-9d51-5a0c3d1ffd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f6ef02-c3c1-4c98-83b7-d35aae60d647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4533f2b8-859e-4447-afe2-f511970128ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ed8ec5-47f2-43ed-bc96-b898bbaca755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8cd97e-2709-47ee-8a0a-69a9c4871685",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb652f67-95e3-4854-8dd8-6231bbb9df66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623b1c47-9073-4a50-8dd9-47ac2fea84f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d125c21-58fd-4c6f-82df-f240e6689d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e910e5ff-3f77-449e-9db7-64591efb77e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9ecefc-2126-4ebf-8edf-58e21b97da8e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b071c9a7-f603-4b39-94ad-3b8bea079d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660d70fe-def1-491b-9d39-7fe11d71a083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5cbae4-5320-437b-b0e3-368e75982d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fda221-d8c5-4e9d-b29a-ae9bc1d5d029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37892da7-1976-4a34-8c77-eb3ad6cc9326",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5ff2f9-508c-4fbb-9ba4-420dd34c737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f47ee53-91dc-40cf-af7a-5f22deb9a866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8774af93-f780-4912-906c-523dddca0672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19978a93-c6f0-467d-9109-26e232d97b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892c69da-dfa0-48dd-a721-979d21c43399",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d8b6b8-a9be-49ea-b9db-2d0a6355b5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b978b47b-1c06-4627-b67d-7c5179cfd597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399a0a1b-2c47-4e37-8d8f-059a0ed7217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b2f560-2571-4c67-b3de-eedb92ff659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736bea95-fa8b-4a7f-8ee0-aaf13e569607",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc25ac6-77e2-4f38-b684-4815b9a6fdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a240f126-33be-49de-882b-cb578be9721c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a50155-b75d-46e3-b5ee-31079320e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca5795a-ee11-4318-8dbb-a5b48e2f2d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87052bf1-3b79-4495-b5db-80d669ea12a8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a3e7de-1bd2-44a7-aae5-e1bfa7763119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ca4020-46fa-41e3-ae5a-6c6ee4db8fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e609e57c-3667-4ba6-bf7c-29be570a0eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfc2c3c-4e24-42ff-b250-7e5db3582cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96d31af-42e1-4b6f-a062-61574043489c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa927376-b5d1-441a-bc15-ebc021634af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc630a9-6ea0-48e2-8d9e-2bdca172443d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671b25d2-abf5-4510-8843-eb6b7d593539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7bc70e-9e96-48bd-8a5d-f06e3d19d5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6514d1e-4d01-479f-87b2-82ca23a4961d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec211999-5410-4b45-a89e-7e3bee81e0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3a1eb5-8e19-4736-bdf7-76230c0a9fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ab6826-cb7a-4b80-a755-b96a856eaf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7050ab-03db-4a4c-9f32-0bd92a6707e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d2a9fd-8aef-422d-b2b1-03057a56d252",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d67c228-9216-4992-9d86-2da38e367fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c5b265-20c1-4231-951e-8706369d96af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0618fbf6-e529-4e34-bf4f-08786580afff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e486adb-fd36-4074-91ed-998da28a5f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc6fb24-86cd-4d90-aea8-4094b543aa23",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f007ec60-fc70-4fa3-81f0-94721ca7a6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4668d04-7197-4691-aaa5-c2bfaf509390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0c082f-830f-4b2a-bfba-ac21fc0be179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d570ff10-88d0-4b9e-bd36-3d267c1a5dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b740939a-7065-40f8-a26b-52e81a60eba0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f8a483-ce50-49d4-854c-bc01ec1106c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bd17fb5-279e-4d02-a395-df68f97c7144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5d362a-b73f-467b-b0e9-0ec70c6d23c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1be0b20c-1fc0-4404-972e-ec7839bb5b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27da19f-3016-4afa-bad4-7d77053d9c5d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446d7b93-bfa7-460f-b0a1-2d4f1162a469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed097391-ad5c-483c-ab61-e24636fbac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1a43c8-6284-48aa-99d2-7b4639bf8fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "371c96bb-1393-4b31-9e64-91fcfd9b5635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09fe413-5c54-4d38-9721-cac57373c3b4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788f4b3f-d492-400b-a21e-834a79042a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1516dfda-d59c-4095-a3b4-476f588c5c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66a70f6-5b75-4163-bfe2-d97214af1ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c684d19-a8e4-4fc6-9ce6-5eacc32df9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f64568-9716-4c66-bb2c-75f54d5c87f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ecc352-2248-4c60-8137-89aa251e8981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669cfd22-74a1-4882-8e39-54d93f10837e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5255a6a-3e31-4057-a69c-b3540c428cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a287feb2-fadb-4647-9c55-9bd0d245b002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60296f80-8497-43b4-ac4e-f3b370c2ffd1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09a385d-f24a-4d28-903b-8f74b2d8778e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f62ae56-3825-4f55-a05e-f0596a79d505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57e57b5-5cf1-47c8-87a1-1b5ce977d035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c6a8a6-5ac8-4094-b8ca-8faa43cde8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc7ddc1-a27f-4065-958d-90a0bfaaa9ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c02a9f-2a45-44f6-a082-08606123a677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abba02d4-03bf-412f-ad2a-20841f4d2633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d38600-7559-4306-8640-e086bd220716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0570b25-b8ce-46f2-9a27-9a07fcccfffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236d1eed-6c45-40f3-98dc-e800d863107e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c931e361-aa37-47e8-9039-729efd20365c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c334118-46b7-4d3a-9bb5-48b4d033a127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ec5ef8-3acc-41bd-ba43-0ec6208fbe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "78c30f8f-a1f8-4975-a51c-0c4e09e56657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdf1497-4a03-467e-8458-3d6c99923b48",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991026d8-3f53-4ddf-90f3-964a0884831b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a956e3e-b701-4708-b0bd-14498a98db20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189fa2dd-c3b6-40f6-a19b-322b64f9fa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "207f2957-a0ff-479e-943e-ed13974bba50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91043dde-1f1c-44c8-8e18-ce8e6a6327cc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b54a1e-8215-4948-b18b-189dd998f69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1c431a-e49b-4aad-a73d-82a74b145df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a8b2bf-aa3b-410a-944c-e06c48519584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "455e6a24-5468-4e2f-bbfd-ef77f31b8db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6fd7cf-8c4d-4b7c-9219-7042df3be229",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebceae3-a7f5-4674-a39b-34a89a29b007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16d84bd-e9c1-4328-8078-73a3eefa05e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e5cc5b-fd6b-48c2-977a-2e1ccde77216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa7c953-4787-47d5-b083-c67e4a6761bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e153bd87-ca82-4163-85e4-001ca772c3fa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b045a1-f46a-4134-ad47-bc6a217e746d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e354211-d80b-465b-a7ba-cfb786533f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968110c1-fe28-4e9e-8d53-f77978b55580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f69da573-12ad-45ed-a7a2-345b776cb081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe65bc7f-7bf9-4898-b725-85dbef392bf0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca279311-9944-4d25-bf77-db30bd743b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e26f29-b53c-4f3a-84bd-42d964caf991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e1fbf8-09c6-4a7a-a515-53008bae17c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f711bb-4004-4d9c-85ad-068973e80d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4795a1-568e-47c6-910a-776b18810973",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4f734d-658e-4b7f-910c-fdf14cad5591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88599b4b-9377-440e-8dad-df5d2c6477da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d35a39-f820-456f-a9be-f0258f69418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f08cab4d-9655-42c2-8e40-c7840372ca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0841676-e0a0-48ee-9ecb-a7ce4d630f69",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd0b652-7e88-45d6-add2-1c0cee000a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f07acd-c695-4ae3-9320-857c4908a023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbd741d-b647-428d-a603-26399379eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a99479d-6d87-4795-82bc-387af6cc1480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991fca63-1764-4666-9e17-aa18091bfc02",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370984c2-1189-46ae-86a3-8d4971b506e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d9dd3e-b908-485a-a6c1-37b6ff94697e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a702d13-643f-4870-9308-350a615faf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f579540c-9bc3-4d09-976d-36de60ff0327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3260201d-aaf4-4d4c-a8f5-736be44b8acd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60669c67-2579-4a09-b3e2-8d9ae7caa873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be13331a-5d66-4172-87f0-012ec79ddb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82293008-0ca0-4841-ac33-b9a454b17ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9608225-9a21-432d-a227-4971e5dbb008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6c3033-9506-4b73-8d72-14ceaad6a131",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918e0cf0-3928-4264-8cf9-4624ca34bc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4accecc-c39c-42d8-ad38-be7517bbe684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42963c07-7147-4535-81e5-aeef0057ba72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a78e07-00a0-4756-b4ab-01e6b11e9f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c9c52-b975-48ac-b188-865ee8ea7506",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2ec91c-b702-4a5b-bd27-28edce17e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b95949-3189-4462-9e92-6c9781e8bbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaac5804-73cc-46f7-85b3-f1f12cc427e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a031e846-adee-4f40-9e18-5467e28dbd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39189ad8-00ab-4565-ba0a-86228241c734",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210c1bea-a274-4dc3-a46a-c4444ac8155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1617fc-7861-4115-a855-124eddf9a44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f1ecf9-93ce-41c8-9998-091f9f95f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8bff6c-8161-4c9b-a912-8c77ba0d14cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf93e98-c37e-4614-8d4d-3f383a6621c9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1c810f-4fa6-418b-b452-542602dcdddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e478de-ec43-4cb4-ad4e-923b3eee0ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e5739-102c-40e7-beaa-5be10de3a25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8c33a6-b62f-4c5d-aadd-6dd09f9facc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddba429-8e28-4414-b0ab-e21ad038b0c2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5056d7eb-301c-44dd-a145-aa8af197c496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fb7589-c0be-44d3-947e-345d1d98adb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24123393-4724-4472-ab20-908bea8162c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "29ddea0a-5e95-4256-b052-e20f6fcbd3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42528b0b-5410-48b0-9ea1-77f1da25e4e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fb071d-38df-4edd-a622-e35f3fd05466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9cfe08-7c19-426a-93cd-90c620ed9c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bbdd68-a359-4c99-b4c8-eec608aef314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "791977ea-9c39-4cf5-9693-0f029d986979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a9d69b-cc48-47e9-8a36-1c762a6d650c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8af5773-3cc4-40ec-b845-582773b3ba49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21957ad-3303-4d6b-94e7-1b416b760011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ce9f3d-d734-4278-8df6-0b0925509525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfafd882-c9b0-4b24-b665-2f4a54318ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aeb30b-bf95-4ec3-a46d-9fae32fa8317",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0496bf6-cd6c-4fd3-a3c7-ae1530b0c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d318c89-5b45-4c6a-adcb-849da035223a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231b92be-fcb4-4969-9ae3-03b7dd0290a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b26297-512b-46f6-bf52-b1186821c865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb138f1-6d3f-4d53-bc82-b529fe386a1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee50f8e6-7c37-4530-b8e2-ece2208e9f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13774d63-43d2-4cca-8f8a-5896c1fd6f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54363e4e-1f2e-4c6b-b1f1-b350551350a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75051c28-168a-4a34-ac32-c4f2c1206c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4722fe-ebc1-4808-9ece-ecf15cacd155",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c520a33-8527-4697-ad40-f888e74d40a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76e7cab-39a3-4924-a68e-00896af7e7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1ee869-b0bd-4fc0-bc0e-2bee33e79261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e085e2e0-ea52-4d63-b09d-41dd4365aaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427b0d00-f8a8-4868-9321-0ef77938f766",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989e1256-a7b2-4fbb-909c-cb0584f5c71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f715f21-b7d1-4d2e-b950-601fbfb443d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87114fb2-8272-4079-bbfa-483b064b7042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c67a11-652e-4a2c-a421-3abc8eed952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ff3f8c-d893-4634-84c2-af5d8288c76b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208b81d0-1568-48d4-aaf7-5509176b3546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ab287b-9ed3-477e-8238-c2fabedba28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21cf2e6-abd8-462f-9478-1724c901098a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "12eb6cce-deb7-4b0e-a5be-a013a30e7abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947b9251-7e73-486b-b5b5-10a20d6eca96",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fd6e75-d23b-4665-ad9e-7847b6e431c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178bb144-9afe-4074-a6cf-f80e49df263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273a0fe6-cd36-4688-a8c6-99e937c872f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7fad34-5b56-4f7f-a5a2-1b29ed3807c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961f15dd-2cc7-4f6c-acec-aad88ecf66ce",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819d5216-d888-4b38-82d3-f1b3c0f4c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f9bd87-738e-441e-a91d-ab986b8edbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec045e8-825d-406c-9290-05eb4275d164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a572ff19-c81e-4d34-b836-95b85782c8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d90c02-a9a6-4a1e-bf85-32f2509f1972",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a110ee33-154f-406b-b3ba-c5265990d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1458d93a-f8d5-4e9c-87cf-dc4f34bd7a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f051bd0-dd27-4f6c-b257-c4d2c6a82e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79804531-ea86-4339-9085-c1d15ca2e0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ee03ee-bc87-495a-9b1e-d55bf54a06eb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf71756-a312-4cff-9f4b-cc43ad3240bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddd7227-15c3-4821-8add-a2b2fcb578f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491cc210-72f7-428f-a4d4-f14ef9a18161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4933fd62-ad54-43cf-853f-a2fd92569d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b98e39-e37a-432e-820e-ef104b914706",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df181c25-244d-4341-aa14-8b646a625b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67dcb34-57d8-4ba5-8a94-0fc4fceb9799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776026cc-594e-48f5-a612-c9be65755dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3e4a67-b4e2-4ce8-919c-b4f3db336125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9870a5d-e498-466d-bf1a-04f30aed2a92",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bc6d01-9dc3-40ce-8ddf-420a4182f676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183cf69e-353c-4232-ad1c-e4ee614ae7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539a5c08-b4b4-4a33-860a-e66842a62cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fe62de-6c5b-45a2-a4bb-f5a6d52defd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aa7c3e-8bf0-415c-8559-48dd47a6c2fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74aa763-ff67-40a4-878c-94746f080af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef961fdb-45b4-4606-a01c-c1bd6f0bac6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3593cb1-3800-491f-a3a7-7d614ad4f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd6da14-266d-42e1-9d16-322b8450d483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4831d8-cac7-4c2d-8eff-76459283055e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1f6efe-2eea-4954-9306-f546dfbf973a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31287886-edec-47a8-ae7e-12c313ef18e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a582de1-3bad-4608-8254-042c533ef5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "517fe0b0-9183-4fcd-aa6b-152e475e4b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab242846-c206-4639-bb5c-fde86f57b35b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27898162-b7d7-4e9a-8a79-82b0f7ac9666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbe03ff-351d-4cf1-9068-ee22e1f3b996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272ffc5d-c34b-4c29-94d0-9ffc101da652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40036073-e06e-4505-babd-eb3634452895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c13d4a-1998-4bee-b09d-9a6b4375b151",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9404c0-7e29-4756-9c0c-6da7a60a63d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a537dd9f-e8b0-4a17-b66c-feddc3a9e5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1c9c52-0204-4e6e-81c7-bc7ff5122c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87a06d7b-88b0-413f-b5cc-4d92a2c2cb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c01985-3b7e-452f-a312-5a0bb01e6591",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035c47e2-560f-40d0-9b9b-ffc2f7574f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520cb09f-8183-4064-ae01-23f3af3fc86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c10d22-2d60-47a2-94a3-2285ac1fbba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23be373e-28e1-4eb4-9c64-e2f8006cbfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9272f8-35b9-4394-bfef-632171649850",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a448af5e-691e-4183-b779-818ea4f69ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154701e5-ed45-4cc0-9f1a-8d493f7635bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652b88d1-3a06-4a90-9f2c-f73bb338aa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "501b6f33-329d-483a-a5e4-95db15f54dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57203663-b54b-4fba-bd74-87eb934ef2a0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f98cd1-57e7-4382-a9d1-c1b6ff72bf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04e711b-9f4b-4b34-aeb9-561c73fc87e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cd1851-ed7f-4380-9329-1065435af601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45fac9ba-8439-45c3-aa44-4fd2c1480e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bcf1e5-673b-4f10-b743-db7b38a59712",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd7503d-beaa-47b9-9c3f-0bf7a09abdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b331f9-460f-4347-8875-4319a0fbeac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74adac38-cab2-46c2-a1d5-f32c774f46d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bc611d-4e98-4475-8a95-7d3728256174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db83afee-9060-4b4b-a1fd-1fa662c7e113",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc4d520-5778-4bcd-ab3f-361bcafafc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f138c05-4cd2-4f0e-89c2-383800734c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de675181-6c66-4c64-a301-b605165e5813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "606631e4-db44-4e7c-9630-2e73b3018168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8f2c46-f6fc-4b23-8be6-d9be5d1cf38a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2c0641-38da-4275-a57b-74286c759210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd901ff-92d1-4d82-b18a-2d8a6967e535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeae2378-6369-4edc-9653-240576629889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da1eb1c6-05d2-4699-be0f-9cc22d1a7d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c825b58a-a179-496f-ba60-ba60b12a9c8f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052d0df3-ae2e-481f-9c02-14a2ba652f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbd0714-9776-4de0-a07f-52c84ff984bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384827b3-04ed-4e24-833c-f77428fa46cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "154cf2aa-9b71-4b31-b165-d26c857b89ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577f90d0-3c0d-4d5b-bf19-075520c60c72",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955cca39-cea4-40af-98fa-0fe1e47e4988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c101af-6f46-46a2-8c1b-aa2929e89685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da97025-95f7-43c9-bb1c-01d427a544d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17e7283-411a-49ed-ac2e-3e27b18cb783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9e43a0-f976-42fa-8b30-c22286583257",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427937fd-1a7a-4aaa-a067-32300d341f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e5e53e-4198-4a70-9d94-6950b3087358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40732518-4e23-4e32-8932-c9ccfcfc529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3888f27c-24f9-42b5-bea5-97589ed3d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c21148-2c8b-4e07-8494-758c39e9df14",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954434eb-18bc-4b89-bb62-fba6115641c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c2ebe0-ab33-4037-b183-03401d2f008e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1f9ecf-e6df-47ec-921d-38490b9a5a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "668136e3-46a7-4dcd-b720-c0067dd206ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827eda20-03ce-458e-a856-3763e08e2d2c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da022e5-93fe-4180-9aa6-9d7352ed9b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa81a63-00f3-4dae-bbb3-f369529683e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e87c9b7-2809-4591-9cf0-a4f1c90b0d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5a081e-99eb-4972-84bc-db5ae3b8d957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ec5675-a55d-4a3e-a4a9-5e7cc1e5b670",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a6eef7-dbe5-4f6b-be54-37b11e7b861c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079fa3ff-734e-472c-931a-3daf35775a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf48f34-b47c-4208-8389-94001acc8473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d01556e-f2e9-4e94-98b5-e88591125609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41b4f4c-3808-47c6-b560-a0d92006b066",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46debe6f-5e19-4a7b-8874-96a9edc8578b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e308729b-f397-4d62-a859-495b0c391937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfcd610-341a-400a-81e2-9ba9193b551c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22048894-0f26-4878-bf9d-7212035fd4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f302860-6945-4ed8-b4ae-aed9f5d73978",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b1d1b0-7a07-4607-a818-53375d346201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01caabd2-d31e-4214-b427-4f1642b779e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5632d8a-8522-41f2-9dcf-fcc527fd226d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af28c73d-8858-458f-b798-396341b46926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3ded43-83d9-40cf-84c7-d0ab6edda15a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee36279-7931-4814-95b4-bb13b6ff0b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c7bf48-31a0-424c-91e1-407ac7a5e028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846eff64-bd22-4b76-b28a-aa036e0da242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82acfeae-d36d-4e8d-8faf-4751c1aa73ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbba4136-df89-4de4-9e8d-1198df200fda",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882db0b7-ff4e-47e8-a300-1b8521fe71cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de02583-0a94-4959-8197-1153abe92a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347f46c3-c8bc-4b18-b610-f59aa7f9197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0e80c2-25d4-40c4-8b93-5ccb20b71a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7a03e5-a49f-43b2-9c08-999c1ae618bc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fa5cb1-1039-40cc-a309-e359ac0de34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74412957-a92e-41bb-8220-8bae403c83d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1a79a9-d37b-4862-a60e-ab2d7fbf5ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8214d3e5-406c-4606-8530-107c0215c9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaa9cdc-8665-455b-946c-a4e4f733c5fa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2ba939-ec34-4705-b110-19659c2d1449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87211962-c695-4ff1-9150-6f66b097621a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779f4a24-5341-4d2a-8c03-5ed960272152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d17f450-b7eb-44b3-b21c-541ac32bb173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67c8c83-f1df-481c-a830-a577a130290b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cc9784-ae99-4b59-9799-9675d3b40e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1264143b-37ce-4df1-9867-1a27a7ace6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a565706-8c46-4f23-ab3b-bf57690fe880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5869f9d7-6ac5-4a1d-9432-2803b930e1f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f146d5e1-cf1a-4ee3-bd4a-306c17997241",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12f92ae0-d179-4ca8-9347-beb84fcc87cc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5b9623-d687-4f64-bbc6-0fc84de97ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30798a43-d9e2-4949-83a1-7f74db727cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dadfca-8cad-4cb2-b83e-ba9769667858",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73a0593b-970b-4db6-b34b-c49ff4355d31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "069ea327-69e5-4dd3-a4f7-9990b1847958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e92a47b-252b-4152-8d21-dc3900734db0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ce3504f-4e65-4287-ab4d-a86e0537dcb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3515b720-6936-4810-a8a1-5bb82f50a826"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7483494d-501d-4c08-b7ef-f94b24332b62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60974775-c6fb-4b56-882a-679db7880294"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ba48114-c059-473a-9c6f-f67a8099e6cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ee14b98-b0f0-4a05-9694-74af1ef920e7"
                }
              }
            ]
          },
          {
            "id": "84cec5f5-6dbb-4a83-973c-78bfb1c17fd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e1bc209-72ed-4f2f-b119-2fa6c8824a09",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d27177a4-6935-4f29-9e92-d8c3168fb7ab",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73eadd2-1640-471f-8ac8-1fa546b7cd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9a3d2640-2d4c-4129-a9c1-774f1ac43ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd77c48-861d-46f4-9ddf-f030dbe1b10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58d180c-42bc-4ff9-b9e1-f7ce32206835"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e8e9087-3c9a-4e77-9c19-577b80366d86",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eb222bd-44c8-430e-9a02-8c83f470ed12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67e7a878-071c-4a71-abe9-7f3ac3cbb849"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49e32b8f-9d8a-4967-b400-496b6c50f7dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b618197-ee0e-4c5a-acef-0fe15c0e7b2e"
                    }
                  }
                ]
              },
              {
                "id": "f6426751-d8bf-412f-a855-412710c9d3e0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e2d9ac8-ae82-4b0b-9ba5-810c764697e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b63c37a-2de6-4cf7-a7a1-769dd08ed89f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d2be1ab-178b-4206-9c24-0524b46ceb5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af694eb7-a2bb-4fd6-a64e-9efed6ae9611"
                    }
                  }
                ]
              },
              {
                "id": "e01e2548-0bf1-45fa-987e-dc7788dae058",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3f73fb2-c4ab-40ba-bc87-9b06eb9100e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed06d93a-cc80-4fc3-b284-607d882021c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8ae741f-708a-4b4f-bcd2-bbcf95478a26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db058739-6483-4d09-8251-922c0cc165fb"
                    }
                  }
                ]
              },
              {
                "id": "bc3a31e1-a4e7-4e1b-afbe-7576ec7dce3c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c8a4266-feb9-4f0b-b5be-e48d5773ef02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8733b08-b61f-483d-b2b9-d1ddeed5bb6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18d37786-0fdd-494c-b231-651e0347e344",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f820431b-51dc-431f-bbc1-7e2ce60e8b35"
                    }
                  }
                ]
              },
              {
                "id": "19cda6e5-79a6-4fc7-a0f2-ef0662beaf1e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a420205-297f-4737-b336-57e4a51c0330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "816d87d0-09eb-44f0-a12b-6b1690dcbd6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87d67675-6f4d-4619-9154-2d005d4fd61e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9e3bce1a-d55c-4a19-9d5e-8938b83f6b16"
                    }
                  }
                ]
              },
              {
                "id": "fdf1878c-f06d-4bf1-a54b-4a84a7ed21b6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad7e8746-9e9f-42d8-9a6f-466ce5691c58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b47f0e5-1c35-4670-856a-702cb726a551"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b0ea6bc-992b-4fab-a530-343de6e5978f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "494db2df-895d-437c-ae35-246692a0e06b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95843eef-8ef1-49a5-84f1-4ac63c846390",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6809f74-178f-430d-9f3b-1b29601523ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86fa72da-9391-434d-bf97-a71fb085443f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9a74bc5-de9a-42da-86bf-41d82c10683b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85378978-c238-48a5-bb3f-231bb7d30e24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "769ad938-f5e9-4848-9034-b6ddc1429855"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53db541f-6d83-491b-b11a-4b470ad27d08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49ee53e6-43b6-46bc-a0df-e121bd979847"
            }
          }
        ]
      },
      {
        "id": "91b9c743-6b7e-424d-93c3-47810b29a435",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6f5e7bbd-c711-42a8-8999-e5f5023ae958",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95f89720-ea44-4c4d-8109-932eceabc5b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a9f3a84-3cfd-4a31-bffe-a5d87f60889c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594a4857-2b33-4f24-984a-6fafbfe4549c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d78a64e-35de-4a72-a14f-0359562cc5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccca0e3-5df1-4d20-b998-bdab65dd9156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "23546a16-6c63-454a-ad9a-a1decc2300bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18522c81-d360-4be8-b73e-84d6f206bc25",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cd0554-5f6e-482b-801e-17d4fb8ba208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d156c93c-c79b-4303-8327-72314061a841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b2dc3c-ed55-47a2-a35f-b013f02de269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06cc6a0-06ff-464a-b2be-3a001e056913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f428fd-3001-47b6-909f-54edaf5c7a56",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a344fd-30d0-4f23-ba16-8e48fba05bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccb89a5-4b14-4080-b3d8-5a1a4aba4f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa45ef6-b762-43b7-9c48-2d7784136847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32283770-8ad7-48e2-8164-6ad30e1da71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3eeba5-31a0-4ac0-bcf6-39ce4725b28b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3f9d54-9dc7-49d0-aa3e-e0fee2a3a04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb1aacc-ee71-4f3c-8651-7fec6f67aa8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358ea97d-ba85-41ed-b0b8-e21c2d77eeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d444a2-41a3-4b16-afa0-4c82425cd29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58500cd2-102d-432c-bae0-4308aa477959",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8f30f4-d5f8-44da-9756-4779b40ff0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29526746-67c3-465f-ac45-439c6d37a6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbbf96c-cb5f-4406-ba1a-e25017b65cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87a47f69-72f4-4690-bbd3-a7fd91925ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3adb71-b622-4cb9-af4d-bff8b35db48b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824a89fa-3bff-47e0-b7e6-0fc7757817a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec68b43-c4bd-4ef9-8736-d54a70b1d0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f87f6d-b89e-4c50-81ec-9bf641de8cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "207d7610-b17a-42c5-9bce-3b9a61cc59e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34759d4-e69d-4083-b3d0-d846aa5ff235",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba915cc-effe-4c9f-b8e9-870abbe011ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef795d91-e61b-4e8d-8605-9c55e3cdc4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445b3248-cb6c-414c-8080-3afdbb8940fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac03eab-5a7b-493a-af21-87a8d15b489e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d6b71-9a69-4b2a-b828-50b526e636fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f559a1e2-2e07-4c46-b545-3316f2fb3bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8e71d1-1fce-4360-9678-fac01d07f1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edd21cb-9072-4315-bbbb-cb10a21b04c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d67483ef-81f8-4b34-82b0-f3a7177820a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5632c3-fffb-4720-b646-433f24fb701d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcabbb8-0fe6-407f-8f04-ff69924949a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79622031-d08e-40c2-9434-e11d7113519b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b664c9e6-1cef-4125-acbb-04afb6daffcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf2d731-943e-4b90-9419-345650375daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0505153-80e0-4dc4-8b5b-2635777de85f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9731fea-6a9b-469a-bf15-52245e508176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68615d9-e1e6-48df-b4a9-b21517d58d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82228c33-44ce-4b2a-abbe-d605ca926309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6e3a25-a293-4503-a586-1d0ee037d7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d421fd1-6f11-422e-ac92-3e053a40d48c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b01336-bcd2-42e2-a670-5584baa00d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0952348-9acb-4cc2-b94a-60f0641fe453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8b6bf6-7a43-4794-9f9c-4496f50d3c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eb05a5df-1da8-4b6e-950a-c8f7d972de73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8f624f-43ea-4cf2-8bcb-cbe9231dfb31",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67242803-fb8a-4583-801b-74664c46c8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03da3573-3a94-485f-bc47-62fb7389335c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8286b135-8423-4b32-aabc-67d55b340eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6bf9e3-b660-4738-a553-abac6cc8d1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44ec143-6829-4f4f-ac14-7864c237842f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5840b9-30bd-437b-a78d-e8bfc4b65e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12866bf-10a5-42de-bf8d-2d871e96cea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12179e62-4444-4afa-ab05-2543d40d5286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0459bb56-99a3-4287-b2ff-212c8dd05b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e1edaa-fc6b-4a41-974b-5dce2604e75c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26ae637-c4dd-4d94-8521-8f13227da955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7bc706-9c91-4afe-b206-6c9868ab22ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738882ef-4436-46e8-b3be-a80425bbcd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e76cfd9-bb16-4891-bdab-eca20adaa8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab833f6-874d-4cfa-9e04-722eb99c14c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b9b0e8-dd97-4df5-8d52-7372573c0fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0f9efc-88e4-4c97-8ace-3c661f0871c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedfc08f-cb35-4d12-b52d-732b88457b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec46d09-7e92-4fa9-bc04-1e05cbaa94db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b07e62-8cb7-4fa7-9b71-dffc90229a18",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1151f25d-c0f2-40ec-83cb-0b06c80fbd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc54019a-1aaa-4873-9fed-b059f7309b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7177317b-ad55-4d84-beff-3e142015e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "29907120-4e36-4ef3-bde3-1fcbd682a660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7b0b2b-a2fe-4f0e-a535-737e4c7728a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016576c6-4f6e-4306-a297-33f13decabcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583b9d53-5c3d-4d6f-a326-b7bcfe29a97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77821165-a75a-4893-b373-28fb1c609f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7b7726-1454-4be6-98ad-4a127994ce9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cba535-5e4e-4da7-970e-aeaac948397d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5df5cee-a6fd-4676-b408-8dbf4e2c2273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f91a9e-cb12-4839-ab2d-e1016a9f4a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a746d5c9-d8e1-4eb3-8bad-5ff17afd106b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1abbac-4802-4b5b-aacd-554c4ecec9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dad71d4-fed5-4439-8761-1cf1e3597f83",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7856518e-e3c8-4e72-a6c9-49c227214950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17357866-272b-4c48-b9ad-6933476e6b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e234f4-f689-4b60-ad42-9777ad703b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "535b0b6c-1bf1-4f9a-acb9-cb7865ff3239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7300012-2604-4bc9-ab1a-f219352330a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a31543a-ecac-4416-afb4-2821321bf09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e057de32-958a-48ab-a6ba-a7e790c6e5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a3b35-41b5-4bcb-9696-66b9adbee0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef1339f-6c9c-41ea-8766-c04909ae9cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010f44cb-631c-4c08-9187-b9bb61a01e00",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c65437b-8a23-464a-ac84-61826d016899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bd2cd7-d34f-4a90-9b56-404c767bff45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deb842c-09ca-4fea-8a38-3c0498c6445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4673f3d-7093-4ac8-add7-c8eae057e1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3a7118-85e0-44a4-ad62-977405f85826",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a620d8ed-5605-4892-a636-865d9c516124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640601ca-a70d-47c9-9f7c-a8ba31860be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098efb67-898c-49e4-b2a7-bb1f5dd8f97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c299ee-086d-4faf-9945-05923077c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341694ca-9362-4d03-a41c-9333f1f1bde2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac85599-41b0-43b7-b33d-1f1748c43435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e1ddcc-33ff-4133-bf56-e8ea3265ff9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8764723-e2d1-41f9-a2b4-866ff20cdc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1deb2f82-4a6e-4003-8f63-cb02b8ee53d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93728b45-59ce-433b-8d4e-0743d8ffc316",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92499c2f-808f-4820-809e-f6e762ce84ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4963fb6-a480-4c5d-9c86-948e630ed488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cf1186-8dba-4090-bcbb-480b8bbf2ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e86662a8-f7d2-4ac1-b6a9-2a124e1d4d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205c3301-9247-4ee0-9f59-35476ff25df5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d757d016-c223-45e4-a4be-ba45e4044aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dae33f-119c-4ab0-8adc-e83fbe291f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d701857-171a-4f36-8326-05deea2bbf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d4716f-3d32-4949-a6a2-9c0edfaf45ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c31557-1d9d-4996-933f-7128d17ced8d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5529dc0b-1887-41dc-8f53-3915381fe783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdecbed-571a-4613-a178-c32347e20254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b24099-0847-4039-873d-3690c0bbb0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7daf4a-73f3-47af-983d-8cbbf2c1f8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13175d20-dfc3-484d-9fcc-d0d62a7065c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc9597d-c60b-4e6e-b1cd-d45b7d8c73ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397dc62a-ec31-4ae0-a58b-dc1caaa1b67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a39c64-b05b-4db2-a9f9-2fc28b5bb2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eab16be-dde4-408c-8368-f37ea1a3177f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c085eb-bc16-439d-aa55-c7dcf81c39e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee200ac-474f-4746-a749-dda212ace7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af1d8fd-77d6-429d-8316-3a96fe784203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944e01c7-205f-4bdc-a0db-827713b5933c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cbc229-b4ab-47d3-a33a-bbdf9d090234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06157214-3221-45b5-a7e1-dcb6ba3a586a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e2752e-91c5-49b5-83b1-95e1daf8f9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9338e160-5087-49c1-bc2d-ab5b2b51e40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fb7bc3-596d-4c1c-8121-c4c3a50e47da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08e3425-bc9f-400b-9787-5f6f66b97365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca13814-5bea-44db-a037-6bc40e59125c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d335da1-9515-46b7-be6f-33491c2829ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792fe694-d810-4aff-939a-0a826c8dd55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db2ca26-848c-44ea-93f3-4bb2d6502035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c91a876-9576-45ae-b32d-215fe8a622a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e21723-dc83-45a7-98ad-89dfa268e6a8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d9db3e-2de8-4d5e-baec-6018f2ec5ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b465425-e695-4fff-8f07-2592f64aa25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525bc827-0b22-4ba2-95c7-09e85246fe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3323c18-2a8c-4e25-b364-e8e541ffd4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083c2578-efd2-4d4e-853e-d1109e2b6217",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53553ea8-9114-47d7-b44d-26dc0cd18142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f846f4c2-f6cc-4ad7-8295-be32b61be040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922291bf-649f-4fbf-8307-4207bc2a8237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae19b5d-4ae1-464a-be39-b9920a94b62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8b4c85-5ad4-4e01-875b-5f64d898446a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8478ac-df55-40a4-853f-a9e325403b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1879f9ac-883d-474a-b67f-7a4f06b24433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d677c7f6-2f89-40ca-845a-074e1b1d0e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f105f6a-2472-4e1b-bfe4-bc80530d7ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af530f4e-6113-4c97-9b4e-cf045a0d68cc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41bcb09-8bed-4e1e-b502-9ed8d8986727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a8349b-6d04-46ef-a0e4-304643ab1dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca9cce6-0666-41b2-88b7-cd710aa561fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20082f6-3445-4bf7-99dd-a72b430bba3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4f19fc-1431-4a5a-96d1-e4848997a736",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694deeb3-8399-4774-9e36-e8bb085535c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5bbc33-43d9-43c4-814c-b3edd6bf6c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666a6220-1c2b-4a82-a2b3-1d23412aa70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fd6c4c-4c5c-4fe9-996c-7eb4fc1a93c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c724ca9-2b60-4c89-bf97-52f528a8e84c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd07d7e-68bf-4478-9def-11613fd7290b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fa6e80-744c-4c90-8f02-383d604f77c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d7b2b9-3a43-4ef8-b06b-281433044ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d1d789-e9ae-4e78-9a82-a8eb8670a6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997fe3be-ab51-4d52-bdd8-8617431c6217",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0279f065-a55f-4cf7-b72e-8f1527fa8c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5d3044-b5d2-4917-9cd9-a79d8c5b7418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a985dbd1-5db1-4d79-aac7-2ae8eb367377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dffc66c-fe18-4f64-a95b-1f449b5ea52a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7fd42bb7-09a4-4ee3-b6e4-df1718763ba8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af2901e1-1945-413b-a05d-05500f730ce6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3021a1b3-abf7-411a-bd91-68a6b9842b5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "05f60b06-5d0e-489a-95a7-97214094b5ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3450909b-e71c-4005-84c8-920fd7d6dadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86ebaecb-17d5-41ab-a268-1707171da372"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de8c5527-2c52-4da0-a73a-bc7f908296bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8488467-691e-4974-b952-17559a0e29d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df42482f-c073-4516-b3a1-096b1590e1c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3442255b-7bfe-4953-b5ab-fa4ff7760a3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c188ffe-9cc5-433b-8539-29213a5f6f7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc6edee8-776b-4bbc-a783-1f265d9cc1c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fcdf435-9dbc-4bf4-aeac-d8e52ca9230d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b58315d-27e6-4278-8130-33298e85a081"
            }
          }
        ]
      },
      {
        "id": "01755786-cc44-4247-8970-f04554ff2925",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e7b2506e-2cf0-4dd0-8a84-c7448f32dbe4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73f1b7bb-465c-4d11-921c-d9b69b58fdb5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8523b0a-5c66-44a5-8053-d7abe4dab11e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0be81be-cc7a-4f22-b005-cf6050bed5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdfa9b0-447e-4f7f-813a-b8c8dc3bf37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e394326-1e0d-4fe5-b94d-b760035f0b7c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf055d3e-7bd1-4053-99b1-5ada07812b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b398dda-afbf-4ae4-a2a1-d134849d6d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb01305-e89b-4e0d-a314-03a6fa571ca9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37b7ff3-2136-4782-b643-18815ebeba8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57f9491-a129-4316-aac5-9288f28d99bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8d5750-2ae4-406b-9473-171268664eb2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21219a2-2819-44de-afb3-9e2f8be90ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cf5ef6-6f79-4708-a1f8-f3b21b83689a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b57f4d-f9dc-4c52-98f0-4635e709db9c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe19c170-c293-48b9-9039-f0a6bf23e67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8a7cc0-fe1a-4aab-aa75-15dce6e5a3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d72165b-3748-46d8-87f0-a59fc8c7e736",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becfa931-f8c0-47b1-98e7-ebe0cc530011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c417f8dd-ffd5-40a8-bede-e838aab06dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5615844d-174d-4358-9009-54679649d101",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95c5543-c99e-4e99-b757-48d80f61d742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2ec623-d0c6-474f-a9e6-298bc347542f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5935180e-26c5-4a8b-8d4a-20197232a69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ec7e61-ffc4-452d-9ec9-8339ea0b2264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d197f98-b7f0-4044-b84d-057bd227f52f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604601d4-9836-472b-9910-ecb03b42a6c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20391f7e-21c4-4487-8299-918e87150a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9773c9b6-464d-4360-a775-71d33f07a4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7fcf81-d87f-49f7-a1f9-6739b9abb7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66062624-a92d-4681-86ff-e681e394e76a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882c457f-5316-4fad-aacb-81fdd862d808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c729f604-beee-4032-b7bc-b3ff70c31039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53292e20-08f1-49eb-be2f-991635d0a7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4034a3d0-6520-4533-a98e-6fd88d3f7d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41641541-6cb3-41d0-a263-51ca8f849668",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49650c5c-6a07-4b89-8696-df4257f8dae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da60862-8a25-48a9-9386-7b7b7c44c46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8542559a-e619-4a80-ab26-036c1d7d13d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343258df-7aab-4c10-adb0-41022d1c2a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d959e965-d7c2-4e97-b5bc-eecab7d7395e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9123b6e-01e7-4037-819d-bdb5c05b389f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea4be44-22e0-4c3d-8ec7-ed646f863ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bb10ed-0fec-432e-8afd-14c1858af500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186e45aa-049c-4aef-a423-c43c6d7c7dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb9a1dd-63a0-4ed8-8fe9-04db57064821",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67841f8a-afca-4078-95f1-6c555976b496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e939bf36-c37d-49a4-9107-f16abbcf03b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3fcab6-c228-4d68-b3dd-30523c544719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81586282-c62a-497c-a24d-9135c088bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809eeff4-fad1-482f-8f79-382356cebb23",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96e5cd1-5d9f-4b57-b19c-88370085b01d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68562adf-7aed-403f-a122-8c78d76cab96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58073674-b401-4db2-bb8b-1a0f01fc78e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b7e766-0d2d-46e7-9c73-77c4eed87905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61ceb17-2480-419e-9a49-ff3a8639198d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3124d8ae-1881-415c-92c6-a28490d783f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e42657c-e9bc-4207-8f35-0a1a1125717b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff63ae-ec6b-42c5-ad29-bad1d98a38f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb5765a-7429-4126-b63b-750fabdc6c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98c2a52-250d-4e2c-b7d5-ffeaaad48d00",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97562b10-b442-4742-84d7-1ca3d8a3ca76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d31204-294d-4c79-893e-840c8daafc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ac697d-5ca9-49dc-ad58-5cec75d0cdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88a1bed-322b-4cd7-a9c0-d1ee87da9912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2374ada-c723-488f-8d60-87177d256cb2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc4529a-b763-4426-a600-9d6058261517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdbdf7f7-190b-4240-93e1-de029c209ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43731b63-81b3-41b4-a7ba-ee30bf2f2662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62aa6c97-c3e9-499b-a058-f678f4e9c09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acdad4a-8502-4297-a6af-f43b7ae14094",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13f096c-c2f6-47be-aed6-bf81d4017ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3106f02-e7fb-4149-8b26-da0a98d7bf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f36098-447a-4287-bba1-c56ddf600fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def401cc-bedb-426e-9000-87433d613cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d389ba4c-932b-4c66-a3ab-ec6424506c0f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbec9975-4367-47ea-a223-f6260cc151a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f98fc3-223a-405e-907b-1e7618432bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e957ed-a07e-4ec4-8e06-a68a231d590a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13fbf0d-7ccc-4cbf-9ddc-66d8cf0b4af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059d6f5c-0e5c-4ec5-9c5b-9376873ff0be",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5102a887-19d9-4b5c-907d-d69d7a000a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac9ea8e-78ed-49e6-ae86-8f69fcabfc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c36f89-2b49-4702-81c0-be0384ac800b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4359c338-e2bf-4714-ae55-e40713f140a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4effc885-988d-4336-b9d8-eaf688511ac5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52984338-0063-4446-aa5f-2cc1bc89dae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2f663d-d419-4a54-8da6-275f10139e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254132f1-56d8-466d-bbeb-92286b881c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380cdf14-661a-4aa4-8cc9-d21a5b8771e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a3d19b-b6a2-49bc-91dd-bdc449bd6c91",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9bd7ea-9695-46df-b01c-fbef1249dfb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a426c98-47d6-406c-a206-a45ea59b6198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f74b644-22db-4063-88e6-a5d5ec4696ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2957c530-607a-4f50-aea5-44ab57d458f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b558e764-9793-4964-a981-ae7ee3ebce01",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28793b99-dfbc-44b0-ac53-388a8e61a3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1126055-ad3b-4862-aba2-d2f7f6611805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3e61c3-b74d-4702-b6df-54f76b1f857c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63886c1-4d5a-4e41-8f07-13472b498832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b025cc59-3fff-4053-86c5-9397cb28d62d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80848c67-d64d-419f-9485-43753c58a11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323aa089-1add-4ae3-86f4-63a6949910e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0298114d-10a2-4353-9f14-58080c37188a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6d53a3-51d5-4690-9c87-3a89bf0094e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa41d8b-e925-4d6e-9b1b-2f2767d927d3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daf30ff-a277-4737-9dcf-f366e18070e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6a4781-8c97-4c33-9260-055be2da9e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8cc15d-e5b5-47da-8b66-e7dd5eda6a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdba7463-994e-4938-b241-a01aa76415de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99db1de-3152-41a3-9030-d44fd607c16e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202cf3c6-0938-4615-adc0-5cb42182a58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35641f0b-0d21-4614-89f6-4bc5538c1c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa8057e-71db-4007-891d-1ea8dcd490a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbf701f-2547-423b-9cbb-eca0e9e87432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767175ba-f962-4fa3-870d-6f83bfdcad42",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6806d5-cd3d-4d1b-a3a9-f51170173a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54dc138c-7216-4e11-aa79-b0ae5ffd5059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d0e686-4f65-4ca2-a98b-93cdee820ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501b01a2-5cb7-4054-823f-7cbf23328554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27625cbf-58a7-43aa-ae82-abb87caa0965",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2413bb25-6d35-4a0d-ae40-2a62df2e2395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c177868-494e-4447-b363-c00b89c56402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e5b06c-c3a6-4b08-be08-ce7eada58e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dee79e-d98c-4e84-b0f8-ba986612e833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef6e0f5-f294-4327-9176-97553da844c3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8824d27b-f5d2-4b81-bc0c-33380c8adf7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9e0c16-cc0d-41af-b820-e1c5fd78cb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b84156-3a6a-4c96-85b2-956c05adf0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7268fb13-6352-4b70-8a11-61abeb138180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b27d12-3ee4-48e8-8325-53693f29eacd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ccd5cc-4d15-4b5a-b633-ef546286dbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ccdc06-4ab8-4a96-86a0-1ec00d34fe28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec46664c-262d-47bb-bd59-a71dc808ef17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6eb43a-7216-49a6-9ce7-f3359174f525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c79bf3b-e553-423e-b8a0-b3a8c9e56e4b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786feb03-6afb-4197-ae21-528145e74203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f21bca-93b7-428e-b0a7-0bc15c89ab5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715deddc-9b4b-4fa0-b79a-f7585213b913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291ca093-d78e-46da-ac48-05a94d4be1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6244210f-2867-48af-9e41-62aa438919c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15438c2-cbc3-4dfc-8076-0dd6de2d4151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8ce1dc-ee3b-4f8f-8ab5-2ed7959afa1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7517c9a6-af71-44e7-8f64-e8a3e154973f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9824021c-ec28-4553-a105-987d3134421a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14f94ae-b7d4-455c-b08d-fbdbd9cacb88",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03861f27-6202-4a34-98b1-db3c04df0088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b540e213-bb62-4b96-b462-741b42670361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e73217-5365-4e46-870e-1543469fe8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2b69d8-7891-46fa-8fa0-0b0dc86742f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb062ae3-ad23-4dea-bf71-a90da0c7dbcd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04086b3-e365-4e24-8bbf-22e6356706a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f676fdf-1f29-425b-a09e-106943ef0943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f54cec6-f1d2-479e-ae21-51044a23acaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60457671-c7e0-427f-8bc7-961ae9f2bf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3539c6a9-6f96-47a2-8cbd-4d0beda05ecc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fe6700-c678-49ce-a3e2-07ad76fae585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110a9b61-ad6a-4b68-ab75-959ccaf2730e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5889ab2e-56d8-4b33-985f-c88c26132a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba99f3f-a57c-4e1e-8ab6-67516be05613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a5fdfc-15cf-423b-bf11-9af0c9f62342",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5dcd10-b2b3-4e69-a79b-d80ec9b37da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5f7643-1723-4dfb-abbf-23dd53b4df44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49610c1-10c0-4e30-b34d-671a23e0cb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9760054-2d83-4f1d-870d-188e25693124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de64981e-3d89-45be-a0d3-872dc72bf8f6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d35ea-ae66-4a38-89b2-88f8cfeb4b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ca14ff-bfe3-4452-b320-7aa6793f4416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3226a88-21cc-4d11-84a6-02126a92a6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf415a9-8d1b-4bf3-8776-b97f6f722a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3562562-af69-40f8-8c7f-db630cea7269",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b007c330-4078-43fb-bcbc-617c8def6007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51da745-f5a7-4a01-91f8-7fec3f1290ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a8d4c6-0b4b-4a7d-b625-5efc52447bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae334c1b-b223-42e0-a845-2a6674701157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05728d1c-ae5d-48d0-b5ad-63d504f56449",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127cc55a-ed72-4bbb-8bf5-b3c2b8407c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35027fbf-a787-4062-846c-e89842c3370b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c333feb-fdaa-46d2-afe5-da5e5f5c8eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a5535e-1b26-4edc-b1f9-d47a9658e7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19dc14f-94f2-4c12-9fb8-d33b62cdf7f5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8528a308-9259-4d7e-8cef-b2255e8f7fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cde2cee-c9b7-43c0-91a3-114cc2bdf0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ec99c2-1939-4d72-b1ce-7ed29e500555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a6f3c8-db11-4e32-ba6b-aa5d9b7a9fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfff743-2440-45ae-be85-9f77bf150fc4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8b7894-1f78-4fa8-ba2a-0fa7d03d0148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0cad1c-4aba-4dae-89d1-752641cf9e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3a2591-8c81-447d-a0ff-ac351e660c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9e541f-3ac9-469a-9363-ee4186e42de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d60102-70a3-4e92-8c5e-737e252921a4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92972320-7449-4b71-838e-f069167de01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04187aec-ab92-4c6d-b2ca-e49dd47cfc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31400c5-7140-4b62-8509-54834d63dd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3f2e77-472d-4c36-9493-91b046f4b4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d8b3f8-9ab4-44d5-85a1-d10a6a3fa68c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f9fa22-1321-4661-927f-80e9b38855db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505cb6c1-0f97-481d-9060-f33958425757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf0a27e-806c-4261-955a-d3d7ab6cd2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05b7607-163a-47ce-a6fb-9733ebbfc518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de08e6a8-0664-4552-ab41-273e235215d7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ac1cf1-4649-4a07-9ba7-9df875755865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7e3cf1-18f3-4dc0-86a9-dc098532090f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41802824-5d27-41c5-8444-82d4367619df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfcd058-5a19-4ab9-a721-015e53bbc43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31d3a3f-d8e7-4cd5-97ba-046024064bf8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44687877-b882-4c96-a199-14defa02c36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd41d91c-4452-4884-8a1d-99eb469a04ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508bcf93-b826-4733-92ae-5663611ef28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3621aa3-e2ff-4604-96ce-40ccd3a388c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddd76cc-c5c5-4f6b-b977-a9a9e45bfec5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49071dba-9be8-4080-93ec-8ca25368ad8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdc5d98-3bcc-4875-8505-7bbb834a375d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63712dd-581a-49ee-8852-d5424a8a1dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6274bd32-7009-4a8f-8fc4-e98eeabea0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873b5e7f-fd6b-48ca-bc89-385e576bd8bf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffc3dde-e6d0-42e6-b26b-5924b0fb9b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437947e0-e9ac-49e7-a3ce-bd06adc8316c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afd8b07-afc7-44b6-89dc-1e3966eafe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc74b116-5744-46c1-a380-e2996d7e5132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666f592b-6e58-42d8-8b5d-55eb774be24a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e3e2d8-6b5c-439c-a8fa-c22593698a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf918b83-a07f-40f1-9cb4-19e4db38102f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7a5c38-c2e6-4e98-8fbb-09e6f19b1323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6576cafa-daad-4ab8-abdd-7e14641c3ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa21f5c9-399f-4b11-b18c-1091de985fb8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96e7bb8-0706-4002-8e43-00bd9351b00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65238d55-bc54-4ed5-88d0-f14348448c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9ebfa2-2764-4db0-ac0e-855f341e54ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e091d8-d788-47b2-bd59-d8c7b049feac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0515e285-2e46-4468-8820-85f3f57bdd1e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c51389d-e01d-4e96-84e5-64d516b7c1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a99a85-babe-4867-9277-e2b9b1d7a759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674156ca-ae84-4a8c-900c-f6d8ab08d87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44be6ea5-ec58-4065-96df-d982abfcf033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdfd195-288a-45ea-91fa-a9e4a97af65d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa18e50-5720-43da-a998-68d9a8b7af35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1c558b-59ec-4b77-8a5b-b47ecf0f9707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f3af1f-ca74-4f09-a9bb-ac54bcdf30f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f63b75-946b-43ee-a7e2-a90d8edc7460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1261cd-238d-42e0-b5e6-4744188faaac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec0942d-d1aa-4318-b1df-5ae087d809f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f52fb97-1e99-4ec1-8e31-fd2443369ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc5280f-ce0e-48ee-984b-feb13d8f5ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877e85a1-f032-4b24-9237-f1537236600d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de287fa3-71cd-4291-8b56-02a98d140415",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5eb4f6-9e80-412b-b470-5501f77b3478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef80631c-42ff-4e67-8552-8a7162944a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43842dec-53f5-498f-87c0-bb15deec2193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc70fabb-bd39-4052-a97f-989751ab94de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7894340-45a1-494d-86c2-f426eec38218",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4542f360-df02-43ce-b83c-e06582fe03a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513f6a0d-f166-4d0b-a686-f9a855966458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3641da3-0f50-4ecb-9e5e-da2739dec90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea392d2d-99f5-4116-9f44-272da67fcede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9a0407-1052-4792-8788-b3af44664675",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ad5a3c-a6c7-44ee-925d-8298ccfd2408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e5c897-8d43-4b03-aadd-038833e5e001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5b35e4-849c-4035-8ae0-b632230857b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364f8a13-ca36-44a5-8bba-4b0c403639df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3435f41-2ec0-4f40-a6e7-1f840e34070a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085e7412-8820-4f68-a439-f2d5fe9a687c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b510b3-45c9-4899-ad74-9812224d134b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc10483-20fe-47fc-91b0-a333e6623a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706736f4-265b-4d49-872f-594e5b16cb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a093a4c6-e943-4fe2-ac8f-ac5b8e5c8f6a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f982214a-3f57-47f0-9d44-4240b97018dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb7e9af-4409-45cf-a441-5a13859bb38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906b7a7c-4cbf-49e0-90e4-b749d81ef3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ca5a8a-9fab-4c15-98d0-64d2149427fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e6f4b4-3274-464c-be7c-b5c7bf82f45d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d009730-13c9-4f4d-8811-b2d3c20ba2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc9b579-17d2-4421-87be-6ffbe84b3249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5538ac1f-afad-44cb-8158-2066a268bf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a490449-fb56-4b6d-900c-69d0213f5777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d01759b-bb81-4b9b-97a2-c353134d42fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d4d9bd-6d05-4665-b8ed-a9914671e8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c39053-8f31-41d0-9c6d-0a4adbd6fbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9525cfaa-faa0-4a1d-8413-39276ebab0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4230b43-d003-4439-ab7e-f5039873e284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16558b4b-98b5-4775-a4c1-f858ff58057a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d02200b-1bfe-43fc-81f5-012655875738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fde771e-bb3c-4c2e-b96e-f45faa4964dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d9200-0fd8-4b42-ae45-28fb7b475ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1f262b-de9e-4570-b3d7-d85b852b4524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfbe20a-f27e-4a11-9def-e83b4b8bf989",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d912652e-7f4f-4786-9a81-d011d8476711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c617298-9669-4ed8-8a40-589233422ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce5b29-1e4c-49e5-8bf5-57ad4ea3c239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dadbf12-bc20-4a99-b3d8-9ac6782c0854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b1a3a6-f73e-4e0c-872b-f91fca67bbe9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec7ddb2-edae-4d85-84ad-e1dd07009496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20f9125-70c7-4ec1-8250-3899342e66d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f0caca-e554-453c-afac-479c56eb8599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa89a4da-52a2-407b-9907-9b5c30991e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8a7a21-e5b1-40d3-b30d-6cb209323400",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06306e4-59fb-4178-841d-4b560f388fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d807a0-29bd-4b50-aae2-331c48d2f8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbef7e21-6d75-459d-ab5d-2ffca7516d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c79fdf8-00e0-4932-8e50-68ec6bb0440a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa4141e-2c15-4443-a072-b7e640414b08",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908e4cd6-621a-47b4-abf3-011479633a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115a5100-4ba0-495e-841b-b14a52af00c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbfd770-3b79-4245-ab77-87331450c38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37041847-a2af-4051-8754-3764a57d8cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30b13f8-10b3-49ed-944d-9100aa36eb05",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83383be-c828-4f13-880c-2f0d7eefe2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e070bc7e-21a0-42ca-98a3-363d9907f44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8865ec5d-7033-48de-bf5e-35a10b647305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d27e31-5f34-49b6-8d85-0d441d282db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc715b1-8abd-4f0a-81d9-92bef2e91318",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ee01a2-bbd4-46a8-b160-17d657f38f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e17938e-cfa6-46a8-bbae-c0fea7b61d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4305b5-682b-4c47-b4c5-24115dac78e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed51b0db-638f-4ecc-823c-d300b6cb2140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696d07fe-4c9b-49d7-98be-ef5b89cf8eec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3ac7de-8ca5-41b6-9f5d-16b0d66c940c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49302b8c-56e2-46bb-abff-88ee7d86f561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf988cca-cd2f-43f9-ae39-4065589b1f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa3acf8-1b69-46b0-b3e5-ee1faac137d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30822be3-801a-4c0e-b08c-223b63ac9720",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248a4b02-e465-4b16-a37f-09ca758ed0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d739cfca-3c09-4d77-815c-c006d05cae92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f27afc-e498-4787-bd5e-04e0e4bdd806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf64946-c810-46d2-98fd-051a072f5ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396cd7fe-675e-4085-a33e-fde135b8cd4b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6d7650-50d2-49e4-9ff4-fe2c0ea300cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e14a06-f54e-4ffe-b524-72d48900cb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac8135b-ac34-4d52-9cc3-39f55f077ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8985087-024f-47d2-bd3c-83ea1ecde3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfa5e4d-0c76-403e-ba58-e82668d37f01",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bb7900-e8f3-4f6b-a6b4-3eeaf35f85c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb19c83-45f3-4398-8b4c-e4d51dcc9cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dff7625-1bd3-4405-bcd1-a12b2ffb3f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1718d44d-b8bc-44a0-a5e2-883cbd125b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e0dd3a-3a2d-42d1-81fe-260ade1d9375",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee7fa9c-ca59-4d36-aa87-cd220ab9a5de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc948c8-8b40-498f-9406-f850c3d96a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b8b72f-67ff-4480-b84c-7911f4f9b381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603e330c-26ab-4193-abf9-51b6323e951f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6140519-513b-4cbc-a328-e8e26453d1e6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c318588-92c8-4242-9063-caf158a0e549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14c4cb73-0fe0-498c-be15-a9beee354ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0956aaae-d9ee-4923-bda7-cd32374141ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9aeb25-41dc-4ea3-86b3-19fe7533db3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df452c13-c638-4dda-97d3-c97f0c754300",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d5ea12-fa95-48ee-b43a-9b5a1792f1fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6726970f-0feb-4f64-959e-885a3f33c6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703691b7-0556-49de-a40b-6c4ac4355f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f3ebfa-d94c-483e-8723-0fd670168d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f330180-3126-4bf7-a603-298cb221cbe7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131dc67c-df4f-4ada-acdc-9e53e05d0472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242b6ba1-b2c2-41a4-a019-e539c0a02423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8a5916-59d4-4f55-a090-012541d91c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb32a684-9444-43f9-8d3d-e530bb80e446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc817d15-1208-4464-af0c-90292252559a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5087e2-d669-45ac-aaed-10e70d550e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cefee6-b06d-49ca-8432-11551561bee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36fb5fb-563c-434c-bc8d-11ce15a2c8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46da6578-cd36-43e1-a0fa-5e7dd051fea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2975d5da-3b6c-45fd-8703-ffeb65177be9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f9f050-f29f-48f9-96e9-99c62a8aa5bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a66403-41a7-4903-b38d-8b1f03ecfb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89eed69-b83a-47a0-9ef6-e55b7ae9e45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168cb91f-cf1b-42a5-b531-c97c1fd5b5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd6a191-c550-43c2-9f1c-44edce4a43a3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0409d91-5a8e-421b-8e99-86c9786774f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca9c537-2931-4b73-b3ec-c7d4675b5c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6ccfb9-5680-483f-a3b9-7b942fd158f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595fac69-b8ad-4c46-ba33-f2665c0bc299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22c758b-e8c8-4fdd-8247-fd5180176e6e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550551bc-bb47-499b-a6f3-6a91b5917256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0d533d-be88-4ba8-8233-b279c7f2fdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae6e674-6b58-42ab-a9eb-e2e9ae711a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f3365c-9f50-4294-9f3b-b89ccc4bde2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49abd1e-14f1-41c4-8937-0d5b915afb09",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e2eafa-4c13-4354-8bc1-56e777e3907c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba67845-c881-4b80-a8f9-4a00438b02ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7129289-3c4a-46e6-98a8-91ace9b8581e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ceb02f9-15ae-4aaf-be6a-9a85f23ae28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9810a5a5-6144-4e88-801c-7d77a0de3958",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3887a3-3f29-4af5-aa95-1fe5ee791370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e77e88-6770-47d5-a91b-61a9442d62d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d9a1da-0ffd-4808-a749-04a6f43c164a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c66158e-51bf-4aad-ae15-8e2863af4ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b120cd63-5842-44b1-8920-c9206d317fd4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36b1228-be94-4c74-b868-0fb2273bb7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19bf2aad-72de-4e8c-b9fc-c7df7571e557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9038f5d7-6410-4714-adb9-7c979d1ce157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2004f0c-3aca-4851-9ec8-ce440007ecc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9f62c3-beee-4fbe-afa9-4eb5540aeb61",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfb5fcf-ce9a-4b5c-b895-3e7f26fae356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d049741d-32a5-4ec8-a0b3-3ce2ba240d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2902539d-d5a2-494a-935c-8991ca39bb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f82fa55-b8f7-44e3-9d10-452d62bc2f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9626a0-997e-4f9a-bbcd-f0e7d7914eaa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dc631c-dcb9-4edc-b402-aa49ae109436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071df14f-6e49-4863-a796-8854652eaa81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f1ebd5-8151-496b-87e7-cb0f75a40c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e05ba8-66da-411b-99dc-4cf97d9951ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32323d8c-4892-4e46-837e-8fff0474f645",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c0c08a-6de7-4df5-a7f6-0d48d0c00585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3456f603-e8f9-46c3-80a4-527a1be4317f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80183676-385f-4797-b14c-048ab6b41b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a017b6f-bc38-4a4a-80ae-5c17f4ed11b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1641dd3-1377-444a-abde-0a6cbccac147",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae45a3b-874f-4000-9870-5bad42522dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787ef1d9-889e-4fcf-895b-2454e51170bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b743e4dd-9226-4b4a-a641-e952acb623b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f86e649-8366-40be-8fb3-9a7ff3ae3615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3159b7db-141b-4342-9502-6f95ba7b6930",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7bbc2d-86a2-4a89-a5a2-6c2e8c69c2c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad975117-2d26-42ec-899c-2148fa156be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b6f241-1cbc-4710-b76f-795a9f6c3f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f690faf-d34c-4ad1-9252-e2ace501eb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1e2b0e-a732-4b23-8424-68fb644294fe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78833046-1782-4667-889f-ffccce2ee1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce645b2-157e-45d1-9fc8-5869584978ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff36d08c-a37b-4f47-b5bc-ebb51217a050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ea46f5-32fa-4f4e-b3a3-ae1896eb7331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710ab5e4-6223-4d3c-9cfa-0c0adbe20b30",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c5589a-23e7-4f7e-945b-54f3ae811548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42af01f-c28a-4162-a063-dbf442e83fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5009c0-c10a-47c9-99a3-f95d0caf564a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03a3c3d-24bc-4bed-a727-da68fbc900ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252d3851-2bd7-413f-992d-df55a7625c24",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17b3f4b-a0aa-4835-a8bb-f123f9ffd072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f9e31b-ed1d-43ae-900d-b3ad38b25024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64809b72-3146-49e8-9a40-1dab94546216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fa655b-e779-47b0-b8f8-741595545755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16f171f-124c-42cf-b07d-e346e2782eab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e02889-07d5-446e-a303-36e8a86ecccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2283d800-721b-4e23-ad96-fda71fabd886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196ee90b-94ad-4a74-802a-4c1b3c0fc624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4fc858-8ba2-4848-b762-5750556749b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf8d955-20e6-41b9-85e0-b1570c112e82",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec58dc6-ef4d-4ba7-976a-e1e8cc14cb94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551d382d-ae76-4e0f-a488-0e6d0b778051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4883e910-b403-4c5f-8264-aaed426baefd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c46f44-a49e-47c8-b8c5-d0b75111f5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188e9702-2df3-4955-bf86-cfe62f5ebcee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a675ef-4040-4b81-a024-c7a0cdcb97f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf909220-de5e-494e-8692-5726d5374688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19ab266-f3ee-46ff-8920-10b2400a5631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91ba0f2-0dae-42d7-ade1-2cc38dcf2963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26993479-6ffa-49b5-bef4-2941100f5d5b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f80f0da-f0bc-4d6b-9a6e-a0a1a6a2e831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9413094-8660-4132-8862-60b8f817232e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e9c300-9c71-4ed0-8896-4dbd600a85e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4ce7d5-b91c-4344-8676-683bb0ac21a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150eed27-76fd-4dc9-984c-27e4b4d41b0a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c584a7a-d59b-467b-988d-e892b46f918f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79417240-feba-4823-9476-ab0ca74280ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1817d7c4-671b-41dc-bfac-b55ee3d905ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b202d7f9-6b14-47c1-9116-5266dd02f0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338602c6-3c76-47af-8779-703ce41d2e6b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937eaeaa-6965-493a-ba63-f33ec77ccb56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53caf44d-a33b-4023-bd41-60ca1a454bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b4058c-1859-4158-a471-faf41fc941f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e64b10-569d-49ad-b277-bb41bba82b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d767e954-48b8-4f9a-8996-f6f248972adb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74db8b5a-3e92-48f8-b11c-416f5a2774f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "322986ba-839f-4859-a0c2-33f0bff41d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1c5a22-4fee-41fa-bd71-a3abe3083710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f673911-39bb-4869-a473-48ed3a7641b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3439321-e6e1-4ae5-a434-b8db3edde9c2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04bd1a-888a-47b3-9606-881454fea2ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b3c0a8-610b-4e27-ae83-f6bcded1e6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99be2303-8e95-491b-954c-95b2c722a4cb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0991995-41d5-4138-9669-b85cf0941f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3027703e-52d3-46d6-a1b5-9f159ccb7358",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a047ad86-8ec7-4026-9912-0cabe6d0115a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2582c0e0-fc59-48ef-9c52-566c1a37b7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e55671a-6667-4b88-95c7-7e55ea0862f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1c74ce-097c-4b2d-9caa-fd6140bf5b54"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "012ef34a-9e9d-4807-abe1-2b38776d9909",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "150602d2-e77d-4904-bcf4-e3cdc9ccbc3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77f5dc6d-a0a2-4a67-9c66-94b5c7bfd860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad7e4242-de45-4158-ba29-177020cebe93"
                    }
                  }
                ]
              },
              {
                "id": "a2be75ed-97b9-4548-ae99-7d8277cbe344",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4524529c-8821-4187-b417-e845f3409822",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc9bc7f-d9e0-4e3a-9d8e-18feb36b86af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a715623d-b2f9-4bba-af08-7a7b465568b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e23d0a-9a45-4987-b690-67de7c65c4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ce9cf7f-3f18-4023-aade-095deb5d0edc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4620b30-5daf-4096-a154-f23dacf8e3a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1b9b2cc-57fc-4edf-b6c0-c7f0c5fe4149"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17f5732f-4e08-4a44-a552-09f2e87dff59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78e0d3f0-d250-49c3-9791-3af3278a552e"
                    }
                  }
                ]
              },
              {
                "id": "2a93e838-2ac3-403c-8a91-6ab6c1b9912d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "84698ff8-c23d-436e-959b-9303d1a93b9e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8285e4b-d1ab-4b49-8e01-8c1bf2a84147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b0454961-82da-4fef-bfd6-aded959dfc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d4e5a7-aa6f-4f35-84c9-02d4b59c2e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957618b0-a7f7-46ae-bb6f-af2be1c9ec8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "00bc4c0b-0540-474b-a55d-4350458e7636",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44d27cdc-af2c-4c37-9ab5-9fe9b093ea8f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31697cd8-6dae-4276-8b5d-2bbd7d58be2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd2aec8e-dd72-47fa-a217-7e40e4173767"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5293528a-0c86-4875-b4a2-783edc0f4c82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be202236-3b59-4847-b70d-c2a5c9ecf4f1"
                    }
                  }
                ]
              },
              {
                "id": "82c9243a-1dbf-407d-9455-acc4abe76449",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44514633-431c-43ec-b16a-f3e92917eb9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ecee2086-0338-4b33-af29-039000d7bd13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2eda588-c20b-4eef-97e3-9f845e63cfcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e61fd46a-67df-4036-834a-e0ee4d853f09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b08cf74-02cb-4719-abc3-fa46939b55c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "600a2d26-805a-4f35-b58d-ffb2b57db004"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd41e804-60e7-4719-9a53-c6c682f815ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e99e5e34-2c58-4af1-ba3b-5701275088e3"
            }
          }
        ]
      },
      {
        "id": "95b0e03e-7f67-4c73-b9f3-626f360ad40f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ccdff400-9146-43d5-8eed-a86e12ff7a21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca94e5d1-2473-414a-9fdf-809441929f9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc49fa38-17ca-4a70-9776-e3bec99a5962",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9e6555-2e23-4a14-975c-63251acec420",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "99758bc0-7c93-43cc-9f7f-05bba74b2a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd40ddcd-e25f-4819-a258-0f7fcb031d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9740c6c-6c16-44f4-a393-eaea37874d30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daff0b55-5944-4f87-8432-5d9ef1defba8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d66803b2-f43c-4d57-9961-50850572274c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a87a9ca-052a-4caa-b65b-25da07539aa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75d87042-f41c-47d2-9007-eee53c615578"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11d90fb7-0e03-4bae-8d49-99c421a512d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b93552db-ebc2-489c-bf9f-471f561f8777"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e39d124e-cee1-429d-ad13-675965d48eda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19804a34-5498-4ae6-a388-4db7c6bfd91d"
            }
          }
        ]
      },
      {
        "id": "0e050f68-800a-4ce5-8ba6-232e352e6f10",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d57df4a9-7256-4e78-9e14-bf1d07464d9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6a02de2-be63-4320-b348-5a68199453a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72320898-911c-40ff-945f-90f26f64a961",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5cde8d-57f2-424c-bd09-8268c451f00b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e30e916-82a0-4935-a7c3-c9038b8fbc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3847486c-8783-4a8b-8a4d-77191ab25f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5425d89-b2e9-4d52-b58d-5df4a71af7ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59a086a8-64bc-4e25-a726-02a7672834f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97ac4a19-5887-4b15-931d-cae5a01facd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7717ccb5-993d-48bc-bf2b-17517ee0f704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf5e969d-04df-4817-bcf1-6f93e3e5cc7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4114a39f-ba56-47c2-bcc4-a554a73b8223",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7d01fe23-f899-463d-ab67-d00c0e90c156"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "552354f9-e799-45d2-9b26-ec5be1720b70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aac91754-a0ad-4a2b-9303-45e985b5431c"
            }
          }
        ]
      },
      {
        "id": "584563c1-2f7a-406f-a3fe-aa6571466b29",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f7da6671-bbca-4df0-84c4-2acd81598933",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe2fc657-eda2-4d67-a962-42d2d777782d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe9e2043-2306-44f3-b4f9-28408c274e05",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00dbdf6-fe3e-4b86-bad7-52e713f6780a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f67e4d9-1504-40bf-8048-0f639f84e1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9339eb65-47e7-4bc4-8e71-d48f54538aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbd56a6f-47a5-457c-81c2-dc8c6e92ebdb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d6cba13-2f35-4be4-83f1-3aef7fba9d15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f48fe69-155e-4b18-b704-abf36824fb2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25f305b8-9660-47be-8559-96f4e0f8494f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62efb073-3cfd-4c02-bf95-85f5c935b92c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b34fd913-14cc-4860-adc7-df01ce29aaac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c027631b-3d48-48e7-8577-5c9525b5c83c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49361351-1944-411f-8b51-1c4e990d7736",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5efb0438-67a3-4670-bf89-14b0f1c5d145"
            }
          }
        ]
      },
      {
        "id": "180bafc9-63ec-448c-9088-3181a15e569a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac9fea05-2fcc-45f0-a327-4c72354edb45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4d168e2-995a-46e8-bf84-898ea73635a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "30351245-bb0a-43d2-9693-d52fe51d5303",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b9a6331-f1a0-422b-af81-293e5679352a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf71f01c-e5a8-49e0-859c-2ef753eef84c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 119.1230158730159,
      "responseMin": 6,
      "responseMax": 7034,
      "responseSd": 539.1281364995787,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724546682403,
      "completed": 1724546720518
    },
    "executions": [
      {
        "id": "c5865306-32dc-4633-b768-2f90ea6a0a84",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "90c3e2e1-73b0-4a92-b706-73819f83c7d6",
          "httpRequestId": "4589b370-0de7-4c67-858a-6afda8ba7fc9"
        },
        "item": {
          "id": "c5865306-32dc-4633-b768-2f90ea6a0a84",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0634cc3a-13c0-41ba-a20d-bb82a7ab4367",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "e2f49ac3-f263-44fb-ad56-a4bc3cd0aab3",
        "cursor": {
          "ref": "6135a994-a844-4bb9-b0da-2772ac0fd74c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1f09f3f2-e072-48f1-94ca-65a52c2cbc77"
        },
        "item": {
          "id": "e2f49ac3-f263-44fb-ad56-a4bc3cd0aab3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6ccd3fb8-bcea-45a5-9de2-d5660aaabfcb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5a2d5001-fe5d-4218-9d3a-c881ca6acd9c",
        "cursor": {
          "ref": "d068665c-6ca7-403e-a81c-a5fb7990a078",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5621d045-9532-46e1-92d5-149469ae65da"
        },
        "item": {
          "id": "5a2d5001-fe5d-4218-9d3a-c881ca6acd9c",
          "name": "did_json"
        },
        "response": {
          "id": "dcfc5c58-6941-4b29-a601-2434fae6b22b",
          "status": "OK",
          "code": 200,
          "responseTime": 287,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ef7ea2-7df5-41ff-94bb-00d9224353a7",
        "cursor": {
          "ref": "63130830-7155-4a62-b276-aa949deeeee5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cd45c9a-ad80-4688-8bc9-7e3fa58bd0da"
        },
        "item": {
          "id": "88ef7ea2-7df5-41ff-94bb-00d9224353a7",
          "name": "did:invalid"
        },
        "response": {
          "id": "a11e4736-dc8f-4ad8-9af4-ba0b0fd1e8da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 353,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ef7ea2-7df5-41ff-94bb-00d9224353a7",
        "cursor": {
          "ref": "63130830-7155-4a62-b276-aa949deeeee5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cd45c9a-ad80-4688-8bc9-7e3fa58bd0da"
        },
        "item": {
          "id": "88ef7ea2-7df5-41ff-94bb-00d9224353a7",
          "name": "did:invalid"
        },
        "response": {
          "id": "a11e4736-dc8f-4ad8-9af4-ba0b0fd1e8da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 353,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b5938-5f2e-4b3f-9bc1-4a2872517735",
        "cursor": {
          "ref": "287244ad-ac11-4187-89a0-855de903cebd",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2452281f-f2ec-4dba-a332-51047cebdbe4"
        },
        "item": {
          "id": "3d2b5938-5f2e-4b3f-9bc1-4a2872517735",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "603eee53-ec13-459a-97cc-181d74615ac6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac7187-3ecc-43e7-a608-585bce7ba1cb",
        "cursor": {
          "ref": "c0161042-27da-4021-acb8-fc84ea0189fb",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "26c53457-48f0-4ad7-b26d-fe7ebd112c25"
        },
        "item": {
          "id": "03ac7187-3ecc-43e7-a608-585bce7ba1cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b8819b49-d4bc-4e62-b31c-970e665e4206",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76b6dde-60fd-484e-aa40-7e2465d86028",
        "cursor": {
          "ref": "2e836415-c8cb-4ba7-8538-7f474e57edf6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bb05cfe3-4c03-40c1-850b-6e94d8349e1f"
        },
        "item": {
          "id": "b76b6dde-60fd-484e-aa40-7e2465d86028",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7aeef70c-8b18-4946-9fa2-4bf354817a7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4239992b-2d65-4d6d-93f5-0386ec0e61ec",
        "cursor": {
          "ref": "e812d90a-1e6f-410e-8559-1afe18acbf8b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a360ad0b-d2c4-41d6-a882-c5ed3e341cea"
        },
        "item": {
          "id": "4239992b-2d65-4d6d-93f5-0386ec0e61ec",
          "name": "identifiers"
        },
        "response": {
          "id": "9022d9db-cf93-4b06-a986-0c46802a33ca",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70eaf8c3-b26c-46f8-bd48-59d8b58cc06c",
        "cursor": {
          "ref": "610913fd-dc0f-4329-b0df-a9fc7c056c52",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "698afb75-f6e8-41f0-a6ec-d89f2c04742d"
        },
        "item": {
          "id": "70eaf8c3-b26c-46f8-bd48-59d8b58cc06c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cd021b56-4cd2-4f1e-90a2-566c922f945d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a225aa5f-344f-481d-a03c-bb448c449192",
        "cursor": {
          "ref": "1adeff98-486c-48c7-92be-1a155a46b05b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b38f64b3-864d-4643-8029-ecd904359ff2"
        },
        "item": {
          "id": "a225aa5f-344f-481d-a03c-bb448c449192",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b7b07084-6086-4092-8b73-23c806518421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144717c2-c3d1-473c-897b-9537dc74a2ac",
        "cursor": {
          "ref": "ae228858-9fa2-41b6-b084-f7d55cac417f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "468e7098-5f03-4e2f-9abf-a3f34a7219d0"
        },
        "item": {
          "id": "144717c2-c3d1-473c-897b-9537dc74a2ac",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b287f6e9-e250-420c-81a2-cf3e803c295a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d727efd4-0ae1-4af4-b1e1-b4b09ce4989f",
        "cursor": {
          "ref": "ba27884d-d273-41f3-9026-fe7d639fb95d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b3143d67-37da-46b2-b741-6738b95ccf0e"
        },
        "item": {
          "id": "d727efd4-0ae1-4af4-b1e1-b4b09ce4989f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4c715355-96cc-4c92-8464-b997bf337f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12905d1-abb5-4d87-9dda-b54297716e5d",
        "cursor": {
          "ref": "42676255-d43c-41e0-b1c4-6a84f16d6db2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "72bca4b4-92ae-43c2-845e-8339b2f7dc41"
        },
        "item": {
          "id": "a12905d1-abb5-4d87-9dda-b54297716e5d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8f4e2fd4-ba81-4864-8b9f-22a86de511be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfac9661-afc0-4485-8d2c-915dd7170bdb",
        "cursor": {
          "ref": "38937ea7-e5db-400a-ba82-b62075417bd8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c1750991-e0ac-4522-ae36-0a3e1205173a"
        },
        "item": {
          "id": "bfac9661-afc0-4485-8d2c-915dd7170bdb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2994986b-41b3-4566-b129-a3f5de4e49c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a27cd72-dd8a-42e3-8c62-d3aa308cebe4",
        "cursor": {
          "ref": "dc331226-402b-4136-99bd-9ee4f9140480",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "97a84401-757b-46ff-b6fc-38431a0b524b"
        },
        "item": {
          "id": "0a27cd72-dd8a-42e3-8c62-d3aa308cebe4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2050ddf1-86db-4be4-a415-b12860ba3a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415edccc-4172-4cf6-94c0-c4f8bc984c3b",
        "cursor": {
          "ref": "df94c08d-d92e-4701-a9a7-2fbfb9c6442d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5c31cabf-7254-470c-92f9-bd37afafac85"
        },
        "item": {
          "id": "415edccc-4172-4cf6-94c0-c4f8bc984c3b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6e8cb227-a425-4091-8bd5-e91258b0a269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a4a3f2-5287-4524-a600-eb792da848cb",
        "cursor": {
          "ref": "86dd9b65-8919-4537-bd0f-ac4e82bb89fd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "83d0b13b-e0f3-4a0d-9bec-4859f2bd418c"
        },
        "item": {
          "id": "43a4a3f2-5287-4524-a600-eb792da848cb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9966215d-e7fc-47f0-ae97-b57b37bf6b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0171321a-e39f-4ad8-921e-fc9cba816984",
        "cursor": {
          "ref": "9d88b3bd-d9c0-41f9-b817-a398e9dd5609",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "324b054e-9ecb-4ee8-a6d8-e207b1ca2a7c"
        },
        "item": {
          "id": "0171321a-e39f-4ad8-921e-fc9cba816984",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "00b561bf-4d33-4b96-bf80-4ecfd7493186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd379fdc-4425-482a-bad9-63f3d1d1ff94",
        "cursor": {
          "ref": "77781642-ebdf-454e-a32c-19eaedb4d3a9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "431679f8-ff8f-4eab-b763-c7405b08a899"
        },
        "item": {
          "id": "bd379fdc-4425-482a-bad9-63f3d1d1ff94",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "00e7d899-0764-4e7b-9998-98ef662c1848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f049d949-5783-4e7e-9c09-ea2f66f44c78",
        "cursor": {
          "ref": "a522f178-0797-4d2f-9be1-a0b4215bad70",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e27f9f77-4a21-4135-92f7-7e879d8508f4"
        },
        "item": {
          "id": "f049d949-5783-4e7e-9c09-ea2f66f44c78",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "864cf4d9-7940-4cea-88a7-73017dc3bf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f365ed-90bf-4c2a-b89b-485a8119fc3d",
        "cursor": {
          "ref": "674b6585-eb86-4634-b963-224d46c6e29b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b85537fc-d867-4db1-8d45-f00a981c8a5e"
        },
        "item": {
          "id": "41f365ed-90bf-4c2a-b89b-485a8119fc3d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "aa52675d-4194-4913-be8b-c89307fa33d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e632fe8-f578-4142-ad98-e59bae3e73bf",
        "cursor": {
          "ref": "3e2ebd5f-4800-4224-bcc8-915163f47067",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "583c29ef-d00f-4f85-b1c7-ecf47e2ffb0b"
        },
        "item": {
          "id": "5e632fe8-f578-4142-ad98-e59bae3e73bf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e0535bdf-fb28-4bd7-9bff-0383c26e6eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df3d41f-3cc6-4a92-97c3-1e9965890a38",
        "cursor": {
          "ref": "c2de435a-edcd-4083-93e9-1911ebc7d902",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5d824906-b17e-428d-af4c-26e949e0567f"
        },
        "item": {
          "id": "5df3d41f-3cc6-4a92-97c3-1e9965890a38",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e3852952-7ef9-46b7-9972-b4c99361999f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9cea3b-bf90-44e9-8c85-c95f627cff14",
        "cursor": {
          "ref": "d94b937b-1be3-4aef-bab8-4b8ffa3cc04d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "379ac843-2891-4e0d-8e14-e737ffe1960b"
        },
        "item": {
          "id": "fe9cea3b-bf90-44e9-8c85-c95f627cff14",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b90b7c14-007d-4a64-8aa7-0f229f5d1ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165b19f5-a531-4fe6-99b4-962be7227052",
        "cursor": {
          "ref": "8a5a0009-3c92-4b20-a3b3-322c450e4103",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6fdcc37c-6f3e-45e4-b09d-cd78f34d0b79"
        },
        "item": {
          "id": "165b19f5-a531-4fe6-99b4-962be7227052",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "77e9c656-7bc4-4ff0-b9a9-32d29cf7077c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d79c8-00af-4e4b-9c80-b90cdc4de23d",
        "cursor": {
          "ref": "d5003c21-2fe2-483c-8d37-9241e412f509",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e3a4b9de-5e0a-4ecc-aa2e-5f0be8df107d"
        },
        "item": {
          "id": "933d79c8-00af-4e4b-9c80-b90cdc4de23d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d6200c24-562d-46fc-a0af-ac6049e65120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce815523-13de-4739-9149-583654d64048",
        "cursor": {
          "ref": "f599e2fe-cccc-4f6a-9d8b-d9b4be08f9be",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2cc0eb7b-00ed-4bcb-850d-984188920d51"
        },
        "item": {
          "id": "ce815523-13de-4739-9149-583654d64048",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e9cc9ace-0724-42af-9916-82c6c53ddfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ca6c1f-df69-42e3-a59c-d87539e6445d",
        "cursor": {
          "ref": "4215f8a5-ce5b-4bca-a8aa-aa6aa24d99ee",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2258d3e9-ab23-4d04-ab16-58708d70130f"
        },
        "item": {
          "id": "74ca6c1f-df69-42e3-a59c-d87539e6445d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "605db232-21de-4830-bd16-5a3fa59b17ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e44ead-f6ca-48c8-b02c-17d620937d55",
        "cursor": {
          "ref": "3017f291-4f1c-4cf4-87db-70837af5b924",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b7ba420d-406f-4d2a-83c0-21571f07e34c"
        },
        "item": {
          "id": "a8e44ead-f6ca-48c8-b02c-17d620937d55",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "65ebdc4c-292a-444f-b512-b98f8e469682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f827440-bbe9-43ea-95f0-72fea1a4b9ba",
        "cursor": {
          "ref": "b6f39c12-0a05-4acc-ae81-4006f3ece565",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "eefca51e-e322-436c-90cd-4d1b9eec109d"
        },
        "item": {
          "id": "1f827440-bbe9-43ea-95f0-72fea1a4b9ba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "93ba2f19-4525-48dd-8f31-120c17ab76e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58409b1-221f-4b9e-900d-3cebdd172f50",
        "cursor": {
          "ref": "c586edff-797c-4636-b160-562be9fc8fbf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6cc070d5-5645-4ed3-8624-05ef4b0a9776"
        },
        "item": {
          "id": "e58409b1-221f-4b9e-900d-3cebdd172f50",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "49f3d2c0-828e-4e7a-b9c6-5d84cd20a27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c782831-d86b-4f5f-9ada-9970d686d3e2",
        "cursor": {
          "ref": "edb2e984-259e-47fb-b982-cb9f898bb35d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "406aab52-88de-4744-b6fb-8446af6280b3"
        },
        "item": {
          "id": "2c782831-d86b-4f5f-9ada-9970d686d3e2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "da7cebb6-4e72-4e54-b447-912895db5bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e46efe7-fad0-48f1-92f4-156b1a427e69",
        "cursor": {
          "ref": "ab1b0c3d-f664-450e-8bd0-44f997551b20",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bb1b9605-6000-4520-bf9b-938246736617"
        },
        "item": {
          "id": "9e46efe7-fad0-48f1-92f4-156b1a427e69",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "233e77ca-15e6-41fa-b51d-299af4544989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8cd97e-2709-47ee-8a0a-69a9c4871685",
        "cursor": {
          "ref": "f3924f61-c04c-4ab4-8f85-c56c0927c246",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dbb47f9a-3e9c-4acb-abc0-e66444020ae4"
        },
        "item": {
          "id": "4d8cd97e-2709-47ee-8a0a-69a9c4871685",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a71c9fe7-c91f-4742-ae9f-146e68544035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9ecefc-2126-4ebf-8edf-58e21b97da8e",
        "cursor": {
          "ref": "ae7bd305-aca3-4836-8d20-801adfc8b901",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c26f5f1a-6ec1-4fbf-b97e-304f310498a4"
        },
        "item": {
          "id": "0f9ecefc-2126-4ebf-8edf-58e21b97da8e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "366e48af-51ec-4e43-8489-1086fdb81834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37892da7-1976-4a34-8c77-eb3ad6cc9326",
        "cursor": {
          "ref": "ef7ce600-82ca-42d4-a671-760297e96adc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f2dd6d30-4783-4d31-a86b-5b213d1c12ba"
        },
        "item": {
          "id": "37892da7-1976-4a34-8c77-eb3ad6cc9326",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5bd2f067-7486-4dca-97d1-6a158d073590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892c69da-dfa0-48dd-a721-979d21c43399",
        "cursor": {
          "ref": "fabb8411-c3aa-4c36-9a4b-2847bd6e8a40",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a443bc70-13dc-4abf-8f3e-903477fd0b9d"
        },
        "item": {
          "id": "892c69da-dfa0-48dd-a721-979d21c43399",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57f1758a-6dc3-4f03-8a61-e31de2796da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736bea95-fa8b-4a7f-8ee0-aaf13e569607",
        "cursor": {
          "ref": "8b452445-b020-4ace-af08-b5d066db5d6f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7fede8ca-ccfd-4741-a7ca-925575da0a09"
        },
        "item": {
          "id": "736bea95-fa8b-4a7f-8ee0-aaf13e569607",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4443e28d-8901-4a45-aa2b-75752e6090e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87052bf1-3b79-4495-b5db-80d669ea12a8",
        "cursor": {
          "ref": "16c261c2-96b3-43ef-8d64-0e374d9120d8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "afca2063-824d-4872-bff2-8187859d2648"
        },
        "item": {
          "id": "87052bf1-3b79-4495-b5db-80d669ea12a8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f2419084-0140-4bde-b73b-a8e0da50dace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96d31af-42e1-4b6f-a062-61574043489c",
        "cursor": {
          "ref": "5dbdfa9f-d5af-4458-a0ef-b5d73c96b502",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f1f89459-0529-4917-8905-0a63c444828a"
        },
        "item": {
          "id": "b96d31af-42e1-4b6f-a062-61574043489c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b2a26a32-4502-4c3b-8299-21f4d6cb5e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6514d1e-4d01-479f-87b2-82ca23a4961d",
        "cursor": {
          "ref": "b6a70d13-488a-45f9-8dd0-27756ab800f3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "991b2975-3a9f-4cff-8948-d94e7470a95a"
        },
        "item": {
          "id": "f6514d1e-4d01-479f-87b2-82ca23a4961d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ed8485a5-f9da-477c-a2ac-fee86058cf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d2a9fd-8aef-422d-b2b1-03057a56d252",
        "cursor": {
          "ref": "f8e230c8-ef1a-4d56-9762-9fb372cab7af",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0aadead9-33c5-4868-b7e9-5e3b9f3fd20c"
        },
        "item": {
          "id": "46d2a9fd-8aef-422d-b2b1-03057a56d252",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d9cae9b9-974e-499a-b315-43159ed3c413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc6fb24-86cd-4d90-aea8-4094b543aa23",
        "cursor": {
          "ref": "9d60962b-ad58-4ef9-9bb8-89df6ef377bb",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f883d593-d503-492f-9f0b-077725f7bfab"
        },
        "item": {
          "id": "ebc6fb24-86cd-4d90-aea8-4094b543aa23",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d4321d0e-8d7d-475e-90eb-8e71ff3a07c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b740939a-7065-40f8-a26b-52e81a60eba0",
        "cursor": {
          "ref": "0e2269e3-db96-4a9e-9220-7b1a0fc41535",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de35c520-d2bc-48b3-b062-e28997ad3f67"
        },
        "item": {
          "id": "b740939a-7065-40f8-a26b-52e81a60eba0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fb80e1c5-04f3-4f5f-b972-36ebdbdc5329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27da19f-3016-4afa-bad4-7d77053d9c5d",
        "cursor": {
          "ref": "dd9d16f9-e1b8-4c53-b189-4f2183fed8c5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c8eb6301-4d73-4b4d-8b52-2c6a87ea6147"
        },
        "item": {
          "id": "d27da19f-3016-4afa-bad4-7d77053d9c5d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6854dce5-9d84-43ec-9cea-568bc6cc7a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09fe413-5c54-4d38-9721-cac57373c3b4",
        "cursor": {
          "ref": "015cff11-4aae-4eac-bfa3-2bf7059b6a31",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fcf1fb60-bc7a-469f-b206-09ec381af329"
        },
        "item": {
          "id": "b09fe413-5c54-4d38-9721-cac57373c3b4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9f8ef677-d2c4-40ba-88d1-9e33a7e45317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f64568-9716-4c66-bb2c-75f54d5c87f0",
        "cursor": {
          "ref": "dc5ea9ae-3dca-4d28-a51e-99aefe4603cb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "14781204-4686-4cd5-81dd-6e5526809b70"
        },
        "item": {
          "id": "b7f64568-9716-4c66-bb2c-75f54d5c87f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3cce1b73-026d-4303-9cd7-d911422adc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60296f80-8497-43b4-ac4e-f3b370c2ffd1",
        "cursor": {
          "ref": "28e1271e-f431-480f-82c2-1b537f1dfed3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "44a11ec3-e220-42e3-95c1-4d7eaacdf005"
        },
        "item": {
          "id": "60296f80-8497-43b4-ac4e-f3b370c2ffd1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bffd79ff-b45f-4fed-9b18-ee8d851d4c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc7ddc1-a27f-4065-958d-90a0bfaaa9ee",
        "cursor": {
          "ref": "af17f2e5-6c8a-4acf-9cec-0be79f7ddcc2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "70969051-aebe-415e-a0f5-b7e3855cdc96"
        },
        "item": {
          "id": "2cc7ddc1-a27f-4065-958d-90a0bfaaa9ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f0954ecf-e280-4c6c-ae6c-fd2ece1dd671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236d1eed-6c45-40f3-98dc-e800d863107e",
        "cursor": {
          "ref": "877e53ed-a205-4426-a140-6b9ef957f5cd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d7ac5aba-9b5c-467d-a4e0-0a8f55b3e895"
        },
        "item": {
          "id": "236d1eed-6c45-40f3-98dc-e800d863107e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "65e69439-4374-4e04-963e-35946a2251fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdf1497-4a03-467e-8458-3d6c99923b48",
        "cursor": {
          "ref": "9462955d-1ab9-4955-8abd-bdb065f03a59",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1f5be181-889c-4d43-be93-921650ce0f65"
        },
        "item": {
          "id": "4cdf1497-4a03-467e-8458-3d6c99923b48",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8323e691-1e2a-4b5a-b86b-07e0cfb7a6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91043dde-1f1c-44c8-8e18-ce8e6a6327cc",
        "cursor": {
          "ref": "5d374afb-d95d-4ed8-b980-2af78a5da0ad",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cf54c406-1c3e-48bd-a2ef-10bf7ce3bae4"
        },
        "item": {
          "id": "91043dde-1f1c-44c8-8e18-ce8e6a6327cc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "506ba7b2-d54f-4da2-8740-ef05e53b9001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6fd7cf-8c4d-4b7c-9219-7042df3be229",
        "cursor": {
          "ref": "21ba202b-5b1c-4ace-b57a-792f65425656",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "536cf2fb-ec22-48ef-94a7-ea8fa653c9bf"
        },
        "item": {
          "id": "5d6fd7cf-8c4d-4b7c-9219-7042df3be229",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a23e1124-5c39-4404-aa7f-48a73fb268e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e153bd87-ca82-4163-85e4-001ca772c3fa",
        "cursor": {
          "ref": "dbb47696-4dc2-43e5-8633-3758f6a9d6da",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8f98f4c4-597e-4139-9b15-dab2ca44344a"
        },
        "item": {
          "id": "e153bd87-ca82-4163-85e4-001ca772c3fa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0699dacf-a26c-4b30-bb13-2ecb0e6829b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe65bc7f-7bf9-4898-b725-85dbef392bf0",
        "cursor": {
          "ref": "0ff172e2-6c86-4acf-bc3b-1b7e205747cd",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fbd4843e-1fc7-471b-a902-971be8b68989"
        },
        "item": {
          "id": "fe65bc7f-7bf9-4898-b725-85dbef392bf0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e0921722-c2f9-46dd-888e-70a8c306dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4795a1-568e-47c6-910a-776b18810973",
        "cursor": {
          "ref": "767b5251-aab6-4dfd-b1ca-a6067378f66d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d949012-c499-40f3-9f55-8df31daad046"
        },
        "item": {
          "id": "7e4795a1-568e-47c6-910a-776b18810973",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4e28f979-853c-4439-bd47-595b5ccfe757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0841676-e0a0-48ee-9ecb-a7ce4d630f69",
        "cursor": {
          "ref": "1e5b440c-7ca6-4443-8406-8c8eddd3a1b8",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d397ca62-b315-4162-97ff-ec1e89ade1de"
        },
        "item": {
          "id": "c0841676-e0a0-48ee-9ecb-a7ce4d630f69",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ac66c95d-dc1f-46cd-9070-bb4e5c38530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991fca63-1764-4666-9e17-aa18091bfc02",
        "cursor": {
          "ref": "98a667d5-ed79-4d6f-b468-4c79641dc280",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "38b1ac22-3dba-4129-9448-75c68a067e5b"
        },
        "item": {
          "id": "991fca63-1764-4666-9e17-aa18091bfc02",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "181885b3-c01d-4965-a171-84322f3128c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3260201d-aaf4-4d4c-a8f5-736be44b8acd",
        "cursor": {
          "ref": "0235ef56-92a5-4203-b031-742cc0430f68",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "965fd48a-7769-48ce-b04c-bebfa2e43de5"
        },
        "item": {
          "id": "3260201d-aaf4-4d4c-a8f5-736be44b8acd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "760281f3-2ca4-4a5d-8212-2a2e64ba9ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6c3033-9506-4b73-8d72-14ceaad6a131",
        "cursor": {
          "ref": "a7daf89b-59a6-4db3-ae5c-269777742565",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f1e88a12-c145-4f3c-990a-1453b93882c5"
        },
        "item": {
          "id": "2d6c3033-9506-4b73-8d72-14ceaad6a131",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6302d0b0-0619-436a-83fd-b506a2e2ac09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c9c52-b975-48ac-b188-865ee8ea7506",
        "cursor": {
          "ref": "b94b99e4-a3ae-44ae-b591-edecfcdc4d6c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "71bad7f1-ec0b-440f-b122-3daed8369b03"
        },
        "item": {
          "id": "0e3c9c52-b975-48ac-b188-865ee8ea7506",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0eeaae79-7496-4f38-8215-669cf650433a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39189ad8-00ab-4565-ba0a-86228241c734",
        "cursor": {
          "ref": "ccb58b11-f731-45b4-8108-d05dd1365fde",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9dde422a-2315-41f8-b43b-662c0d7d9be2"
        },
        "item": {
          "id": "39189ad8-00ab-4565-ba0a-86228241c734",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "51bfc563-f723-4a61-846a-11a51bec3d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf93e98-c37e-4614-8d4d-3f383a6621c9",
        "cursor": {
          "ref": "2380a998-bf63-4284-a17c-b09a69f2c2f0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dc8bb1e4-0d16-446d-af5e-d6085164a308"
        },
        "item": {
          "id": "6bf93e98-c37e-4614-8d4d-3f383a6621c9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7c50dea2-83a2-4cf2-bcfc-7304cf9070dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddba429-8e28-4414-b0ab-e21ad038b0c2",
        "cursor": {
          "ref": "5c9f297d-7307-4dfb-a72f-551e6a12690e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "791d72ec-1661-4908-96c5-68838ce43b29"
        },
        "item": {
          "id": "2ddba429-8e28-4414-b0ab-e21ad038b0c2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6fc5a634-c9c0-4785-9d2e-bdf04980753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42528b0b-5410-48b0-9ea1-77f1da25e4e7",
        "cursor": {
          "ref": "3093e268-afb2-4d47-85f2-2f6f7311f535",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0996d5d4-bca4-432a-af70-c7a24c977a1e"
        },
        "item": {
          "id": "42528b0b-5410-48b0-9ea1-77f1da25e4e7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1e397657-e039-4cfa-b36f-b80b22f06dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a9d69b-cc48-47e9-8a36-1c762a6d650c",
        "cursor": {
          "ref": "fd1e59e5-4555-4fb9-b1c0-00625a883380",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b1a6c272-fca1-4449-8b65-41b204f86cf8"
        },
        "item": {
          "id": "70a9d69b-cc48-47e9-8a36-1c762a6d650c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b0e3b38e-9711-42b7-bd3b-052cb4e270bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aeb30b-bf95-4ec3-a46d-9fae32fa8317",
        "cursor": {
          "ref": "5a92b8e6-4b22-4234-a6c8-35ba7fa22b3d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "19d43a5c-32fb-4f1c-83a2-7f212f0a44f6"
        },
        "item": {
          "id": "05aeb30b-bf95-4ec3-a46d-9fae32fa8317",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b327e25c-cc4b-48e6-83ce-2c8282f9d3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb138f1-6d3f-4d53-bc82-b529fe386a1e",
        "cursor": {
          "ref": "d0889982-978d-4a3d-ad38-03599aede746",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e254074c-e7ae-41d7-b8f1-f1bc70befa2c"
        },
        "item": {
          "id": "1fb138f1-6d3f-4d53-bc82-b529fe386a1e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3f49d2dc-572d-4f70-a45f-b711430ca411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4722fe-ebc1-4808-9ece-ecf15cacd155",
        "cursor": {
          "ref": "6650fa5f-c1d6-4021-b416-c512aedcf206",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bdfa1b63-ec40-4c8f-85de-652b93b349d9"
        },
        "item": {
          "id": "ba4722fe-ebc1-4808-9ece-ecf15cacd155",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3c06e855-5e52-43e7-a976-736138546377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427b0d00-f8a8-4868-9321-0ef77938f766",
        "cursor": {
          "ref": "d2d2ea5a-cd67-45d5-b2dd-679d96415c63",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea7cd4f7-aad2-4697-9928-bc4c7bc35c5f"
        },
        "item": {
          "id": "427b0d00-f8a8-4868-9321-0ef77938f766",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2b1f2014-ef62-4c03-b3fe-2ca32a3bc0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ff3f8c-d893-4634-84c2-af5d8288c76b",
        "cursor": {
          "ref": "a1d04600-0330-438b-9e65-5474cb2dfd3e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1b668241-d45e-4fc4-b13c-0666dbc9f918"
        },
        "item": {
          "id": "e5ff3f8c-d893-4634-84c2-af5d8288c76b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "df1cc23c-8395-4865-97be-1255271cd2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947b9251-7e73-486b-b5b5-10a20d6eca96",
        "cursor": {
          "ref": "f3b436f8-3a87-4ef7-9b42-5a4c677c6af1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5119d888-6332-4b07-83b7-5bd05a22b7e0"
        },
        "item": {
          "id": "947b9251-7e73-486b-b5b5-10a20d6eca96",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dde6c001-9d03-4eb1-a26e-cc2f8593240b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961f15dd-2cc7-4f6c-acec-aad88ecf66ce",
        "cursor": {
          "ref": "6292bd92-83f5-4a93-a90c-18e934296220",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "47acd54a-9a9b-4404-b2a2-4905006355fb"
        },
        "item": {
          "id": "961f15dd-2cc7-4f6c-acec-aad88ecf66ce",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1b04820e-039e-4d06-a15f-4ff9d4aa6243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d90c02-a9a6-4a1e-bf85-32f2509f1972",
        "cursor": {
          "ref": "43d6e344-45c1-48c9-aa80-37a153f373a7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "597318fa-1582-49ef-bd96-0c79586b145c"
        },
        "item": {
          "id": "e6d90c02-a9a6-4a1e-bf85-32f2509f1972",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "647d35f7-cbab-4bba-85a0-4785bc8f9126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ee03ee-bc87-495a-9b1e-d55bf54a06eb",
        "cursor": {
          "ref": "8c9b0a2c-66d0-4ef2-889d-19ba73e1d4b1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b81bb79d-0c12-4893-b91a-93c174de93a5"
        },
        "item": {
          "id": "f6ee03ee-bc87-495a-9b1e-d55bf54a06eb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c73feaf9-8666-42c7-ab0e-0f3dbb5dc8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b98e39-e37a-432e-820e-ef104b914706",
        "cursor": {
          "ref": "236e1974-d05e-40bc-959f-7f224d4df741",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "49ff9b83-b13b-4956-bd04-a31c0a5054e2"
        },
        "item": {
          "id": "36b98e39-e37a-432e-820e-ef104b914706",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "13722b3c-21ff-4eaf-b79a-b23074ddb7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9870a5d-e498-466d-bf1a-04f30aed2a92",
        "cursor": {
          "ref": "18db7b72-c1b5-4f23-abff-fc830ad66f7b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "89b1846b-4244-4a01-a11f-9e8c07949d9c"
        },
        "item": {
          "id": "e9870a5d-e498-466d-bf1a-04f30aed2a92",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4edb205b-5654-4467-8659-134f1492fe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aa7c3e-8bf0-415c-8559-48dd47a6c2fe",
        "cursor": {
          "ref": "334f1dc1-c9b5-48fc-a3ed-70805d639ae2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cc2000a6-a9db-4364-b3e0-3124e9736ab4"
        },
        "item": {
          "id": "99aa7c3e-8bf0-415c-8559-48dd47a6c2fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "42ece972-4eaa-47dd-9012-c069db8f9b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4831d8-cac7-4c2d-8eff-76459283055e",
        "cursor": {
          "ref": "3ff053cc-d160-4afd-9243-73671a94cf34",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bed737a7-7481-490c-a194-ae8bdb91b28d"
        },
        "item": {
          "id": "2f4831d8-cac7-4c2d-8eff-76459283055e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5518ecf6-38b9-4da8-b217-89d42baf48bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab242846-c206-4639-bb5c-fde86f57b35b",
        "cursor": {
          "ref": "6498fb54-d65f-48be-be21-8c5d7a2ed492",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "47d7427d-d6f0-4879-987c-5120a76dcb30"
        },
        "item": {
          "id": "ab242846-c206-4639-bb5c-fde86f57b35b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "16613ff2-f9f3-4bc4-8c05-5293c3c3e858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c13d4a-1998-4bee-b09d-9a6b4375b151",
        "cursor": {
          "ref": "79655041-5bed-4f17-9d3b-2d4243052d74",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "319884c5-1ce0-4f31-b692-6916eb2bec7a"
        },
        "item": {
          "id": "86c13d4a-1998-4bee-b09d-9a6b4375b151",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9f20b979-9f55-4e94-ac8e-266cbf44e3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c01985-3b7e-452f-a312-5a0bb01e6591",
        "cursor": {
          "ref": "678291e8-1234-458c-a2d3-7507a543968c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "56f39fae-3c7b-4cf2-84b4-ab1985fa4d03"
        },
        "item": {
          "id": "16c01985-3b7e-452f-a312-5a0bb01e6591",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "770c3190-e2fb-4513-ac70-6b543f89d584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9272f8-35b9-4394-bfef-632171649850",
        "cursor": {
          "ref": "0af2547f-fd45-440c-86a4-b7e4c282bfb5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3bab381f-add1-4958-a78d-420097406590"
        },
        "item": {
          "id": "7f9272f8-35b9-4394-bfef-632171649850",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fd80ca7f-b031-4413-a6f4-72692321436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57203663-b54b-4fba-bd74-87eb934ef2a0",
        "cursor": {
          "ref": "9a31a7b6-a69c-45bf-9b26-4a4db33e57ea",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c04b3d81-a320-4e6e-b2f1-492ac20b6d42"
        },
        "item": {
          "id": "57203663-b54b-4fba-bd74-87eb934ef2a0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a14d43ac-2450-4fb6-8c10-7184785cc706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bcf1e5-673b-4f10-b743-db7b38a59712",
        "cursor": {
          "ref": "93e4a2fe-07ea-4a35-932b-362fd9436033",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6316c0ce-15cc-489c-9607-48feac11ee6c"
        },
        "item": {
          "id": "e2bcf1e5-673b-4f10-b743-db7b38a59712",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db694fa2-c3d5-41e6-8518-58facea2b6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db83afee-9060-4b4b-a1fd-1fa662c7e113",
        "cursor": {
          "ref": "9c9b79b5-5ce6-4141-9903-b9e591004463",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "11f9b2fa-1d41-42f0-ae44-bae2e8a48f37"
        },
        "item": {
          "id": "db83afee-9060-4b4b-a1fd-1fa662c7e113",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a88a5761-c6ee-4394-a662-7a930524442d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8f2c46-f6fc-4b23-8be6-d9be5d1cf38a",
        "cursor": {
          "ref": "7f8804b6-7cbe-439b-9724-4ae4149f0516",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "27e1eea6-a339-4532-a88d-22414f034748"
        },
        "item": {
          "id": "9d8f2c46-f6fc-4b23-8be6-d9be5d1cf38a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6dc270a6-96ef-41ef-bb8c-344f4ed14c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c825b58a-a179-496f-ba60-ba60b12a9c8f",
        "cursor": {
          "ref": "31559a90-1938-4f60-9121-ae469e152cd3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3b4dc95d-a0f7-47c1-8def-e2d006d921e2"
        },
        "item": {
          "id": "c825b58a-a179-496f-ba60-ba60b12a9c8f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "76b6a7b1-e71d-425e-b2a3-f89e9b608f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577f90d0-3c0d-4d5b-bf19-075520c60c72",
        "cursor": {
          "ref": "737f8abe-e141-499a-9e0a-c3c82c2c06af",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "290c4811-5bd8-4824-bc44-edc586ee1fa8"
        },
        "item": {
          "id": "577f90d0-3c0d-4d5b-bf19-075520c60c72",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "25586fca-4cf5-46cb-a5a8-3b62016cc55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9e43a0-f976-42fa-8b30-c22286583257",
        "cursor": {
          "ref": "d37f2e44-def7-4f18-bf32-296fe072e108",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "101d51f8-f010-4840-b545-9bbbf4dbe9fc"
        },
        "item": {
          "id": "aa9e43a0-f976-42fa-8b30-c22286583257",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fbe47ed0-27df-42aa-b635-92d4a2499144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c21148-2c8b-4e07-8494-758c39e9df14",
        "cursor": {
          "ref": "c7a40d4d-4c1c-468a-aa03-e75c882c957e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "62611ab4-a659-4d8f-8090-688c678f251d"
        },
        "item": {
          "id": "16c21148-2c8b-4e07-8494-758c39e9df14",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a26d524e-091e-4af6-b138-3390885024ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827eda20-03ce-458e-a856-3763e08e2d2c",
        "cursor": {
          "ref": "0ebccbbe-5d15-48e0-8c1e-9ebb5aa5cd18",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e42e6da-aae7-4620-a478-b023e834ad17"
        },
        "item": {
          "id": "827eda20-03ce-458e-a856-3763e08e2d2c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "66dcc0a1-eec0-4ba6-a409-cfb944c5902a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ec5675-a55d-4a3e-a4a9-5e7cc1e5b670",
        "cursor": {
          "ref": "949253af-312f-49ee-96bc-8667e1356bf6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "11e9bf27-06fb-4ee1-a245-fb2303f4af1f"
        },
        "item": {
          "id": "85ec5675-a55d-4a3e-a4a9-5e7cc1e5b670",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5adab66f-e7ac-45ca-a4fd-68505d51aca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41b4f4c-3808-47c6-b560-a0d92006b066",
        "cursor": {
          "ref": "a4499017-1d2f-4500-b6ec-d0e92f08dd00",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5021be44-ff43-40b3-b216-48bb14ff9017"
        },
        "item": {
          "id": "d41b4f4c-3808-47c6-b560-a0d92006b066",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fdd15aed-c91f-4365-ae08-2650c1373980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f302860-6945-4ed8-b4ae-aed9f5d73978",
        "cursor": {
          "ref": "ce2b1f55-cd42-4d31-b074-6547edf5c6a7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "64c7ba4a-e6f8-4ab2-83e4-6ad2f1d35db9"
        },
        "item": {
          "id": "6f302860-6945-4ed8-b4ae-aed9f5d73978",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "75e68d91-1985-4c5c-abb0-6c5eae5cfe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3ded43-83d9-40cf-84c7-d0ab6edda15a",
        "cursor": {
          "ref": "0c0cdafc-a5df-4c5e-8470-798ea7500c10",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "847185b0-69f8-43bf-ad77-97c468889261"
        },
        "item": {
          "id": "1c3ded43-83d9-40cf-84c7-d0ab6edda15a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2ad4e56c-a091-480b-8a82-789b02f5da55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbba4136-df89-4de4-9e8d-1198df200fda",
        "cursor": {
          "ref": "e9e3c3ee-519e-4f63-8fdb-505b28efa03c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2992672b-3185-426d-82e1-0012ca54a360"
        },
        "item": {
          "id": "bbba4136-df89-4de4-9e8d-1198df200fda",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7c0fd535-d25d-4ac9-8656-ebffefa866bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7a03e5-a49f-43b2-9c08-999c1ae618bc",
        "cursor": {
          "ref": "9c7a49f3-5a55-4294-908b-59b97c9afcb9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a1ad5380-a121-4881-9219-9448366aacc1"
        },
        "item": {
          "id": "8a7a03e5-a49f-43b2-9c08-999c1ae618bc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6d6bf7f6-4740-445e-9689-d6cb6a5a7bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa9cdc-8665-455b-946c-a4e4f733c5fa",
        "cursor": {
          "ref": "a46f3a43-fcd4-4750-a4a6-d4dc22eb32e0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f1290435-940c-430a-9ab9-1adb3e36b7df"
        },
        "item": {
          "id": "2eaa9cdc-8665-455b-946c-a4e4f733c5fa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4df6a035-ca85-46ae-bcaf-1c28fc483aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67c8c83-f1df-481c-a830-a577a130290b",
        "cursor": {
          "ref": "04de3452-e4e1-4712-b4f3-96b83595c177",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8d2b401b-9d74-4d27-acc0-162195168b1c"
        },
        "item": {
          "id": "f67c8c83-f1df-481c-a830-a577a130290b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d59d16a0-b4cf-4791-944f-117cbb692a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f92ae0-d179-4ca8-9347-beb84fcc87cc",
        "cursor": {
          "ref": "e1774204-a061-4450-9a7a-0ef972493ef0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3531d90f-a8bd-4045-89e0-a80447bf0ae3"
        },
        "item": {
          "id": "12f92ae0-d179-4ca8-9347-beb84fcc87cc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "21f2f14a-2165-4dfb-8e1b-1f3dd299accb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27177a4-6935-4f29-9e92-d8c3168fb7ab",
        "cursor": {
          "ref": "94b34c1b-5a17-4e7d-8b84-19ad5fc57d34",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2a61d34-c9a3-48d9-97d0-4c69f2c69427"
        },
        "item": {
          "id": "d27177a4-6935-4f29-9e92-d8c3168fb7ab",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bce957c3-45d6-49b7-937e-24c12e404509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5e8e9087-3c9a-4e77-9c19-577b80366d86",
        "cursor": {
          "ref": "812746c8-41cc-4e25-b64c-5bac98bfc18e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7c524357-f469-441d-b98e-a3e90ea9827f"
        },
        "item": {
          "id": "5e8e9087-3c9a-4e77-9c19-577b80366d86",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dfc75d4d-50c0-416f-aa53-db15939ba720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f6426751-d8bf-412f-a855-412710c9d3e0",
        "cursor": {
          "ref": "b81283a9-df2c-43fc-8e15-30af0e932bef",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ad31ad06-3b58-43d5-95f5-0a94ee85bee0"
        },
        "item": {
          "id": "f6426751-d8bf-412f-a855-412710c9d3e0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2a7c5f72-f0ff-4007-bd7e-f5539c1d6ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e01e2548-0bf1-45fa-987e-dc7788dae058",
        "cursor": {
          "ref": "29b800da-bd12-4602-bdb8-a46e9bd15945",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8366c5ee-5cf1-4c13-b50b-0152b363661f"
        },
        "item": {
          "id": "e01e2548-0bf1-45fa-987e-dc7788dae058",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c7dd4f82-c338-48f0-8a70-b4028c955cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bc3a31e1-a4e7-4e1b-afbe-7576ec7dce3c",
        "cursor": {
          "ref": "10054152-57be-406f-aff0-736b605f9da3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f355f96e-9d8d-48a6-a61e-61ec880fdd78"
        },
        "item": {
          "id": "bc3a31e1-a4e7-4e1b-afbe-7576ec7dce3c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dfb54731-b20b-423d-bb92-9dbf871de602",
          "status": "Created",
          "code": 201,
          "responseTime": 7034,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cda6e5-79a6-4fc7-a0f2-ef0662beaf1e",
        "cursor": {
          "ref": "4f98acba-8278-4299-a559-c6864b17bcdf",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "39bd84fe-c53c-4573-8a56-7482e9d4c45d"
        },
        "item": {
          "id": "19cda6e5-79a6-4fc7-a0f2-ef0662beaf1e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6dc0a55c-098d-4d07-9d5a-29399ddefc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fdf1878c-f06d-4bf1-a54b-4a84a7ed21b6",
        "cursor": {
          "ref": "8cdcc64a-36f0-4e24-a423-bcac47e4e2ec",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a472dc4f-23ad-4f04-ac43-2111a3c309e4"
        },
        "item": {
          "id": "fdf1878c-f06d-4bf1-a54b-4a84a7ed21b6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "33026ee4-338e-4e93-bc94-bb49b9bcd4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7a9f3a84-3cfd-4a31-bffe-a5d87f60889c",
        "cursor": {
          "ref": "9ba09ef8-53fc-4edc-b0ac-a721eb67d48e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8110690a-4904-4968-8c88-87d51ba4b902"
        },
        "item": {
          "id": "7a9f3a84-3cfd-4a31-bffe-a5d87f60889c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7981859-d053-4519-8254-6f40300a2f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18522c81-d360-4be8-b73e-84d6f206bc25",
        "cursor": {
          "ref": "2203d268-765e-435a-94a8-2f7b87a0e7ff",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "93cbad83-7a95-4445-a61e-b1ee0e1a2184"
        },
        "item": {
          "id": "18522c81-d360-4be8-b73e-84d6f206bc25",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c26c70e5-0220-459a-8629-41a88cdea7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f428fd-3001-47b6-909f-54edaf5c7a56",
        "cursor": {
          "ref": "39586ed9-aa47-47c0-8866-ce752a5ac0f3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "51f8cb8a-4574-4bcb-a2d1-1ff38179b893"
        },
        "item": {
          "id": "04f428fd-3001-47b6-909f-54edaf5c7a56",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb1e06ac-1a33-4b04-b2ce-bc1f9a2d3120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3eeba5-31a0-4ac0-bcf6-39ce4725b28b",
        "cursor": {
          "ref": "5ad0174e-f289-4e5c-93d5-6e435f35d79c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "be939241-e09a-4b00-89a3-5593f679ea5f"
        },
        "item": {
          "id": "6a3eeba5-31a0-4ac0-bcf6-39ce4725b28b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "344b3357-3829-4ca9-b85e-2f2b92ccb711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58500cd2-102d-432c-bae0-4308aa477959",
        "cursor": {
          "ref": "ea2fb8bf-9f3e-4c86-a9ba-1854f3bf2a88",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6d5b6a18-95e2-4c46-abd0-66f45d2bdf7f"
        },
        "item": {
          "id": "58500cd2-102d-432c-bae0-4308aa477959",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "55755253-4f19-4755-b7ca-122e7e54533c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3adb71-b622-4cb9-af4d-bff8b35db48b",
        "cursor": {
          "ref": "7de84199-4758-4abf-ae6a-1c916557959b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "63b40d7e-5c5f-4c25-8ae1-c6c19873e5ee"
        },
        "item": {
          "id": "df3adb71-b622-4cb9-af4d-bff8b35db48b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e3fe3b7d-a72e-486d-86bf-7038a2d0f5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34759d4-e69d-4083-b3d0-d846aa5ff235",
        "cursor": {
          "ref": "09c2bbc4-8b5c-4bad-8f79-7f6c52c6b411",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3e74920e-6211-4211-8a4b-e08b033221bf"
        },
        "item": {
          "id": "a34759d4-e69d-4083-b3d0-d846aa5ff235",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff763193-0045-4380-a7ae-5958a6bee464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d6b71-9a69-4b2a-b828-50b526e636fe",
        "cursor": {
          "ref": "dfe501fd-b30d-464a-aeb2-d5463d77e4a5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2c3cceb4-6d8c-47f8-bf2a-a347daa3c45d"
        },
        "item": {
          "id": "2a1d6b71-9a69-4b2a-b828-50b526e636fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "63213329-5148-438f-917f-041f4ca01571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5632c3-fffb-4720-b646-433f24fb701d",
        "cursor": {
          "ref": "7b1fec6a-cc3f-474a-a4af-ad5479b104e5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "13e5d6d1-e2a9-4ccb-9129-2db36fdea647"
        },
        "item": {
          "id": "7c5632c3-fffb-4720-b646-433f24fb701d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21024802-37b1-437c-b546-4385f94ecb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0505153-80e0-4dc4-8b5b-2635777de85f",
        "cursor": {
          "ref": "15fb6a37-ae6c-4e73-a61f-26a627bb5bb4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ef6d3c15-e8d4-4b1c-8d09-ae80a78bd9b1"
        },
        "item": {
          "id": "a0505153-80e0-4dc4-8b5b-2635777de85f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f659741-102c-4165-9099-a229aa416028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d421fd1-6f11-422e-ac92-3e053a40d48c",
        "cursor": {
          "ref": "f06df5c8-bc9e-41b4-bb5e-888f196f4417",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bcb080be-e2c2-4c30-9ef0-de0dadf2ac49"
        },
        "item": {
          "id": "8d421fd1-6f11-422e-ac92-3e053a40d48c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c4c7f9ca-a4fc-4453-9371-f5edbe676bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8f624f-43ea-4cf2-8bcb-cbe9231dfb31",
        "cursor": {
          "ref": "388293e4-71ed-4a48-864f-f3c8cc7da750",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c74c718e-0518-4e99-b740-04040f186e6e"
        },
        "item": {
          "id": "8f8f624f-43ea-4cf2-8bcb-cbe9231dfb31",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "62df780b-845f-4f97-a5d6-fe71ac09d7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44ec143-6829-4f4f-ac14-7864c237842f",
        "cursor": {
          "ref": "8d66520b-c74e-473b-9b4a-9c65667f89d1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b09bb1d7-7f7c-46b2-bfc6-2014bef16e8b"
        },
        "item": {
          "id": "c44ec143-6829-4f4f-ac14-7864c237842f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a059cc5-6f77-47ec-99ed-4c3a14826f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e1edaa-fc6b-4a41-974b-5dce2604e75c",
        "cursor": {
          "ref": "49cc82e4-b1ea-4c19-ae17-9c1631e8db08",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "355b1a6a-17df-4127-b2e7-07c5581e7f81"
        },
        "item": {
          "id": "83e1edaa-fc6b-4a41-974b-5dce2604e75c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6e96288-8cd0-444c-aa78-2f486b0dc099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab833f6-874d-4cfa-9e04-722eb99c14c8",
        "cursor": {
          "ref": "41bff183-f65c-4147-bc67-7dbd8e3194fa",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "48616b8f-a63e-44b1-a6fc-676726c5a63f"
        },
        "item": {
          "id": "0ab833f6-874d-4cfa-9e04-722eb99c14c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d1b6519b-81f3-495b-8296-32cab919cf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1781,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b07e62-8cb7-4fa7-9b71-dffc90229a18",
        "cursor": {
          "ref": "9c89f7b4-75d8-4ee0-8bb3-ee4301373337",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "61d976dd-bcf8-4e66-a0e4-53624a7de945"
        },
        "item": {
          "id": "f8b07e62-8cb7-4fa7-9b71-dffc90229a18",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "75c198b2-aa6b-415c-924e-74e37592b081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7b0b2b-a2fe-4f0e-a535-737e4c7728a6",
        "cursor": {
          "ref": "71750e32-0ff6-473b-84f9-2d3aefa097db",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ec1a9361-8b9b-429f-887f-a471d6bb8170"
        },
        "item": {
          "id": "9a7b0b2b-a2fe-4f0e-a535-737e4c7728a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "12fb6f5f-31bb-43cb-a6f4-daaca2cb55c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 128,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "48cba535-5e4e-4da7-970e-aeaac948397d",
        "cursor": {
          "ref": "fbdf1b8a-91e4-444a-8101-1b1790f603a6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "27dfa222-cfc5-4700-a596-3a8175a528ac"
        },
        "item": {
          "id": "48cba535-5e4e-4da7-970e-aeaac948397d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "455cc9ac-a111-4d31-a108-179cc01c295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dad71d4-fed5-4439-8761-1cf1e3597f83",
        "cursor": {
          "ref": "e13ec690-2abb-4ce1-ac16-9af3bfcebfca",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "66c7217f-a4ee-46b6-afcc-baf0a9bf6de3"
        },
        "item": {
          "id": "0dad71d4-fed5-4439-8761-1cf1e3597f83",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "32121fec-f6ad-4b2d-bb14-c54e4b8320f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7300012-2604-4bc9-ab1a-f219352330a4",
        "cursor": {
          "ref": "9ac527d2-ddf7-449a-88af-9662092c9d1f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "195569a1-62a7-4247-92c7-dd7acf6f7d1c"
        },
        "item": {
          "id": "c7300012-2604-4bc9-ab1a-f219352330a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d87b899d-504d-4a52-a4c0-24eed0cba025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010f44cb-631c-4c08-9187-b9bb61a01e00",
        "cursor": {
          "ref": "7babe59d-8896-453f-8e89-38130e056937",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4c82518b-5dae-49ca-a210-75fee4afd9c7"
        },
        "item": {
          "id": "010f44cb-631c-4c08-9187-b9bb61a01e00",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a6f9f7fb-159c-4a47-84d6-dbecafc59457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3a7118-85e0-44a4-ad62-977405f85826",
        "cursor": {
          "ref": "0f4e004e-8464-4b41-aa8d-d6f7c3c175f9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "34aa4cd3-72bd-45d6-9b58-c302dd94d1bb"
        },
        "item": {
          "id": "1e3a7118-85e0-44a4-ad62-977405f85826",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0381543-c960-4d56-b576-06590cfc0487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341694ca-9362-4d03-a41c-9333f1f1bde2",
        "cursor": {
          "ref": "03e3ff8d-c46a-4be8-a610-6ba211e6ac1c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c300ee68-f8db-4109-b5d7-b08be70c07db"
        },
        "item": {
          "id": "341694ca-9362-4d03-a41c-9333f1f1bde2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8ed16707-2e27-49ce-a5cd-fe04622a3d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93728b45-59ce-433b-8d4e-0743d8ffc316",
        "cursor": {
          "ref": "612fd76a-a3b9-49a6-a487-cebcc7a1fe81",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0d1e5a70-e6d9-4eb1-9d54-e3898ed9cfa1"
        },
        "item": {
          "id": "93728b45-59ce-433b-8d4e-0743d8ffc316",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f560272c-a2a0-4a72-8f19-62b18ae97c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205c3301-9247-4ee0-9f59-35476ff25df5",
        "cursor": {
          "ref": "66e156e8-3bbc-4a5a-a203-3a3d4ad05605",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "daddab4e-be4c-4396-9303-9f76a91dd642"
        },
        "item": {
          "id": "205c3301-9247-4ee0-9f59-35476ff25df5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "acdd3d1a-7f06-49b7-901b-e41f416714b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "48c31557-1d9d-4996-933f-7128d17ced8d",
        "cursor": {
          "ref": "b78ec4b9-d93f-405a-acd9-ece7b4ed451b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6393fabb-7370-4fe6-99e8-c4c759b18ec3"
        },
        "item": {
          "id": "48c31557-1d9d-4996-933f-7128d17ced8d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd79c270-9a2e-4e68-aafa-6f8667e3fd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13175d20-dfc3-484d-9fcc-d0d62a7065c4",
        "cursor": {
          "ref": "835df3c8-053c-4629-a31c-f6e7afe77078",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "23ae590f-e35b-4f01-9e47-9c29f4128449"
        },
        "item": {
          "id": "13175d20-dfc3-484d-9fcc-d0d62a7065c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d0192812-cc8c-4f39-b338-845c3a59f8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c085eb-bc16-439d-aa55-c7dcf81c39e4",
        "cursor": {
          "ref": "50c806ce-7086-4a80-b55a-2291dd417a24",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c02597ba-f6ff-46d8-8f1a-177ade43266f"
        },
        "item": {
          "id": "f0c085eb-bc16-439d-aa55-c7dcf81c39e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72eab3ba-1fff-4e5a-9738-a31f3d4fb246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06157214-3221-45b5-a7e1-dcb6ba3a586a",
        "cursor": {
          "ref": "f3252426-85d7-4347-a195-eb85b3b4893c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "536df4a6-1dad-4066-9b4c-37f33adb3d76"
        },
        "item": {
          "id": "06157214-3221-45b5-a7e1-dcb6ba3a586a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9c57e1f8-c796-4dc7-92a3-3df95dbb3fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca13814-5bea-44db-a037-6bc40e59125c",
        "cursor": {
          "ref": "cdce042b-ef42-4d8b-8832-ac9088571d2d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "182fcc12-35e6-4fef-90b3-ade2156d9b4f"
        },
        "item": {
          "id": "2ca13814-5bea-44db-a037-6bc40e59125c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0c299ee5-92db-4200-b1f7-3b6d00a84957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e21723-dc83-45a7-98ad-89dfa268e6a8",
        "cursor": {
          "ref": "b92eadcf-7d5e-4c46-abc5-887ced26714c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "02675bc7-8af3-4c05-ae46-de1fb7de912c"
        },
        "item": {
          "id": "a8e21723-dc83-45a7-98ad-89dfa268e6a8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "60a31c24-7c56-4d24-ab22-e1dd1c7ddce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083c2578-efd2-4d4e-853e-d1109e2b6217",
        "cursor": {
          "ref": "ff6f7dcd-3ac6-4dc2-9cba-24d8eacbf25a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "980ca2ac-45bf-4377-9b06-5e1251070b3a"
        },
        "item": {
          "id": "083c2578-efd2-4d4e-853e-d1109e2b6217",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7fe5df31-2329-4600-abad-928126e5fbfa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9c8b4c85-5ad4-4e01-875b-5f64d898446a",
        "cursor": {
          "ref": "66131fd6-95fe-4d48-99e7-4f7008892032",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a6487845-33fd-4e03-964b-b84ec6ffeb86"
        },
        "item": {
          "id": "9c8b4c85-5ad4-4e01-875b-5f64d898446a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "289b7808-6ab3-4e77-84f3-a3e13ece0081",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "af530f4e-6113-4c97-9b4e-cf045a0d68cc",
        "cursor": {
          "ref": "74ecf98f-d0cc-4109-b2dc-25fae0874737",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0584c07a-fcf3-4de4-b62f-b81704e0b60d"
        },
        "item": {
          "id": "af530f4e-6113-4c97-9b4e-cf045a0d68cc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4fb1eb8f-8510-40b3-bb24-dc4dd942122a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "9a4f19fc-1431-4a5a-96d1-e4848997a736",
        "cursor": {
          "ref": "61923ee8-8178-432b-85ca-27d374ee7fa5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bba548be-0b6f-473a-95b0-81cfd295630d"
        },
        "item": {
          "id": "9a4f19fc-1431-4a5a-96d1-e4848997a736",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cbec5481-700f-443e-bd44-26521513cc08",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "9c724ca9-2b60-4c89-bf97-52f528a8e84c",
        "cursor": {
          "ref": "5649d531-171e-462f-b73c-98c98d078507",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6bd9d6a7-4500-4e3c-acce-5aa0db35bffa"
        },
        "item": {
          "id": "9c724ca9-2b60-4c89-bf97-52f528a8e84c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e4cba541-be10-41c9-b363-4effae0fbf86",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "997fe3be-ab51-4d52-bdd8-8617431c6217",
        "cursor": {
          "ref": "105587c0-8abc-4117-bd1a-cce6cb49deeb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7add0958-3ee4-4ae5-a969-6e02052c5e0e"
        },
        "item": {
          "id": "997fe3be-ab51-4d52-bdd8-8617431c6217",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "27388174-903e-4607-b92f-814f4375c49f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "af2901e1-1945-413b-a05d-05500f730ce6",
        "cursor": {
          "ref": "b6d72f1e-869f-4612-846f-d36b54f4c429",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c4c118d2-cfa4-47d6-8972-f0a20c2e7450"
        },
        "item": {
          "id": "af2901e1-1945-413b-a05d-05500f730ce6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "12c63dee-ca86-4a6e-b352-dce2651ad54e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8523b0a-5c66-44a5-8053-d7abe4dab11e",
        "cursor": {
          "ref": "a8f46b75-2535-4fab-95f5-ed194e49bb8d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f4132a9d-dcf8-4b83-9298-093b996c9e88"
        },
        "item": {
          "id": "c8523b0a-5c66-44a5-8053-d7abe4dab11e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aad5fd87-f031-4c5a-999a-66003151992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e394326-1e0d-4fe5-b94d-b760035f0b7c",
        "cursor": {
          "ref": "bd490623-76c4-43d5-a526-0d4cf7198f8c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2b14d9e3-0d2c-4087-adf1-778343e3fae6"
        },
        "item": {
          "id": "2e394326-1e0d-4fe5-b94d-b760035f0b7c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "47503a91-9fc0-4e42-92e4-60df66a12c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb01305-e89b-4e0d-a314-03a6fa571ca9",
        "cursor": {
          "ref": "ebde36a1-3947-4b50-977e-ad30661aa84d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1bf8d6c9-075c-40ef-9d65-50b744d2e466"
        },
        "item": {
          "id": "5cb01305-e89b-4e0d-a314-03a6fa571ca9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ff3fe2c1-430a-4180-8a1d-78d59197e359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8d5750-2ae4-406b-9473-171268664eb2",
        "cursor": {
          "ref": "521fb66b-42eb-4f56-b45a-60e30ab70168",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7febbfe5-7cdc-4f5b-abe0-fe3f6a40756a"
        },
        "item": {
          "id": "4b8d5750-2ae4-406b-9473-171268664eb2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b6c6f784-4dcf-4321-a4b3-bdc33bc570c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b57f4d-f9dc-4c52-98f0-4635e709db9c",
        "cursor": {
          "ref": "dcfe59cd-3af0-4874-bd1a-ff25e9dc3b30",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f3cf6d61-8e01-4d0f-b0f7-ae189246ac41"
        },
        "item": {
          "id": "35b57f4d-f9dc-4c52-98f0-4635e709db9c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8d18c68c-4b67-49f2-8e8f-1a12258f6266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d72165b-3748-46d8-87f0-a59fc8c7e736",
        "cursor": {
          "ref": "3620008e-967c-40cf-b938-b13ae60b20f9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "82fe9064-da39-4a8d-add2-0c76b84a32c1"
        },
        "item": {
          "id": "6d72165b-3748-46d8-87f0-a59fc8c7e736",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "78a8e011-53cf-42c4-8b54-f9494a1cd06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5615844d-174d-4358-9009-54679649d101",
        "cursor": {
          "ref": "68776dbf-4c40-4879-9deb-0618867c84db",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "92403aa6-a097-4c17-aa57-a1c417ba547f"
        },
        "item": {
          "id": "5615844d-174d-4358-9009-54679649d101",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "29ed419f-27a7-4e19-9ae4-c914ac81926b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d197f98-b7f0-4044-b84d-057bd227f52f",
        "cursor": {
          "ref": "82a16e65-aed0-4936-99a4-8e2fd85d811e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "abcbed19-e5d5-4296-9d1d-429ede91988c"
        },
        "item": {
          "id": "0d197f98-b7f0-4044-b84d-057bd227f52f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "476c205d-033e-4b48-8bbf-11d9fbe7b09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66062624-a92d-4681-86ff-e681e394e76a",
        "cursor": {
          "ref": "f5964a20-272c-410e-b8f9-830e92d4211b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "84348683-a1ea-4e31-886c-c18828f61fc6"
        },
        "item": {
          "id": "66062624-a92d-4681-86ff-e681e394e76a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "287e0a25-639c-424b-95c1-49bea00576c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41641541-6cb3-41d0-a263-51ca8f849668",
        "cursor": {
          "ref": "54c8cecf-a666-4c0d-80a9-9f526e0a363f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8821bd81-1294-4bf6-8700-dc9c66da3e15"
        },
        "item": {
          "id": "41641541-6cb3-41d0-a263-51ca8f849668",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a273fdb9-8105-4a4e-a05b-e73b7ffec2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d959e965-d7c2-4e97-b5bc-eecab7d7395e",
        "cursor": {
          "ref": "5904f024-e92e-4bd5-a1f8-54e46d4e56e5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1ecb4b64-72d2-48bc-87f5-49052d1cc7eb"
        },
        "item": {
          "id": "d959e965-d7c2-4e97-b5bc-eecab7d7395e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a71cc8fd-9773-4cc0-82f3-94f4373b2295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb9a1dd-63a0-4ed8-8fe9-04db57064821",
        "cursor": {
          "ref": "0377a89b-04c1-40d5-82f7-f74500811258",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "305d2d07-399b-41c6-b1b6-ba7971effcd7"
        },
        "item": {
          "id": "ebb9a1dd-63a0-4ed8-8fe9-04db57064821",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ba40319c-d4b5-4c9d-98c2-e519dc3007b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809eeff4-fad1-482f-8f79-382356cebb23",
        "cursor": {
          "ref": "b09b64ce-fc02-460d-8127-ba9cc577abc9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7fa8014c-e5d7-479a-abab-3171a4f8fb0a"
        },
        "item": {
          "id": "809eeff4-fad1-482f-8f79-382356cebb23",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "79f322cb-71a0-4236-95fa-0d150d596474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61ceb17-2480-419e-9a49-ff3a8639198d",
        "cursor": {
          "ref": "4a83ae79-27d1-408d-9e02-7cd96cc7ae56",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ca823428-6de2-49ef-96d5-7f35a9d82db0"
        },
        "item": {
          "id": "a61ceb17-2480-419e-9a49-ff3a8639198d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e894b853-fdbe-4423-a36c-a79eeef6a37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98c2a52-250d-4e2c-b7d5-ffeaaad48d00",
        "cursor": {
          "ref": "622da523-4503-4686-a179-b1017dae6184",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "42909e57-2c4a-4e00-aaef-945aa0390072"
        },
        "item": {
          "id": "f98c2a52-250d-4e2c-b7d5-ffeaaad48d00",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "91895233-0e9c-4d2d-bea1-664c51b99836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2374ada-c723-488f-8d60-87177d256cb2",
        "cursor": {
          "ref": "cd2d0657-9674-4bc9-bde8-3a6bc88a4b2b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "816af9b1-5aeb-46ed-85c5-4b0f6383197c"
        },
        "item": {
          "id": "f2374ada-c723-488f-8d60-87177d256cb2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a3c227af-a06b-4d70-9861-3527745c7866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acdad4a-8502-4297-a6af-f43b7ae14094",
        "cursor": {
          "ref": "faf34c53-1847-4031-90da-c5ac5cfef0c9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "02c2ce28-34c4-4aa8-9d6d-9d53c2b1cd50"
        },
        "item": {
          "id": "9acdad4a-8502-4297-a6af-f43b7ae14094",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bee5e93c-46f2-4130-8a04-a2da8069dd50",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d389ba4c-932b-4c66-a3ab-ec6424506c0f",
        "cursor": {
          "ref": "9ee1d037-66c4-42ce-832e-c5d3d00e4f72",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "10584eb7-df8d-4d8e-87f1-c5ca90ea7620"
        },
        "item": {
          "id": "d389ba4c-932b-4c66-a3ab-ec6424506c0f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "24fe11c3-bca3-49b7-b5b7-99befddeae08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059d6f5c-0e5c-4ec5-9c5b-9376873ff0be",
        "cursor": {
          "ref": "19c13d21-715b-4066-bfd8-f4204a87c797",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2df3ef78-b59f-47dd-9085-d249f27ca9ea"
        },
        "item": {
          "id": "059d6f5c-0e5c-4ec5-9c5b-9376873ff0be",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f2b2ea84-a265-4053-8bf6-d9ff50e94908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4effc885-988d-4336-b9d8-eaf688511ac5",
        "cursor": {
          "ref": "a238c103-3e81-4d76-ad5a-4bb56512af03",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a0a6c69e-ff63-4226-994b-8a056de7b185"
        },
        "item": {
          "id": "4effc885-988d-4336-b9d8-eaf688511ac5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b71b2797-33f7-4d68-ab9a-753ec66d3951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a3d19b-b6a2-49bc-91dd-bdc449bd6c91",
        "cursor": {
          "ref": "b552daa4-e683-40b1-9f32-7de208af1997",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e7e57fc6-1f0c-4f27-86b1-01c5176a33db"
        },
        "item": {
          "id": "e6a3d19b-b6a2-49bc-91dd-bdc449bd6c91",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2b2d31a4-7336-4b74-bc8f-b35b9a42b59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b558e764-9793-4964-a981-ae7ee3ebce01",
        "cursor": {
          "ref": "6b86d3f4-ebeb-4697-a82d-880f66d87520",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5ad08441-0149-4b9c-9d84-d8c0169f2047"
        },
        "item": {
          "id": "b558e764-9793-4964-a981-ae7ee3ebce01",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2b8bfe21-a904-46e9-a6e7-d18296eb8210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b025cc59-3fff-4053-86c5-9397cb28d62d",
        "cursor": {
          "ref": "991972aa-27fd-43f7-a325-8f568b70fa59",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2b70459d-5aad-49a2-b89c-874113d1bb4d"
        },
        "item": {
          "id": "b025cc59-3fff-4053-86c5-9397cb28d62d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fd86b8d8-536c-4647-b9dd-f164747bc71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa41d8b-e925-4d6e-9b1b-2f2767d927d3",
        "cursor": {
          "ref": "7ed4280b-9010-4275-9f40-2716486f4499",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d6b349a1-b58e-4ad2-b297-c7a6c4a8bc8e"
        },
        "item": {
          "id": "caa41d8b-e925-4d6e-9b1b-2f2767d927d3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ae38ae10-aaed-4c0b-8602-c8cc429f4a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99db1de-3152-41a3-9030-d44fd607c16e",
        "cursor": {
          "ref": "b579d2a7-502b-46f8-8a3a-7836937811fc",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7aa0716a-30aa-4a2e-a291-dfbcce84f297"
        },
        "item": {
          "id": "b99db1de-3152-41a3-9030-d44fd607c16e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2b25a19e-342e-4b0b-98e5-9ba05e153a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767175ba-f962-4fa3-870d-6f83bfdcad42",
        "cursor": {
          "ref": "39236640-93bc-455d-832a-efbfc677d52d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "acc36333-49ec-40a1-9e00-77dcf250f281"
        },
        "item": {
          "id": "767175ba-f962-4fa3-870d-6f83bfdcad42",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8d510d65-0bcf-4d92-b661-63b967a702a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27625cbf-58a7-43aa-ae82-abb87caa0965",
        "cursor": {
          "ref": "206212e7-e28d-48f1-9774-8f1442a9a6da",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cd30f1f6-b63f-4464-ac38-a4b3b24d5607"
        },
        "item": {
          "id": "27625cbf-58a7-43aa-ae82-abb87caa0965",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e98bbd48-d4a4-4323-b645-6441451f3b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef6e0f5-f294-4327-9176-97553da844c3",
        "cursor": {
          "ref": "1755b27a-a3de-4f92-9f8f-b0a7ad602cdd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "df6777b0-cbb3-45b1-b74a-78b2470484a7"
        },
        "item": {
          "id": "eef6e0f5-f294-4327-9176-97553da844c3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f93515e4-a399-47f0-bf73-998ad8c30745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b27d12-3ee4-48e8-8325-53693f29eacd",
        "cursor": {
          "ref": "d1103cc7-5d89-47e7-94b6-883f630a3dd7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "035be196-3b01-4509-b1fd-b1ce538659dc"
        },
        "item": {
          "id": "06b27d12-3ee4-48e8-8325-53693f29eacd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "47b2d20c-b2c5-4de5-8e53-bce06616d139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c79bf3b-e553-423e-b8a0-b3a8c9e56e4b",
        "cursor": {
          "ref": "cb4d996d-f1ac-4b4f-9f4e-4098bad2bea1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9d71b3fa-dd6e-427e-8aa6-3f78b94fac33"
        },
        "item": {
          "id": "3c79bf3b-e553-423e-b8a0-b3a8c9e56e4b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "35189f1a-9523-463c-add3-a67e09f6859d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6244210f-2867-48af-9e41-62aa438919c7",
        "cursor": {
          "ref": "5874c7ed-a7bc-4c61-9bc3-41d568d78fda",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "725e9e41-a1f5-4102-9bd4-e891f16ed876"
        },
        "item": {
          "id": "6244210f-2867-48af-9e41-62aa438919c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "725f9461-4fa8-4621-9b90-8338622ffc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14f94ae-b7d4-455c-b08d-fbdbd9cacb88",
        "cursor": {
          "ref": "939b5fad-7f49-4ccb-874e-30b664acb93b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c4d75636-e7de-44bc-83a1-60120ca109c5"
        },
        "item": {
          "id": "b14f94ae-b7d4-455c-b08d-fbdbd9cacb88",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "de2f1d8a-a8f3-44f4-be1f-6b308dc1ec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb062ae3-ad23-4dea-bf71-a90da0c7dbcd",
        "cursor": {
          "ref": "d31d1dce-9716-47b3-b15d-dbbeba5e6130",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "26b88cd5-5ca8-45ef-b131-874a536b2430"
        },
        "item": {
          "id": "eb062ae3-ad23-4dea-bf71-a90da0c7dbcd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d02eb893-806c-44e7-8abf-9837f5673bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3539c6a9-6f96-47a2-8cbd-4d0beda05ecc",
        "cursor": {
          "ref": "b8f25598-8865-4340-9be6-0214f18527e6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0e1943c1-e684-42f9-8fe0-3ee82718eaad"
        },
        "item": {
          "id": "3539c6a9-6f96-47a2-8cbd-4d0beda05ecc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "79b92788-a8dc-4f39-b379-d8e1d725d59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a5fdfc-15cf-423b-bf11-9af0c9f62342",
        "cursor": {
          "ref": "e3261200-b25d-44f4-85c1-d5391c9da5e7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "383068de-6b5a-4ad0-9d6c-cb2462889d1f"
        },
        "item": {
          "id": "96a5fdfc-15cf-423b-bf11-9af0c9f62342",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0981c19b-1d13-49cd-9aa8-74afcd216acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64981e-3d89-45be-a0d3-872dc72bf8f6",
        "cursor": {
          "ref": "54b68e59-8f87-4c12-a97e-979c589145e1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "95045757-f9fe-46eb-92d9-2bd168f0c58b"
        },
        "item": {
          "id": "de64981e-3d89-45be-a0d3-872dc72bf8f6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e14b1c9f-af44-4d6c-99dd-064bdc22c635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3562562-af69-40f8-8c7f-db630cea7269",
        "cursor": {
          "ref": "dde63110-9bfc-4ec0-b6de-4b2a77602b09",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d46701d6-3f8a-4378-8c96-ac7fbed487f3"
        },
        "item": {
          "id": "a3562562-af69-40f8-8c7f-db630cea7269",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4b492a03-6275-4e87-bbfd-6c582922a140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05728d1c-ae5d-48d0-b5ad-63d504f56449",
        "cursor": {
          "ref": "1145ff6f-86d6-43e9-8577-f8016c71a76e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9b9b7cc0-abf2-47fb-8dc3-f7fed99d13cd"
        },
        "item": {
          "id": "05728d1c-ae5d-48d0-b5ad-63d504f56449",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "33b6981a-f50b-4dea-b3ec-6a531c097f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19dc14f-94f2-4c12-9fb8-d33b62cdf7f5",
        "cursor": {
          "ref": "e80dec45-8d08-41c6-b8b9-696231e8ed2d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "acf02cae-2306-4122-b02d-7afbe252e603"
        },
        "item": {
          "id": "e19dc14f-94f2-4c12-9fb8-d33b62cdf7f5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7bd92cd7-e9d3-4609-995f-137378a97177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfff743-2440-45ae-be85-9f77bf150fc4",
        "cursor": {
          "ref": "3d3772f0-3c24-427d-8cfc-14e7a61db7e5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e0206623-7f10-4fba-abd9-86f53e1fa3b4"
        },
        "item": {
          "id": "7cfff743-2440-45ae-be85-9f77bf150fc4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "30f02d94-8816-4712-993f-fb4e53db669e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d60102-70a3-4e92-8c5e-737e252921a4",
        "cursor": {
          "ref": "cf325490-deee-4b5c-813d-4bdfeb5e8f38",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ef7f1805-2fe7-4197-b29e-a32f31fe4296"
        },
        "item": {
          "id": "a6d60102-70a3-4e92-8c5e-737e252921a4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b83d9fc3-e585-4bec-acdb-83bdbcfb386e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d8b3f8-9ab4-44d5-85a1-d10a6a3fa68c",
        "cursor": {
          "ref": "e757abc5-e549-4281-815f-cd42d3ea4483",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7131da37-1038-4943-b8d6-2158d1d275cb"
        },
        "item": {
          "id": "a3d8b3f8-9ab4-44d5-85a1-d10a6a3fa68c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eca4c21b-f1cb-4dea-ae46-e3bca0b6c029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de08e6a8-0664-4552-ab41-273e235215d7",
        "cursor": {
          "ref": "867b3d57-2dff-4698-8049-47717bdb9912",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "497df12d-b96c-4eec-82c7-b0a9a29c06d2"
        },
        "item": {
          "id": "de08e6a8-0664-4552-ab41-273e235215d7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9c375677-303e-43a1-9a81-3bedb1d5541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31d3a3f-d8e7-4cd5-97ba-046024064bf8",
        "cursor": {
          "ref": "7e72e014-39bf-4eb9-a016-2016230db8e6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a715ed6f-98e5-4561-8747-4b10ad67110b"
        },
        "item": {
          "id": "c31d3a3f-d8e7-4cd5-97ba-046024064bf8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dbc0d6d5-b982-4fc2-91ae-af74b74b8765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddd76cc-c5c5-4f6b-b977-a9a9e45bfec5",
        "cursor": {
          "ref": "c573b95f-23d9-4e85-a14f-dc5b6b82f23a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "76b47008-8686-4e86-8bd9-9f6f5cb004c8"
        },
        "item": {
          "id": "1ddd76cc-c5c5-4f6b-b977-a9a9e45bfec5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c0ee2512-9782-410c-acb5-75e201dc2bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873b5e7f-fd6b-48ca-bc89-385e576bd8bf",
        "cursor": {
          "ref": "4b044a0e-e62e-451d-854b-88484fd2a0c3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4b09c2d1-a18d-459c-af43-4a48d937324b"
        },
        "item": {
          "id": "873b5e7f-fd6b-48ca-bc89-385e576bd8bf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f8b7b35f-2b7d-47aa-a70f-60da4a2c4e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666f592b-6e58-42d8-8b5d-55eb774be24a",
        "cursor": {
          "ref": "cd0515e2-11e1-4a85-8ed5-54688afe34ee",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "66407e8a-907b-44b7-83d4-adb01854f2cb"
        },
        "item": {
          "id": "666f592b-6e58-42d8-8b5d-55eb774be24a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b0d4015c-d0ce-4002-8077-1c863109335a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa21f5c9-399f-4b11-b18c-1091de985fb8",
        "cursor": {
          "ref": "ed028200-af21-4ec5-a90c-08dceff0480f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8ea5efc2-fe5a-4dd6-a270-ccb95a2aa9c8"
        },
        "item": {
          "id": "fa21f5c9-399f-4b11-b18c-1091de985fb8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "650b1e92-de5c-472d-961e-12c0e60d84e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0515e285-2e46-4468-8820-85f3f57bdd1e",
        "cursor": {
          "ref": "fba9f2cd-dc26-4299-adae-8b19f55d8af0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fe623a84-f178-4d7f-a48b-b3d51f5dff0c"
        },
        "item": {
          "id": "0515e285-2e46-4468-8820-85f3f57bdd1e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "327859f0-2fbb-4ce4-8831-f28fec67bc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdfd195-288a-45ea-91fa-a9e4a97af65d",
        "cursor": {
          "ref": "3c215784-8073-4026-a126-a80ffe87f2f7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b87c9a48-b6e5-4136-aa33-c814e1a037ed"
        },
        "item": {
          "id": "ffdfd195-288a-45ea-91fa-a9e4a97af65d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6ce2d863-280d-44b0-a870-3e82bdddbc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1261cd-238d-42e0-b5e6-4744188faaac",
        "cursor": {
          "ref": "b2b1be54-cce1-467b-b750-a0d8fc2a4408",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7931c87c-5655-401e-b3ac-695a56206108"
        },
        "item": {
          "id": "ec1261cd-238d-42e0-b5e6-4744188faaac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "96b994eb-84db-43ca-9933-2e2fd6366bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de287fa3-71cd-4291-8b56-02a98d140415",
        "cursor": {
          "ref": "acfe5041-73e8-4bb2-a930-b3f119c9d371",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "84989e27-118d-4902-a097-9343923ed7aa"
        },
        "item": {
          "id": "de287fa3-71cd-4291-8b56-02a98d140415",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc6eec97-3b3a-4927-8832-1715ec49a031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7894340-45a1-494d-86c2-f426eec38218",
        "cursor": {
          "ref": "3a6f105a-066b-44c4-a0e1-8a26f465da1d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "43fd8119-616e-4a7d-8d04-d6d1e8c0aca8"
        },
        "item": {
          "id": "e7894340-45a1-494d-86c2-f426eec38218",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4e69f016-5dd5-4dc5-b658-bcf71f464480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9a0407-1052-4792-8788-b3af44664675",
        "cursor": {
          "ref": "3e94af32-8c55-4fc3-857b-111708b4893a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1fbf40fd-6d2b-411e-9f2a-6510dbe189aa"
        },
        "item": {
          "id": "eb9a0407-1052-4792-8788-b3af44664675",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b299a7ac-8ab4-4626-8c10-cc3a4b3286f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3435f41-2ec0-4f40-a6e7-1f840e34070a",
        "cursor": {
          "ref": "78b2dbfd-18f2-46a8-b342-11362576616a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "21344746-c263-4e0a-a734-fcbf3ee339f4"
        },
        "item": {
          "id": "d3435f41-2ec0-4f40-a6e7-1f840e34070a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d21f88cd-8749-4425-b445-3229fce0e848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a093a4c6-e943-4fe2-ac8f-ac5b8e5c8f6a",
        "cursor": {
          "ref": "49a07b7c-58b5-4701-8714-75bcfd62289a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "59a65b7c-6cd9-4b76-8573-52563bccb398"
        },
        "item": {
          "id": "a093a4c6-e943-4fe2-ac8f-ac5b8e5c8f6a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7b14ba1b-a1ed-4512-a6d8-c116115cfdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e6f4b4-3274-464c-be7c-b5c7bf82f45d",
        "cursor": {
          "ref": "aa38948b-6994-4372-994f-91a97d41fd8f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cdfc9ccc-657b-497f-8cc7-28cd536f580e"
        },
        "item": {
          "id": "40e6f4b4-3274-464c-be7c-b5c7bf82f45d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6cf21068-deb4-4b91-84f9-16a30edce651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d01759b-bb81-4b9b-97a2-c353134d42fb",
        "cursor": {
          "ref": "8c664103-e81c-40cf-844f-0263b22040e9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a1ba904-6644-438f-8566-12a83a8c0a3b"
        },
        "item": {
          "id": "7d01759b-bb81-4b9b-97a2-c353134d42fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b6cf6083-c998-4282-a88a-712bb829a54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16558b4b-98b5-4775-a4c1-f858ff58057a",
        "cursor": {
          "ref": "c368914b-cf0c-49ae-84d7-c18310ef32da",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b11535bb-c6d4-4394-b9e1-70bee1ffc6ea"
        },
        "item": {
          "id": "16558b4b-98b5-4775-a4c1-f858ff58057a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0b1df6f7-5bb1-4a97-9c27-2e31753f3af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfbe20a-f27e-4a11-9def-e83b4b8bf989",
        "cursor": {
          "ref": "6e30d617-98b1-4e60-b8bb-d8f19f6c3f3d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4d0cf0c4-8953-4610-90c6-588f2ff17178"
        },
        "item": {
          "id": "3dfbe20a-f27e-4a11-9def-e83b4b8bf989",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aa59fd79-fa5b-4829-b664-a24296368de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b1a3a6-f73e-4e0c-872b-f91fca67bbe9",
        "cursor": {
          "ref": "4383ec3b-ecca-408f-a72b-c9973b480a98",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3d1e80b9-f032-4e02-93a5-28dcf9f74406"
        },
        "item": {
          "id": "f8b1a3a6-f73e-4e0c-872b-f91fca67bbe9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "17f32536-6426-4284-ba1c-4bccf3522b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8a7a21-e5b1-40d3-b30d-6cb209323400",
        "cursor": {
          "ref": "789f9d1f-b1cf-4218-a54d-b50c3e5b38d7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5d18ecde-b874-4812-bcfb-f87badabdfe0"
        },
        "item": {
          "id": "0a8a7a21-e5b1-40d3-b30d-6cb209323400",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "71982eba-2ddc-43d2-bea3-14a22592e3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa4141e-2c15-4443-a072-b7e640414b08",
        "cursor": {
          "ref": "33b2abf9-e09e-4b5a-a6ba-53ebdaa3aed4",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "54947582-08a6-4aee-8a7e-840e23372409"
        },
        "item": {
          "id": "5aa4141e-2c15-4443-a072-b7e640414b08",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "09c4e82e-e78a-4403-a908-779b46e0b708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30b13f8-10b3-49ed-944d-9100aa36eb05",
        "cursor": {
          "ref": "fed1afb9-3ec3-46fc-9860-55feaa5a819e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f1752806-ef67-4295-a514-44a57cc6514b"
        },
        "item": {
          "id": "e30b13f8-10b3-49ed-944d-9100aa36eb05",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b3c2900f-3730-40ac-8fab-3aa1de0b0298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc715b1-8abd-4f0a-81d9-92bef2e91318",
        "cursor": {
          "ref": "d78ee7c8-be6b-48d3-b809-d86af938a78d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cb8be4cd-275f-44e1-a96e-7c2cc05e4aca"
        },
        "item": {
          "id": "2bc715b1-8abd-4f0a-81d9-92bef2e91318",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e90df178-86b7-4eaf-9297-e31b4c8d4fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696d07fe-4c9b-49d7-98be-ef5b89cf8eec",
        "cursor": {
          "ref": "43522ace-3af1-4ec8-9f25-4ef3287a07f7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f12f63b2-ffd8-44f4-9b2d-6da6ff3bdeec"
        },
        "item": {
          "id": "696d07fe-4c9b-49d7-98be-ef5b89cf8eec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f52760cd-993c-42e1-bb5c-a8debf3c7113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30822be3-801a-4c0e-b08c-223b63ac9720",
        "cursor": {
          "ref": "cc100f0b-63a2-46a9-be5d-0f443130f1bf",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca2f2593-68a6-4f9b-990d-7cede350dfd3"
        },
        "item": {
          "id": "30822be3-801a-4c0e-b08c-223b63ac9720",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b71c5ebf-1121-4ec4-97af-de70a05a7c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396cd7fe-675e-4085-a33e-fde135b8cd4b",
        "cursor": {
          "ref": "7f09a480-1c99-4f1d-baaa-00ee63c8a29f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5a693a31-e33a-4c8d-807c-cdd3b6ca8ec8"
        },
        "item": {
          "id": "396cd7fe-675e-4085-a33e-fde135b8cd4b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ee08b2f-c082-4033-bba5-5bf34abcd2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfa5e4d-0c76-403e-ba58-e82668d37f01",
        "cursor": {
          "ref": "79a90486-12dc-43aa-8a97-19786ee8b525",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "60ff6253-0a0c-46c2-9076-6d5ce26843a1"
        },
        "item": {
          "id": "abfa5e4d-0c76-403e-ba58-e82668d37f01",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "484c20ff-7323-419b-9229-de85bf93f0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e0dd3a-3a2d-42d1-81fe-260ade1d9375",
        "cursor": {
          "ref": "1fa9a276-01f2-4439-8f32-4d77802aff1e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "04971262-c13b-4098-a5fe-01c4900ed9c3"
        },
        "item": {
          "id": "48e0dd3a-3a2d-42d1-81fe-260ade1d9375",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "322a9f72-a9a6-42c7-852f-093144ebc54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6140519-513b-4cbc-a328-e8e26453d1e6",
        "cursor": {
          "ref": "7d65f08a-2190-49c3-972b-11886e379cb1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "228da85f-a44a-4f31-bc0a-fa58f5f1330a"
        },
        "item": {
          "id": "d6140519-513b-4cbc-a328-e8e26453d1e6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c7266548-caab-47c4-a77e-c95ab0e53fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df452c13-c638-4dda-97d3-c97f0c754300",
        "cursor": {
          "ref": "052d800b-7498-4b87-b449-b1a2d10cb5fb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a386cd74-42da-4eb8-a95a-d0ddf9677a7a"
        },
        "item": {
          "id": "df452c13-c638-4dda-97d3-c97f0c754300",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "193f941c-119e-419b-8717-bcfc0db8a956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f330180-3126-4bf7-a603-298cb221cbe7",
        "cursor": {
          "ref": "60e77b4b-b5f1-406d-8f52-550941a1814c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f111279b-2758-4341-b86d-c86a6c10a726"
        },
        "item": {
          "id": "6f330180-3126-4bf7-a603-298cb221cbe7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ac4a3b01-83d5-4c21-8f2c-cc91933c0f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc817d15-1208-4464-af0c-90292252559a",
        "cursor": {
          "ref": "14e693cf-e75c-438b-b703-e24bddd775d2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2fa7ebf1-8932-4068-a505-f7550dc041e1"
        },
        "item": {
          "id": "dc817d15-1208-4464-af0c-90292252559a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9755d03a-f970-489d-ba1f-0a5db8b0b68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2975d5da-3b6c-45fd-8703-ffeb65177be9",
        "cursor": {
          "ref": "859050ce-98e9-4348-815b-8207cfd7a898",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2bbcc7a2-0b0b-4b83-8458-028d343ffa2d"
        },
        "item": {
          "id": "2975d5da-3b6c-45fd-8703-ffeb65177be9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "460984d2-06f0-4283-81ec-2adc93b7d599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd6a191-c550-43c2-9f1c-44edce4a43a3",
        "cursor": {
          "ref": "104048c6-079a-4fe0-810f-e7fdc4898fc5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "76df4135-0755-4691-a38b-9d98424c98a6"
        },
        "item": {
          "id": "4bd6a191-c550-43c2-9f1c-44edce4a43a3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a8249ee9-a5a2-4c08-aeef-5014322a16c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22c758b-e8c8-4fdd-8247-fd5180176e6e",
        "cursor": {
          "ref": "8459a19e-d8bb-4e69-8041-3647aae62088",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "02b8e82c-cfb9-4293-8ee4-5d30137df76d"
        },
        "item": {
          "id": "f22c758b-e8c8-4fdd-8247-fd5180176e6e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fe1382bf-9e94-4a33-bf99-accec477afab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49abd1e-14f1-41c4-8937-0d5b915afb09",
        "cursor": {
          "ref": "81640c8f-942b-44ca-ac44-4cc80a11cc37",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "98fdf2b2-852e-4dd2-9e1f-795160ac6cfd"
        },
        "item": {
          "id": "a49abd1e-14f1-41c4-8937-0d5b915afb09",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "394e588c-8964-4c2f-9310-6c3da376e604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9810a5a5-6144-4e88-801c-7d77a0de3958",
        "cursor": {
          "ref": "9b50f3c2-cd6c-4851-be00-a07dd5837cac",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d30eeaa5-ad56-488c-b0e1-2b4022a1fc23"
        },
        "item": {
          "id": "9810a5a5-6144-4e88-801c-7d77a0de3958",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2e7588a2-86d4-43ba-b7c1-6cef2f964eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b120cd63-5842-44b1-8920-c9206d317fd4",
        "cursor": {
          "ref": "474a981e-06cb-44c3-b7d1-f922e10432ce",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7d5ea0c0-8728-4d77-befa-8ad1227b7782"
        },
        "item": {
          "id": "b120cd63-5842-44b1-8920-c9206d317fd4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3626e194-a18e-4772-a6fa-106caf41f212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9f62c3-beee-4fbe-afa9-4eb5540aeb61",
        "cursor": {
          "ref": "f522ef0f-565b-4edd-8695-4b6c019cb2aa",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "934674b5-119a-43a5-80c9-94e5f69697c5"
        },
        "item": {
          "id": "9e9f62c3-beee-4fbe-afa9-4eb5540aeb61",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b3205560-bdc4-459d-96a5-8dd84cb0cfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9626a0-997e-4f9a-bbcd-f0e7d7914eaa",
        "cursor": {
          "ref": "b705a58d-73d1-4b42-8683-c17a491550e8",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "67f1bf61-0343-4930-b464-ca711841777e"
        },
        "item": {
          "id": "ed9626a0-997e-4f9a-bbcd-f0e7d7914eaa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "97b5cb7a-d5eb-45d9-935a-d89390e75870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32323d8c-4892-4e46-837e-8fff0474f645",
        "cursor": {
          "ref": "439cb024-f59e-4b62-a162-f1239e36973b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8b36a1bf-d4ff-4cd8-8c51-29e0a09a79d8"
        },
        "item": {
          "id": "32323d8c-4892-4e46-837e-8fff0474f645",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30a29582-b035-4ba0-94c7-82489512372c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1641dd3-1377-444a-abde-0a6cbccac147",
        "cursor": {
          "ref": "9fbe70f1-c482-447a-973e-ba4dc1f5fbb9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3cbea6a5-c1ee-45cd-bfa1-277b20b4b0f7"
        },
        "item": {
          "id": "e1641dd3-1377-444a-abde-0a6cbccac147",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "afab0d1f-b333-4135-a917-376497abe90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3159b7db-141b-4342-9502-6f95ba7b6930",
        "cursor": {
          "ref": "562749ee-37e9-496d-8137-61e5ce9ceb1e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e1645472-5005-424c-abae-98f6f167581d"
        },
        "item": {
          "id": "3159b7db-141b-4342-9502-6f95ba7b6930",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8e5ce17a-fb59-44d4-8dd2-ce3f8e425c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1e2b0e-a732-4b23-8424-68fb644294fe",
        "cursor": {
          "ref": "ce6d4937-a712-441f-bcf5-c92519edf3dd",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7817f16e-4893-4391-963b-12715cb64f23"
        },
        "item": {
          "id": "bb1e2b0e-a732-4b23-8424-68fb644294fe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1cc87c12-8cdd-4571-bfda-9958be1e8116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710ab5e4-6223-4d3c-9cfa-0c0adbe20b30",
        "cursor": {
          "ref": "e3d7b535-f837-49c5-8070-b5910b140fbd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8174d578-2940-4460-baa6-c89a5e63bad5"
        },
        "item": {
          "id": "710ab5e4-6223-4d3c-9cfa-0c0adbe20b30",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4a1cacb7-523a-4917-bb0d-5ea78e7ff415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252d3851-2bd7-413f-992d-df55a7625c24",
        "cursor": {
          "ref": "4e412613-105c-407a-bda6-670ae3a4516e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ff08892d-0c82-4626-a7fc-d5bded328e00"
        },
        "item": {
          "id": "252d3851-2bd7-413f-992d-df55a7625c24",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9d67431d-1c09-4ff5-a50c-444c4b2a93e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16f171f-124c-42cf-b07d-e346e2782eab",
        "cursor": {
          "ref": "759463f8-2f99-490d-a02d-11f9a0a9d0a0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1c5a334a-23a8-46a2-8c09-af2d8758fc16"
        },
        "item": {
          "id": "f16f171f-124c-42cf-b07d-e346e2782eab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0a2d5f2-5bd1-472d-b6c4-bbf8ce976eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf8d955-20e6-41b9-85e0-b1570c112e82",
        "cursor": {
          "ref": "2527edec-5e34-4a58-a569-3f2b931624c6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "397339e1-49ae-4589-9be8-7e4448d80700"
        },
        "item": {
          "id": "4bf8d955-20e6-41b9-85e0-b1570c112e82",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44212f0c-8cc3-4f90-879e-098028eb57c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188e9702-2df3-4955-bf86-cfe62f5ebcee",
        "cursor": {
          "ref": "e8b66195-06a5-447c-90af-2973c8c05b67",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "25cfbc8e-a89e-451d-ace4-623411c25d22"
        },
        "item": {
          "id": "188e9702-2df3-4955-bf86-cfe62f5ebcee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e73240f3-0241-427c-946c-734d34dede3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26993479-6ffa-49b5-bef4-2941100f5d5b",
        "cursor": {
          "ref": "e8e4e4ee-9ee7-4be8-9a6b-53cab20c21e5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d8e212e9-d419-48b2-9b9d-986ebd548621"
        },
        "item": {
          "id": "26993479-6ffa-49b5-bef4-2941100f5d5b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "45b60ee5-9718-4a89-b597-47c87f4d3942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150eed27-76fd-4dc9-984c-27e4b4d41b0a",
        "cursor": {
          "ref": "86bdee16-aff5-4d4a-bc7a-1b3c65351e35",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eb482525-0d00-4a0a-a3db-a16fee82d7e5"
        },
        "item": {
          "id": "150eed27-76fd-4dc9-984c-27e4b4d41b0a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dd7023a1-cd64-4a60-8f2a-a4e9ec67bb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338602c6-3c76-47af-8779-703ce41d2e6b",
        "cursor": {
          "ref": "d2dfab64-cd88-409f-99f4-0bb85e7ed93f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c5a53bd5-7fad-4ebe-a769-bb9fd15b3d76"
        },
        "item": {
          "id": "338602c6-3c76-47af-8779-703ce41d2e6b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2e5bbbd4-58e7-4d6e-ab12-b5bfc493bf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d767e954-48b8-4f9a-8996-f6f248972adb",
        "cursor": {
          "ref": "564fd511-c629-498d-892c-99a1c14c448d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "30310759-5f72-4cd7-8d0b-a5a1caf60a0c"
        },
        "item": {
          "id": "d767e954-48b8-4f9a-8996-f6f248972adb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a5545af4-e5d5-4f7f-8bf6-03f64311d7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3439321-e6e1-4ae5-a434-b8db3edde9c2",
        "cursor": {
          "ref": "d402c72e-aba7-45aa-8089-1e5aac8b3bfb",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7b6785c4-43b4-4748-a430-03700854bfca"
        },
        "item": {
          "id": "f3439321-e6e1-4ae5-a434-b8db3edde9c2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f529046d-12fa-469d-b7e1-80c380201c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3027703e-52d3-46d6-a1b5-9f159ccb7358",
        "cursor": {
          "ref": "fb1c10ce-90a9-4a13-9f6c-0a053f3a41b9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d62ce3bb-8224-44a8-89f5-7cda42f98403"
        },
        "item": {
          "id": "3027703e-52d3-46d6-a1b5-9f159ccb7358",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a59f18e0-784b-4c22-aa71-4cc96eda3d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4524529c-8821-4187-b417-e845f3409822",
        "cursor": {
          "ref": "2de67d8a-2d72-4c22-be89-d8da54de0166",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "da73dde3-8b11-46df-8fb5-1e6f7f49905b"
        },
        "item": {
          "id": "4524529c-8821-4187-b417-e845f3409822",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bb0e7d0b-c706-4e68-b932-f6ef70945ab7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84698ff8-c23d-436e-959b-9303d1a93b9e",
        "cursor": {
          "ref": "e25eb866-e228-4a6e-9dfd-c05df89c0dd4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8ac20e70-d457-42f4-89e5-20a2a42d36e8"
        },
        "item": {
          "id": "84698ff8-c23d-436e-959b-9303d1a93b9e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "32dcf4e0-c4b1-4d46-8b8c-c9af88a7a405",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d27cdc-af2c-4c37-9ab5-9fe9b093ea8f",
        "cursor": {
          "ref": "c141d894-f6b0-4468-abf1-b159986bddcd",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1fbb3d9e-5af7-4a0a-898d-b61a66904697"
        },
        "item": {
          "id": "44d27cdc-af2c-4c37-9ab5-9fe9b093ea8f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ce3baf2d-b4b0-4492-92df-356f2b68c349",
          "status": "OK",
          "code": 200,
          "responseTime": 3330,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9243a-1dbf-407d-9455-acc4abe76449",
        "cursor": {
          "ref": "b616031a-f017-4d55-bbe4-aa7b75f263d3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4bd66529-976d-427f-927a-84800f8b63fa"
        },
        "item": {
          "id": "82c9243a-1dbf-407d-9455-acc4abe76449",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "664b6296-aaf9-4179-99d3-02987cd511df",
          "status": "OK",
          "code": 200,
          "responseTime": 3011,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc49fa38-17ca-4a70-9776-e3bec99a5962",
        "cursor": {
          "ref": "cad67d83-9771-4b81-aa7c-a2c8ae2b2617",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9b966495-e0a9-4f08-ad1c-88698c0e3cc0"
        },
        "item": {
          "id": "bc49fa38-17ca-4a70-9776-e3bec99a5962",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b9993c5e-454f-4f74-8d4c-709273beb6da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc49fa38-17ca-4a70-9776-e3bec99a5962",
        "cursor": {
          "ref": "cad67d83-9771-4b81-aa7c-a2c8ae2b2617",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9b966495-e0a9-4f08-ad1c-88698c0e3cc0"
        },
        "item": {
          "id": "bc49fa38-17ca-4a70-9776-e3bec99a5962",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b9993c5e-454f-4f74-8d4c-709273beb6da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72320898-911c-40ff-945f-90f26f64a961",
        "cursor": {
          "ref": "9f5f9ed2-39be-4426-8674-a031a85682c2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "58e5e705-9b0e-46fc-ae68-f50940508d17"
        },
        "item": {
          "id": "72320898-911c-40ff-945f-90f26f64a961",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3e0c1b61-b5a2-4f93-a614-34ef0a0610ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9e2043-2306-44f3-b4f9-28408c274e05",
        "cursor": {
          "ref": "59f73027-02f2-4d7c-8261-0126d8f445b3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3b0edc0c-7f79-4814-be2f-9dbbf5db6878"
        },
        "item": {
          "id": "fe9e2043-2306-44f3-b4f9-28408c274e05",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "00c801ec-66d1-4ded-9376-e315d7e5934c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}