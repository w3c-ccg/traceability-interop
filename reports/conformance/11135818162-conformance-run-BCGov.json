{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9cf1d039-5b22-4ccf-845a-3acef18c027b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7d50679d-6d58-4318-8cad-fea34cec9f8d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03ec8993-f228-402c-b8b8-c69f9314370e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77467460-ddc3-4c9a-b938-47b18e857940"
                }
              }
            ]
          },
          {
            "id": "a5d55c57-1edb-4754-b802-abcd446cb9f4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3dfcc8f4-2626-4356-a28d-f7139067fc0f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b358a3a8-6a2e-4c3b-84f9-62be0e9f4a1c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e556f1fa-46b5-469a-9f03-c51020539ce7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1bb0b1c1-4de3-44b1-9f38-ba9d73b67b10",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4bbdfd4c-6e1f-4d2d-a4fc-aa3d9f979051",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f3b8455-ab32-4b47-929d-6b1ece279911",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac05d57f-13b0-4878-8769-547b5d43ad38"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "caef55a9-bd09-4aab-9104-a1b3c9819fea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dcb202d5-a0da-4f9f-8b0b-666cede574bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2868c721-5822-4f48-94e9-d6aaa5896455",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0eb9e10b-5e0f-4502-a968-4bb784141d8c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b39adfc9-d684-48af-b158-242abae5290f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fa62ad7b-1521-4966-b6f0-70580588d721"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fab01108-91c0-4e50-9d85-0c63d09e8c93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "796dc4e7-7dee-41e5-997b-7e85dcdb312a"
            }
          }
        ]
      },
      {
        "id": "043add2f-81de-4d1e-b89c-a2d95706f834",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3d3a1302-b6f8-4ca3-9d60-a1567d8d29df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "111e6a25-7e7f-4552-b224-0b472a9a04b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dccebba1-8c47-45ac-ae08-ee481b51c54a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02dc628-c9c0-47d3-a9b2-da624b60efe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4aec6c0-ef77-4ce5-80f1-ece34f0789ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ffa60-814f-43ab-894d-53c16be57d0a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6aa6a3-af9e-4b4b-9eaf-941a633fbd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "268adc4d-22af-450c-bd56-99c1187fbaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c271eb-defe-4b5a-8908-2bb467a87502",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db7ff91-5a77-4c61-96c0-ca663d09e8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01f6f09d-3cf1-4f95-9972-73eaf760578d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83e77a71-3d3c-489c-872c-cc76a0e3e191",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d3cf6a4-d7d7-4a30-b49b-c1f27a437058",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8695f7c-6295-4814-b5a9-fa4a285d1e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d93b44a-f972-434a-976f-23c25c86a0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e883f4ed-5732-415a-bd18-eae19f1be253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e0803a-6578-48bb-a3fa-76d56e327f08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "01111278-9331-4139-87ff-1d741bd748a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "868a1fa6-1774-4f68-95a2-f0bb2f5c856b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2223297d-4385-43fb-a141-92748b549820",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3d3d4715-5ec8-436c-9e08-6f2b0d4e07a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d4a2572-dcd0-40bf-b1cf-5dabf4bb07a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "13b78094-8965-42e4-a7eb-db350bcd07ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f762e6e8-69ab-4a5d-a021-086ee1a0eec1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f74b39a6-e628-48d5-a8fd-ebdab75ec7a5"
            }
          }
        ]
      },
      {
        "id": "a103e300-5078-4625-809a-5acbfe0ec09f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6ad45a90-9cf2-46cd-b7a6-e154028d200e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ba0b9fd-dd9d-48ac-b7a0-f204cfb94388",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2f0f1d8a-3040-4b94-bc43-54285572e59d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4b62fc-1822-43dc-8e18-036ffed16379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9885bf99-3c70-4311-b0c6-d4636cb1f08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc06f0e-6304-4524-b161-bf036429132b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "654811e4-4e78-4e44-a18a-211bfd45875b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b91f38-eebd-488f-8861-ad42ee09d024",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7efc10-bd7e-451d-b045-fc4c8d00bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05beb253-8497-495e-b6d7-1c0049b090d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a49c7c2-958c-49dc-8033-f2454b12071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "475bdbee-6202-438b-bac0-b04c44f575c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68b994f-2401-4984-a67c-ca43383dfdd7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56d1207-86f5-4691-89ec-6fba05815b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a5e1cc-d508-45f7-ac3f-5c4298a4c26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a6f7b8-e03a-47a1-b3df-c944c6b91e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff532c35-658d-411e-9fc8-7dac7a9e9313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70938421-7fee-4f3b-81d7-6b147686be9e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b702868c-3552-4bdd-898e-b2140a2e9686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69361dc4-7c18-4dfe-bc31-f2f74e459665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6435c0-ec5d-4bda-bf28-958c5690b416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6c1d775-d947-44e4-bedf-8d6892c737fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931df955-da75-4e38-a4b7-0c5abe6ce894",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44487940-2105-478e-924a-a3f7f22e77dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d278490a-cacb-4581-a4e8-554453fc8199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35de754c-045a-4b6e-a372-afeb0c8cf321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c16de2e1-7674-4fb1-b970-5ff3f84cacbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0a7af1-2235-4606-878e-66018bcb2f43",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64771bfe-baff-45f5-a40c-b2b554964667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574c58b9-5366-41b0-9bc6-d8e10d00264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4710f0e3-c1f9-4542-b84a-80ce109775ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1050f1d-40db-4e6c-8404-896964317b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdabd9f-3fd5-4bff-bcb1-07e25dcb0984",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50818bef-d51b-44f8-be47-22cd8a30207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94047c3-e87d-46cf-a1b8-f86ab9658443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdb3b71-ed6b-4eb1-9ab2-a6701f385420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "785697bb-cff9-4893-8062-9a8e629d8124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758c88fa-c191-4849-9925-df6d9491ec9a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93b6e71-46be-4746-acd7-4b523fc917a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321af99f-1b0d-4496-b285-4687a0cef6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c629fa3f-1874-4f41-b9df-2749015a895e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f41ab602-5095-43f1-9ca7-bf094a87f202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7ef9a0-f3ca-4211-a2e4-ca399f42d7f7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e091dfd-744a-424a-bd2e-eed74397232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46669a9-c079-422e-af55-a3ff1f3d89de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51d5e74-85a0-4b22-bb51-2d19c8e1035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17b608f2-d3a5-4b12-9397-9f846c65fbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed938814-367a-4856-a572-85301c0749ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3a0aaf-61c1-4bb3-b718-c65f6dc527be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be83d55-0429-494a-8894-013b14f070f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b0be98-3c68-401e-b0c5-39aee67e0c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a5e748b-e361-4b8b-bba6-aaea1966d557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30486881-1f2a-4cef-a241-5df37302422c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ee64a3-b6a5-4e40-9364-19f3632f9418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e1c64c-d830-407a-baf0-4ec2bf8e62b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ce35b0-d49a-41f5-aad1-58e07e442803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "632ee51d-42f7-409f-aa9e-f64834d18a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7049634a-d78a-4041-9aa7-1e4366212311",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9f5b9f-df52-4a89-a5fd-5681a0859d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892edc4d-e6aa-4173-b20b-164a4cf93450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14594390-1812-419b-8f8e-f0c0594d9d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42d01afe-bc47-4c2b-804f-d25660bfb294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a965436-e56c-4561-be1f-438d8919fa33",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d370ff5-8fa1-48c6-a112-1be6ce59ba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2df8b9-4912-4a77-96ec-9d99df8fa029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109d9dcd-53e4-4758-9d1b-27dcabe0c150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03dc854d-60a0-44ed-92bd-4273fef8aab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa22472-959c-438e-8bfa-733df487851e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76db4483-e5b1-4ce5-b2ef-9bacb702e0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcd2d6a-1db3-41bf-9103-738b2c72279e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbe275a-be22-4831-a9f0-76a9cf88b16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de70b19c-da67-40bb-9a7f-30067fedf4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e99fb4-5634-42b7-a90e-d9e5417c894a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2421b88d-f89d-4147-b9c5-f8d5f4426914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01378fe5-39ec-46c5-b943-6158d5baafdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b65813-09af-46b2-b5f7-aa94a4de4dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5b6ccad-bc6c-4697-98ee-7995243d3d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1f6292-e005-434a-a09e-106fc69d258e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc9fb3f-5de1-4286-ba16-4491a52bed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9eb3967-625e-455b-98fa-2248c875e596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50269410-30d8-4895-b613-ee083d675591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a12fb68e-51d6-48fe-89cf-7ee545076a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f117c7df-6f12-4c4e-9f8b-310e0350b3fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67786122-1b83-4780-b593-5b2d6ed83c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e570c01-1dc6-4ea8-a094-103dfa3b2362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925582f1-f783-4202-8498-d3da6f68b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d631d09b-b006-48bb-a948-af3ce5574e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc2e84a-1463-4028-8baf-2d4dcdd4d8d0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b5db18-a328-4cde-841f-b062e9b2e902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee928b00-7225-4830-a394-76f690318dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb6fc55-e28b-408c-8f34-5d6c9c2371fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf7ff67-8d7d-4483-809c-94bd0e2ea305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed1b480-7359-4bf3-aac5-a7363f578c8c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3d1812-d5d4-4d80-8ac2-74b9dc0a0d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d407c4a4-0767-4eeb-afdb-11b73216d14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4408052-b45b-47aa-975a-24d3b70fa561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34092f59-ea6f-4c1d-8cff-4dc78796dc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbde739-e845-4a86-9901-a739d91c0df3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da17ed0-c110-477f-830d-dc0ab6678170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6089880-4108-4b61-a7a4-137e081b87c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d39d6f5-9381-475d-a0d4-881ee9237198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c938c4df-1ab2-433a-a210-50e275488023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac53bdbe-e9fd-4360-a88c-797f90c3d082",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c46ec9-466c-442c-971d-f5635056e22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58581793-6c48-471a-8969-be2937cbd87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd05ac3c-9a2f-4a36-b798-b41afd9751f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc896094-109b-4dd4-b05d-318b9e0b9fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246f1068-703e-425e-8511-d2cff882d085",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de983fd0-e620-494a-ba37-0f3f536f667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e082fc55-8b50-4399-b447-6fbdf499eb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bc6064-39d9-41ba-a02a-fbe048af9b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69b91342-5c7f-47e9-83a8-1372a2b0a169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a13e70-a62f-420e-a128-8da094b8ed3c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ba8a32-3ade-44ce-b8be-da9cf9a7c648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482edf4a-9a96-4300-9abc-73586c983956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119a0a0f-4a4c-480d-bb78-9e231d8d2090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c904f5b-8960-4fd3-acb2-7bd81d56a707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0a167a-1f14-4e55-80b0-5c5e0254a1d7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10914ef4-ce19-40c4-95cb-62de8a519380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd914049-b9d2-40ec-aaca-0f2ad0feb066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d3b80f-6c17-459f-adbb-bdce2a319371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32be190-c92b-494e-bb57-58c69a2fea53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0bb97d-080d-4557-8041-fdeae342fbfe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a85fd0-7973-4d21-8cb9-406ed0ed8dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbaf065-1db3-477a-b401-fa05512ea62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29b5fff-2e89-4953-8ce7-0cb572fe788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c075b4f0-4fa0-4795-b0af-c060d4a0813a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be8925d-3846-4db8-8d32-2fd9b0de208e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d26493e-373f-48aa-a5be-bb12804b13d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd17815-d7a1-473b-8fb5-1795710f708e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848b77f4-c1dd-4e61-99e8-0a1268827391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00b35c6-5d2c-4238-b07c-3978474eb15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f860623a-d32f-492f-84b9-ff50fea8c2cd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a7de51-6c72-46fb-9865-ac314c124acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7d1cb0-17d4-4286-bccf-4a7efc2e1066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d9b6e1-035b-418b-97a8-615006b1d089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "646beb0f-64a1-4bd0-af4f-c51519953091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92d1957-a17b-43b8-9b31-846e19e3e300",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9191f4b-2430-4aa9-81e4-fda350dc9334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e98cef6-c03b-47af-858e-a58bfcbb65ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba052f8-7b4b-4773-8e89-b3570d2d63d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba05e6a9-7c41-498d-99fe-b1756cd4b7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7f0f08-4f3d-4611-998f-721c377d9e90",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358d0a0f-dd16-4f49-a015-280d153f2ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa35a38-0f47-4508-8cf7-b8f10e0da03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66a0a93-de3b-409e-8a18-5da75f2dc724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "618afb19-2d3c-4e98-afb2-5fba22854770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5744d63-3155-47e6-8f68-c9e4841a3547",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136e8dd4-5cf4-432e-8823-0f5e47cf5225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a74a87-dfaf-4ab1-bf78-c1b6a79409a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb4d71c-6735-40a3-a501-892d36caefca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7361f0-e59a-4b85-84d1-ab8f68fa9c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d4acfd-a82f-4c0b-a215-45e9f61b9b13",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df0bfdd-ec5e-42ed-98a5-f213065cd7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0504754-2237-44b3-a893-39a600e7d44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467a3515-7e8b-48bd-8d33-d39548766706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d87ad371-0035-40e5-8a19-dabad5c32067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f521449-5dfa-4b41-b86d-78b0c208e777",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad57227-388e-43f5-8dec-7d5f62f35a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c64996-6a6a-4fd9-b8df-65be0e4de897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd57f1e2-b63f-4ae6-9d0d-6cfe727a3434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c97be3-67da-449b-a9ff-8198f12d9f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361726ec-7234-4353-85db-47fefed3d4f0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a698a1-ea54-462d-94b8-ba1bce861ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8081fe2-3de3-48bb-b66e-f0189fbde6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba50b231-66a4-4985-9c34-8e78fcf8999f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0d952a-1f58-467a-adc7-08c3604b7ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410924f1-20b9-4b2d-8fa5-cd0dec7475e2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6364608b-9d06-4004-9364-02f6ecc2ef55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacc031b-c69f-481b-969f-d5efe45b46cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0f2ed4-0900-487c-b529-13ded9f80bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf09a345-e55c-4e4b-9da7-91f8fa85fb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3c0bc3-c77f-466d-90dd-96c749d54f8b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412eed37-7d22-443b-8201-ab31073bce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f20736e-6a70-4b47-8dc8-56fd5b521634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c21a645-33ca-40b2-bd68-f6b653baea5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "acda1fa0-ae07-4e85-b27c-df9e382bb7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5575c7-b4fa-4238-9fd0-ffa2eaa590bb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cccb084-23ce-44dc-9d75-c3fc4a00278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a29ef09-27ef-4b04-b372-6b067fa58d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b66c221-7724-4984-be99-4d727c85df35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "467cd2b3-3210-41f0-b776-b84b62f2ebb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac44076-eed6-481d-84f5-08444b8122ee",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7728bec-d30a-4d53-b3a4-c81435f00bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055d6717-96f7-4db7-b0c9-8eaa62ede46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9a2529-aa67-43c8-a4bf-a361cf8cb1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7f9a8a-d518-4837-9294-f4b9241f7911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffda33db-75c8-4c5e-a0f9-eed25d02bd65",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b46f38-7652-45c9-9daf-7757ee6fc20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e67a544-d6d0-4fa0-b488-05bc62019099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080d9b1e-5182-4fb7-817f-221a273377dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9dd1b6-1725-4901-becb-082f8fbb0a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5aedb69-852d-4929-80f5-73e3b4d689e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49548aca-5086-4b2b-a363-34826aac2fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75f3b80-a670-4344-ab3c-049484154898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77b3ecf-2827-4997-a4ac-420fce547251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b98eec20-cd52-409a-8a99-2c226aba1685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab663b5-e5dd-4086-8469-04d60a42e79a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6a2102-55c5-4e95-9a79-57d09faa49af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceddaf2c-98d8-4229-aa7e-1b8e0d6060f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f65a02c-1c9d-43f3-96eb-44599ee6c653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a328f422-1941-4e4f-b887-991041dff226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee0db16-6c8b-4a87-beee-e908dd5a8d9d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b8dd12-6aa5-4511-871d-a39f5ef4083d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95271053-e3e2-491a-8712-eb0ceac5c044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9db95b-f513-4336-b6f1-48af41f7d5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "745138b3-572d-4b91-8349-590ea6be193d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0649a617-3353-4e20-8ad8-11253de2c8da",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37286720-e9b8-4086-a66c-429f8a4b799b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36def39c-0c1c-423e-a284-997f79626920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81e2282-0aa4-48b9-998f-2e8f09abce81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6d4aea-167c-448b-bbbc-8b69480af206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ace801d-7af8-48c3-8ad2-0efda402f7fb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87194cde-f19b-43d7-b7f7-491c8e44ebf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5859d2-93dd-4fe2-8f45-b7233d3fe336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b808f8a8-5ae0-4777-b41e-812f4b389aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "89795cbc-d100-4af4-9d20-bd852069f236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04240265-73f4-407e-a469-52dd8d722950",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d276326c-dc16-4087-84d7-0f316b6fbbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bfbffd-7db8-4801-bd24-a7671e01fb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62589ab8-8f75-4dc1-b8bb-44e600fb73db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcf65ad-b2b9-4a1b-a020-666026c95e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d03229-1071-479f-a464-da5de3c9073c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bef680-5f3d-414d-933a-22b527a0aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b79cfa2-50a6-4735-ac52-e6a05553f1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ab035c-624c-46cb-9f85-584ff9be5273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf22d79-f6e3-4790-989a-c59bc40ac7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9503c9-e645-4252-893b-c89a04afe40c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec0483a-787f-4ca7-88d2-c8f873b3c4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feedc9aa-80da-4eef-8583-19cdd9048dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f66442-19fa-4778-8b37-67ee44e42847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc95920-b003-4d15-858e-144f9d003da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9706ec-9cb1-4b4e-a9fd-ac6730bb794c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cbec01-59d8-4731-afe5-40c463a72f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc67c65-7958-47a6-8638-c772125404c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1852f0b7-2f85-4887-8bd7-338d7006b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81efeaf6-25bb-4c4b-bc5f-30752bc744a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4ba65b-c032-47a6-9ab4-1dfd2cc909ac",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d54f0ed-6171-4960-ba83-6fb99f1394ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e22dbb8-2f12-4fbc-a6dd-abdd8cc1405e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e29c7b1-bfc0-43a9-9531-e5ea4df3e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "181e6ea9-35de-4cf0-9598-4a737eec1c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ef2c14-c73e-4225-83b4-23b32067eb10",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3abb38a-1ee8-44b0-a670-5e17c85b3778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c63140-7f21-4246-bb8b-107c02edfb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8a06c8-db74-4ca2-a9ef-0c2843a72157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a42efd8c-0dec-4a7f-ad4f-60dfddac4aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8dc845-2e11-4356-b451-48bb865d16e6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e047c4d-8c05-49c2-8483-319d104d7c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1855fb5a-5166-4145-bfc2-775cde8a6a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6257b57-6d5b-468d-b74b-725573939ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "919d64b6-938d-4030-87bf-9b583c55a9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1a8795-e180-4e45-b875-1d3a473196cf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328ad3f3-c621-49c0-b504-b5e9d47e2302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f37fb7d-fe12-4360-8061-2d8fe08d0530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03db2db9-77a0-4bae-a9f7-2c9fb5e2bec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06799a3-fcc3-44ba-872c-860d6ce77a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581cacab-255d-422f-a812-11066ea6e418",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da957d00-146a-4265-9fe2-dea68df0d345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6d7f8f-06ba-46be-8263-0e63e5918d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fac16d-1bfc-4601-8c1f-a4a5418e0add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e18284-dd0f-4368-99e8-b6c27d1edfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac9d695-f8d8-4691-b7ea-47e802b451a7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe0783f-8dba-4485-84aa-cfddad86e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073c72c3-5f7e-4029-8e72-447c57882289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3741455-515d-44e2-9a1a-8578d823a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c033f4b-f9b4-433a-9e44-048942082158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98981976-94fe-41f0-acf1-49f14c44182f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f0d2f-75d1-4009-bbc9-7ffc968425f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b815a82d-63d1-4340-8591-df4be1688bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d95b75-5b7b-4874-a662-2a9940735dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "464aeb4b-2630-42f8-88ed-844f4f43bee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafd6de8-7617-4114-9980-b5b47dddf22d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a29a48-7051-463d-806f-4a601ef58811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a54ddf-fbee-405b-a6db-a85a2c33611a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bc1bea-cd5c-447e-b22f-ef66a37decc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53008ce5-0fa3-4549-a33a-9891e03a0469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289a1f22-8d9e-4ad2-9a72-3368253004d3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60247ef-7e3f-4518-8891-4de238ddad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b2e467-8f7e-4c3a-8d29-eff492a763e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58eff4df-3fc8-481a-a2b7-ffa18918c99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c678570d-b3ba-4615-8226-b5e68de0b164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a749c45-278a-41db-9d79-50729cac2332",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68332b03-8647-42f5-a92d-9de820407996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2a561b-aa60-4e08-bf48-3889bf4480a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f231508c-40dd-4c15-92ad-74c55b297022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4947d3-5f90-4d8b-93eb-e47d3dbdb6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d41b7bb-eef3-462e-8350-2c9622a7159e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e004b-6ed5-450f-a040-f316d175e450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed17f1a7-73a7-49cd-b970-faed54427f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b177531c-d4ea-4dfb-a69c-cd551b1237c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9eb786-19e7-40bf-97b1-759ef00d2c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7168afb-20e6-49e8-8a6e-6c475f4eef33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a02ec4-0769-4ed7-8794-c5cb36279688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec4121f-ffe3-4ac9-8e17-f1efae4b695c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5b5a85-7615-4b31-b095-7500b437c50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94fe98f2-eb06-418c-9583-d8e950852826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2340d916-84a1-4df7-acb4-759e79e5492f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b4cbe8-7526-47e6-afc2-0be3307942ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57de579-d42d-49a3-812a-1b025469bda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc45ab4-91b9-478a-86d4-afc18922764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3b5306-1a07-4db8-b69b-ad93206edb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c24fd21-8172-42e2-b7c3-619fb4342b46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b31106-1708-43a8-b721-2033d1d18d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9ce493-00f8-406a-bc37-4145352e7aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee685e1a-cac2-470d-89ac-3b7faa652987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b422032-2fed-40eb-b137-25d38fb528d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6f62f1-1506-4d45-a8ea-e26afa8a04b8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9f6729-f16d-41ce-bde8-2fea295ff8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac89727-cdbd-4e98-96f4-77246078bf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e26781-65bc-44d1-9757-37966dfc2904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a43aa3-9acd-4d65-a991-bf9d65870a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5074a0e2-9ed5-47ac-8130-e2187e154278",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05a7597-1915-47bd-8260-15b59d11c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a99e9-5027-452e-9d2b-de24d01caa85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec16fd4-a575-405d-b671-2f4b5c4d3ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecbe498-ffae-4837-a4d9-9a8b010de25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fced6aa0-2a1a-4095-b4c7-25ca7429c261",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83090ac-96c3-454a-b996-570e49454035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e81377d-f07a-4e94-b03e-cf83a595ef82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed222c3-7655-44a7-9668-a5a87ea42ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87a2cdf1-a3a5-4fba-8f17-002c5f0ee3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb3e1bc-4b27-4f99-8fb9-06052bfc75a8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a5722e-1b79-400c-859d-42d5e7c2e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5c958e-cb0c-49c0-aad9-f4fea8b8ace8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bceac1-75b7-4b03-889e-87739a84b068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8758fe9-1345-4ff0-afad-5e9c0cf65700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd23b44e-d5ec-4fcd-a828-8bd2ef644782",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3b27c5-01e5-4764-8946-7c9bba010f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d22b7a5-2580-44e9-b74d-e2d98068f8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa38b25d-5d58-4078-8eaf-3e8258c92988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbf8592-b946-4361-befb-be084b60229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c9cc8d-8824-43a1-8d93-8f89eb66f167",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9c74b2-efaf-46d0-99f6-c9fa2cb008f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec3da9e-3aae-4dc8-baae-fb0a1f1c55c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45063dd8-15de-45f9-9336-1b0bc89eeb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe551d0-f8be-46e1-8a62-283de239aa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1338617-f655-4c14-9130-e83dd32e3ec0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ef5a40-ae94-4996-ac1e-aa12e3bc9104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e970616-a716-49a7-901b-e0e7a5748130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f205bdf-528a-4446-9c44-2976e2e96002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f5918a-e9e4-4e89-accc-1769fb92cb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38316d31-7a9e-42ab-a5d4-ddae1ba4cd95",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d2ea5-2294-4932-b317-91effb880082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5a1d54-6163-4e35-8c86-5a74c027b5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f13150-108d-4918-9bc8-ea6ab4e793b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd06709-9d05-474f-9127-2898ba1e8b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f033808-a2b7-4d95-b16c-e0a60fb21b29",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddb7491-faf5-4be9-a616-bdb68ff91590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa7980d-1d07-4df7-b91d-8dd7c9c4bed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d291ebe-b54d-4ac5-9c9d-239317a42e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5bf167-87e0-4bf3-b202-0029cf384378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d3bd72-f68a-49db-acd2-53c32cde69eb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326d2c5a-45ee-4b9f-b221-f1ed58082662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2f8903-cd39-45ae-a9a5-7bf88fb7ee56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cbfa77-17d0-48ec-a9af-b12697a0becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f59cb3-26ff-41ee-9e74-9731df828c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002c0862-5465-46ec-83cb-c942fa4070fa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6876bb-d839-457f-9a0b-3a4aa499e478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb7bec0-83b0-40a6-a04b-a86fb5471afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a73f7e-aa52-4e40-ba64-1da452654dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7abe1c8-f6f4-440c-a214-f31fbb68c43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f8307f-75a3-48ba-8cb5-2194171c5b77",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02325ea0-0b66-4e7f-8c99-fe20aebe4b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086e7ea7-416d-433c-becb-f2959d260193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ef5fe9-a763-46a8-a2f5-dcf385f90d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f32bfdc-ce78-4329-a509-eec5db72dbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b18c71-5ea7-4a81-b7ea-a49383454fa5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6abf6a5-dd80-43a9-9d68-defeef8f0c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd01815-f56b-44d3-90cf-35758fa0c0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68dec0f-672e-412b-a0e9-562bf493519d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe68cc29-caaf-45b4-bca3-3fb18c3c7090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5905689-3d13-49c5-8416-2cfcaa344059",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c3c015-1955-4cd9-aaeb-07cdafb281da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8664cdde-29cb-403d-bf9d-a98d978c736f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3507e310-c086-4db4-9025-56bd6aeabc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4296a45-563f-45d6-81be-c301314c741a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb95811e-9227-4aba-a0c4-9929df80b90f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102f670c-5dcf-4d98-bd83-9bc219f96fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e13deba-d010-4697-a432-f42112054f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a455b4-4010-4a95-bcd9-7c21a835c037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1c31cc-c08c-439e-83b0-e1cd093563cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adff002-b242-4cf0-8bdb-2cb602eb3198",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4004152-e265-49c4-a25a-253aa1e04c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125e6580-1ef0-4eab-bc87-c55a4bda0ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08150a1-d5fa-4812-b52f-651fc926500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8d4422-06e9-42b9-97e5-12ffb5765e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0491f515-24d1-43c2-83b5-87b306ca0482",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41212ea7-8267-489b-926a-2e5f10d5092c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6f244b-3d54-4ea3-8105-77ed46c7a9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c76dde-122f-4141-813e-16da7f2ef60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "749dc716-4fce-41b1-ac54-0eab67d5a737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5abe1bd-13a1-45e1-92c2-e40ae0df3170",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6353277e-9ded-4a0d-947e-ae569df48e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee84d99-2d10-4c11-bce0-b7762e2763f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1951e583-1a83-495e-a932-c1bf5aa22892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a62e43a3-34fc-4b25-b94c-9b11238203c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e30faf-881d-4a55-936b-bcec06f1e9e0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8756d0-967b-454f-820f-ba9e29aad4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270d613d-5216-45e4-9e30-7859868e823d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bab448f-c29d-4f59-9de1-b6cc1219f4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30c66162-44c5-40a2-b446-3cde39e1b3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e9f18d-e852-4c90-9cb4-90e47e1ba931",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52947a7-742d-46b5-bf27-cf1551a5e835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4159662d-234b-4402-8393-bbec0f22e09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f438840-4b43-4b21-bd69-7ee0fde00f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17324c9-af03-45a1-83b8-50496098282d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be682be2-d52b-47f0-b773-1124f0cdcf56",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c697042-7d3a-4cbf-9a70-2d31dd9c3a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8168001b-f44a-467b-a55c-748f75d6e0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c388dd8-ac9d-4732-9533-dbec94f3ce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0481ac-b533-49e6-aeca-161872b9b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c81956-8e60-47f8-8dbd-2b6030561c1f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85d2f6a-9e01-445b-860a-d21855b478cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75a33c4-7465-475f-9aa3-c8acb98b727f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002e8229-4320-4118-9334-ee5963c16a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f172520-b3ec-48f2-b1be-80e832a5f8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10103ad-e362-4427-9342-831ceabb3de3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c69a06-56c3-4528-b48d-4630b0e02331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56994f52-bbce-478a-b90a-ebe3c981ac47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a2c339-e28e-4870-af12-ba3d178fa531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d434eb5f-e12d-49df-b456-0bbd2e26d212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc82f0f-cf65-43ca-877d-34f4f8c68c1b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbeaa57-ad68-4e45-a5b2-90c8d1234710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31943be0-8911-4a1b-ac80-a5ad672de67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee855eb-527c-4042-a508-382f23416a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b901d664-45b4-4294-8e33-f27a20e306cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831ac676-7519-48cf-a186-91bb0564de0f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2e2e77-f9e4-4999-aab6-e81eebfe2c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484cf3ab-b3bd-4a9e-950b-42bac9de262c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e79f9c3-60af-4802-95b4-f1c7c8ef2a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14abb6dd-a24a-4792-b0c0-0239c5e80122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0902a2-cc88-4f74-85ac-bf2ced68bcf5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac40b219-178f-4a2a-a0a3-9069496da98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3422dfe5-199f-4da0-9eab-4fce1008b00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd25a99e-c133-4b6d-967b-dc56d19bc506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2514cf27-c5a3-43e7-854b-2f057aa35ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b0c4df-11b2-47d3-84f0-8159616d2114",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade6abff-75b2-4288-9df4-78f96abe940b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b22c7e2-57d8-4109-bf76-75535d0097f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f441e6f-67a5-4c34-9743-2a1f84ab428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "113326c9-ae5b-4af5-b56d-b909f431234a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10a7035-7d96-4f67-8cd5-54af357b6c95",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257d0b84-06e9-4e49-9895-16a29c1812e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca6f297-5746-4035-bf20-5b5609297bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d154b0-ceb4-4fd5-bdd0-ab6b1d93ccb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b558f70-7327-43c5-9965-544e727a56c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cc61b2-e26f-4f45-97c8-13c696c8ae21",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf738db-5819-47bb-9563-dfe2f80d995a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a965222-af95-4852-8fd9-e9fc5c0562d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be45586e-f0ac-46ad-b94b-6896041f14c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "701c918c-694a-4782-9706-1b74699ae784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7aafa0-95c9-498e-8e30-02c1578164a0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd72652-7a8e-4b38-98d1-e50b8aaa7843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100ec560-f05f-46c0-86cd-d8e5e206bd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79823d34-e638-4d1e-a769-e94f4f4c59cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c556e85b-48dc-4cd4-84b5-876d4e74dd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c430121d-9cd0-406f-ba35-f4104a97f1bc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230b824f-0c07-49f5-a2f7-389c1485611f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "79bc8413-49f0-4858-952c-98a5945fd810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eefacf-993c-4f14-ab2a-f86a85f2c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a386efb-5952-4430-ba81-386195baa035"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d99bf27-77e3-48f9-a58e-45c898e3cc0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "877c9bb6-accc-4774-8d89-c710221c5079",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad05b24-7aff-49a0-8150-bda5812db132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "347758b2-6cf7-4d3f-ba96-bbab1ff96610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d72dc9-c618-4a99-9226-9c48f0d668a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e3c84b-6bc4-4db1-b024-751f0f713966"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89581bfc-154a-4b70-9840-ea5f408349ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55029a60-67c4-4dd9-a65b-f72aacfbd6e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fc258db-c14a-4fec-a30f-31a67ef76def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7411a44a-5579-4a8b-934a-8630000f6526"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7958e358-300f-469f-b7c5-9f2ea255a749",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b36f502-021b-46f4-92fa-5de1edc0e6f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a82df8cc-b18c-4ff3-886d-0a944e5a2e04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35cb301e-c8d8-4aa1-8ffe-e955d908ec71"
                }
              }
            ]
          },
          {
            "id": "f8048e70-9539-4ea6-a548-d1e6d3146184",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16b3b340-e811-4851-bc39-4692933da07b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c8b13aae-a0e2-4135-be25-3a00089ad54e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27c53ec-82f6-4ae8-9df8-777d32541b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "66499026-60cd-4aea-af55-ab80cf62c30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5080fd4c-5684-4dd3-ac59-c7051be124d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c652144f-827e-484c-bc3a-530e26725d0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df6205bd-3b75-40fa-b1ed-5c5e81d1f290",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e50974a-e34d-41a8-84c7-922ca61defa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cf1d500-8d63-4eb0-8644-9aa540f7e778"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "961d74ed-f4f0-48ca-b929-35e1b54dfe7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ece1e9fb-5add-45a1-b866-e22dcc342eed"
                    }
                  }
                ]
              },
              {
                "id": "aaa0336e-4861-42c2-abcc-8435288e7eb6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec9b85e5-3c9e-47bb-9c6f-ef009b97135a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d99d5265-fbf1-4f13-ae6c-3ca54fa606ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95993d02-3421-4d05-935e-b17797f770e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb810800-0c94-44e4-91b6-11c1c69e509f"
                    }
                  }
                ]
              },
              {
                "id": "499dd6e3-9af2-44f9-9123-12a262ebf891",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddcc3770-2aab-46e1-8c4d-4f72a7d133da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d3203d0-14fc-4964-a326-bc3cc6d8095d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f930c2a-e910-4b19-83e0-195b81706b9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eff27b76-fb46-4c59-8e9e-8707b616d652"
                    }
                  }
                ]
              },
              {
                "id": "4f927a7a-296e-423f-bbe8-e981110ad934",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3067edc5-fe55-4898-a30f-92b9320661e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d778ef53-d28a-4b57-8fb5-64ae548cf2f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6c0315a-de4e-4164-8a26-c50c3051191f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "90701459-b671-4b67-82b5-e1430921a4b3"
                    }
                  }
                ]
              },
              {
                "id": "deedd2a8-2f7d-4a64-a7d3-5d2984ebe61c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db788e4e-a302-4a5a-b4df-332ccf708e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ba1fb86-103d-4a45-b56d-c0da55f28516"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34888c47-9d06-4635-ad3e-428f30f6e766",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b66449f2-7b69-497c-b4e7-f9c9e497e42e"
                    }
                  }
                ]
              },
              {
                "id": "804e7ae8-5b5d-431b-af97-2a5b268ba1ee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a04e02a4-42f6-4fd1-849e-fa1b278c4429",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fce7e00b-9c8c-4da5-8ce7-d3ca72bee082"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be66fd19-5c23-47bb-84e0-f4162633ab1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43aacb8e-ce6a-457b-a56d-10adc293fc74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "511ab168-fbb5-4ed8-a6aa-ca634d7b0ee3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a313498-83ce-42e1-826c-eee019bbae1e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a2b7dd7-8648-4635-990a-1848452b6bc1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bcd5db7-fcbf-4219-a253-8e6a5fdc58dc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10cfa031-9764-4812-8df2-0620e7b2dffa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "06198143-a6b0-4d40-944c-97d1e5ecfc06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f79a9bf0-2be9-460d-ba3b-a1a1b9fb33c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6255312-3281-4b99-94f9-8293024ac1c1"
            }
          }
        ]
      },
      {
        "id": "2f1e1530-e7c6-4039-8d54-ef8443a9262d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c919fce4-3d1f-4f9a-b3fc-4a4e91d1bee2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e4bb273-1401-48ee-b2f1-e224ab55e896",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54b451f5-e51d-4768-aed4-4a2b3f2d1ba0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c26fd05-24db-4602-ab11-2dd6f69073a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e0db55-3049-4299-a152-33236c33579e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e225b860-83e5-4958-92ef-f931f175ea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "00257a4d-bc1d-43cf-a1d4-0b1dd4c5560e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11fc91d-1726-4f5b-bedc-3fbbe7a67a7c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bb44c2-206b-4c2d-8822-4cf7299ff369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc7396b-0e73-43fb-99fa-c721e2366c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2190d130-cd85-4689-beac-14b694708a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af424585-ac4a-43db-9dcd-99d2d203ff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdde527b-42e0-4fa8-a2a2-d30db53e27ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a167c3-9566-4126-826f-a1967ee1fe11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01cedbc-5612-4acd-92aa-caee81e4342b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aded8e7-6116-4477-8baf-6f6b6e94f87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "889304df-edda-41fd-96ec-5a9036140b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c659c7fa-6229-44f7-98bb-f4f213cb3243",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcfa704-694f-49cb-87ad-9153c77c05a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60f486f-fdce-4544-bdc5-7eb1b5154f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fbcf04-3460-4087-b875-41143402ce7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72cf1d7a-e6f4-4ddc-9bbf-e7318d8f4998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d239c0d8-cd3d-4ae7-a94c-581782258937",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd35e55-40ac-4233-a092-20031d7792c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4389be07-e807-4e61-a910-640a1536eafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7e0103-626d-4f0e-9830-b0e725a81bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31da551b-2a42-4948-8af4-371251b4da68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9e8653-e96a-4a0c-97d0-44b5d16aa74a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593e8142-dcd1-4f54-b4d1-dad40a01f525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf18866-26de-4e79-8a91-2b37e7604f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c259cf-295d-4d27-8011-21f566f54b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14e47fba-ed49-486d-a8f3-dc701b11d62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba5ca4e-6e8e-44df-97f9-3d7060ef5216",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c15da12-8719-47f1-a848-8b6b084ec6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0216e7b9-1a5f-4146-8cf0-b20ff59ca0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79fa705-9e5e-4a3a-a654-1bbeb45a4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe88ad9-fc71-41f9-ba84-1596f0e6a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53e3ac9-4b92-4c8e-a70d-c40fa46ddb2e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1446884c-983a-4c75-ac76-96691cb17d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba39b8e1-043b-430a-b7b6-968091df49fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1327fd81-0b20-434b-8455-c2a5f3a51328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae9b914-898c-4d44-ac3f-d1cb57da347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe4976e-68d9-4cc5-b71f-81be746b6e42",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f197966-31e2-4ab1-a703-174c887714b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6957ed8-aa4b-4c20-9121-9a9d210108a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6456648-8220-4c07-ab04-0d12be7bcefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6306550a-d758-41df-a06a-833207f71dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fc13fb-3b67-4924-95b2-68ea91dc2a76",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3717ea94-529e-45b3-a1b4-bb0249e6f9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b058dea9-787c-4550-bc11-885a25f28802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6498cb9e-a039-4c6c-886f-26a5937dcaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b1633e-0597-4bdc-9dbf-5dc6583d1acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b8e96c-adea-495d-af4c-f195c65100f4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb383d11-968a-4aba-ba8d-73ef74934c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2139d78d-bfbc-4945-9c79-4b5988edb56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5728b6d-403a-4a55-a1b4-a010120e18b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e9376f4f-0971-40fd-89c5-937ac6cc80a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b3339a-c4eb-462d-8b6c-14ad0145a826",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1309b1e-b110-4ab6-beec-cf425f29dca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2796820-6255-4daf-97d2-9367a59ca058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0ae9d1-533a-4fce-8782-54bc55814bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67f0b1f5-6ed8-44fa-aa80-77b99f187531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6d23bd-72a1-4925-9e1d-e0a250d12c5a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af900a89-d658-4771-8d4a-b00f483f1792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c72029-fbb9-4191-aa71-e279346f3213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc62ed7-6871-4a12-8c7d-00571ffe025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f84cda0-06e0-48c3-8150-4e0ff73a68f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbab1dc-b269-4344-ae81-df93efd2c51b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0250e26f-c388-42fb-a9f2-ff9e43eb6451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275d24d0-96ed-483d-8075-07b54ac46075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a524fc-8e45-4523-8b78-1f03038c0b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "44cafe5f-9c94-48c2-a104-986116c120c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d51fd4-49aa-431c-b821-b91c414eb713",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e0f15d-785f-4a8e-8acb-7df182a1f51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3cdbd8-8cc8-425b-a918-41aad00d7e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9acd948-b4cc-4e22-92c3-b9a72db6b833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c5db0d-89c5-4b5a-bf90-afb5b940af75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3c31ea-1eb0-4f6e-a4ae-b24ae26817b5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8399fc2d-c46e-43ab-b1da-e1b8b912ae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4377227-7859-4ea7-a31e-2f622fb2a87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ecc7a2-a3fa-4224-94e9-39ca82cfdbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33484b1a-c94c-4653-b676-a3ae0288ca8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975bb961-978a-4703-9965-afbdd1422898",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d798a2-1831-425d-a929-c07ce71bc825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5291ee1d-8b9d-4365-b152-ec712cd4157a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47f3123-b651-4c4d-ab33-96c0c9c11832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04acb33a-c9b7-42cf-822f-0f5dc9b35ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfdcbe1-2b6b-4f83-9144-9e91ff3d652b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5202477-7e87-45c0-aeef-1dc2b1d5545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c695ea4-3eee-4a91-94b6-eb8c3ca80da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ffe469-9477-4cbd-9310-d0565c9fb6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0e967d-18eb-416d-aeb4-c09cd02e0382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b96039-d026-40f6-83cd-5c0200f3511e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6736811f-5e82-4adc-bb0a-1d646977b89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d73e043-921c-4e8e-99de-e7fca6df3c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24c6090-5ed8-4887-ad54-ca120f66a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ad10f1-ef51-4d1a-8d4f-f32f65d9ae6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e9d73e-e664-4c5d-991a-e4b04d593219",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8202fa-6c5e-481e-ae94-e4c8c4997dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ce9f61-d43a-4048-8fab-1acd65bf47ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6e0c4e-dacf-483f-a7b1-9ba245c3968e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a17a57-21fe-452e-a5d9-4f839cde7c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb6e963-04be-4fdb-8352-e7b1664b0691",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d60a36-a9cd-4509-9689-84bf1a63c5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7868c4-562f-460c-a811-e00593445829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0e59d4-0b80-4178-a9dc-8dbb0ca0634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce0b7e9-8d3a-4a57-b230-5eace0e149bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d04e993-dff3-4869-bb35-0cfc9741550d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f69476-c68b-40a2-9742-0025589a6c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357142c0-046b-45b2-baeb-06679ae8820b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e56b474-35ad-4dc9-a2a9-82a106c992af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0814bb-f830-41b6-8394-055a0688ab63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaa7b71-f859-4e8f-b6eb-e7b3ba18928a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b035931d-97d0-484c-a1b6-76d8052dc193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86916d8c-4d79-40dc-8240-d200c76fc2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68f9bdd-b725-42cf-aab0-8403b0cc14d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63a5cd1-3b0c-4225-8905-85b18e4d558e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6bb169-2a36-49df-854e-32982655486a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5362d21e-41a6-4fbd-a2b2-d8cf11270c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cfaf0b-72e9-4b9f-8656-242de7d395fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6679302f-c279-4438-844d-09886b20cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12cf375-d622-42a5-b311-27a630f5f8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394ec190-36cf-4202-98eb-9689058c9133",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea887786-1aff-4d55-9120-b708ef08e02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacd8e5d-031c-442d-aaec-252539e3175a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb8a2bb-4601-467a-a034-f379a5234aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd447ce9-ef33-47a3-ac17-905790bc1772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af9f79d-d8dd-4509-ae75-6e142591629e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79805fd-b132-44c8-bd17-5ec1e9b6e722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f110361-9b60-4501-bd77-5a19d33e1169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa4f822-ba50-4340-82fc-8563fef6c85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f216a0fc-1beb-4f06-a0d6-92dbb5f771b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93f661f-350e-4912-94e4-740a7f3ed7ab",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dcab42-2f9d-40ef-b893-7371a4749187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2501076e-a1cd-4c94-aae6-eb883b586163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482296de-6692-4b6b-a5fb-fd1d14f17f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "592eb70d-c71f-4a68-b295-1e8391653d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e49c699-9f12-4d52-8aef-ecbde741cd97",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde481ba-c856-43de-a938-c22c9d2bcf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da636f3f-909d-4cef-a936-46916ab62bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc6ec3a-3ef4-4ed9-824c-3930643f8ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b671d9-33e6-407c-93a4-57328080e5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9911b6fa-08e0-44eb-a4c0-c1564e133d9c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2b1962-4b4c-44e5-a402-50f6565a0b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63aa8e93-bbd3-40a0-9e4e-164df6685cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13dc90b-99d9-4c7b-8bee-e70c1404cc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6696454c-f501-4c49-bfcf-11ffccee6454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234e530b-2838-424f-add5-cf5d654ae243",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7140d3-968f-43cc-84eb-2610527aed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d46b197-8991-427a-a115-d30374de6445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b4d08a-2543-48a3-90ad-024c8b878e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312bced0-e4bf-4d28-a44b-865b08d7ed9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc41fe2-155b-4ce2-a679-1e771c9e9a11",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b38141-83f1-4a1b-9e79-51b2f9704c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5120a463-a86e-4f79-9e75-fdf88a1ea771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a334b35d-6665-4631-bae8-faf4fe1df13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb65720-496a-4a62-80a9-1dde417b4689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff56083d-c492-412f-90bd-75676fe88c1a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bb08da-365c-485b-9254-9da7760512fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7b9fe2-4a30-4550-9890-1758751c94fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bcfbbd-8db2-4782-b934-220a6ff106f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fac90d-ca30-4375-8397-ac6da6f040d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded12b79-5a0f-4072-b0bd-d1af983d3ea6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b4d56b-a0dc-4b2e-95cd-386d4ee75616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46563d6b-75b3-4745-9535-7510362d73b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7609608-7242-49f6-b675-3cfd213320b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3ffd1b-e07d-4a74-ace2-25a2c8073524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e9ea29-8674-4692-9097-7c64e26d03fc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b1cb63-adf4-40ff-a435-747b9dbfa60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b079ed3-fbea-4b98-bcd0-efd5f8fb3f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ce7e0f-e47a-48cb-b879-f2730481013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bbcf01-7e3a-4157-9e5b-816e0861cef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ab3e76-521f-41d5-9498-c4244250b43c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c20a7d1-0ccb-4f97-9a24-bf45bce537f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f3f69d-96af-4ba2-b711-13b93a0b211e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cb2b7e-eba7-4c55-bfa4-0983fa1a8b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfc3cd0-b53a-46f9-b31a-138ed25edbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fea00b-a2bc-4e6c-b027-dbc223fd307e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaad793-e89f-46d2-87ab-8cca4ddc5790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514c7c3c-0340-4159-b7a0-336e1304234b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e98be56-bf45-4087-9828-c54e9f2c9557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d62c50-69dc-441a-a782-6c20293a3712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6d5afd-ce3a-4fce-9fc0-ab0de2588c2e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e951c8de-d82f-4331-86ec-f0598eaace6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137bc53f-a247-4187-915f-361bf43284ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6054397d-8e9a-4e91-9754-e1a6056a1e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7548fe5-bf88-489c-84e6-3f88ae972985"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98e69087-a87b-41a1-a53a-a89e962c5611",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "faf1ea82-22c6-40e3-9d22-14c59b645cc3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be26cde7-9f3d-415e-8c3f-51220cfcc3b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29afe5dc-48ff-4b7c-afec-e0cf11c718fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2541622-d821-479f-88a9-dc9fd45aade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c01b1d55-2636-4b95-bfe0-44915a58f9b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b884141c-e325-4f9a-842f-cab154f0aa4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfd3f713-8eae-417a-a199-23ec986878ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db35c0f8-a0e7-4da1-9003-3657c9d51ff5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40d1e379-9c77-4cab-9dad-ca8547096b3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfe0fd7c-c83f-4dce-a0e3-a2c5e1666620",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a47b3a3-ed17-403c-a80f-4d5949bb84f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5793b7e9-9db3-477c-8fb0-998b2c4daa4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c6a6565-8d18-485b-914f-54c363147681"
            }
          }
        ]
      },
      {
        "id": "5f156504-5e1a-47cb-b8be-111e5ade9075",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8d08a4d4-22bb-496c-9585-134cfccd08f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92007eee-bff1-4470-a8c9-0d431ebffdec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17e7dd29-ea79-4d68-a2ec-5733beda56a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf094c0-e898-410e-bd10-ed609d90b344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca825325-ae95-4107-8b01-ac610297a648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd18281d-f028-432b-8d69-1f4db9ff5c16",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cc8730-ba1e-453f-8573-f03f70aa55f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c267a4-510f-45d4-a83c-1df07dfd3ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63166384-2dd8-4f6e-a8f1-ffcb22e09238",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1b6c49-4b03-44b0-afe7-f475306c8696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18246c6-97d2-40db-a66d-00150302e267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32714221-5460-4cfc-af0d-fd60143ed2eb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e294ef2e-006f-4a72-bc01-6badcc28cd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a03a76-4194-48df-85d8-460022ee5236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7484bf1-100b-47f9-8398-06f9fbd2d218",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318c0e5b-e019-43c3-93da-9c9ca59d5c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fd6c26-83a8-47a0-a6a4-73f10a429ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0b9eab-81a0-4349-b9f5-1b3677849e2a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8cd21d-2780-4fa4-9775-1a9aeb8b16ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc863d12-6c3e-4239-8947-b0296c92a003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c26783-5c69-491e-a34b-555d05873139",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64486fa3-2219-4974-b0f0-8b4667b90280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c0556a-6e9d-448f-a87a-66c877663143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd4bf95-7a3d-448d-a700-c4a3b814338e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daaa7e9-3574-4226-992d-52c8c81f6244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a325b36-a4b7-4e48-81cd-ab2e851af831",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad18433c-67c0-4b6c-a5e7-4f8164b74ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c31525b-e5fe-42ea-b3ee-8bce988cacc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9473b7-7a38-408d-9fa6-be988559bf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3867d495-177a-46a2-a19c-36492bf6a04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a563ac-c6a4-4a44-85e6-c7305ce0e6e5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f5a7b9-bccd-4d22-b55c-63a1259d1baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3db517-1024-4ef2-ba62-d0587e2ee6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba56520-95eb-48cc-9bac-6eeaed387c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469c9a0c-b615-4700-858e-6b144b99d1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25959987-7ede-493f-a686-18ecce16b437",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f21894f-d40d-4443-bf62-9a0bf8a7c6eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba60b2f-d7db-4741-8a40-b1b90c7dd948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3246ef5f-cc90-4b66-99a7-13677acd9864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be207e83-7cd9-4f9f-9813-fc74050ed121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea67796-b663-4610-8f8a-3d3b5e5e6bd9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a285d58a-54c1-49df-b8ec-c31f87451dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8473e3f8-9c62-43be-8450-b221889453c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe4b144-9a88-4514-b9ae-4fad304d3169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1a57fc-0fd7-46a2-bff9-66f1dd8306ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9b9008-c2d5-4427-8c20-eaf1ac602416",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc89d5e2-4161-4875-bb4c-cb0eb00823db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db38061-b08b-4687-bdf1-39213a417725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9804a8f-68b3-44c8-a9dd-d6325e562da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3340e171-01f3-42ea-804a-d83bbb86b6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59da2284-65a8-4575-a387-b270e3c96798",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198edf78-8bd2-4ebd-bbb3-09ed6ea4e3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9a7c1b-fd14-4306-ada3-870752302248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66d33ee-65b0-43b7-b0c4-08b71baf43a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9655db90-eb8c-4f5b-9edf-1defd3bde640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711f297a-4aaa-4d4e-a754-216ff79080f6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcd1772-43de-4d83-988a-1324fff1f01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc6700a-0602-4961-abe1-648cc67f875d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532a7b8d-87a1-490f-9806-dc7a1d3fce15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7131d900-d8c3-47e5-934a-46c1374759f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e5db04-172a-45e0-b6d8-1c86d295d675",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db22d32-ca66-4377-9957-44cd91ee716e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c47886-e850-4634-9731-ddf0e1428d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26634df3-4fc0-473a-a59b-0eec6aaa2f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bd8415-4546-4936-8562-f92ca0db5d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075f0ff5-0007-4594-ba3b-97b76f183575",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30fa188-eea8-46ff-aa11-58a9e3b61319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74afbd5-4c5d-40cd-a7a6-ef439bfd4ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0e619d-2a5c-448a-9a96-07fb5d88c115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f300b99b-e54a-4ed5-b580-bb6339c529e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ded905-3806-4bd8-b25b-f39853797a80",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f60586b-e6ea-405c-b042-c019bb4c52f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12a2f73-a467-47ad-bbf6-d9c85c2e4861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99e9a0e-c3b0-4542-92dc-28b20bf4fa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37643245-0ba9-44b8-b7e8-b4636795e283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac58c161-59fb-418c-b0de-d23e27b669d5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0d5149-a2df-41fd-bab6-68214aff2b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11efc855-97f0-4812-9b11-7acdecc76996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf1df10-cede-44f4-8167-70106cb17f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004a5753-3522-4da7-a542-740d2a1f3bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cdd77d-3d26-49bb-a0f7-a869c5ee7f9d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239af330-2fbf-4fea-8867-95d054fbcc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffef796d-ac2b-45ba-bdd3-ecae0b2d54ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d855c83-8111-4634-85ca-49315650d4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98db6df8-bb15-4ecb-b546-1780e6824d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59d7b46-70f7-42cc-859a-fee8fe94f4e2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89447089-180b-4253-ad1b-51831a59d71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed7a22c-a8ba-43ee-a35e-5b266aed1408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925936c4-b5a5-4f1e-b0dc-beb8499940f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd4b18-2bff-425b-8353-489736bbbba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f04beca-57b3-45c5-8f28-74602594d1ac",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75ab9a9-c6d7-42a0-82c8-fe5fbfdddb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401e8814-6a1d-4d02-8f7a-1e34dfc9f586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08731b80-c488-4ab1-a343-7ff4a415f94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628dc6cb-10be-4c4e-899b-7dafcc525fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb97490e-9433-4c9c-99f7-ec67ccb0d07b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7306a286-48ac-453e-8170-84fc66594b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d133e2-9591-484a-8b9d-19152f2fecd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05659448-52bd-45b4-995f-63cf94e5f44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d63f93e-ac0f-4205-ad10-d81c83d34125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fba67e-e320-4922-af42-1ce07e7bbb07",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3346e0-f18a-4b1a-975e-3ea0e48024da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45804aa7-621c-41dc-8cb7-f7e80441c83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b187b3e3-1933-4117-8035-5ce7c69074e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de070432-2d1d-4f3b-aefd-e6933274846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0561330-2fd3-465f-9e5e-32926b9b5757",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44320e35-0c20-4ae4-8e3f-7281668045e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac800365-8db0-472e-a155-bceb98f3cf7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d225cd28-7ae4-44fb-8e64-d2d90979a328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5771ed7-90ca-4cbe-b77b-9b4f284b487b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc2fd90-8abb-4a10-b823-8a3940c75fde",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d390dea9-c7e8-43b6-9124-31b3d47abb36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d83ee536-b699-4a19-8db0-f4491ab77fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdddb67-fe71-4ab1-bbbd-ba0ba9e7c027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68933716-8a78-4cf0-8f9f-05be2fcaba33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bef3fd-af9a-409a-a007-ec927d89702f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54f1e3c-cb98-465e-a37d-52eadd0713ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d039d5d-57d8-450b-a623-b9365d093f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a111f2b1-746d-41e6-89db-6ebf3a5cf1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6211dc4-3804-4c16-add3-a8a3d8d270c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20c53d6-cf23-4846-8ea3-4260d27be0b0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24836282-dc9a-4717-8f93-30bafbe74626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf0e485-46d7-4d29-8d83-3609daba00a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed71bf6-a388-4084-8b31-257a4533cce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37ec5e9-4ba4-4e85-b372-15838184f7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55f8a6d-bb0a-4458-9e10-e316f1f4b444",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dee02d-c97d-4e37-9f87-ee1df535aa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd5791a-76c5-46f5-8dfb-6b44ed6bf1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5532c520-4b34-4319-94a6-00433f3bab6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5af6ae8-a69a-4590-9a94-c6df22600c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd1b382-304a-4b4c-b912-f922e9faf7cf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee3e646-44d9-44fc-854f-8b73fc719297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876915e6-c628-4ecb-99fb-042ad0c3000a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28088b94-e605-40ed-b2e9-ae8b61d26f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae06fccb-f5d5-469a-b200-b34bddd90031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60c8be8-ad23-44e1-8dff-81163b777615",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c774dbb-e83b-467a-a9d1-caa4033e1f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a213d63d-10e5-4cc5-abf2-a196b8f4d56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb1e016-c7db-488f-a4dd-62c3e4e536a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f615d1-3990-41fd-915e-19b9e54c4025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff31ebb-d317-4fb0-bfc9-046419e6ed11",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c178e7-db77-4fe0-b8cf-869185d5d8c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf4a092-69ce-499f-bb70-a5159af74094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47dcbaa-39da-49de-a6c4-dab5cf5860c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe3c708-69c6-41aa-8885-acf1561dc3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87883ae0-58b4-4b95-ba03-fb15d5bcc962",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f071fb-1e6e-43b9-af37-2433e0e720d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ab7db9-4204-4edd-a933-93ce0858c969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b1c1a7-5135-4674-8d9f-883d08ed18a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625b5701-729e-4221-b2d6-3621d03d62c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b864579-a458-4dc2-8787-aa3851eae5ac",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb5e827-282b-4e70-bcc1-2583d7366fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b449e529-c476-4a84-b32b-63a5d77b31ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b65e264-2fd6-44e2-8a1d-9caeaf5c745c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e102651-7836-4a3d-8943-f8eb318c2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9403da3d-b3d7-4f0f-822d-d7b64e428460",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372f5f73-81ec-4344-a86c-a32e9655e4be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a1a951-597b-43b2-b0be-bc54bfe2a7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044fe7be-5425-4859-9ff6-6fdf16376d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f07d7b-8da2-4a8a-8c13-a584c159a92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8025d45-2dc8-45bd-95bb-97e32a6bc839",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fb96ea-f87a-44b5-92e3-4ff27084ec13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f20018-f3f8-4f0b-bd86-df8f02690f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab8c9c-aef4-43b3-b061-a3721b8c7de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f31082f-2e99-49ed-84c7-859be072898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b320625-2013-4c73-9498-80e1592bb675",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919c68a7-cad0-4a6c-ae54-2b173c35442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9cd36e-35ba-4584-81a4-13126a2ead74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdbb65e-c573-4b8d-af44-0972761e8ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f33e1b5-f625-4387-8ea0-10a63a309250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9172352f-eaa7-476f-8699-19a0f2bd1957",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7e38a7-b258-4d92-ae33-2ae02a16ccc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4735f6-d0e8-47de-8f1b-d894db8da1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00467bcd-e4ee-4340-a297-f1a7d8070367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3465f7c1-4f00-4ba0-a3b3-ce351f776f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4b727f-039d-4faf-939c-d27690d67969",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066321dd-dff1-406e-93e0-7744b97ec6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dc58e6-6439-4f43-9705-42548fdec9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b398ac-7762-4218-a239-880928e7b1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf37e21-da29-4aaf-bb05-ef517f43de31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920cb616-f67a-405c-a828-2f0942eeb166",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a224cc13-4170-4cd9-bc05-af7c0a3fb859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf3de46-fd22-4482-b9ae-88da4938d85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee72383a-7ae9-453e-84e4-2b4a45d654f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f149d14-bd81-4e90-a2e0-82a5ae18776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a8b00f-72fc-4c8c-8c32-3fc2b39885f1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d93c3fc-f391-4724-9a9c-5a9868d5c555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d7ef55-cb9a-470b-adb1-b7d250feaa8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b9f819-a02a-4a30-b332-99b48e91831c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8450d714-9fd8-48af-8631-e4741b77e8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d63c68-c1cc-42a0-aa9f-6c3472c4b648",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8cc9a5-4659-414d-986d-008b988a3fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28527bd5-6a57-4535-88d8-97dc0d5ae53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5687f46c-e9bb-477a-8bfb-5b22e79e486d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb0b71a-a9fb-4ec7-bcff-aa1da06c5c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac29262-81f4-43c2-af66-d2e378210ab0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778cac9e-9fa0-4438-8fab-3eee980570bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50edf566-60b2-43c8-b8f4-b8d2c733211c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2038a5d-09fa-42bc-9685-1d707969fa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25be106-0d09-4987-aadd-e1d19c473312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691a2715-26d4-48ce-9f86-98c8f710d9ec",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113379c1-cb5f-44eb-9b6f-e45bd670ac3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c12789-9675-4dc4-84cb-182672d739e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3df5ff1-a2ee-4edb-9a3f-21593d2364df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dafcd5-0590-43bb-9a5a-9e16392f152d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74f7345-20ad-47ff-b942-f345df69e374",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ee9206-0d08-4608-a78c-32a2e418d61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97845845-ad8f-4aba-bf12-ab1f3e184326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b416a5-072e-4f01-ba66-3b594bb5f634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46471d0b-fe40-43d6-a715-0d92872a7df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3ef1d3-2b4c-4124-8519-79974ffe47e9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323c6b7c-7077-4780-a6d9-4a9c3b3ef155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85750082-14e7-4444-862c-e9284450d867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea3e6d1-20a4-4328-961a-f94af971f70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56f1019-aeca-4c18-95f7-0a063876bd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e57132e-dd1c-4070-b686-508c92a9fe8c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce311ec-631f-4016-bcac-bcce2595b856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6506a6b7-8d9a-4252-9ed9-d6322dcf25df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a0a39f-f05c-4da1-8bc6-6f73e31eb563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86878342-3271-414d-aa2b-5717e1a6790e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c87a24-3863-49b3-bc8b-d2ae6bdcfcfa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93b3db2-4efe-4e57-b2c5-38e840eb47db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297b538a-8ecf-4303-b241-13d6451a3717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0083c9-b5fb-4195-a4ff-9d4846569ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821efdfe-ebe6-4ca8-88c2-5eba7d79b282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fea092e-deeb-46ea-897c-3dbb4957ec79",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4266b8-02ec-4af0-9d8c-2f081bd2cbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c187ea-427a-4c6d-a3a2-e79e589bd39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f6e2b9-58b5-4a07-912d-1f3131f93ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203c6e7c-0358-4086-a869-9bf121487f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dd8318-c405-47dc-bfad-a3492bfdb2f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458718a8-ed58-4e8d-b283-4466521c380d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66c122d-7d78-41cb-b36d-f32254d61ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16465448-f3bf-4456-bc4c-56618579a59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f446d6e0-3d9c-41cf-bec5-c071c412e0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad87d08-8c20-441c-a3fe-c00b0f845f2f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35077302-1a31-4fd3-a4ee-deda85852019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84ea971-19cb-4735-b800-00818c08d50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157f98dd-a35e-44f3-a4f1-804dbb394ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55c9e68-eb5d-4ec0-a44a-aefc9b7c3d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeeee51-ed00-46b8-9f6a-ee23e547696b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dc0e4e-8b13-480a-bf63-00ff6f3f0157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fb9968-abc4-421e-9724-da6e5ebf19b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ed7e23-179c-4dcb-b8b3-e91baf25f394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc8096-be00-4545-b6ed-31a586219d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fab917-ff1d-4de6-8cf4-297d857aa48f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abd178a-07a9-4bcc-9226-5a3e07cf0be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcd6ffd-cb33-4ba6-b1da-7cb6b0190caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae8f817-d4d8-44ad-84eb-9ba03b59eb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060d3903-f7c8-42e7-992d-1e686743eced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba5cfdb-b4c6-4118-bdf0-9a6a69b83126",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956cc707-5ff4-45f9-a482-85a47d50f3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ee94dc-83cf-4b82-9d83-c9481f5af36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569fa628-ab5f-4f51-a672-4399c125c3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a44f6c-f397-476a-8064-663ca451654c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030a05f2-d2fa-4f59-83ba-b5b2756458fd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cd640b-7034-4ba9-ab73-8eb5e4981b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833a04b-7e32-43c6-a85c-f4171faf571e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef6bc9a-a4ef-42c6-b307-58ec5e97702a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc76765a-a54d-4009-b7f6-e31768efa739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f0cec3-5cc8-4a2c-8b88-8138d6355cf1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061e664b-4e82-4a18-aa51-4fcc7a76de7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a251a1-6b2f-4aef-bca6-f28f76b5fcd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9c8c35-938b-4efe-a14c-c65d754c9c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d27455-8407-465f-bd04-bc3b6476e099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b873ca5c-cbca-4124-8440-5c2bbdaa43bc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ffeabf-d9f2-4803-b8b7-4335560d1303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078e0300-a53c-43b9-b171-25820bfe6820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1baf019-d9cc-4497-8f5a-d4ea9199bb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83363357-6f73-4c91-a04a-d013e423c965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0c7722-c05b-461f-a5f7-ba2f3d565c00",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba6cddb-6287-4ecf-8599-efdddece6584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea476645-1540-4338-8ad3-9ca41472d150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4af96e4-325f-43f3-b862-c8b89ca52870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a17641-4b62-4ad9-82d1-348d855209ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9ba106-337c-42e3-9196-df1fd47f513c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ff8dbd-76f2-40fa-97a7-a50829ef4203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44a4db6-e8fd-4928-8463-696e11ad157b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976f2888-8c88-46d4-9f4c-bae9f31aea4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9672ce-3c47-4f64-968d-a90f9d3b5f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d986e5-ceea-4fe7-9084-8a5b50b40864",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad516f1-0a07-4f85-bb9d-72f51fa3d824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5600365-64ed-4709-a4d6-728220d57173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ec3f67-34f4-45e3-ad42-8371f7769cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251b1282-a52c-4559-a55d-feba58bf397c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecd95f4-e3d2-40bd-8c32-06ee5d00f25a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48b5185-2e42-48a6-a636-01c5f432fb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c9c367-b3f9-447d-95ef-ab3dd3794500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347e6027-d546-45b2-8afd-33cfdc69cf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f5c890-bdbd-4f85-a230-1745d8ba6c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2774c9ce-e9e3-4b69-a230-3e10743b001e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699f9976-5615-44e7-9535-2f18e09e33a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23daeee5-d2af-456d-8783-f612fb8d3f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886932d7-8652-43e3-b704-82fdfb9f59b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cf94db-41ba-49f7-91c0-098bb157f9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c932c679-caeb-4eef-8870-a85d386c83f4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7889848c-fb77-4e77-a391-77c714964199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2194c77-f9ea-464c-b869-1456134a13ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58839616-84a1-48e9-84b4-d2f9a87c56f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ec8378-af79-4956-919b-03ba6d6ba6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b431ef5-d467-4c3d-8d11-9b57bfcc93b8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848db60d-b373-46f0-99c3-2a70c6d0739a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f20316e-7357-4ba0-83c0-987db722cae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5e01b6-8ecd-47ee-a9ad-e140c43ad41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e146ae40-6357-43e1-94f7-38d7e831cdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb82ccb-aa92-4f6a-b5a5-d8a405518868",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f432d3b-73b2-4e88-9995-ec925d252668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885e7a7d-5c63-4693-bf24-dd27379c94ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4b4666-9d20-47c8-a07f-b071c8793fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751074c4-642d-402b-b951-3238d55841af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44ec81e-85d4-4a5c-916f-335f9a556fec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29291d05-03ba-4928-9b2b-e1214bf93390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b2d5db-dad7-4678-8746-db9f7a306059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8210a4d-20b2-4e6d-ab27-98f23eb0e08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcdda2e-4e8c-4ea2-8b99-401fa2e26092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafa1e74-588a-46e1-9d9d-fd6bb69bb74c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438ea6bd-f21c-41ab-93d0-e35325d38b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22e3389-0d2a-406d-a59c-90bbc31f3719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9455b843-0f5a-4dee-9d18-051b6b4e9f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aa39d0-c497-4748-ba3a-3a1c82c478c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54521ada-4aa9-498c-be99-52183dbf70f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5daf5a-f7b5-4ca7-ae26-ea49ca47ae12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc4d5d2-14da-48d7-99b0-29a8c6db0e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5400a920-dbf1-435e-be14-b64de8272353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf34c9cd-abb5-401f-9661-6f9461dc2eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917c160e-c2b9-4fc7-adca-2a8354460ddc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b6ecce-3a38-4db9-b50d-b430c3721b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd471d2-1855-482a-b290-bd1bbd39ca46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e88cafd-5fcb-496a-993c-894dba0e8ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ba3d5a-bda9-4e2c-9d0f-1cd0a668e69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2ee0fe-fc0e-4aa2-b2a6-d3414c9cd610",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8fc207-c5f1-45ee-96e3-a2e200039cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a0dd44-29f9-471d-aa2a-430cd715e96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e9aea6-8e68-4831-9d50-af8b30b8209b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9833bf-ca4d-4e3c-aa80-72e5db27adf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d7deb4-b21c-45d9-9ee3-cd4766993e19",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876914ed-4712-4dbb-a849-888a1c864145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e336ddd0-e127-4902-b857-a6428cc3bc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c16060-d579-455e-aad6-640ffbfbdea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3052bd53-8acf-4294-9c55-d85bcfe963af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23638f29-2b42-427f-96f1-51d2ab216a98",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0dcf5a-1636-4197-8ff8-f6905ce1ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032e70ec-f355-4abd-b8fe-aa0cf25f39cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa673e77-833e-4425-8746-7c3f4033baa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43068cd2-f45f-4f4a-81db-c960c0e6448b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eb5478-68c4-46c9-a11a-69cc4b7cb28d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb50bfe-2345-4dec-ac04-c7ddb897cd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8aaa29-7b76-4ebc-bf8a-d677be918ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b5e07f-55e5-4f18-8ab7-7d2165c402ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad3b856-4bcc-4da2-ad81-6b706a838891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013fbdd7-951f-465c-b4e8-f76e88139b73",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2dcf2d-d6b9-409b-ae09-33c8c21eb105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ae7d56-1229-4f1c-a042-801a4bc70294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5d9eee-30bc-483d-a1f9-613af2cb1791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70472194-92c0-413d-b6f6-30e2ced7dcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3695856-83a3-4a4d-b1b2-205eda3e10dc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e30777-1ba7-4434-b48b-1e92be4ab5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b295f705-bbee-4cef-98ff-4d80726818c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87acbfde-b2eb-4ccf-8200-8dace9ee7031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6363e074-11ca-4f31-b132-fb665da0d7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f080f-21ed-4120-b171-2520d2186590",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bc80cc-93a5-469b-b735-209300c37896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5388de-e82a-4a6d-ae95-3a54af990022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba43c6c-8aa9-4761-9cc3-6fddde072f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab106cc-91f2-48ea-a61b-a47698596c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5280a6a4-df0d-48fa-94c0-b49444c3013f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734cb9e1-7041-46b8-896e-948c6e14a4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "482d75a5-80f8-429b-8d87-afe563150a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced6b518-3cc2-45ac-87ba-60a38087a1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbb562c-08a7-4d93-aac0-0642bf542003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb451e1-82b1-4ba5-ad0a-2b08499a96d7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dfcc6a-a1c3-4664-a926-461fb7057dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21c5bbe-1d2f-4d4c-917e-3a8f76fcd101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e8cfc-a6dd-484d-ba62-ac7df20c7291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f68e6c-ced2-49d3-ad6f-7e71e618be23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d03d5-1c52-4f44-b387-05d2f85ce0be",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdce65e-9bf2-4bd1-b575-f264a7192062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe52b1a-5179-4379-8bd7-c2cb76a0db4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb88b88-ac1a-4c5d-a9a9-d3be7ef945f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7199753f-06d9-48d0-9a95-f7441f176a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69038db-8702-4664-bfbd-6021ce9e8c56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80ad1bf-8656-4183-93c0-7e1accde3371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5056d8e-a8fa-4f7e-9095-8b3451af9645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a849bd-1b34-4a22-9d8f-92466d4e257f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98490e7a-0dfa-404c-b6ea-3acb186ae634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4b2c58-7999-4301-b352-d33f0570e5fc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611d0220-8285-47e5-a837-745188a05630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "882c1408-5570-4a29-a4bc-fee397290286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882b2bbd-7dfe-493c-8240-31c8c2ed5315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbcb10d-9275-4a73-8bdf-0b58635f7e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4a003c-aa6f-4969-b978-ad390a7e50ea",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e03464-0f72-4b4c-b94c-6173fa22387e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1700026a-2c36-41aa-9f3a-c10bd8977a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e206d8a3-c031-4d1a-98d8-e43dc8b57aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f85846-a90a-4fda-9afc-c27a26db9a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2ced16-8fe9-4683-85b3-44a6967f1d00",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d0b98b-effc-4bee-b372-a718ffe07189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c113839a-2db8-4618-ad51-6f4067e8bf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1267c4-ccd8-47f8-9b3e-c4f9f514f69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c638236a-9e6a-41e3-86c4-e67c51a39662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663f2e90-2ad2-4fc6-b8ad-2f6ee874b0ae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2088b1f7-0bbc-4529-9413-3a7fe6107352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64349d7a-89f1-47dc-b435-bf026513066f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d796a06-1934-4abe-8bfe-bd744d2cef58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4334b60d-ffc4-4baf-b208-87574532ede1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7cca59-b9b3-478e-9695-a1d6605b933a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631f441b-48c3-4f3e-be9f-433d998ac773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba65830a-dddd-4225-bec8-d626b170c1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015012ae-3fbf-4630-b2f6-6671e3ed644a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8716966b-0722-4c55-bfa6-0fd360af2f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba87e699-bc3a-4d66-8b8b-605f690a7aa8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6766ad-cf04-4200-b394-98a31c68eeba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b20593-6471-4270-a5d1-3ad21e104185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d670a14-dca2-41b5-b792-258adc48cbed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3401d832-0d3f-4725-9f73-ca5e11ff8650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f72ab40-37a4-41d3-9c0d-d46f89592e4d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdce26e-2374-4064-aa59-86eb8dc39409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b17af8d-ddab-4d21-aab3-e6a40f0d3221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8823d27e-757e-4607-8734-f20709c7acfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26288212-e4e6-49e0-9981-4ad2a5bd9d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b94d3a3-bd1b-443c-81c8-3716e8001716",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cbfda3-5bf7-4b95-b048-3f97f76539f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b40a43-b9bc-4b49-b662-2c15d2b62a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044cbd78-d32d-417d-8b60-7fb5215e5970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2839c2-3603-45aa-90b7-fed7643cbcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f9b4eb-340c-4c29-8a84-c9295463476c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ed2f4-1ab6-4bbf-9c1f-8c2a7d47e469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b19715-6e90-40ff-8a68-d736e01f83e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7296f477-0a7f-403f-a137-b295baae0a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257b644c-1a62-491c-ac1f-87b2d38e85da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a7d8fd-0c32-4269-be6d-5bd5460027db",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f175c9fe-3221-43cb-b0d3-93b88da0ef7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f67c19-e005-4169-b4fc-c3b836409f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de143055-3678-4a9b-aa0c-93d3e0192d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced8fd57-311c-4955-af3b-f5c47b5e3eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c90cb2b-b605-47b1-8f7f-51c287604f83",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838b8920-6ae0-4e22-8c64-44db19671bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f664b5-1b50-408b-9d88-768dcd18898d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aef24b5-5a2f-4414-b877-474db9261fb7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9001c900-dfc9-436b-9372-b6793f683a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaebeb6-da0d-444e-8137-9cab2902fecf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96e5d68-dfd9-463b-9ae8-a4ebc13ef87c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acab390f-ec5f-49b4-a8f9-88930eadaa9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c65bd06-d4bb-4813-b691-37eecf0c7a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f84331-b6ff-4ea8-9e50-b767878aec09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e2884c-d65b-4698-b862-242f1fa8fbb5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7fb937-a017-4b42-924e-e3656594deb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bd4c2a-1484-4d88-a741-80d314e28045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866f6669-6700-4c79-8838-1e99a4c31e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01e8cdd-0223-4070-8869-1f5a35ab0f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253423ae-7118-4358-abe3-b73f85bb7816",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c38d637-6635-4a42-a8c8-d3e1cf203e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eef9c3c-d943-4802-bd43-939ecc1a0ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff9d893-adc3-4d9f-8962-dcea18981929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5673ca33-bd0e-4cf7-8b76-eac21022f4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcc4436-fa03-4b0f-b42b-350a0f3497f6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bfd7c0-9e81-49fe-add1-a15358f9af53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ef50a2-818b-4833-b437-cf508d6c4815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7923127f-d2ba-4d16-bc96-970f51d9f0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7428a0-820f-485b-869d-d3794c6e9673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06edbdd7-dcd7-4b7d-be91-1b3c5f6d2c0d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff38234d-8271-4ef4-bafd-1e1535c71915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3256d1a-023e-4d3f-a119-6593fce5b997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b306fc31-87c7-4888-bd2e-fe91c333c920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0f026b-d954-40f6-9dee-9698eeafcfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2517bd-9009-46d9-ad03-38ebf34cd72c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea98f098-99d9-4cb7-921d-d313a613582b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1869c56c-0d65-4983-b332-1ec7578a2711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37a0e4a-e7b1-495f-b94a-3e840e5f0969",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172432c4-923a-4642-b788-c18babda2430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bc5823-10c1-4726-87f0-ed8e129bd7aa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0160570b-d2f3-4a2c-a957-0c74fe7079e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f365df6f-d5ef-4f1e-b998-2d91e6410212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3923dbc-e898-49ea-a78e-c6a106c794e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0357c63-a429-4f89-b2dd-45110354528f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c83fe5c-a9f6-4309-aabf-ef920d89e703",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fbc059f-b43a-4dc2-93a5-b2f1cc70e5d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "271803f2-8fa6-4d09-9aa3-74b6c8e7a04c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "032ad9f2-4096-4497-aebf-95adb2d7eeed"
                    }
                  }
                ]
              },
              {
                "id": "bff1afb9-65ec-4d9f-897a-84994cf84f19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b769ed7-97f5-4ba2-bc22-be4227e9b0cf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790e8eee-e45b-4c09-a0c5-6b9645efed87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ad99b738-6fdc-4c08-9734-5a580aad0073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfce8175-64c1-4fae-a63d-13460c286e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39e9ec16-b2b4-47cb-9aec-9ecad3c198a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21db7509-bd78-49e2-820c-6c047279d32d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a76ddf4-a090-4521-81bf-025920a60248"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90b249d1-bb5a-4338-acee-4c608deefd3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "136b8f76-fc4e-4ca1-a360-8005009f2209"
                    }
                  }
                ]
              },
              {
                "id": "621857e0-5112-46c2-8738-196e1291e232",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c3f92f1e-7f58-4dfa-af8c-6c65504eea42",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3950d29f-4fa9-48ce-98ad-2355082a139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e4ac562a-0b59-4255-af2d-f435c82c4128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bd6199-bb7b-4514-8872-b2610c7c9344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61ae80b-0f6c-486d-ae5c-16a5a4096727"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "58d9c4f2-abec-479e-ab01-7592af656f34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86895dc5-5dbe-4f90-82b1-f8b596fba8bb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f26e49e-3662-4dbb-9354-9018255243b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "afdc4a32-56f8-4195-8760-ac672570fc3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "999187e5-3864-4961-961c-ee8e72c7a082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b624f9a-1a01-486e-8733-3c830e329147"
                    }
                  }
                ]
              },
              {
                "id": "b67699b7-1de7-482d-89a3-c1d92df67e04",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d962a421-664b-4404-8b3d-b7c917ebd76d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a931b05-e5bb-46bf-ace5-7f7575e50d58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feb027e2-7e4e-406b-8d30-a8a444da1062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a333640-a39b-4ab7-b96d-9f04ddda6edd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93ea82ae-21af-4546-a430-bea23c1002ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4cd2ed4a-3304-45f7-b891-e317dad25d04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "574d00af-f442-4820-ab66-341d6bf9c61d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55f59630-58f4-480c-9687-806fcfcbdb48"
            }
          }
        ]
      },
      {
        "id": "b4f1e793-3ef6-4164-a5fd-3afb62cf25ef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e939182e-5da5-43fc-8323-82b66e648817",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a062f1dd-0d07-4ed8-bf86-a453e911bbb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e13269d-6428-420a-9081-d047e8114d73",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f449b1cf-5fe9-423f-8bf3-eddf904cc34a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca537683-75f8-48fe-a210-121415cb727d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9ebc50-2db4-44fd-bc83-53a2e1ec12f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8fbe3cb-aa6b-4618-8a40-3600e9979509"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a70a993-80ca-40d8-8c24-0e03dfb4fb12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91366737-7bd1-44fb-a451-721c53864eaf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b938af8a-800d-4737-832c-29686f350f43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97077499-adc3-4682-ac98-4535d5874342"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b37f5ae5-5828-42bc-bbea-ca327e3217a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a0947760-af1c-443a-92a1-5d081024e445"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d08f7e6-a61e-4269-a132-4e99443052f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05ba4e3e-65a6-45eb-a87e-8e4f03260aef"
            }
          }
        ]
      },
      {
        "id": "0c30a629-58c5-4f26-aea6-1890733d2686",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b10be752-107f-46cd-b4d3-95bb6bcde918",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22a18db3-be9d-4a8d-9161-ca30a94ca16a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb41c8f6-4883-4efe-abea-cd358dc7d50c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ac93c-51e8-4045-9942-a7d498de5293",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96fa0288-f0da-4d98-b7ea-805f6d2dcf02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7016dbea-f0d3-490b-b450-2d306d137393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01b0e221-ad7b-4f1f-9975-ff65fba7840a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e61dd6bc-907f-4b07-b135-584d48c03298",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "751c2bb8-f36a-4409-b82e-c0d8d01b0c1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02ae3706-69e2-406e-a0be-8b809031dcf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65459539-1cc0-4deb-9e0f-17b599d08746"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aba42cf3-47bb-44e7-85c6-b3fcf0ba4abe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25c02af2-33f3-4325-9508-d65d2d866833"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f7789d9-e93f-4135-8e18-67a119d80413",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fadb6f2-20db-4910-9a0c-e3dbd63e8489"
            }
          }
        ]
      },
      {
        "id": "aac17239-e727-468f-8150-9ac12b58d998",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "525832bf-f0f7-4615-8826-3a6d627dcf21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "143570cb-8cf8-4094-bde6-912270a6f08a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "381c101b-059b-4ef7-9528-7f3cefae5291",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27f623a-e8df-436f-917a-fe252ef932e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12558028-651d-4207-91da-129c0cf68acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8707ff2c-3277-4995-b5e2-65663779ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77e95e28-5ec6-42da-ae5d-4a45969935c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42915bd2-f466-4060-a1c6-2473ec37636d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5179794c-6d70-450f-b58d-27c36985a930"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf423a1-7e92-4d02-8d95-c7ddd6b991c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b560097-30e5-4b7c-bdf0-cf2a99ebda9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f226c9f4-ba65-45ce-9324-970d060934f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccf1b09f-c692-4c72-a024-d702221bcefd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a70b5e48-0fa5-4259-bddc-4593e584cab1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bae74a83-57b0-45aa-be67-756d9507cc99"
            }
          }
        ]
      },
      {
        "id": "97cb5044-e111-4a87-8203-59ad44402901",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7881cdfe-25d6-4c0c-8f40-6bfa0e9410fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0711042b-89a3-44b9-b4d0-d3c1f6316854",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "35078a70-db06-42dc-a1db-6153c3996dec",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47a28daa-6560-4a0f-922b-fae13a602ae7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b11d49af-85c8-4df3-9807-52bf78015039",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 771.7500000000003,
      "responseMin": 13,
      "responseMax": 26371,
      "responseSd": 3947.751428128887,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727829909482,
      "completed": 1727830112595
    },
    "executions": [
      {
        "id": "7d50679d-6d58-4318-8cad-fea34cec9f8d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3ef3d348-ef51-42ee-8cdf-09f1279c2a43",
          "httpRequestId": "9971ee3f-3c53-4cc9-b064-b9e0359480db"
        },
        "item": {
          "id": "7d50679d-6d58-4318-8cad-fea34cec9f8d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d6006422-72be-49fa-ab64-87d1bc623165",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "a5d55c57-1edb-4754-b802-abcd446cb9f4",
        "cursor": {
          "ref": "79478452-a2a0-4fbe-9e16-5e291f108222",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cc8a81a9-0c3b-495e-9f4f-cf1ef0ddcef7"
        },
        "item": {
          "id": "a5d55c57-1edb-4754-b802-abcd446cb9f4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aa1b4cda-8d65-4b0a-8460-24ccbeb4abba",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "4bbdfd4c-6e1f-4d2d-a4fc-aa3d9f979051",
        "cursor": {
          "ref": "39679a19-f45b-4dfa-8ad4-84b4f4ea718f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7e6bc162-63bd-4500-9b06-8a435d7dde2f"
        },
        "item": {
          "id": "4bbdfd4c-6e1f-4d2d-a4fc-aa3d9f979051",
          "name": "did_json"
        },
        "response": {
          "id": "1d117de8-13ab-429f-a8f2-87384c7e45e9",
          "status": "OK",
          "code": 200,
          "responseTime": 440,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccebba1-8c47-45ac-ae08-ee481b51c54a",
        "cursor": {
          "ref": "fa9ba08e-1fe3-489b-8f0c-e75ca0978960",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9db182be-5a81-438d-a621-211bbf7de13d"
        },
        "item": {
          "id": "dccebba1-8c47-45ac-ae08-ee481b51c54a",
          "name": "did:invalid"
        },
        "response": {
          "id": "13c09ab1-6245-4bc3-a9f4-3906c8ae3317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2385,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccebba1-8c47-45ac-ae08-ee481b51c54a",
        "cursor": {
          "ref": "fa9ba08e-1fe3-489b-8f0c-e75ca0978960",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9db182be-5a81-438d-a621-211bbf7de13d"
        },
        "item": {
          "id": "dccebba1-8c47-45ac-ae08-ee481b51c54a",
          "name": "did:invalid"
        },
        "response": {
          "id": "13c09ab1-6245-4bc3-a9f4-3906c8ae3317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2385,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ffa60-814f-43ab-894d-53c16be57d0a",
        "cursor": {
          "ref": "f2a847b5-b149-4bc3-be30-2f60123b7f3d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "13f21ce1-d331-4248-a5e1-8d4d17b52245"
        },
        "item": {
          "id": "b32ffa60-814f-43ab-894d-53c16be57d0a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b43449f1-4a14-44f3-beed-36eb01c1dc17",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2774,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c271eb-defe-4b5a-8908-2bb467a87502",
        "cursor": {
          "ref": "c578fccf-1b4e-4000-9077-b0b9b70894d7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f69a9179-0622-4828-b412-b65c6f09e339"
        },
        "item": {
          "id": "c5c271eb-defe-4b5a-8908-2bb467a87502",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "60528e86-cf1b-45ce-8953-c3ce3e067216",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2263,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3cf6a4-d7d7-4a30-b49b-c1f27a437058",
        "cursor": {
          "ref": "d757cbde-c954-4bb5-b7b3-875240689a80",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bc68a1f8-ef71-405d-8025-9366483c2b96"
        },
        "item": {
          "id": "2d3cf6a4-d7d7-4a30-b49b-c1f27a437058",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d31e48da-a518-4b5f-af48-4883400abc0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868a1fa6-1774-4f68-95a2-f0bb2f5c856b",
        "cursor": {
          "ref": "075c3c1f-4a42-448b-afe2-ad7d9d0474ad",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5de644ae-4ae4-4af0-a6d5-9330caf75688"
        },
        "item": {
          "id": "868a1fa6-1774-4f68-95a2-f0bb2f5c856b",
          "name": "identifiers"
        },
        "response": {
          "id": "8a2b724e-9534-4253-aac6-01b3778b80bd",
          "status": "OK",
          "code": 200,
          "responseTime": 2684,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0f1d8a-3040-4b94-bc43-54285572e59d",
        "cursor": {
          "ref": "d7e87fa3-430f-42f2-b36f-2a90a7a7387f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9f3ebbb2-e972-4ba2-8bf0-8b1032f20d02"
        },
        "item": {
          "id": "2f0f1d8a-3040-4b94-bc43-54285572e59d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3218a4d9-8d73-4fc1-bc6e-bd0d0dfaafe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b91f38-eebd-488f-8861-ad42ee09d024",
        "cursor": {
          "ref": "ef952a19-128f-47e4-96f6-651af9e8a14f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7921ec7a-4ebb-4a75-aa87-0993f6faa812"
        },
        "item": {
          "id": "c7b91f38-eebd-488f-8861-ad42ee09d024",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f7ac8d99-90b5-4ca2-9238-5c0cc483dd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68b994f-2401-4984-a67c-ca43383dfdd7",
        "cursor": {
          "ref": "02cf6492-92eb-4e71-b5df-9e518feab312",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "04487289-f58b-4117-990e-14db8d11ec23"
        },
        "item": {
          "id": "d68b994f-2401-4984-a67c-ca43383dfdd7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "736764d4-4dc5-4a39-bed8-e5f582494678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70938421-7fee-4f3b-81d7-6b147686be9e",
        "cursor": {
          "ref": "a23065d7-e9b8-419e-9d63-ff70102d089d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9ee035d8-14bc-48db-bec9-f08d26b7cc30"
        },
        "item": {
          "id": "70938421-7fee-4f3b-81d7-6b147686be9e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "948d618e-cffa-409d-ac4c-4b0b212fd588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931df955-da75-4e38-a4b7-0c5abe6ce894",
        "cursor": {
          "ref": "f812aa50-c390-4fff-b311-df89597081f0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "29a45c1b-1808-443c-8798-5329e7b9df0c"
        },
        "item": {
          "id": "931df955-da75-4e38-a4b7-0c5abe6ce894",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c2c30bef-b79a-48f8-bc2d-92095fec65d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0a7af1-2235-4606-878e-66018bcb2f43",
        "cursor": {
          "ref": "13503598-bc8e-4a0f-b69c-b580aeca08c1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c7f15a3b-1b04-401e-9490-c4bf8b61ce9e"
        },
        "item": {
          "id": "cb0a7af1-2235-4606-878e-66018bcb2f43",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c2f4cfce-76ef-4281-8473-ccaa1bc9d0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdabd9f-3fd5-4bff-bcb1-07e25dcb0984",
        "cursor": {
          "ref": "566cb563-afd7-41cf-83ab-39f9a9c1fdcc",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f7439040-58f0-434f-b807-653b176e08d5"
        },
        "item": {
          "id": "2bdabd9f-3fd5-4bff-bcb1-07e25dcb0984",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4bfd989b-437a-4d35-a25b-6d1a525b2799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758c88fa-c191-4849-9925-df6d9491ec9a",
        "cursor": {
          "ref": "914def39-43cf-42cd-b282-6a88dfa64a1b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ed601649-2cda-4054-9dba-6724a9b1e6c9"
        },
        "item": {
          "id": "758c88fa-c191-4849-9925-df6d9491ec9a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9f17bd3d-a202-4e78-829c-fa17616c0c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7ef9a0-f3ca-4211-a2e4-ca399f42d7f7",
        "cursor": {
          "ref": "ec4bf4b9-89bc-4852-8f65-ce8254b81def",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a8c2a616-a5de-4931-89dc-595e964eca30"
        },
        "item": {
          "id": "7b7ef9a0-f3ca-4211-a2e4-ca399f42d7f7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eecb8343-0303-43c2-82ef-774ed0fe9c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed938814-367a-4856-a572-85301c0749ef",
        "cursor": {
          "ref": "2b0ddd78-0815-44e2-9651-8ee3283b195d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0bf423d5-9dca-4f7e-b068-cc31affd22d7"
        },
        "item": {
          "id": "ed938814-367a-4856-a572-85301c0749ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f9dfdf2a-28d1-4077-8b01-5bda45c36aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30486881-1f2a-4cef-a241-5df37302422c",
        "cursor": {
          "ref": "626429ec-b1f1-484e-84d2-eec09547665b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e8fe900a-9782-417e-8a31-7bacec9bb2f4"
        },
        "item": {
          "id": "30486881-1f2a-4cef-a241-5df37302422c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "31932103-be26-4f18-8df3-50ff9ebe2173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7049634a-d78a-4041-9aa7-1e4366212311",
        "cursor": {
          "ref": "5645b7d2-c414-4507-bc25-be4062f710fe",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "500fe27d-a838-4608-9877-c3874546eed9"
        },
        "item": {
          "id": "7049634a-d78a-4041-9aa7-1e4366212311",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8711196c-be55-4cdf-b7d9-56ef2b9b995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a965436-e56c-4561-be1f-438d8919fa33",
        "cursor": {
          "ref": "b4052895-2316-40d4-9a05-f6883e9708f7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4add40eb-3739-4445-9d62-2822b2f5b38f"
        },
        "item": {
          "id": "0a965436-e56c-4561-be1f-438d8919fa33",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5a4efca5-2d44-47a8-9ce5-b5a659ae44b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa22472-959c-438e-8bfa-733df487851e",
        "cursor": {
          "ref": "e026212b-9a42-4081-a7b7-b29e9e3ab907",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1824156b-d3f9-473c-884a-7be6e2f359b7"
        },
        "item": {
          "id": "7fa22472-959c-438e-8bfa-733df487851e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b23997a5-88e5-437b-98f1-50a873d5167a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e99fb4-5634-42b7-a90e-d9e5417c894a",
        "cursor": {
          "ref": "729a8b8d-e81e-49a9-8147-054b00e8ce1c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42aba014-5c86-42fc-b31a-479a5dca1b3f"
        },
        "item": {
          "id": "97e99fb4-5634-42b7-a90e-d9e5417c894a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0076f9d4-73e7-4793-8c4b-a2e320ef67cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1f6292-e005-434a-a09e-106fc69d258e",
        "cursor": {
          "ref": "8f8fcbbf-ce1d-4470-97f0-08df60f9b8b6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "03a09d7d-ad21-493d-ab1e-97db9ca56cf5"
        },
        "item": {
          "id": "fb1f6292-e005-434a-a09e-106fc69d258e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c15b0719-76c2-4d54-9765-36a5796fcbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f117c7df-6f12-4c4e-9f8b-310e0350b3fa",
        "cursor": {
          "ref": "349cc291-bb59-4614-8aaf-18613f706e5d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "437cb318-e936-446c-baa9-9a21a8e6869a"
        },
        "item": {
          "id": "f117c7df-6f12-4c4e-9f8b-310e0350b3fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "097cf0ae-ad79-4098-93f0-9e7f82baf0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc2e84a-1463-4028-8baf-2d4dcdd4d8d0",
        "cursor": {
          "ref": "10892491-fb69-4ab7-a0fd-a3fdf15b6557",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0c2c5fcd-0b18-4640-8135-2452d0952e9e"
        },
        "item": {
          "id": "5dc2e84a-1463-4028-8baf-2d4dcdd4d8d0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7151b56a-c2f4-4970-9ab3-3dbcefe04332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed1b480-7359-4bf3-aac5-a7363f578c8c",
        "cursor": {
          "ref": "ab7ebcfd-658b-4ae3-921a-8af2023b8877",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "59df27f9-f7f8-4f1d-9e95-0b6bcefd52c1"
        },
        "item": {
          "id": "0ed1b480-7359-4bf3-aac5-a7363f578c8c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "42c42c64-4cef-4c43-9bb9-fc00d05cd16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbde739-e845-4a86-9901-a739d91c0df3",
        "cursor": {
          "ref": "5c71a0ce-c8c3-466e-bea5-5852e2dca0d6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bc2872c-7d8b-4c8f-a440-ea50cca87f67"
        },
        "item": {
          "id": "cfbde739-e845-4a86-9901-a739d91c0df3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "538b3834-8489-4185-a858-d706aa77b81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac53bdbe-e9fd-4360-a88c-797f90c3d082",
        "cursor": {
          "ref": "edd262a9-56af-475d-a558-8dfd361f19f3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eeac26d5-ca77-432a-a176-d95badd1a06e"
        },
        "item": {
          "id": "ac53bdbe-e9fd-4360-a88c-797f90c3d082",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5a4da06-a19d-4816-978c-0400d2da4c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246f1068-703e-425e-8511-d2cff882d085",
        "cursor": {
          "ref": "7f9161db-7c80-4d89-8397-f81c1f3004bf",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f8040f5e-2484-4922-9400-e3f674771494"
        },
        "item": {
          "id": "246f1068-703e-425e-8511-d2cff882d085",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e0ef9ec2-56de-403d-9155-31c41982336f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a13e70-a62f-420e-a128-8da094b8ed3c",
        "cursor": {
          "ref": "f47ae4e7-6e52-4b29-ae64-60a41bca693b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "75d2fd87-4f30-42d8-b4ee-91f681907bf1"
        },
        "item": {
          "id": "47a13e70-a62f-420e-a128-8da094b8ed3c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b04b6d9b-619a-4f23-8bb8-a31e61d598e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0a167a-1f14-4e55-80b0-5c5e0254a1d7",
        "cursor": {
          "ref": "2c16576a-096b-463c-953c-ef66cfbf019e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "63d607a5-0ee7-4b43-a233-7a968656dc4a"
        },
        "item": {
          "id": "1a0a167a-1f14-4e55-80b0-5c5e0254a1d7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f5ced5b5-c7ff-4284-aa98-616e11261423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0bb97d-080d-4557-8041-fdeae342fbfe",
        "cursor": {
          "ref": "6fdef93d-0b30-4a44-b5e4-9f2c1baee4da",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "db7b5b00-f127-44b7-bef0-2cd4d91d8f5e"
        },
        "item": {
          "id": "7b0bb97d-080d-4557-8041-fdeae342fbfe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "af57d60f-19a1-4fdf-a726-7c368abb89d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be8925d-3846-4db8-8d32-2fd9b0de208e",
        "cursor": {
          "ref": "b147b56a-55b6-4b47-a8be-c513f19c3ea3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "834432d2-a73d-4b29-8fa3-9759855b8e90"
        },
        "item": {
          "id": "0be8925d-3846-4db8-8d32-2fd9b0de208e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "67168260-0c71-4dee-bbcf-3c76112264ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f860623a-d32f-492f-84b9-ff50fea8c2cd",
        "cursor": {
          "ref": "8bd83078-e708-41a0-bd6a-c2ae3b816a32",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2030a19c-6c90-4255-b43e-6ab64086f623"
        },
        "item": {
          "id": "f860623a-d32f-492f-84b9-ff50fea8c2cd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b3d73329-a890-4236-a9ba-1fb66e669eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92d1957-a17b-43b8-9b31-846e19e3e300",
        "cursor": {
          "ref": "03cbfa9a-701d-4d67-8634-df62672c15bd",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "012a6c62-f380-438b-93f6-e8a8b2fcd5aa"
        },
        "item": {
          "id": "b92d1957-a17b-43b8-9b31-846e19e3e300",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c3b0d869-7253-40b4-a10d-b0f7106764ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7f0f08-4f3d-4611-998f-721c377d9e90",
        "cursor": {
          "ref": "84656956-808a-4345-ada0-c7264f98d675",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6fea5332-e73b-4744-9431-9f22765a3eb3"
        },
        "item": {
          "id": "6c7f0f08-4f3d-4611-998f-721c377d9e90",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aa3c3125-5eff-46ba-9438-ddb143860b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5744d63-3155-47e6-8f68-c9e4841a3547",
        "cursor": {
          "ref": "34bf02c5-183c-4ab8-99ed-0a91ea5b4eb5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "02e8e8bf-3f5e-4f65-9439-e9cc8f553ad4"
        },
        "item": {
          "id": "b5744d63-3155-47e6-8f68-c9e4841a3547",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5828f568-0675-4d67-b718-04e270ec8d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d4acfd-a82f-4c0b-a215-45e9f61b9b13",
        "cursor": {
          "ref": "0a5f44b0-ec28-4570-87c9-ac9b688f581f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "300da26b-1612-4156-9997-7428d024979f"
        },
        "item": {
          "id": "b5d4acfd-a82f-4c0b-a215-45e9f61b9b13",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "79faa522-660e-41f5-840c-acc20389ec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f521449-5dfa-4b41-b86d-78b0c208e777",
        "cursor": {
          "ref": "a8fdbe45-62a1-4e94-bc12-63394cd9408a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "95c49aa8-0474-46da-b1d0-9c098f6f9887"
        },
        "item": {
          "id": "8f521449-5dfa-4b41-b86d-78b0c208e777",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5da7ad47-0223-4fe3-bc41-c7d7f57adf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361726ec-7234-4353-85db-47fefed3d4f0",
        "cursor": {
          "ref": "c28de2b0-8c22-43f2-8110-067dec2bec5d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9f6f7faf-ccb6-4c1c-ae4b-8d22b6fcc7ac"
        },
        "item": {
          "id": "361726ec-7234-4353-85db-47fefed3d4f0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "079f3eaf-f615-4cba-8bdc-116c55cfb485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410924f1-20b9-4b2d-8fa5-cd0dec7475e2",
        "cursor": {
          "ref": "29cdb1d7-9bd5-477f-be18-f376956d53bd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cbc17543-7b34-42ee-b4b6-d13fd9d208dd"
        },
        "item": {
          "id": "410924f1-20b9-4b2d-8fa5-cd0dec7475e2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "558bbac9-73c9-496c-a0c0-f8b0019d87b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3c0bc3-c77f-466d-90dd-96c749d54f8b",
        "cursor": {
          "ref": "5becce41-43d0-4fee-ae53-63ec3a3acec7",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0a0cf705-d0ec-4303-9fcd-1714a2f07255"
        },
        "item": {
          "id": "ae3c0bc3-c77f-466d-90dd-96c749d54f8b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4b32e735-c71c-46b5-8230-66d3d77d2b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5575c7-b4fa-4238-9fd0-ffa2eaa590bb",
        "cursor": {
          "ref": "8b7433b5-442a-476a-8ff7-f96b38012f4b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a6b076c2-fa2e-407e-b006-91efa23e4121"
        },
        "item": {
          "id": "4b5575c7-b4fa-4238-9fd0-ffa2eaa590bb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9923fa55-c028-43d8-9e16-50be656b73bd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac44076-eed6-481d-84f5-08444b8122ee",
        "cursor": {
          "ref": "1c66c921-c663-4ba2-bd91-acd336f28059",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c848170f-1101-4db3-a86b-a1843bcc2a17"
        },
        "item": {
          "id": "5ac44076-eed6-481d-84f5-08444b8122ee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b8da85d1-2b02-410a-a561-38b5b298250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffda33db-75c8-4c5e-a0f9-eed25d02bd65",
        "cursor": {
          "ref": "571a0e28-bfd7-47b3-896c-962b69783dcf",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c7b7b2d8-dcd1-4e19-94ab-abe9e6c6344a"
        },
        "item": {
          "id": "ffda33db-75c8-4c5e-a0f9-eed25d02bd65",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "82b51361-47f6-4f79-bdd4-23cdc9bdc8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aedb69-852d-4929-80f5-73e3b4d689e0",
        "cursor": {
          "ref": "93db8070-11d9-4c57-870b-57cf22839f32",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3fac0f06-8a7e-4e6f-a970-22ef8d0c5c18"
        },
        "item": {
          "id": "e5aedb69-852d-4929-80f5-73e3b4d689e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a755ddfe-9660-4b54-b65e-dcb86d15cd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab663b5-e5dd-4086-8469-04d60a42e79a",
        "cursor": {
          "ref": "af9e3e09-4093-4ac4-9d12-818e96850b70",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "48e6fcb2-85da-4f23-b08d-5579facf5312"
        },
        "item": {
          "id": "7ab663b5-e5dd-4086-8469-04d60a42e79a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "199439e9-4bc8-4e5a-a757-b9f35ca84770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee0db16-6c8b-4a87-beee-e908dd5a8d9d",
        "cursor": {
          "ref": "effd37c9-1e4d-426d-9cf6-e147c24c739d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2b0463a6-16f2-4e12-a3d4-e570f98c452c"
        },
        "item": {
          "id": "4ee0db16-6c8b-4a87-beee-e908dd5a8d9d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e0d592c7-04c4-4192-8b7c-346a5896c6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0649a617-3353-4e20-8ad8-11253de2c8da",
        "cursor": {
          "ref": "563b9a7a-d51b-45f7-ac6b-185b6a631fb2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "74035109-4813-4a59-b862-0f87e6f4b91d"
        },
        "item": {
          "id": "0649a617-3353-4e20-8ad8-11253de2c8da",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ff45a207-4901-45e5-b972-a87bcfe0d18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ace801d-7af8-48c3-8ad2-0efda402f7fb",
        "cursor": {
          "ref": "32a2d36b-2638-433a-98fd-e9e47037180a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "479400db-ec96-4641-aa58-31db430f5bf7"
        },
        "item": {
          "id": "6ace801d-7af8-48c3-8ad2-0efda402f7fb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e8e3142-3091-47d6-b0fb-dde8a525c8c0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04240265-73f4-407e-a469-52dd8d722950",
        "cursor": {
          "ref": "87503255-06fd-4e4c-a08c-4bc7f897a1b8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "53e1ef1f-b2cc-4e41-868f-37682c856a22"
        },
        "item": {
          "id": "04240265-73f4-407e-a469-52dd8d722950",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5cd2c8d8-dbe1-46d3-bd6f-d1ab66293827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d03229-1071-479f-a464-da5de3c9073c",
        "cursor": {
          "ref": "3fc5c688-caa8-4072-b162-946e55dd29bc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5728e185-6182-4d8f-b2e5-69e3e19278d2"
        },
        "item": {
          "id": "d0d03229-1071-479f-a464-da5de3c9073c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ebf89c11-65fb-4450-929d-b5b8ec167b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9503c9-e645-4252-893b-c89a04afe40c",
        "cursor": {
          "ref": "e2e4d06f-e83f-4def-b34b-cb62d8124867",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "16a65663-1f80-41ff-8758-0d0d7eca7b1f"
        },
        "item": {
          "id": "5b9503c9-e645-4252-893b-c89a04afe40c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f28157b8-5758-4a38-9ae6-782bc72e0723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9706ec-9cb1-4b4e-a9fd-ac6730bb794c",
        "cursor": {
          "ref": "22d2ae7e-462f-4350-853e-c2d3096e6e13",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "083e1d15-2a1c-4909-8ca9-ca56374132ca"
        },
        "item": {
          "id": "3c9706ec-9cb1-4b4e-a9fd-ac6730bb794c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e99ec452-8467-4471-9a26-3feccb7808fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4ba65b-c032-47a6-9ab4-1dfd2cc909ac",
        "cursor": {
          "ref": "7f90d89a-b247-4bd8-9cb6-ab4a0f1d65d3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "319848dd-c6cf-45eb-acd3-3e3bc30f896f"
        },
        "item": {
          "id": "0d4ba65b-c032-47a6-9ab4-1dfd2cc909ac",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a0face32-4fa1-422a-ac0f-e65651d5b4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ef2c14-c73e-4225-83b4-23b32067eb10",
        "cursor": {
          "ref": "5b6e43d5-dc89-441b-aba3-6a1f67dd3c5e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f839c678-f664-4ba8-a730-ae50cd09ef11"
        },
        "item": {
          "id": "07ef2c14-c73e-4225-83b4-23b32067eb10",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "04ccee95-0fb3-491f-acba-49807df23d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8dc845-2e11-4356-b451-48bb865d16e6",
        "cursor": {
          "ref": "effa0f26-0be4-4df2-b9b7-515e61d3fbee",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ab5e12ab-5d2a-41c7-9257-da8051150004"
        },
        "item": {
          "id": "3d8dc845-2e11-4356-b451-48bb865d16e6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8921c57-6f0c-4570-9b5c-b9fe5c3e0b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1a8795-e180-4e45-b875-1d3a473196cf",
        "cursor": {
          "ref": "cf97b2b6-b2bb-4d2b-bf3a-5c191e27cbb6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eb7b92e2-c0ca-4ac8-92d1-b726e59aa282"
        },
        "item": {
          "id": "4a1a8795-e180-4e45-b875-1d3a473196cf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "235db130-c348-4ee7-bdac-31053577964d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581cacab-255d-422f-a812-11066ea6e418",
        "cursor": {
          "ref": "b5276671-14f1-4f78-8eb3-2bd697cca942",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ee520691-db37-431f-a923-127969f811df"
        },
        "item": {
          "id": "581cacab-255d-422f-a812-11066ea6e418",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "de19cfcb-b9c7-4468-8784-844498c93271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac9d695-f8d8-4691-b7ea-47e802b451a7",
        "cursor": {
          "ref": "2d16f1a5-08c4-4251-8a15-8acf12072d44",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5f986f96-d4ec-4263-adf2-423b8c07051a"
        },
        "item": {
          "id": "2ac9d695-f8d8-4691-b7ea-47e802b451a7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7da5494e-0820-4825-8733-554dba8ad129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98981976-94fe-41f0-acf1-49f14c44182f",
        "cursor": {
          "ref": "ef148336-f537-4b27-9193-cc4e39bb23d0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2f5ed4d7-3abc-4310-a10f-ced9dae1bffe"
        },
        "item": {
          "id": "98981976-94fe-41f0-acf1-49f14c44182f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ebb98c66-3120-4881-b2c1-582e15c147b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafd6de8-7617-4114-9980-b5b47dddf22d",
        "cursor": {
          "ref": "816cbc6e-4045-46ed-b3a1-e2a45923a8a5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3f515c37-6134-4996-a23d-6ceb21c8254c"
        },
        "item": {
          "id": "dafd6de8-7617-4114-9980-b5b47dddf22d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "71ddffe8-73e6-4a3d-a3db-29f1f78295d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289a1f22-8d9e-4ad2-9a72-3368253004d3",
        "cursor": {
          "ref": "994a2fb8-1250-4c18-8bed-625551ab91b0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1e9bbc1e-79ce-49d2-85cc-5d37f8aa07be"
        },
        "item": {
          "id": "289a1f22-8d9e-4ad2-9a72-3368253004d3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b195c9c8-3356-4fe4-b19f-28438ed95728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a749c45-278a-41db-9d79-50729cac2332",
        "cursor": {
          "ref": "8a891b69-c4ed-42f6-8e84-ec0e75b51ce1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b7b96423-d79a-45e3-9de0-46d5b206524a"
        },
        "item": {
          "id": "5a749c45-278a-41db-9d79-50729cac2332",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6725d3dc-50d9-4449-b13e-0e8a040e3abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d41b7bb-eef3-462e-8350-2c9622a7159e",
        "cursor": {
          "ref": "b9428781-b1e2-4a59-89ba-f6d264c81097",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d642120-30d8-47f6-adc2-01a59a4db0ac"
        },
        "item": {
          "id": "8d41b7bb-eef3-462e-8350-2c9622a7159e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "91695e33-9207-4a98-b1ae-fa1eecea0710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7168afb-20e6-49e8-8a6e-6c475f4eef33",
        "cursor": {
          "ref": "d1ecfb67-ccbc-4669-b123-2b2a868c2cbd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e7795ba-dd28-4200-bed5-da805e051463"
        },
        "item": {
          "id": "b7168afb-20e6-49e8-8a6e-6c475f4eef33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1cbe3fea-a4d1-4228-b09f-faef0e18d6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2340d916-84a1-4df7-acb4-759e79e5492f",
        "cursor": {
          "ref": "8256abbc-4d61-4cca-9be9-a48ded3c26dc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "67cf8095-281e-4d61-8e3e-03d5a5966e5b"
        },
        "item": {
          "id": "2340d916-84a1-4df7-acb4-759e79e5492f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8c668dca-8745-4db3-9dc7-a6f0bc21d6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c24fd21-8172-42e2-b7c3-619fb4342b46",
        "cursor": {
          "ref": "497c5c11-bda2-4698-8e6f-b8800e6ce30e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d480f499-f305-4add-a6c4-6ad99d24796f"
        },
        "item": {
          "id": "6c24fd21-8172-42e2-b7c3-619fb4342b46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6f1bee5f-48c3-4b79-b8d0-d454a0ba0b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f62f1-1506-4d45-a8ea-e26afa8a04b8",
        "cursor": {
          "ref": "8c032f56-ad8d-4954-8061-94265eb6ded7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d30013c3-eebf-4b81-9c82-111ec9db0522"
        },
        "item": {
          "id": "7c6f62f1-1506-4d45-a8ea-e26afa8a04b8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ece20529-5566-4e65-81f3-ae360e21dd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5074a0e2-9ed5-47ac-8130-e2187e154278",
        "cursor": {
          "ref": "b0c7e445-78a6-46a6-937e-c724a92af96f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5dc0dbb9-5071-4d9a-8632-051f60bf1045"
        },
        "item": {
          "id": "5074a0e2-9ed5-47ac-8130-e2187e154278",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9795d5c7-17ab-49c2-8fc7-7aafc59bf9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fced6aa0-2a1a-4095-b4c7-25ca7429c261",
        "cursor": {
          "ref": "88aff3bb-1e49-4cf2-b4b8-14b5d7d01dfb",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f717a649-b7b8-446c-a7d6-6391f436f98e"
        },
        "item": {
          "id": "fced6aa0-2a1a-4095-b4c7-25ca7429c261",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "08a58719-c52c-42b3-b8e7-7f5abe12f9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb3e1bc-4b27-4f99-8fb9-06052bfc75a8",
        "cursor": {
          "ref": "d2236b62-dd96-434f-b90b-89041ba0d254",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cefd91f9-481c-45c7-b63b-c37edea8e5a6"
        },
        "item": {
          "id": "9cb3e1bc-4b27-4f99-8fb9-06052bfc75a8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d94773a8-5258-4df1-a69a-c4f6c9438518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd23b44e-d5ec-4fcd-a828-8bd2ef644782",
        "cursor": {
          "ref": "63f3103b-2d04-4b93-9821-210f0dcd7c6c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e7307ed9-8818-4944-800f-1ddb803ae79b"
        },
        "item": {
          "id": "fd23b44e-d5ec-4fcd-a828-8bd2ef644782",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "60af1319-5d13-495a-9cf1-5c48ec1d3d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c9cc8d-8824-43a1-8d93-8f89eb66f167",
        "cursor": {
          "ref": "dabc278b-d6f9-4b61-bdcf-dd48d00c1616",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0a8501f2-8515-4875-8e54-796ba3b8fe8a"
        },
        "item": {
          "id": "98c9cc8d-8824-43a1-8d93-8f89eb66f167",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d06a55a7-e7c4-4727-872d-69199e87b2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1338617-f655-4c14-9130-e83dd32e3ec0",
        "cursor": {
          "ref": "7516601f-d708-443c-ac18-386bf5371a84",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d97cbaf0-f875-4c37-81b7-974030099cdd"
        },
        "item": {
          "id": "c1338617-f655-4c14-9130-e83dd32e3ec0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0aa9291d-6382-4ad8-aaca-8cf5452b0c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38316d31-7a9e-42ab-a5d4-ddae1ba4cd95",
        "cursor": {
          "ref": "10acd585-4794-482e-83fe-ce2e37cc8e97",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6a3e6c0f-2b00-4707-a2f8-5cd91510510f"
        },
        "item": {
          "id": "38316d31-7a9e-42ab-a5d4-ddae1ba4cd95",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9173f40c-bacc-4ff1-8501-811c2c3406b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f033808-a2b7-4d95-b16c-e0a60fb21b29",
        "cursor": {
          "ref": "0afe1c83-a3a5-4e04-962d-6a7950d0d4ed",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5b50bb36-ae23-4572-8f10-2bfed380619a"
        },
        "item": {
          "id": "6f033808-a2b7-4d95-b16c-e0a60fb21b29",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f7f090c0-afe6-4933-8b34-982fcf199bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d3bd72-f68a-49db-acd2-53c32cde69eb",
        "cursor": {
          "ref": "2822f1f4-0fee-4d34-a5f6-fbd9672f0714",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "05699347-4252-4bcd-bcb3-54a5dc650707"
        },
        "item": {
          "id": "e8d3bd72-f68a-49db-acd2-53c32cde69eb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "24535bcf-6b97-444b-838a-958cd4a709d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002c0862-5465-46ec-83cb-c942fa4070fa",
        "cursor": {
          "ref": "1bb69273-22ad-4389-9c83-0d005f9b7267",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "72fb1820-406c-4ff9-a4ef-19b75c6aa345"
        },
        "item": {
          "id": "002c0862-5465-46ec-83cb-c942fa4070fa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b7ffb0f9-7466-4ae1-8b29-e23779078c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f8307f-75a3-48ba-8cb5-2194171c5b77",
        "cursor": {
          "ref": "bb813fca-d8ce-4e27-ad49-219d1fca56ee",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "eed28325-a219-4244-b315-0e760a970be4"
        },
        "item": {
          "id": "30f8307f-75a3-48ba-8cb5-2194171c5b77",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e261841f-22b7-475b-81d6-7a020763a52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b18c71-5ea7-4a81-b7ea-a49383454fa5",
        "cursor": {
          "ref": "79625b5a-d74b-4ee8-b3ba-9a981b1a0360",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ff6b470d-ecbe-4f19-a655-88feac490501"
        },
        "item": {
          "id": "c0b18c71-5ea7-4a81-b7ea-a49383454fa5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5e13a9ce-a953-43b7-ba4c-1cf0981ce9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5905689-3d13-49c5-8416-2cfcaa344059",
        "cursor": {
          "ref": "ecfe6e4c-32d6-447d-ada9-f6d2b6000a7d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c3dc4d24-864f-47e1-90a1-a650c6f71bfb"
        },
        "item": {
          "id": "d5905689-3d13-49c5-8416-2cfcaa344059",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ebad5564-4fe7-41a3-a5e7-0b7f2a26a33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb95811e-9227-4aba-a0c4-9929df80b90f",
        "cursor": {
          "ref": "a070d052-726a-4591-a180-5566b8755ce7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2babd5b9-ae64-43af-bf6c-f977bde581c9"
        },
        "item": {
          "id": "fb95811e-9227-4aba-a0c4-9929df80b90f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ba32eeae-909e-4b34-9c22-78d76dc57eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adff002-b242-4cf0-8bdb-2cb602eb3198",
        "cursor": {
          "ref": "5472a425-7891-4cb4-9257-77f4cfba7576",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a5d2dd9a-58fd-4c89-9d5d-52832f9420a0"
        },
        "item": {
          "id": "3adff002-b242-4cf0-8bdb-2cb602eb3198",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b84c8084-5f3e-44ba-b6c2-84f93c702394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0491f515-24d1-43c2-83b5-87b306ca0482",
        "cursor": {
          "ref": "b8d09e2d-2e9a-4bfa-a6f2-ad778294d846",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bdcf63bb-5892-4cdb-8cfe-904a3f5d6a7c"
        },
        "item": {
          "id": "0491f515-24d1-43c2-83b5-87b306ca0482",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cae9b1e7-5897-4b81-baa6-7a8623022f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5abe1bd-13a1-45e1-92c2-e40ae0df3170",
        "cursor": {
          "ref": "6c3eaa3b-30e1-4f38-b026-2326ee482b15",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "185d8690-96cc-49ef-bb3f-baed773ada7e"
        },
        "item": {
          "id": "c5abe1bd-13a1-45e1-92c2-e40ae0df3170",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e46c6c48-cb76-402d-8088-dbade0837598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e30faf-881d-4a55-936b-bcec06f1e9e0",
        "cursor": {
          "ref": "6fe1cc8b-7c9e-4be2-8bc1-76adb7974f49",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5a59ac58-d43a-4e3e-a585-7982274d3f51"
        },
        "item": {
          "id": "d6e30faf-881d-4a55-936b-bcec06f1e9e0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f8ddd648-8ff0-4501-bfba-33bf53d7c34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e9f18d-e852-4c90-9cb4-90e47e1ba931",
        "cursor": {
          "ref": "b83159bb-33fa-49a2-86ed-1d9d39dadf2a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a1458876-55d0-4e1b-9e37-13800dcdee7b"
        },
        "item": {
          "id": "21e9f18d-e852-4c90-9cb4-90e47e1ba931",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "02bdcc79-7741-4105-aa1a-b9bd536ea1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be682be2-d52b-47f0-b773-1124f0cdcf56",
        "cursor": {
          "ref": "f921bfc6-1519-4c33-b387-990467536ae3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "92c794d3-685b-4b72-a896-dafceac1bfaa"
        },
        "item": {
          "id": "be682be2-d52b-47f0-b773-1124f0cdcf56",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7cd04c35-09d5-43f8-b38b-d71be3db83de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c81956-8e60-47f8-8dbd-2b6030561c1f",
        "cursor": {
          "ref": "517e67b9-132d-43ff-a1c8-8368119e24ba",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "903c4c40-0dcc-4642-a046-0ecdf2fad585"
        },
        "item": {
          "id": "d2c81956-8e60-47f8-8dbd-2b6030561c1f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "78b959d3-9a42-457b-847d-c560ffbfa76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10103ad-e362-4427-9342-831ceabb3de3",
        "cursor": {
          "ref": "722c1bb1-ae0a-4cd7-85b9-fe276b319db1",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "832cd74c-3c7d-408d-9dfe-f4e6369e5eee"
        },
        "item": {
          "id": "d10103ad-e362-4427-9342-831ceabb3de3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6a184eb1-0aff-4af5-99d8-7993e295544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc82f0f-cf65-43ca-877d-34f4f8c68c1b",
        "cursor": {
          "ref": "0d29d748-9a87-4f74-b3d5-3722a9fb287b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f194de3f-c0e3-4362-9d7e-98debc58bfbe"
        },
        "item": {
          "id": "4bc82f0f-cf65-43ca-877d-34f4f8c68c1b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3f07f838-74ec-495e-adcf-6bcb6c252d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831ac676-7519-48cf-a186-91bb0564de0f",
        "cursor": {
          "ref": "507046f6-a03b-46f8-830c-21530519a9a2",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1f73930f-c2fc-40fa-96f3-8cf0cc24f86b"
        },
        "item": {
          "id": "831ac676-7519-48cf-a186-91bb0564de0f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "46518779-2d6c-47b0-add2-7e0d13be61e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0902a2-cc88-4f74-85ac-bf2ced68bcf5",
        "cursor": {
          "ref": "8e11a63a-57cd-4fee-a0c4-a9219ff949fe",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6d8ed367-98b4-4437-bb14-bc60388893a3"
        },
        "item": {
          "id": "ad0902a2-cc88-4f74-85ac-bf2ced68bcf5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "942a9ef8-8609-4890-baa4-496d0660775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b0c4df-11b2-47d3-84f0-8159616d2114",
        "cursor": {
          "ref": "5f9629eb-b0f0-4276-bbae-10f3c7155703",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6faf2e9f-9c5b-46e3-a7bb-8609e4ba9cc6"
        },
        "item": {
          "id": "a0b0c4df-11b2-47d3-84f0-8159616d2114",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fcc6dd9d-4ea8-495c-8d36-2bbdae5be80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10a7035-7d96-4f67-8cd5-54af357b6c95",
        "cursor": {
          "ref": "c1ff64cd-ee6c-4a7a-a8b2-1e5449c1aa01",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cf466bb1-200b-4f2f-9974-bc773777c831"
        },
        "item": {
          "id": "f10a7035-7d96-4f67-8cd5-54af357b6c95",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e7184859-afd3-44b7-b8fd-e14aa5bc6ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cc61b2-e26f-4f45-97c8-13c696c8ae21",
        "cursor": {
          "ref": "61307c4e-5089-40a8-b099-ca6cdb325f73",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6eea6df5-32c0-4259-a5d9-1fbc27acf5ba"
        },
        "item": {
          "id": "43cc61b2-e26f-4f45-97c8-13c696c8ae21",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "862f1b00-07d7-4d98-93e3-910c5378db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7aafa0-95c9-498e-8e30-02c1578164a0",
        "cursor": {
          "ref": "c76d1723-e718-4569-81a0-f58ebdfe05e7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f3f209d7-d2f3-4b4f-bc09-1605db18453b"
        },
        "item": {
          "id": "af7aafa0-95c9-498e-8e30-02c1578164a0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fe7da46f-833e-4202-aec3-cbebb585e903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c430121d-9cd0-406f-ba35-f4104a97f1bc",
        "cursor": {
          "ref": "8f7f8182-ce93-4cb1-b626-79972e8ed50a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b32c58eb-9cca-4919-a135-b85c0b12a354"
        },
        "item": {
          "id": "c430121d-9cd0-406f-ba35-f4104a97f1bc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "83b2cf99-87df-4423-83cb-182c8aad14ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877c9bb6-accc-4774-8d89-c710221c5079",
        "cursor": {
          "ref": "2151c79c-b68f-42ea-af07-5cec42b38d09",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "abe37bf5-e7c2-484c-93af-f04f09d2bd13"
        },
        "item": {
          "id": "877c9bb6-accc-4774-8d89-c710221c5079",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "72849c39-aed7-442e-a71d-d0717a5b59e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b13aae-a0e2-4135-be25-3a00089ad54e",
        "cursor": {
          "ref": "28420821-83e6-4863-8725-0e23bb75c41b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d1de23e8-8817-40b0-ac80-54854c4464a0"
        },
        "item": {
          "id": "c8b13aae-a0e2-4135-be25-3a00089ad54e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d22c02d2-72f8-4de1-b3ec-6da60a6a651f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "df6205bd-3b75-40fa-b1ed-5c5e81d1f290",
        "cursor": {
          "ref": "36085d61-4563-4c5f-b645-f858d1fea432",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9c764626-6886-4719-9144-6c5f7e816338"
        },
        "item": {
          "id": "df6205bd-3b75-40fa-b1ed-5c5e81d1f290",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bfee802a-9d84-4f5a-adc3-cfce19b0f598",
          "status": "Created",
          "code": 201,
          "responseTime": 26371,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa0336e-4861-42c2-abcc-8435288e7eb6",
        "cursor": {
          "ref": "e87b8e74-edbc-4433-a3c7-b308e52dcd16",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b0e31e62-dcac-4a78-b9a0-d28293704a27"
        },
        "item": {
          "id": "aaa0336e-4861-42c2-abcc-8435288e7eb6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "19dc51d0-f13c-43d4-b164-1f8fc07fdfdc",
          "status": "Created",
          "code": 201,
          "responseTime": 26351,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "499dd6e3-9af2-44f9-9123-12a262ebf891",
        "cursor": {
          "ref": "d268a2d7-daa8-42bc-8a04-5248719a1b6e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46a4ff1b-f101-40ab-a666-5fb739ce8d8a"
        },
        "item": {
          "id": "499dd6e3-9af2-44f9-9123-12a262ebf891",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f00ad6d8-af71-4f1e-9983-9030ea1ac79e",
          "status": "Created",
          "code": 201,
          "responseTime": 26190,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f927a7a-296e-423f-bbe8-e981110ad934",
        "cursor": {
          "ref": "ac5ab04e-fbb5-4986-940b-62c242682304",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c436d8dc-457b-4d31-bb74-bfd91a44326b"
        },
        "item": {
          "id": "4f927a7a-296e-423f-bbe8-e981110ad934",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4fc97228-0bab-44e6-9c9f-85842aab6cbc",
          "status": "Created",
          "code": 201,
          "responseTime": 25704,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "deedd2a8-2f7d-4a64-a7d3-5d2984ebe61c",
        "cursor": {
          "ref": "fe126cfc-f531-4ebf-83cf-629103fdec6e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "efa30ba4-c94b-49a4-9547-ca272732da27"
        },
        "item": {
          "id": "deedd2a8-2f7d-4a64-a7d3-5d2984ebe61c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6dd57788-007b-4020-9b7f-b8c9d7aabfe7",
          "status": "Created",
          "code": 201,
          "responseTime": 25725,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-02T00:47:41Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-02T00:47:41Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "804e7ae8-5b5d-431b-af97-2a5b268ba1ee",
        "cursor": {
          "ref": "07056b04-8812-4bcb-a276-5ca844f10588",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "343645f3-3220-4a0c-9dc4-e25fbf632791"
        },
        "item": {
          "id": "804e7ae8-5b5d-431b-af97-2a5b268ba1ee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6aa7b6f2-b3ec-43f0-998b-47b3cd9ea35a",
          "status": "Created",
          "code": 201,
          "responseTime": 24859,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b451f5-e51d-4768-aed4-4a2b3f2d1ba0",
        "cursor": {
          "ref": "8806b1bd-0011-409e-a721-d6d83c22bf33",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a51092cd-631d-450d-8603-5e31423ed7e0"
        },
        "item": {
          "id": "54b451f5-e51d-4768-aed4-4a2b3f2d1ba0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3b0dc9a0-87b0-4914-a96d-509417174206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11fc91d-1726-4f5b-bedc-3fbbe7a67a7c",
        "cursor": {
          "ref": "2cb27cfa-0c9e-49e1-a515-f0fd93911e0f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "47bfc734-e7b5-4d74-8d8b-d13d3e8e9309"
        },
        "item": {
          "id": "e11fc91d-1726-4f5b-bedc-3fbbe7a67a7c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0cdc6c38-087a-45fb-8b3e-05ff681fb873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdde527b-42e0-4fa8-a2a2-d30db53e27ed",
        "cursor": {
          "ref": "69e0a99b-92b6-4a08-88b6-f766496064ca",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3a5d9687-2c59-4380-9fc8-58b0a4ae1fe6"
        },
        "item": {
          "id": "bdde527b-42e0-4fa8-a2a2-d30db53e27ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1da0882d-2ddb-452b-b244-36858a54fdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c659c7fa-6229-44f7-98bb-f4f213cb3243",
        "cursor": {
          "ref": "52909b86-e0ee-4ab3-903e-7fac7c742480",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b88c90ae-9631-40e5-aa9f-95f461afb10e"
        },
        "item": {
          "id": "c659c7fa-6229-44f7-98bb-f4f213cb3243",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "240165b1-c1ed-42ce-9bc8-36168b88d589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d239c0d8-cd3d-4ae7-a94c-581782258937",
        "cursor": {
          "ref": "d7885acd-8326-47c9-9915-2af4bf1176e7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4bbc650-f094-4c71-81ca-310d59aa21d1"
        },
        "item": {
          "id": "d239c0d8-cd3d-4ae7-a94c-581782258937",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "76157ef4-f346-4088-b125-2f44f6b46944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9e8653-e96a-4a0c-97d0-44b5d16aa74a",
        "cursor": {
          "ref": "e63fe229-ea54-479d-8f7f-3faa87604228",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c7e17cc8-670e-4e83-a3f7-3d6d28d40402"
        },
        "item": {
          "id": "3a9e8653-e96a-4a0c-97d0-44b5d16aa74a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "249925a4-7a60-47c0-9979-e44e683c65bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba5ca4e-6e8e-44df-97f9-3d7060ef5216",
        "cursor": {
          "ref": "2ff4297d-643a-4359-8f19-adcc97d12342",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2d29c067-01cd-4e10-b2fa-fed55cc78250"
        },
        "item": {
          "id": "4ba5ca4e-6e8e-44df-97f9-3d7060ef5216",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f66914e0-6ab7-436f-bf5f-9cbe1f119983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53e3ac9-4b92-4c8e-a70d-c40fa46ddb2e",
        "cursor": {
          "ref": "aa45c62d-ff9d-4390-9eeb-522a9ed09e2b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "381a15eb-596c-421f-b1a6-6fbc8346542b"
        },
        "item": {
          "id": "c53e3ac9-4b92-4c8e-a70d-c40fa46ddb2e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "70636deb-3f90-4617-96f2-b4a62211928b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe4976e-68d9-4cc5-b71f-81be746b6e42",
        "cursor": {
          "ref": "4f105be4-0796-4a90-a637-e2b0214b9376",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6196e5a9-078a-4442-97a1-f94572cc2fc3"
        },
        "item": {
          "id": "cfe4976e-68d9-4cc5-b71f-81be746b6e42",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "430999d8-3aa6-457b-8238-cbcfe870dead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fc13fb-3b67-4924-95b2-68ea91dc2a76",
        "cursor": {
          "ref": "135d4f60-ac12-41f3-b171-997ab854c7a7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "14b211e4-8d01-4a5e-bcdb-3308e1aac3e1"
        },
        "item": {
          "id": "80fc13fb-3b67-4924-95b2-68ea91dc2a76",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7456576e-622d-44ad-b369-938464fe4843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b8e96c-adea-495d-af4c-f195c65100f4",
        "cursor": {
          "ref": "05defbf8-1f5e-41a0-b6a4-e0201738f25d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e6a45c43-bfca-4074-9a59-d8ae2666061b"
        },
        "item": {
          "id": "88b8e96c-adea-495d-af4c-f195c65100f4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7392cf80-fb69-4824-a202-f029528bad4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b3339a-c4eb-462d-8b6c-14ad0145a826",
        "cursor": {
          "ref": "500755a2-3f45-45b8-9a4d-f5ad847dbf07",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2c87640a-bdcd-4343-b4eb-c0f1ac375ca5"
        },
        "item": {
          "id": "98b3339a-c4eb-462d-8b6c-14ad0145a826",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83ca22b3-447c-4d92-98b8-4ddd4e1c2beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6d23bd-72a1-4925-9e1d-e0a250d12c5a",
        "cursor": {
          "ref": "3b35baff-c6b2-42b7-8fe6-676cda8a0011",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bdb3626d-2fde-48c9-bdfa-a9244ed778dd"
        },
        "item": {
          "id": "3f6d23bd-72a1-4925-9e1d-e0a250d12c5a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6451cfbf-6237-444a-aecf-ee111594b823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbab1dc-b269-4344-ae81-df93efd2c51b",
        "cursor": {
          "ref": "c5178dbb-dddc-4869-ba0e-507fe72b971f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f857c2e1-b9ad-4e9e-85ff-634531b1f6cb"
        },
        "item": {
          "id": "5bbab1dc-b269-4344-ae81-df93efd2c51b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ffa42f17-db83-4dd2-8a6b-f46b8372f446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d51fd4-49aa-431c-b821-b91c414eb713",
        "cursor": {
          "ref": "30556dda-dc16-402e-b5e5-8b8520d2d7a1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "581e2582-c4af-446c-8d12-421e3868d615"
        },
        "item": {
          "id": "c9d51fd4-49aa-431c-b821-b91c414eb713",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "61733e2f-082b-4f2a-bd9c-5844bbf82439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3c31ea-1eb0-4f6e-a4ae-b24ae26817b5",
        "cursor": {
          "ref": "35993a7b-a670-49be-aecc-64da6d8ef6a1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "079c9bd7-ff28-4b93-ac0d-7f7b27b9cd49"
        },
        "item": {
          "id": "8a3c31ea-1eb0-4f6e-a4ae-b24ae26817b5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "151ee2aa-c1a6-4330-8aba-2b42c7198f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975bb961-978a-4703-9965-afbdd1422898",
        "cursor": {
          "ref": "ec9550c4-1a19-45e7-afbd-9c81bfe8856b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "94449ffd-c84c-4395-95b0-276ea473a6a9"
        },
        "item": {
          "id": "975bb961-978a-4703-9965-afbdd1422898",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a561a01e-5ab5-46fe-bb40-c69665d38dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfdcbe1-2b6b-4f83-9144-9e91ff3d652b",
        "cursor": {
          "ref": "c6314821-fb9a-4168-8283-345af1f441c8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6f0ef874-fe4e-4287-9a40-c5290307be6f"
        },
        "item": {
          "id": "2dfdcbe1-2b6b-4f83-9144-9e91ff3d652b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7be5ee07-b471-423c-9e0d-b1dba380ebc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b96039-d026-40f6-83cd-5c0200f3511e",
        "cursor": {
          "ref": "2dc7f9d7-a8b9-43da-8ae1-023fd4804a61",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7082f3b5-ab7d-4c70-99b5-f0167fd544eb"
        },
        "item": {
          "id": "41b96039-d026-40f6-83cd-5c0200f3511e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "80efaba3-bde3-4128-928c-efdfa959e30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e9d73e-e664-4c5d-991a-e4b04d593219",
        "cursor": {
          "ref": "6d7203a5-d74b-4cd2-ac88-a8268c148706",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8c8fb7c4-db57-40b6-925e-de2e6b1221c2"
        },
        "item": {
          "id": "f4e9d73e-e664-4c5d-991a-e4b04d593219",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2368778b-5783-4778-bfac-2b33c2572d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb6e963-04be-4fdb-8352-e7b1664b0691",
        "cursor": {
          "ref": "8a684c4e-aa87-4c42-bbca-838589a8560b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "340b0b7b-d637-4f7f-b2cd-4d035533eb14"
        },
        "item": {
          "id": "7eb6e963-04be-4fdb-8352-e7b1664b0691",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "962f3aac-5700-4b17-865d-bae0784c2247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d04e993-dff3-4869-bb35-0cfc9741550d",
        "cursor": {
          "ref": "beb463a7-62fe-4481-94e0-d388c0196a1b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fddbd7d8-4916-42bf-83ad-d22d112a6550"
        },
        "item": {
          "id": "2d04e993-dff3-4869-bb35-0cfc9741550d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df5b6a4c-3cd7-4604-87a8-5c3ca08f123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaa7b71-f859-4e8f-b6eb-e7b3ba18928a",
        "cursor": {
          "ref": "bc05d4a8-66db-4e06-99a2-c02651b89446",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "659bddba-ebdf-414e-ab91-e7516bd54641"
        },
        "item": {
          "id": "ffaa7b71-f859-4e8f-b6eb-e7b3ba18928a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72bc4552-2317-43b5-9f44-ce0905ba8170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6bb169-2a36-49df-854e-32982655486a",
        "cursor": {
          "ref": "a0ede4d3-2767-4b16-ba01-2ba499bcb42a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "50b5b609-413c-482d-a139-dcd8babedf67"
        },
        "item": {
          "id": "ff6bb169-2a36-49df-854e-32982655486a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cef3edcf-d3af-4e80-874b-5431bb484c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394ec190-36cf-4202-98eb-9689058c9133",
        "cursor": {
          "ref": "4db064fc-f115-40ae-a793-31900bb9df06",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d1babb7d-7710-4101-8dac-6c5d1c8c6093"
        },
        "item": {
          "id": "394ec190-36cf-4202-98eb-9689058c9133",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dc36db41-4e65-4864-a8e7-73f4462676f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af9f79d-d8dd-4509-ae75-6e142591629e",
        "cursor": {
          "ref": "78b0d77f-82be-4bc1-a877-bbf93911d936",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "155348fa-c47c-4312-91e2-1d5e3ffcae92"
        },
        "item": {
          "id": "5af9f79d-d8dd-4509-ae75-6e142591629e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d40b538-c430-4ff1-816d-fd5174023a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93f661f-350e-4912-94e4-740a7f3ed7ab",
        "cursor": {
          "ref": "32da5cdb-8e71-4bb4-b483-710973c6855c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cd3896af-a8f6-4bee-a045-e421d0249b5f"
        },
        "item": {
          "id": "d93f661f-350e-4912-94e4-740a7f3ed7ab",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bb9fd3b7-32c6-4d2e-bbc2-a9d96c301a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e49c699-9f12-4d52-8aef-ecbde741cd97",
        "cursor": {
          "ref": "5028d2a6-8127-4cc6-acec-2c594946cf65",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3eb74f61-d90f-451b-8622-2f1cffddb3df"
        },
        "item": {
          "id": "7e49c699-9f12-4d52-8aef-ecbde741cd97",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0e84607a-9be9-41bc-9565-a52c9c71745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9911b6fa-08e0-44eb-a4c0-c1564e133d9c",
        "cursor": {
          "ref": "a582e80a-7728-42ff-9d2b-3a8a4931bd27",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5bcad7d8-4d82-4fec-9e65-d6332a288e6e"
        },
        "item": {
          "id": "9911b6fa-08e0-44eb-a4c0-c1564e133d9c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "713186d1-d896-44e7-8025-d8614347a946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234e530b-2838-424f-add5-cf5d654ae243",
        "cursor": {
          "ref": "1adf1b1c-8d4c-43c1-a822-9dbb9748557e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "87b7d1ea-a73a-4a4d-a33a-794e6aa9edc2"
        },
        "item": {
          "id": "234e530b-2838-424f-add5-cf5d654ae243",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "554c023d-e3e6-4511-b230-a460c0a1df88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc41fe2-155b-4ce2-a679-1e771c9e9a11",
        "cursor": {
          "ref": "415e0870-b57a-4090-840c-725422656b44",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0cfb7d8c-305f-475d-a397-d7e773379f76"
        },
        "item": {
          "id": "7cc41fe2-155b-4ce2-a679-1e771c9e9a11",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6e954e76-7d1c-451d-ba31-0467d5f38d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff56083d-c492-412f-90bd-75676fe88c1a",
        "cursor": {
          "ref": "37711ff0-60cb-4bfd-a66d-2ed59da1c81f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1c7dc869-a725-4359-9967-e00d653c692e"
        },
        "item": {
          "id": "ff56083d-c492-412f-90bd-75676fe88c1a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "10e0f1ea-1f05-471c-a26b-5828afdcf97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded12b79-5a0f-4072-b0bd-d1af983d3ea6",
        "cursor": {
          "ref": "8fef7051-cda7-447c-89b2-a3d11a79abca",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f250fd94-b17f-4810-81e7-79191c1aeb8d"
        },
        "item": {
          "id": "ded12b79-5a0f-4072-b0bd-d1af983d3ea6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2c19fe2c-29c4-4ca3-b0f7-86460e2ce9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e9ea29-8674-4692-9097-7c64e26d03fc",
        "cursor": {
          "ref": "780928eb-375b-4d12-ba7b-4553616c50ff",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1577e784-ab15-4b0b-a591-8b838eed95f7"
        },
        "item": {
          "id": "d9e9ea29-8674-4692-9097-7c64e26d03fc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7427c9f3-9da3-4e92-9498-f881cbf85879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ab3e76-521f-41d5-9498-c4244250b43c",
        "cursor": {
          "ref": "46c400af-cc35-4fc8-8d50-a29b14e45c9b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "06bd3c89-2e68-4fd0-b7ec-dc9ae61fd344"
        },
        "item": {
          "id": "74ab3e76-521f-41d5-9498-c4244250b43c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2db7cff7-bde1-44ed-abd7-58deb6bb84dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fea00b-a2bc-4e6c-b027-dbc223fd307e",
        "cursor": {
          "ref": "1dbb00bf-da1d-410e-ad02-fd0001948e3c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a86f45a1-4b56-47b1-b34a-3430db255270"
        },
        "item": {
          "id": "75fea00b-a2bc-4e6c-b027-dbc223fd307e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5920804e-1b6d-4e30-83ea-1cbade0e99e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6d5afd-ce3a-4fce-9fc0-ab0de2588c2e",
        "cursor": {
          "ref": "2a8b8e79-580e-4cb5-8434-5ccab375af6d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2671a768-0b6c-4467-a417-78cad6295eab"
        },
        "item": {
          "id": "fc6d5afd-ce3a-4fce-9fc0-ab0de2588c2e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01704a04-bb49-4965-93d6-f4650cbae4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf1ea82-22c6-40e3-9d22-14c59b645cc3",
        "cursor": {
          "ref": "d7d28b9b-87de-42d6-b83e-3ffda9f45ac1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0f66639a-57c7-4221-a126-0a3f5d9c4760"
        },
        "item": {
          "id": "faf1ea82-22c6-40e3-9d22-14c59b645cc3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b3592105-643e-43eb-ac13-2c724c1a1829",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7dd29-ea79-4d68-a2ec-5733beda56a8",
        "cursor": {
          "ref": "03fd69cb-a0eb-428c-abdf-35037b999c5f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a1e8e97b-b27b-449e-a3aa-ef7a3cbcf52d"
        },
        "item": {
          "id": "17e7dd29-ea79-4d68-a2ec-5733beda56a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e0ca13eb-e9dd-47f5-9520-ef53a897becc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd18281d-f028-432b-8d69-1f4db9ff5c16",
        "cursor": {
          "ref": "d4afd674-5344-41c7-a53f-8e4d02313886",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb66e534-025a-488f-9826-fb461880bdbc"
        },
        "item": {
          "id": "dd18281d-f028-432b-8d69-1f4db9ff5c16",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "da51f8ea-57da-4696-9ad3-c14ab25586aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63166384-2dd8-4f6e-a8f1-ffcb22e09238",
        "cursor": {
          "ref": "bb88b8d7-9cbc-439d-907a-a1f3cb146003",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "51168613-9355-43e9-92c2-5c736af34652"
        },
        "item": {
          "id": "63166384-2dd8-4f6e-a8f1-ffcb22e09238",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c4c7c7d4-3c86-4366-a79a-9d15506a0704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32714221-5460-4cfc-af0d-fd60143ed2eb",
        "cursor": {
          "ref": "7a01da56-f916-494a-98fe-0d3a5a6ab039",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bb3077ea-401e-4443-bd1b-5f2c1eea3fd2"
        },
        "item": {
          "id": "32714221-5460-4cfc-af0d-fd60143ed2eb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f39b381-43c4-464b-9a56-01940a11b4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7484bf1-100b-47f9-8398-06f9fbd2d218",
        "cursor": {
          "ref": "8d8afd16-209f-4e12-8392-d3efee06d4c4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "df10f8ac-b4b0-4504-992b-077c278a35ae"
        },
        "item": {
          "id": "e7484bf1-100b-47f9-8398-06f9fbd2d218",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6b9c2710-179d-4ced-adb1-d4d596d7f6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0b9eab-81a0-4349-b9f5-1b3677849e2a",
        "cursor": {
          "ref": "04a12bbb-0dba-4091-95ee-f75ab07f642c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c327f24f-9157-4ebe-a0b1-54b2221383b9"
        },
        "item": {
          "id": "ad0b9eab-81a0-4349-b9f5-1b3677849e2a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fc5943f9-ba24-4d24-959c-e93aabc3adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c26783-5c69-491e-a34b-555d05873139",
        "cursor": {
          "ref": "f33fd257-c1c6-4e2b-8698-361eeac41af8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4888e757-95f2-48bc-8204-95af53bae043"
        },
        "item": {
          "id": "00c26783-5c69-491e-a34b-555d05873139",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e742ef89-808b-4d01-98d7-e33b092f1e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a325b36-a4b7-4e48-81cd-ab2e851af831",
        "cursor": {
          "ref": "6ec5f8de-fab4-4e29-b448-81fc11388315",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "042bb25f-8064-4537-853c-9f4142110551"
        },
        "item": {
          "id": "7a325b36-a4b7-4e48-81cd-ab2e851af831",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e3ced0a-9bb6-409e-b51a-b94a5e2de758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a563ac-c6a4-4a44-85e6-c7305ce0e6e5",
        "cursor": {
          "ref": "880bfdc1-5337-4ee2-8966-3d7701e3d6b2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "147c4a55-83c4-4a39-b994-660ec3f0b005"
        },
        "item": {
          "id": "f0a563ac-c6a4-4a44-85e6-c7305ce0e6e5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ab7196d9-bbf4-442d-958a-22a952ff0fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25959987-7ede-493f-a686-18ecce16b437",
        "cursor": {
          "ref": "92575881-89b1-44ec-b6de-e9bab40ff4db",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "174a492d-fdf5-43e5-9911-692f946c8dab"
        },
        "item": {
          "id": "25959987-7ede-493f-a686-18ecce16b437",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ff81c818-9db0-465d-9aff-43fbe4764289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea67796-b663-4610-8f8a-3d3b5e5e6bd9",
        "cursor": {
          "ref": "6d44de88-6621-436b-b6df-5d3f4a388fac",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cfaabf54-95a4-4021-8785-1a656d187ca4"
        },
        "item": {
          "id": "4ea67796-b663-4610-8f8a-3d3b5e5e6bd9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "339263de-a0f6-43d5-8069-cb386213d270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9b9008-c2d5-4427-8c20-eaf1ac602416",
        "cursor": {
          "ref": "60ee7d2b-a403-4119-9ff8-0c115c388bca",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0940c7c5-c3b3-4a86-90d3-bbe1db5b40a8"
        },
        "item": {
          "id": "0d9b9008-c2d5-4427-8c20-eaf1ac602416",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "64b5b9f1-7654-4867-9a51-a6beb7b24ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59da2284-65a8-4575-a387-b270e3c96798",
        "cursor": {
          "ref": "c63207f1-3a86-4bbe-a276-7cb3a7deff7c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "13a6bf33-5c4b-4151-896f-0f78b561d08c"
        },
        "item": {
          "id": "59da2284-65a8-4575-a387-b270e3c96798",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7830b330-92b5-4f78-9406-91deaa9589be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711f297a-4aaa-4d4e-a754-216ff79080f6",
        "cursor": {
          "ref": "4ce3638e-b835-41a5-a41c-1788322ad307",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c8fb3c93-b823-44d2-8cd9-ec92e6481d3c"
        },
        "item": {
          "id": "711f297a-4aaa-4d4e-a754-216ff79080f6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "01d7cf68-f57a-4622-ac34-a3e3f84a3a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e5db04-172a-45e0-b6d8-1c86d295d675",
        "cursor": {
          "ref": "6093f65a-0dbe-4476-b44d-ae06c0695a6d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "64a92a83-49c3-4422-ab0a-a061b2275bf5"
        },
        "item": {
          "id": "a5e5db04-172a-45e0-b6d8-1c86d295d675",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a9ab2cf4-99a8-4088-bade-e05510366108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075f0ff5-0007-4594-ba3b-97b76f183575",
        "cursor": {
          "ref": "9801d3e1-c689-4ebd-9b74-0ca4d37a70f3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "65334956-061f-4e69-9d23-15a984450a0a"
        },
        "item": {
          "id": "075f0ff5-0007-4594-ba3b-97b76f183575",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d766ad16-1ef0-417a-956d-3e3e1ee22105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ded905-3806-4bd8-b25b-f39853797a80",
        "cursor": {
          "ref": "88031e5b-2bdc-491e-8f3d-cb0bf20a6171",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "45a13af9-c6ea-4243-b641-84b5b9160703"
        },
        "item": {
          "id": "a1ded905-3806-4bd8-b25b-f39853797a80",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "78096750-dcf0-4b43-bd29-d3111cac6952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac58c161-59fb-418c-b0de-d23e27b669d5",
        "cursor": {
          "ref": "59755106-44d3-4b5b-861d-818ff5de8b06",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c4320397-35af-42f9-aac6-43a0e07e8abb"
        },
        "item": {
          "id": "ac58c161-59fb-418c-b0de-d23e27b669d5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bf482bb7-2c04-44af-b961-404b6dd99194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cdd77d-3d26-49bb-a0f7-a869c5ee7f9d",
        "cursor": {
          "ref": "0a10e540-b76b-4763-94c1-8b735019f453",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de138686-75ce-4550-9cb5-cb6c311051c3"
        },
        "item": {
          "id": "58cdd77d-3d26-49bb-a0f7-a869c5ee7f9d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "681882bb-58d9-4909-8b8c-528e1c5ebef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59d7b46-70f7-42cc-859a-fee8fe94f4e2",
        "cursor": {
          "ref": "9d01d201-0d4c-4c04-9c76-615b56e65c87",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5083b147-0b7d-4ea3-a346-124b2dc14ff6"
        },
        "item": {
          "id": "c59d7b46-70f7-42cc-859a-fee8fe94f4e2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "45a4138f-9dea-4b8f-8eda-9e1a83239b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f04beca-57b3-45c5-8f28-74602594d1ac",
        "cursor": {
          "ref": "82e09f9a-d208-4c35-8052-fea650094a57",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "01c776dd-540b-41cc-af4f-5ebba4f04c4d"
        },
        "item": {
          "id": "9f04beca-57b3-45c5-8f28-74602594d1ac",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f9cb80ea-11cd-4187-b865-99fde970a033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb97490e-9433-4c9c-99f7-ec67ccb0d07b",
        "cursor": {
          "ref": "5300e687-b573-4657-b94e-2a00f2e988ef",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc0526dd-2f88-41a9-ada9-79e6103ae5b9"
        },
        "item": {
          "id": "bb97490e-9433-4c9c-99f7-ec67ccb0d07b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7c6bb1fc-23c0-4489-a3c1-9177a836932d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fba67e-e320-4922-af42-1ce07e7bbb07",
        "cursor": {
          "ref": "658c711f-1dcf-4662-af19-193790d4b6fc",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3426c312-8e1e-49e9-a47f-0d784e2af923"
        },
        "item": {
          "id": "e5fba67e-e320-4922-af42-1ce07e7bbb07",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4b1be66f-cbb0-461d-b2db-8a5b039c322e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0561330-2fd3-465f-9e5e-32926b9b5757",
        "cursor": {
          "ref": "8870c915-3039-430d-aadc-e60a8a4b4b11",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "856f9403-1589-4ec1-b7d4-dd978d080d7e"
        },
        "item": {
          "id": "e0561330-2fd3-465f-9e5e-32926b9b5757",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9fa66f9f-8a90-4d2f-b498-71aeea9c160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc2fd90-8abb-4a10-b823-8a3940c75fde",
        "cursor": {
          "ref": "7d554319-f16a-46ad-a98e-6cc63b1dfff5",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "43adf600-5f4f-4f0d-9c7d-56197237f6c3"
        },
        "item": {
          "id": "4bc2fd90-8abb-4a10-b823-8a3940c75fde",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1146e546-c2b2-4331-9514-927c0629a49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bef3fd-af9a-409a-a007-ec927d89702f",
        "cursor": {
          "ref": "50d4c25f-7841-4fe2-bdce-2281003a6a17",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8d74e47c-845b-4767-8c09-67fea12d10da"
        },
        "item": {
          "id": "04bef3fd-af9a-409a-a007-ec927d89702f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "26a5b2ea-5bb3-4519-80fc-453f6efbc303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20c53d6-cf23-4846-8ea3-4260d27be0b0",
        "cursor": {
          "ref": "dd5fa6f6-db70-4f62-ad9a-3fb141245d17",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a05dc6c-dd02-46e8-bf87-a59d6986d8c5"
        },
        "item": {
          "id": "b20c53d6-cf23-4846-8ea3-4260d27be0b0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "725d2fd2-5b27-4bdc-b18d-27117ba3fdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55f8a6d-bb0a-4458-9e10-e316f1f4b444",
        "cursor": {
          "ref": "27b7faed-652f-4383-8669-8adf5b061c7d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1ae893c8-d201-463e-acf3-9025c19641f7"
        },
        "item": {
          "id": "c55f8a6d-bb0a-4458-9e10-e316f1f4b444",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "956c4aaa-13e2-4892-a3b6-cba69846d4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd1b382-304a-4b4c-b912-f922e9faf7cf",
        "cursor": {
          "ref": "defe07de-86b1-41c4-b2af-4f6826788084",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aa8bcd24-fd30-4bdc-90c4-158039c8ab25"
        },
        "item": {
          "id": "cfd1b382-304a-4b4c-b912-f922e9faf7cf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1c2812d4-cb4f-4b91-a397-7bcbadfe79d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60c8be8-ad23-44e1-8dff-81163b777615",
        "cursor": {
          "ref": "016b870c-cb49-4ee2-b0f6-a16f9047cd95",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e0c57b1e-bcba-4e88-a814-ba7fa8c71c33"
        },
        "item": {
          "id": "a60c8be8-ad23-44e1-8dff-81163b777615",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "658b4970-ae78-4e00-a834-3c0495e85111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff31ebb-d317-4fb0-bfc9-046419e6ed11",
        "cursor": {
          "ref": "f1111378-5b8c-469d-b690-f0d71c76373f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "964b5262-6aa4-4d74-8a91-e4e03462a7f6"
        },
        "item": {
          "id": "fff31ebb-d317-4fb0-bfc9-046419e6ed11",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2594f9fd-36a4-4c9a-9f3f-11b531e967fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87883ae0-58b4-4b95-ba03-fb15d5bcc962",
        "cursor": {
          "ref": "b3396e2c-e90e-4331-8fbc-a1cc5a7031c3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "15082c6e-bdde-4582-8cc3-1f6433b735b5"
        },
        "item": {
          "id": "87883ae0-58b4-4b95-ba03-fb15d5bcc962",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "99e23473-5153-49ed-bab6-971a6ee05c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b864579-a458-4dc2-8787-aa3851eae5ac",
        "cursor": {
          "ref": "7a1ab7d3-86cd-47c7-a2fb-051ea36b42b2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4fc9c282-4ce6-4aa2-a7b0-89492a5b3de8"
        },
        "item": {
          "id": "2b864579-a458-4dc2-8787-aa3851eae5ac",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12d75d32-35db-4525-b50b-c6e1fb5407da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9403da3d-b3d7-4f0f-822d-d7b64e428460",
        "cursor": {
          "ref": "d8ad9d27-7260-4778-902c-077d5e496ef9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fadac413-6f65-4e4e-bccd-ec17b19e2b73"
        },
        "item": {
          "id": "9403da3d-b3d7-4f0f-822d-d7b64e428460",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "855acba6-0e01-4e69-a94d-a6b9e21c91e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8025d45-2dc8-45bd-95bb-97e32a6bc839",
        "cursor": {
          "ref": "6026c5d5-b623-49c4-804f-a4702b92d1d9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f07959d3-caff-499c-9268-f4056d40ee0b"
        },
        "item": {
          "id": "c8025d45-2dc8-45bd-95bb-97e32a6bc839",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d46dc069-2bae-41b8-b5eb-95b6786fb884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b320625-2013-4c73-9498-80e1592bb675",
        "cursor": {
          "ref": "df28df19-6662-4bdb-aef5-39a11ef9aea7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "84dcfdf8-286d-40dc-9958-54851af76f02"
        },
        "item": {
          "id": "5b320625-2013-4c73-9498-80e1592bb675",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8feba973-083b-4e8b-b88f-a840b460069c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9172352f-eaa7-476f-8699-19a0f2bd1957",
        "cursor": {
          "ref": "283ee883-f607-4938-813e-7af0d8dca3be",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "210a6591-6eb9-4e02-bf65-fba1f13b31b1"
        },
        "item": {
          "id": "9172352f-eaa7-476f-8699-19a0f2bd1957",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "18375aff-3edd-4417-bf0b-6964f6aea25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4b727f-039d-4faf-939c-d27690d67969",
        "cursor": {
          "ref": "5f0aef7c-9556-45d9-95ce-4797dd759ab4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8ae8ffe7-21b5-46ab-bf9e-2847df2d1411"
        },
        "item": {
          "id": "7c4b727f-039d-4faf-939c-d27690d67969",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "148faf9f-c7c2-481c-86e9-e1337735165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920cb616-f67a-405c-a828-2f0942eeb166",
        "cursor": {
          "ref": "ab67061c-8f71-42ae-9f4a-7073cc613d3e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad0f327f-2d64-4f46-8c92-fc43c9bd8822"
        },
        "item": {
          "id": "920cb616-f67a-405c-a828-2f0942eeb166",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1cb3dd4c-d996-4b1e-a252-a573aa146354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a8b00f-72fc-4c8c-8c32-3fc2b39885f1",
        "cursor": {
          "ref": "1d3cb124-b576-4b3d-96d7-a3bd1120a40d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ee565073-700b-42c9-8ff8-c257c07cbd8c"
        },
        "item": {
          "id": "40a8b00f-72fc-4c8c-8c32-3fc2b39885f1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5272b3cb-8152-4e12-81f1-981d5692a066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d63c68-c1cc-42a0-aa9f-6c3472c4b648",
        "cursor": {
          "ref": "d4b00f37-da77-4420-9ee8-b0a1c27b8050",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b8f4d4f3-34bb-4b45-8d8e-8430d04717da"
        },
        "item": {
          "id": "77d63c68-c1cc-42a0-aa9f-6c3472c4b648",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "139e1fc2-0f98-48a3-bfbf-8b16d2ca6bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac29262-81f4-43c2-af66-d2e378210ab0",
        "cursor": {
          "ref": "921af483-1dd3-421a-812b-b339b4a1519a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c62634d0-b829-4f7a-9c56-89d1ba566960"
        },
        "item": {
          "id": "cac29262-81f4-43c2-af66-d2e378210ab0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9399c565-4791-4076-9beb-fb6dfa9ba5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691a2715-26d4-48ce-9f86-98c8f710d9ec",
        "cursor": {
          "ref": "96f0f6c0-73af-43a1-a9d4-d61a1b7727b4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "027ee691-71b6-42b1-9207-95691e2eb3f0"
        },
        "item": {
          "id": "691a2715-26d4-48ce-9f86-98c8f710d9ec",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f1cd36fa-ebab-49fc-9e2a-e3cae7246520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74f7345-20ad-47ff-b942-f345df69e374",
        "cursor": {
          "ref": "3255b179-0480-4dbe-97d1-173841f97ab3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1cc88d2b-9b6e-4a7a-a4b9-dd3602f5c510"
        },
        "item": {
          "id": "e74f7345-20ad-47ff-b942-f345df69e374",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6ef82ab6-2d11-468b-87f5-1d7aeaea684a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3ef1d3-2b4c-4124-8519-79974ffe47e9",
        "cursor": {
          "ref": "90af21ca-ca6c-4b14-9b1f-8b17d38b6144",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3acf5630-0283-4b61-89ea-56f616fde8b0"
        },
        "item": {
          "id": "ef3ef1d3-2b4c-4124-8519-79974ffe47e9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4cda8cb1-312a-4c43-b475-610ce966888c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57132e-dd1c-4070-b686-508c92a9fe8c",
        "cursor": {
          "ref": "88beb36e-22c1-4207-afeb-0aadfa8dbede",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4fca10bd-9d5b-40c9-bee5-4eaf296e6348"
        },
        "item": {
          "id": "4e57132e-dd1c-4070-b686-508c92a9fe8c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9e49bbcb-cd45-450b-92d3-5fbe9c37bcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c87a24-3863-49b3-bc8b-d2ae6bdcfcfa",
        "cursor": {
          "ref": "9a683d9e-7652-4707-ab24-8eb610e34858",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "67c3b108-e6f0-4b50-8a63-0cdadd7112b5"
        },
        "item": {
          "id": "81c87a24-3863-49b3-bc8b-d2ae6bdcfcfa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b25b5d66-6699-4ec3-9c4e-3a7660d533ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fea092e-deeb-46ea-897c-3dbb4957ec79",
        "cursor": {
          "ref": "c554e835-25f8-4eec-a0a4-0d2f7a24b793",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "86489f26-712b-4d8a-ba08-bbeb2281862f"
        },
        "item": {
          "id": "7fea092e-deeb-46ea-897c-3dbb4957ec79",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b144db6e-513c-444b-a5f1-a3aef51ab78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd8318-c405-47dc-bfad-a3492bfdb2f1",
        "cursor": {
          "ref": "b56e5be3-a9a3-40ee-b146-c762c68ac1ee",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "74315c23-b0d7-46bd-bd5e-614e6636ee8a"
        },
        "item": {
          "id": "53dd8318-c405-47dc-bfad-a3492bfdb2f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e9e47c93-18d8-4372-a170-83858423469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad87d08-8c20-441c-a3fe-c00b0f845f2f",
        "cursor": {
          "ref": "4359d4ad-a7cf-4838-8767-cf726e1d2682",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e90d4a08-af71-4fa5-bf70-4c86987669eb"
        },
        "item": {
          "id": "bad87d08-8c20-441c-a3fe-c00b0f845f2f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "15467654-719c-416a-91ff-148a47727ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeeee51-ed00-46b8-9f6a-ee23e547696b",
        "cursor": {
          "ref": "601b5648-7974-42bb-b8d1-86ee886c0532",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "56c4ac55-bf15-4e11-889c-1dffa0d505f0"
        },
        "item": {
          "id": "dbeeee51-ed00-46b8-9f6a-ee23e547696b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4aa0b931-04be-44b1-843c-883006148fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fab917-ff1d-4de6-8cf4-297d857aa48f",
        "cursor": {
          "ref": "fa5f26c4-ccac-42d7-abe5-81e47dd7bbde",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2f95e35a-e7a1-4ca2-84c8-252a80525efc"
        },
        "item": {
          "id": "37fab917-ff1d-4de6-8cf4-297d857aa48f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9b303838-dd66-445d-b9d3-cd0806d01033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba5cfdb-b4c6-4118-bdf0-9a6a69b83126",
        "cursor": {
          "ref": "92b5abd0-f447-4de4-a801-ab4faba32dfa",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a9694a88-31ca-4b20-a656-47d95805b386"
        },
        "item": {
          "id": "cba5cfdb-b4c6-4118-bdf0-9a6a69b83126",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b84bab74-d345-4401-b954-618fb607b049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030a05f2-d2fa-4f59-83ba-b5b2756458fd",
        "cursor": {
          "ref": "c76a5a9e-f4be-4b07-a94a-04fd7d65a8d2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9dfb3a49-4b51-4193-a668-300fcccdc0fc"
        },
        "item": {
          "id": "030a05f2-d2fa-4f59-83ba-b5b2756458fd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d08a59dc-cc4b-4a6d-b4bd-e5ff8b3f36ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f0cec3-5cc8-4a2c-8b88-8138d6355cf1",
        "cursor": {
          "ref": "f135187e-5fd1-476b-bfac-a16d5f5589b5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9819747d-10df-488c-822a-96f3cc59272f"
        },
        "item": {
          "id": "87f0cec3-5cc8-4a2c-8b88-8138d6355cf1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "80be5836-0a25-48c6-ab6b-cf8aa1e897d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b873ca5c-cbca-4124-8440-5c2bbdaa43bc",
        "cursor": {
          "ref": "f0ecf61b-2339-440e-b404-cbdc86a4afc0",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a356467b-30b3-48cc-9ec0-79f66f9008d1"
        },
        "item": {
          "id": "b873ca5c-cbca-4124-8440-5c2bbdaa43bc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "15d57a17-b4d5-4f1a-bd58-3cb0dbce3e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0c7722-c05b-461f-a5f7-ba2f3d565c00",
        "cursor": {
          "ref": "e8c18d1d-108e-4341-8e80-f93d7fe8cbdd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2981c03a-4d9e-4b64-93a4-55b07c960adf"
        },
        "item": {
          "id": "df0c7722-c05b-461f-a5f7-ba2f3d565c00",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e63d5926-8a5e-4356-9696-7bd780ad0e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9ba106-337c-42e3-9196-df1fd47f513c",
        "cursor": {
          "ref": "44c0c932-c043-4b76-bf27-659c955fa2e7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b4dfe50e-0d8b-4fd8-9067-badbbc586617"
        },
        "item": {
          "id": "0e9ba106-337c-42e3-9196-df1fd47f513c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b1a7c7d2-51c2-4cfa-8b16-7678a4116f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d986e5-ceea-4fe7-9084-8a5b50b40864",
        "cursor": {
          "ref": "3bc033ca-ad03-46e7-9b9e-fcf964db930d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0d11fda8-a618-4749-ab5e-f09cf1900ab3"
        },
        "item": {
          "id": "64d986e5-ceea-4fe7-9084-8a5b50b40864",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "458afacf-2565-47bf-965d-cc4ab0baac9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecd95f4-e3d2-40bd-8c32-06ee5d00f25a",
        "cursor": {
          "ref": "7464172f-eb03-4578-a836-70f928fe7499",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66d0b8de-6144-4e1d-92b2-6d79979026b6"
        },
        "item": {
          "id": "9ecd95f4-e3d2-40bd-8c32-06ee5d00f25a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ec2fd7f2-d6eb-4878-a69c-64e1d7c3e0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2774c9ce-e9e3-4b69-a230-3e10743b001e",
        "cursor": {
          "ref": "21b91b06-7576-4082-ac63-63be352d17d9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2ff3a8c5-c6f5-4bca-8f5f-7fc471ea83ec"
        },
        "item": {
          "id": "2774c9ce-e9e3-4b69-a230-3e10743b001e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "70b0fba7-cc00-41a4-aeb9-85786c17bf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c932c679-caeb-4eef-8870-a85d386c83f4",
        "cursor": {
          "ref": "cb4dcd54-412a-4959-8023-dfc1df368105",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "26347d5a-552f-4963-8c14-a4e6b595d08f"
        },
        "item": {
          "id": "c932c679-caeb-4eef-8870-a85d386c83f4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e30ad01c-a2d5-44b0-ac2d-6ec4b165a592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b431ef5-d467-4c3d-8d11-9b57bfcc93b8",
        "cursor": {
          "ref": "79319959-5778-4ed8-9e3e-12a116311b82",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bf40b206-0b27-41e8-874f-72738372a23e"
        },
        "item": {
          "id": "6b431ef5-d467-4c3d-8d11-9b57bfcc93b8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "10f52c97-59af-4fdf-a7ac-5a1949629dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb82ccb-aa92-4f6a-b5a5-d8a405518868",
        "cursor": {
          "ref": "72c88a15-3ba7-4c7b-8971-bfcad3a93928",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c36a03d4-38dd-42db-9856-0365528d309b"
        },
        "item": {
          "id": "7bb82ccb-aa92-4f6a-b5a5-d8a405518868",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "08f0d266-95a5-4b81-bc3a-b2aa82638c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44ec81e-85d4-4a5c-916f-335f9a556fec",
        "cursor": {
          "ref": "9009cf2f-5b62-4dcd-84f2-aa6a0271ded4",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5eaaf466-8721-475a-a0f9-22e9cc34853f"
        },
        "item": {
          "id": "e44ec81e-85d4-4a5c-916f-335f9a556fec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1f4542ef-3e00-4889-8a72-5ba4ce0e2d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafa1e74-588a-46e1-9d9d-fd6bb69bb74c",
        "cursor": {
          "ref": "20778f31-a91d-4311-a854-7e263667fa16",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f461d950-783d-4196-b341-17da7c3e915d"
        },
        "item": {
          "id": "eafa1e74-588a-46e1-9d9d-fd6bb69bb74c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8a38e4ea-5ec8-4d2a-8da1-fd081b68c89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54521ada-4aa9-498c-be99-52183dbf70f1",
        "cursor": {
          "ref": "dc93c180-7fe7-4b1b-8b43-f306ad114e7d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1afb81de-6c51-46a2-abb0-b68773a254ac"
        },
        "item": {
          "id": "54521ada-4aa9-498c-be99-52183dbf70f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "99168afe-3d48-43de-b710-5fab54382992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917c160e-c2b9-4fc7-adca-2a8354460ddc",
        "cursor": {
          "ref": "c72d5218-c00d-4689-b9d5-c6d61ed85d1d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3da397d7-31c0-4a75-8d52-d1dbf0c41fc4"
        },
        "item": {
          "id": "917c160e-c2b9-4fc7-adca-2a8354460ddc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7faedfe0-ed29-43e5-b69e-a6721a9ecdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2ee0fe-fc0e-4aa2-b2a6-d3414c9cd610",
        "cursor": {
          "ref": "298799e3-2208-42a9-8fe2-8e2d485b187e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "675a6006-8acb-4dc7-84b5-a14a7387eb7d"
        },
        "item": {
          "id": "9f2ee0fe-fc0e-4aa2-b2a6-d3414c9cd610",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "adb39bc3-84c3-4682-83c1-6d9aaaa1254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d7deb4-b21c-45d9-9ee3-cd4766993e19",
        "cursor": {
          "ref": "5a04e928-8689-457c-bbdf-361d6abf3bbd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "74e51c14-7ed2-4f5f-aa7c-87b0f76d095d"
        },
        "item": {
          "id": "61d7deb4-b21c-45d9-9ee3-cd4766993e19",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f3248a20-b9be-43e2-bec6-4cb0acf5c647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23638f29-2b42-427f-96f1-51d2ab216a98",
        "cursor": {
          "ref": "aba645b9-2648-4581-bd62-5af0ddfc44fa",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f90c0f02-feb6-4776-8899-ec9daae88763"
        },
        "item": {
          "id": "23638f29-2b42-427f-96f1-51d2ab216a98",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b372ed6a-4471-4988-bde2-421960b87662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eb5478-68c4-46c9-a11a-69cc4b7cb28d",
        "cursor": {
          "ref": "85379b2e-8a75-4f9d-b179-12e8e7d8b581",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8ab72b94-5ead-4fa5-9e06-49e69a8de621"
        },
        "item": {
          "id": "93eb5478-68c4-46c9-a11a-69cc4b7cb28d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f5250fc0-4c3c-4d1e-817b-c87a044a581b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013fbdd7-951f-465c-b4e8-f76e88139b73",
        "cursor": {
          "ref": "c87f49be-7200-402f-8211-ded7f0695ac9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6b65e11f-2c57-4ecf-873d-66797c87b2d4"
        },
        "item": {
          "id": "013fbdd7-951f-465c-b4e8-f76e88139b73",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19c5e115-c2e1-4710-a27f-4dd5f12b6548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3695856-83a3-4a4d-b1b2-205eda3e10dc",
        "cursor": {
          "ref": "72408118-0294-44d5-9a11-cfb78a5d4bc0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1834cb3d-e559-4acc-8e8a-1f1bb4d5f71f"
        },
        "item": {
          "id": "b3695856-83a3-4a4d-b1b2-205eda3e10dc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d7c011eb-d48a-463d-9b66-c4463a03efd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f080f-21ed-4120-b171-2520d2186590",
        "cursor": {
          "ref": "bb859a88-2198-4089-ae60-17933a8cb78e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a6eda7c2-15ea-48b9-b141-5ca1589a9115"
        },
        "item": {
          "id": "319f080f-21ed-4120-b171-2520d2186590",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d8ca6325-b727-4613-9e10-44514ff7b976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5280a6a4-df0d-48fa-94c0-b49444c3013f",
        "cursor": {
          "ref": "803d0870-9510-4517-89d5-e5aa457d30be",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b7383887-d773-4fab-85fc-30ee0f003a8e"
        },
        "item": {
          "id": "5280a6a4-df0d-48fa-94c0-b49444c3013f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "48285f27-3bcf-4021-9db6-891644c00bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb451e1-82b1-4ba5-ad0a-2b08499a96d7",
        "cursor": {
          "ref": "ef7bd066-8fc3-4545-8997-c229ea678446",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "976e6dc0-159d-43c5-9524-52a0982ea8c1"
        },
        "item": {
          "id": "1fb451e1-82b1-4ba5-ad0a-2b08499a96d7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4d4fa7ef-f72d-4bfd-be75-fd8431d50702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d03d5-1c52-4f44-b387-05d2f85ce0be",
        "cursor": {
          "ref": "340140ff-3d97-4a03-8ba4-548ce0a437a0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5b16059c-06e5-4500-9403-b09e15c1fa17"
        },
        "item": {
          "id": "643d03d5-1c52-4f44-b387-05d2f85ce0be",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d4596969-b4ea-4894-bcd8-94275f4b3cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69038db-8702-4664-bfbd-6021ce9e8c56",
        "cursor": {
          "ref": "d0491f91-0be1-4c43-b015-d9240d1af456",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "16689ffc-6fdc-4b77-8141-14ae8cf7f3d5"
        },
        "item": {
          "id": "e69038db-8702-4664-bfbd-6021ce9e8c56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c0b32c96-59ce-4dbc-b746-d42f307acd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b2c58-7999-4301-b352-d33f0570e5fc",
        "cursor": {
          "ref": "19e44841-c676-4330-9a57-6cc9f73ae089",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c8494d26-dfd9-4c82-957e-995f9cf20d5b"
        },
        "item": {
          "id": "9b4b2c58-7999-4301-b352-d33f0570e5fc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "addd4fc4-1526-424f-acb5-378d87ba03e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4a003c-aa6f-4969-b978-ad390a7e50ea",
        "cursor": {
          "ref": "34573ba0-6237-4653-bf6c-2dac2f22c988",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "95bc4452-99fc-4b71-9574-627e91c0ce6b"
        },
        "item": {
          "id": "9a4a003c-aa6f-4969-b978-ad390a7e50ea",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5ec24913-1f86-4631-a93f-e025451b5938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2ced16-8fe9-4683-85b3-44a6967f1d00",
        "cursor": {
          "ref": "b150b26e-40c1-43c1-9581-341446dd6551",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e4337d62-4b61-43cc-bab4-4ba555ff9c23"
        },
        "item": {
          "id": "2a2ced16-8fe9-4683-85b3-44a6967f1d00",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "129963a8-eac9-4267-b374-101f9c0e2dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663f2e90-2ad2-4fc6-b8ad-2f6ee874b0ae",
        "cursor": {
          "ref": "a9872bb7-3936-49f9-b8aa-13b7d13b4541",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dc059899-4b7e-448b-8ac2-6926bd4ec2d6"
        },
        "item": {
          "id": "663f2e90-2ad2-4fc6-b8ad-2f6ee874b0ae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3c7a53db-ed32-4ea8-a786-819c24e4d75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7cca59-b9b3-478e-9695-a1d6605b933a",
        "cursor": {
          "ref": "095758fe-92bd-4faf-bb07-aa9ab96e70ca",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1c285a13-5619-403f-85c7-e757ea383eaf"
        },
        "item": {
          "id": "8d7cca59-b9b3-478e-9695-a1d6605b933a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d6f68299-0e73-42f1-96b9-c58793cecc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba87e699-bc3a-4d66-8b8b-605f690a7aa8",
        "cursor": {
          "ref": "5ec96a19-9461-4d84-a966-23fd78609bc2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b4dd4cf5-9159-4900-92a9-478b769aa3af"
        },
        "item": {
          "id": "ba87e699-bc3a-4d66-8b8b-605f690a7aa8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8ce305ee-14b6-4087-9d2b-c3ab88d319e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f72ab40-37a4-41d3-9c0d-d46f89592e4d",
        "cursor": {
          "ref": "d85a4c0a-1641-4f6f-9ae7-bd84f8bcf958",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7442f317-c00a-404f-b265-be8a19518c47"
        },
        "item": {
          "id": "2f72ab40-37a4-41d3-9c0d-d46f89592e4d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c2c36b97-c7d6-4416-8342-4f8e4c5bb0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b94d3a3-bd1b-443c-81c8-3716e8001716",
        "cursor": {
          "ref": "71ffe3f2-8924-4491-b6fb-e33eba17c9eb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6f67c3f0-1813-447a-a05f-54035bb3c846"
        },
        "item": {
          "id": "5b94d3a3-bd1b-443c-81c8-3716e8001716",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2383fe4a-960f-43a1-bf4e-848a17bf0762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f9b4eb-340c-4c29-8a84-c9295463476c",
        "cursor": {
          "ref": "c0da42bf-0700-4911-baf7-b7e4ed778b9f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8ad0b683-279a-40b8-a968-5deff59aeeb2"
        },
        "item": {
          "id": "95f9b4eb-340c-4c29-8a84-c9295463476c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e1e9bc26-6f4e-4514-ab0d-913f98772bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a7d8fd-0c32-4269-be6d-5bd5460027db",
        "cursor": {
          "ref": "78cc1082-d9d1-486a-bc29-4b98351ceb0c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b939e384-81c6-4f4c-ae6f-47d7769229b2"
        },
        "item": {
          "id": "45a7d8fd-0c32-4269-be6d-5bd5460027db",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "afe10cd3-c352-4f34-856d-31e77f96d23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c90cb2b-b605-47b1-8f7f-51c287604f83",
        "cursor": {
          "ref": "4ac85449-c384-4a77-b811-e4e230b67505",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4918c0f0-9821-4722-8972-7174af9a4988"
        },
        "item": {
          "id": "5c90cb2b-b605-47b1-8f7f-51c287604f83",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "04b44017-8737-4ff0-8802-e1499ac5da0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaebeb6-da0d-444e-8137-9cab2902fecf",
        "cursor": {
          "ref": "c81d235a-572c-41f5-bb0a-3c134c443dec",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fca9a44e-f5c1-45f2-999f-449b9b2fd8bd"
        },
        "item": {
          "id": "fdaebeb6-da0d-444e-8137-9cab2902fecf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c1f24d42-44f5-43f9-b824-23cadd3be958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e2884c-d65b-4698-b862-242f1fa8fbb5",
        "cursor": {
          "ref": "ff60579a-7923-43d2-8a5d-5188f62fcf69",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b70694b7-15a1-4f47-931e-1df9c7e9617f"
        },
        "item": {
          "id": "77e2884c-d65b-4698-b862-242f1fa8fbb5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "301ad2b4-6395-46cb-bfd8-9fe36986b64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253423ae-7118-4358-abe3-b73f85bb7816",
        "cursor": {
          "ref": "ccf64e7c-c86d-4a0b-932d-d1c1968a7cf0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cfcffc0c-8192-4d62-b770-52947b927aa9"
        },
        "item": {
          "id": "253423ae-7118-4358-abe3-b73f85bb7816",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "48fb04c1-1f0a-4671-89d6-311805f30466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcc4436-fa03-4b0f-b42b-350a0f3497f6",
        "cursor": {
          "ref": "7bddabbb-b09c-462c-9f83-e289598d8002",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "31abd617-c43a-4b32-8b21-c13a39a86f8a"
        },
        "item": {
          "id": "ddcc4436-fa03-4b0f-b42b-350a0f3497f6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ccb76409-c52f-4b03-b013-b5cd6d5876c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06edbdd7-dcd7-4b7d-be91-1b3c5f6d2c0d",
        "cursor": {
          "ref": "ff70caf8-1c53-468c-89b5-e3afbcf85391",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "da81a7cd-cc6d-41b0-a7c8-ed5e94a8e54f"
        },
        "item": {
          "id": "06edbdd7-dcd7-4b7d-be91-1b3c5f6d2c0d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "80997ba5-b0ec-4b68-a521-a750717b7b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2517bd-9009-46d9-ad03-38ebf34cd72c",
        "cursor": {
          "ref": "b52df115-1291-4b99-84b6-6842705e81b2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d201fb29-68d1-4c43-bff8-d28a09f212ef"
        },
        "item": {
          "id": "ea2517bd-9009-46d9-ad03-38ebf34cd72c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8be07475-475b-4ce7-a5b4-e6ce5900ac55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bc5823-10c1-4726-87f0-ed8e129bd7aa",
        "cursor": {
          "ref": "427b77cb-64ae-460e-aaac-458c34830201",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "762c004d-4590-4a34-a4ab-1affaef00310"
        },
        "item": {
          "id": "60bc5823-10c1-4726-87f0-ed8e129bd7aa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a82e251e-eaf4-4f5e-a6d5-5cbad2ece969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b769ed7-97f5-4ba2-bc22-be4227e9b0cf",
        "cursor": {
          "ref": "8c7816a0-96cf-4170-8320-c08ac642fa90",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa873de2-fedb-44aa-8061-a9759688053b"
        },
        "item": {
          "id": "2b769ed7-97f5-4ba2-bc22-be4227e9b0cf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "218e1c1d-7902-40a3-84e1-59318d5c9e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f92f1e-7f58-4dfa-af8c-6c65504eea42",
        "cursor": {
          "ref": "3452f1f4-89a3-43e0-a872-91aafe79a04f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "03522ea9-4865-4107-b519-7056b7a85965"
        },
        "item": {
          "id": "c3f92f1e-7f58-4dfa-af8c-6c65504eea42",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e1cdef10-20d9-4140-bda9-6ccae0788b82",
          "status": "OK",
          "code": 200,
          "responseTime": 2419,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "86895dc5-5dbe-4f90-82b1-f8b596fba8bb",
        "cursor": {
          "ref": "2f957941-9092-4cdb-834f-b73b8e6896b3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "296d51f9-08f8-4703-9907-835ef8d97adb"
        },
        "item": {
          "id": "86895dc5-5dbe-4f90-82b1-f8b596fba8bb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e19802a9-beb7-493a-98f6-b14446c7616d",
          "status": "OK",
          "code": 200,
          "responseTime": 3998,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67699b7-1de7-482d-89a3-c1d92df67e04",
        "cursor": {
          "ref": "ab59ccd7-1fa6-4b99-9753-fced15c6ec5f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b55b1c3-69de-4ed7-a1c9-832720b4388a"
        },
        "item": {
          "id": "b67699b7-1de7-482d-89a3-c1d92df67e04",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c7f2017d-d81d-465b-8fd3-4f8fc5157c17",
          "status": "OK",
          "code": 200,
          "responseTime": 3459,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e13269d-6428-420a-9081-d047e8114d73",
        "cursor": {
          "ref": "353efbee-2e80-4928-8199-800a3151717e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "489e4b4b-34e7-4018-a967-d7b1731872f8"
        },
        "item": {
          "id": "6e13269d-6428-420a-9081-d047e8114d73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7b64ed34-7b75-4fe5-a932-49c5ab0b93b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e13269d-6428-420a-9081-d047e8114d73",
        "cursor": {
          "ref": "353efbee-2e80-4928-8199-800a3151717e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "489e4b4b-34e7-4018-a967-d7b1731872f8"
        },
        "item": {
          "id": "6e13269d-6428-420a-9081-d047e8114d73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7b64ed34-7b75-4fe5-a932-49c5ab0b93b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb41c8f6-4883-4efe-abea-cd358dc7d50c",
        "cursor": {
          "ref": "624fefc5-070e-44a9-9b9c-3eba0c616395",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "93107a2c-af94-44f8-8585-1129cf3ec958"
        },
        "item": {
          "id": "bb41c8f6-4883-4efe-abea-cd358dc7d50c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "87ad31dc-6741-4b9e-a8fd-f9b22f4cada7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381c101b-059b-4ef7-9528-7f3cefae5291",
        "cursor": {
          "ref": "33d5f481-4c67-444b-9dd7-4132fa19b887",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "02b580cf-c763-4cb7-8864-68811e8b6b38"
        },
        "item": {
          "id": "381c101b-059b-4ef7-9528-7f3cefae5291",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "23ecf379-6121-4e25-ae7b-d658af59d828",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}