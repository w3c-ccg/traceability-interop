{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "72dd74eb-8645-446c-aafc-e621bd192ee4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3f2b99e3-f685-424c-adc7-06563cb832cf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e171561e-f1c9-401e-bd7b-1e712d516fb4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ede9074-0014-4406-ac38-8f306ebd4523"
                }
              }
            ]
          },
          {
            "id": "c0d2d54c-a049-4304-a6f2-c573763c4da7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83c8562a-d114-41fa-ac87-919553d6dc41",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e691d9d4-32ec-4df4-9720-4a9782e9b19f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a9a01cae-9f2d-472b-a139-06c59dc45edd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4c70d897-9eaf-4fbd-9610-096fa2ceca02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ddd395f1-ee3f-4a27-81ed-7d63472ea64c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d2ec426-b829-4ab6-81af-c685165ebd5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "113d0db1-7c41-4e03-b101-78f3ed14aaa9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b927bdb3-1ec8-49ab-8a55-383ce45ec30b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4daa5f0-6f37-44fb-9837-83039c919a7b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89b07521-434e-495f-865c-f00b27328241",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73dde0d7-c218-477e-8ddd-2b62560db6eb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53ddf5b2-6b03-4435-8fbf-beb29fa85312",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "915105b3-fd4b-4e42-8611-2aa47ed9e874"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce0029e2-806a-4a96-aa7c-687e49c72612",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff22c1e9-8f4c-407e-aa7b-6adc9629bf9e"
            }
          }
        ]
      },
      {
        "id": "26857fdf-ae8a-473e-a1b1-0e1c951857d3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "59254494-b3db-466d-981a-91729cc90dde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86737974-bbcc-47e6-8520-15b14226c3fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8005aa57-7fff-4039-b46b-f7aa9a059f01",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b30c2cf-89ab-4225-a273-addcd081f6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6606ac94-60de-4f99-825d-860968339431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27226345-35dd-45db-b7f2-6712e76c4b45",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b6163c-c294-4218-aa03-03b5bd1e8cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00fbd10d-9c48-4938-83c9-a82ebf53660a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb1ea2d-458a-4427-8b30-63e354211d2f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc702302-4e2e-4b35-8f4a-167d41f059a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e75c58b5-3496-4379-8617-9f2b5be6d192"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85114163-7b9b-4023-a16f-b80c66265c61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f02b0030-a8dd-4c9b-b815-109768e1ccea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2730bf7-24a1-4f7a-b4e6-3a33c1bb0693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb2b753e-d890-4e71-b3ca-cb60b8b501f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a4ee68-67f8-4a1b-a575-026e224531a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfceacfe-1236-4916-8c1a-1e3f461461ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e63de58c-5561-4cc6-879f-086712e0b0ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed55c92d-dcd7-4432-9e68-52edb254691e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec530e3e-ea70-4ad7-a767-f6cf8b8e4a3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "46b4a2b5-97ae-44e2-9fc8-fdc4eac2e98a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed84ee45-10ec-4a7f-8c3f-bf94024096e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1f1ad1c9-ff8d-47f8-8227-d812229d7298"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34b634da-df45-4d4b-9532-fc04b1e32941",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85de6949-9fc9-42c0-8098-e03f1748911e"
            }
          }
        ]
      },
      {
        "id": "6718b5f6-9a98-4eef-bde7-d0b266a29b94",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "db8bbae2-7aa1-46bc-8f6d-c1bbdfb35af0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a5c84f2-b34f-4136-b24e-2b9778dedd5c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6ea7f7cc-aa15-48b5-9f3b-a8d797b707a9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7b69e9-dc56-44d4-aa8e-804bacf68e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888600f2-accd-453e-9a8f-0366f8d91f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd2f4cb-85e7-4e5f-8a6f-5234d5db0a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf14cc3c-a87c-48e6-8672-95201611c72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5c159d-f26f-45ac-be38-6afeca3c1f93",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377f6bc7-45b8-4d0f-a034-cff628ff4877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923ef218-2c85-48db-b1e7-f42563db3734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3278d4fb-ac1c-4e1d-be87-b532a2441795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43d61d88-1fb8-4dbd-826b-5f5c367a4e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5900965-5d40-45f1-a7e9-9065025c2055",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546b68a5-2a5a-4d56-afbd-b29b36f850fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830be6bc-5fd2-4094-8110-b7378ef69434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a41b270-9686-4a16-ac91-c2c07318ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80303fc-90a6-45bd-9f7a-abaadeeb1e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2e4dc0-baeb-4bc7-b4db-f8a2b1150bed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2a8627-a1e3-419d-939c-770fa66e9cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4de9cc4-e8f5-4931-929c-98fe7d9b9b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83751550-3377-49d9-8e62-1165be6640c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9e46e4b-4167-4503-a10b-20a90d900675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c0209-52e2-4389-984f-d42aeb4532b2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de33ed2f-e94b-485d-93aa-7ba94471e55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069755a4-b242-4678-95a7-15b8578da770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5ceed2-16cd-4b9f-b60a-7343c4579e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0877d2c1-c01f-45a1-90e7-1de146d795c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72028c3a-4763-4e97-a6bd-b6483208df66",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77e7ed0-ba63-4f53-9044-605704d1a19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7376a20c-a5e6-4a37-ae28-ec4b315f48f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe10eaa-9680-4a6d-bab2-64f4b11bd2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9315b1e6-6042-495c-a9f5-084825b059bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a5ef88-b04e-43de-886d-f9ddd84e9535",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5993777c-f275-4feb-81dd-a240aa7dd790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0d1e0f-b5f3-469d-abd4-cddbf55b55ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36bbf4c-2f53-435a-8f84-0a708819c91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0317185a-0da2-439b-849e-2f1e8ab6daab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f33f9-eb76-4f94-a42c-b40dc649324e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95d040e-ed50-4fb6-934e-a37d7cdad114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5545924f-b8c4-407e-9093-71229146f696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a693d066-0531-4d4c-b0d6-d4e6fef05dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987e5013-0830-4724-8b86-d010c8f3ba2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3040b08b-9586-4556-87b7-669a2290fee6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca636287-3f7d-4ad3-9e0f-c27cf46fc382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f3813d-a2e5-4006-8f85-cdbe919b97f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65bad61-6cdf-4c39-8c9c-190f1ba604b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "061ed136-5ad7-4846-a716-9393f8d9fd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6062b7d9-7d06-4eb9-a702-098405d43813",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2f8b59-40cf-4b5d-a0fd-63719284eba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e829f30-9a33-47d0-a0cf-9e93872fb189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8635afe-fbf7-478d-8646-200415dac533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56a0a808-e25e-405d-bfb1-50b264c42dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e402514-7377-4e4e-8b12-39b788215406",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b915ce-b318-4001-b731-74e7eb488fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00661aef-6e1f-44d9-9e7b-8175b7df585d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6948a1-5dd2-4b4f-8d75-caab745013e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e762c78b-6fd3-4e1f-9b58-ce90a1e2c262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d26d38d-665c-4347-8dbf-dc782e7c40a1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814c3b03-cd33-4939-8eda-e84951f5bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7756055b-39ac-45a5-9061-89df6d9c8862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8877a561-40c3-4b35-8fb9-2b55587d1364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8df5910-5860-43db-8ba5-be9203e289ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0cfaec-7673-4735-be43-0bf5da85374d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c091c5d-5428-4076-8283-a31756539753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5781d319-1cf8-4825-9ddb-fd6d35d79a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24787c77-e9a2-4286-aa45-2472b2274d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d0f529-1801-46cb-9f05-c5781a77ef74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ad295f-2f18-4fd2-bea5-a221af9fa1b1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ccb9cf-98b1-44e9-95ec-37bdee2bf971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28335bf2-8c90-4684-a1e7-8085a8002e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ce295b-8cf5-4741-9f7c-752dbdd9dd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f880458-a559-4b42-94e6-6b9b922b3dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbf52fa-2352-4e64-b85d-36a568b99c35",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ebce7f-4c72-4514-967b-a08009f5220e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2d6a60-890b-4fbc-bb4c-0380429fab24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986b0179-63dc-4ca3-9d3f-a06613301e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9422f0c-79c2-4473-9f52-edad12044d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8584c2a0-9660-4ec3-a23c-56ba4240cae1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e666e4c1-2d60-4c9e-9d53-cdf9c4fdc1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd974c79-f2dd-4952-8224-d2013845c338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d29ba96-ebf7-4530-9f20-466c0afad8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "853ea847-359c-40e2-962d-ca38190a757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72606c0-35e6-4c4c-a4d2-b93a233af0c7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dee638-bcdb-420d-b852-c6892e39866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297d4a40-40ef-4859-a375-5c50b1a0c602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19559c5e-17df-47e5-93cf-68c2bdcdf0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "845abec3-d3bd-4054-9316-104969f9bb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c5db43-4d03-4c01-af2b-25a218c7f8e9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3024296-124c-4e85-b4a6-fdf0786c073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11e00d2-8695-441b-bf94-65b04fc20c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0681df-88ec-4dbb-8d44-d030ed8a6931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5103e8-6655-40ab-ad78-f4353f0ebecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455d2ae4-e15f-4851-b09c-cbbff56d443b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e2e87-0621-45fe-aa05-c62149684126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b95ed1-c849-4d2b-a7e3-3c64511c1033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a80bac1-b63a-4e1a-9316-10bd26a39ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de5efc8f-3fc7-4f73-9c25-3d11e10d4daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d0fc38-7617-4460-8ebb-9915be916303",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead498e3-138b-498d-a93a-e42fd963b6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4728a5-2b50-4bee-b366-29f6acfad23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24e31c-d0df-413f-ab5f-6b2c0826ea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66518a55-295a-4b0e-b0ed-3d23e1919110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1cb754-d569-4c83-937d-4580f86b23c5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e08d58a-d051-4b5b-9a53-b322d09e62aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb805d36-a4cd-44df-b497-7ddb9e63e161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccbf396-4e12-498e-ba26-dc1f382f01fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7475a6c2-f97c-4324-a3c3-b4d8e6bbe893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50579089-1870-4d38-8444-46e6b3099cf8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2980fd82-1f08-4ab1-8a32-da348306ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c73e60-c603-4937-bb85-7417780ef3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e57bdd2-da95-40f8-a3ea-d12f242be922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28cd0836-4676-461f-ac96-7e05d7fdbde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcba72c6-d931-457e-9406-d704c4d844f0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefd5227-096a-42f2-8f8f-21bf21a17ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc96c78-d68d-46f7-80f6-40df6f228bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9cf4fe-246e-4998-9686-fc35dc4fc2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30f90c98-27e6-4a02-86d6-ed0f7ff88a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80763a3-2e27-44a7-962b-c5dfb5d92c8c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35caa998-94b7-4db8-b299-1e0bb3885119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110d4034-7b37-435a-880e-70d0769676c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c643fe-315c-451f-a479-5b7fb2db8d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "897182a4-a7d5-4754-b56f-f10fc6927c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c852ae-065c-4ced-998b-db0652879d42",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89427309-1ee8-4339-a20f-a5117c13a7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8977c1e5-139f-443a-bfb4-7a76ec0761eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08b73a7-0231-4bc4-8acd-7c097a66ae32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3eca97-201d-4e75-b500-332224bf595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0763df-1ec8-4dbd-9d97-60d8e397a8e8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d48330b-90f4-4996-930c-b5efcbfe2ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3e017e-d70c-46e2-abda-a11d9ff5c369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8361442-d3c4-4b11-8374-bd9de7018d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a63f7c-ef7c-4662-b6a6-300fab73b52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb0babf-5c21-42f7-a5cb-316f19725c0c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df7d6e6-f3ba-4100-b130-0888b2df8867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8112e928-9676-433f-942c-a8911edbbd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f96f771-fac4-4a5d-97ac-a0bc129752d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a7e71d-d3fd-4255-9d5d-294a62d00c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b586ee-2871-4704-89da-3352853c9eb4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fa8d0c-0078-4bec-886d-b81a4401cff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3acf44a-07a1-4243-ae16-b1b3d6468cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd1008-baf7-4e8c-a806-1e26737cb264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8908f5b4-998d-4d88-b361-224a320b0450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca03938-1cdf-4d35-92c8-8023b3c21c9a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16adb36e-b438-453c-8d72-13f40a43fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7126b72-bb80-447f-887f-2be2df6df79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315a2cec-e596-4575-8835-90f76d95ace4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa79ffd-f7f1-4830-9bf3-67df7b1037b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a6815a-86df-4196-9e77-2c2dc4a7eb7a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fb0b84-81ec-4cbe-9798-c36cd08b6a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2d9163-824c-406c-884e-5bb57f2c03b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c61c5b-0808-4a07-85c6-8adc7b09107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fefae702-3750-48cf-a3b9-9737da3bd352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13169f70-6b44-4e83-913a-b59d218fa004",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9015f5-500b-4228-b3b4-3f77dbce3bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f975e67-6b6a-489d-ac28-81d3f1dc4b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1217bd9c-ba69-476d-a618-150ca2670e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7913c5e6-f2aa-4f3d-affc-c89eaf66e42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56c00b5-3ff1-4b10-a23a-ec14e1ea8929",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa7c85-e1fb-4566-a7f6-e54ca32a34b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b779f2-12ae-407f-934d-bdf2353e65c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c2092e-ff16-45d1-82d0-af3da5195701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "411d48ea-3f88-4008-9f11-c24b554e2a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e838a09d-d183-4a92-a5c8-f18fb41968c2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0f3cae-0bb3-4551-a62b-3b86aee1b05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707a8879-7dd2-46b9-8388-0b80790ab8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7c99b0-bc2a-42b7-b310-1d84b5179054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e294f6a-384d-4589-a840-61b93e0c88e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12164c35-7a73-4647-b950-241a15200c10",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd2e394-808f-491e-bc7a-299d90186789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1b5c02-9253-45df-8998-5683f113ee6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77acfc1-916b-45da-9e81-4389ce1eedc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85005d68-761b-485e-a2dc-3a2281034a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d59305-5de1-4a95-96af-6582727a6774",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22244126-75d0-433e-a793-9a6e5f24cc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf0d553-0e81-4fa7-8661-13ecba6e9e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940bbca3-b64b-474a-ac4f-9e6ac261440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fccd2fc9-be57-41d5-8a30-45c51b977c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a790b19-43e9-4d75-a842-3e6056bd66e3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3a2a1d-7a6b-4b72-ab72-85fdaa29ce71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36b0dc3b-e6a4-4f1e-8805-8fcd9813c7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28144ef0-4dc2-40ca-b51d-282ff56a654e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f2db68-33f0-4e80-b74d-b19c075e1d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05b9c3f-99e2-43e8-aace-7afbe4319601",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f3d9db-7b00-47e3-8f91-acbed6928a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5bfe01-6212-42f9-91a5-e90057e9d1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe35382-057c-4112-91e8-fd7d20d3c2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "969bfac1-c3ae-44bb-9bee-c6f24a9eeb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4541deb7-4f2f-435b-8ea7-de8731e72497",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb81f0f-06b2-4bb8-b432-5dbfd81ee4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc4c11d-b12d-45a2-8da5-ec18018675ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94932a6a-c537-4af3-a22f-2f1a71e9b288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed194f6-6034-4ae8-8683-bd972996ead3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00345cbb-9ad7-4e58-a3b5-8c1c102dd24e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c410c464-4229-4430-a87d-0ec56361e75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cc1c1d-246b-47ef-8179-eb08f7148e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5c2f61-c2bf-441e-9ba0-6ea4d6e49315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af7c239-68a1-4411-a8d5-a4df9de85cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dfc9c7-bd33-47e4-ad80-0eaaffdcf1df",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcce2e13-8ebd-43eb-8a22-f2a2bad312ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0470e75-978c-4e12-955c-636aa1c5b943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47bb572-d16f-431a-8263-1d9512452374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "162b3c49-c962-4ec3-b785-e8fab75c7f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34876f11-9f28-4c97-9549-62be146f5ddf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff6f618-1d9a-4c93-804f-21bce98fb6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a19156f-9344-4f8c-bdc6-e69d19935bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b62ac0d-ae4b-44b8-9cb9-65655f7f091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d685cd2-e334-485f-892d-edf33405f7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40137ab9-4440-4928-b846-55b540a6d917",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b286b80-22f0-42f1-a857-e8b3cc1783be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d908cfe9-2145-46cb-a1d6-05cd906bd5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b648b77-9ff0-4b40-8149-471ef3a8a37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "97136c34-98de-4736-a9bd-6226af8588b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ea82c-777b-42da-802f-40cd77fee12c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3079b240-4525-46b0-95ef-7869b0d95514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514add18-7509-4787-90fe-7e0420e05ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e002e5-fa59-426a-8e3a-73665c598f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09d27af-8e31-4eb3-b0bc-b4e31cf1dbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aae7b52-e51b-4f8c-8b64-ddf7bb8cbadd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad5017a-38ff-4505-b6c6-7a1d2e1e0ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628ad74c-43df-4c46-b1c2-8fdf725848ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef87047d-c666-48c7-8bcc-f6f1c9a97958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7463163-d65c-4be9-a8a8-3d55aaa6b5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713d92af-eb6b-457e-8cc1-8c558e9dd1f2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9265e3ea-cdf2-45c4-9208-8e73efa9cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ca66ad-9bef-456e-b431-49bbe1ebaf79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acdf4a3-2eba-4d05-8e24-e0060175b01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e803a377-2bf2-4607-b469-74f7883b6120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b2df97-195e-4b12-b777-5a8f9165ebbb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7196acf-a264-43c1-a629-8078a2126c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa799e1-acf2-4c5b-b332-083f21e4674c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6359fa-34a2-4a3c-8ed5-89d74ecc50b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "904ab25b-8d56-407b-b980-b4a8ea5c2a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b41049-5d6a-41d8-aa9e-d6a1aa5ec34f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a75f059-0665-4cbb-b7bb-54e1a88cbb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dcf516-053e-4628-8dd9-b26067286cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d40452-cf1b-46f5-8b01-b8d861963360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9119ff4-27c7-488e-b2fb-492c557a408b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e71d34-c644-43b4-8239-320c3bb09c9d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c83c733-1500-40d4-83c3-96879ec4248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3073805-dbbc-4ce7-897c-1f4f0749a224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029cb117-f231-4c93-96fd-7b1c4fc07e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e279aa0-6bdb-4474-b41b-6cecd04b73b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e9c927-198b-4bc7-8308-4cb85ede9ad6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf807d6-e49b-4a5f-b00b-d4812684dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd88aa2-6656-4f56-b930-aaa8aacb5679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c48228-9334-494e-9ecd-b3132e76cd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7485c00e-7d62-418c-bb78-84fcfe6556f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8cbab3-1707-4da5-9417-67a3dd217b29",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818dcc9d-9b26-4ec8-bd11-b8bc500a81bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33502969-00fc-4d96-976e-cc817f315a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03e6277-81bb-4a98-97a9-5dd89d64e466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d89e6cf-c152-4a71-96be-8fe74203cb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe45d2a-6b12-44bf-a545-a02dd7731ca1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f75ace-b40a-475a-bb83-a2660a6993fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b6edd0-0091-4200-a061-7d1ef517c7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b62838-c4cb-48d6-bdf5-b2c2c5b4bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed21cac-744f-4bea-bb17-66a15f1d89da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aefe92-2310-4425-95f9-cb92e705274e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f2f10e-77c6-46ea-87da-65d5d9e731ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97205352-5e36-4bbc-a62f-66f25476cee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93919167-7f4d-4413-828a-21dd0b8acb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5def6b75-5457-4f8c-b1c9-0aeeba88f7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8336e9e-9a94-47e8-9cbf-2f4df43e4776",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f24028-6fdc-458a-98fe-4745f2e30081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0ee3b0-27c3-40b7-af32-9142f13a6f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506ef219-9b3a-4ed6-b079-b21f15fc4c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfd39ff-e71d-444d-a84a-7e8dee7be212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b183d7-5997-407e-a827-055252d0746f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dec78e5-31ca-44ce-ae4f-711c6e9395fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5237a1-c336-4c55-9901-64e05bf128bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f234189-6d27-4bcc-8bdd-46dafc5d9fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76a173d-1818-4e6c-a278-4736c0119bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df326332-f25d-4d09-ab0f-fadd7afdbd18",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75321e76-5184-4889-ab30-bd87440ac9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e291f60-1b52-43d5-9bbd-69bdf7e3e64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0402bb-214d-4fe4-b12e-4a546440dc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd433b5-66ee-4f6d-8818-1e48c3b0b1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d80483b-99b4-40cb-afca-620f23b6ca00",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789199a0-6990-48fb-9005-0e42599f6022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d20d79b-62eb-43a5-958f-483117e2241b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687144c4-4c26-42e1-8cfb-6c7f8708126b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "03f417ea-5ebf-4d89-93b4-13fd5e9af5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a50316-d90b-47cd-803f-70f33af020ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f19851-1917-436a-aceb-40dceccf268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a77b11-2a11-49e6-804c-6746edd2aef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc7ec13-ee18-4a55-b662-62fa75d8fb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb14bd7-dfad-4b31-8ab1-82a55759c053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dd1fb7-ac61-4d9d-8bb1-8bcbb9b4414d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a8496b-d26b-4675-893d-18aaff7d68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ef5a18-f0b2-4ac6-8876-6a00a37c096e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32d4a27-db36-4e83-9c96-aa93f920c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "419ee2c4-e6eb-4efc-b5c7-efca365837cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5043a8-e2fe-4f36-9a35-3914106d76cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4680e968-5848-4af1-ad6f-f484cea6011d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6302a0-3c82-4c60-9f37-07ee1a9f11ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62019966-50f4-4bd4-a11b-564165ffc81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe57d0cf-9756-4c89-87f6-67e0c06748ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feffc354-127b-43ef-b624-fa0339f297e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14624879-3f39-4e65-acc2-5182455cd579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf7020a-5d31-4083-8cbc-fb7d6c4f9cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4b4c76-421b-4028-821b-ed2b3ef6b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e66aa77a-4f43-43be-9659-1864a86f7a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8beb4b7-ed6a-4431-86e2-30b8b452482e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fafd1a-2034-4eb7-a298-4755b90319f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f216e63-c44a-4dde-8cfe-ee71e5b78b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d899530-317b-40d5-879f-1a9a4df93fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "238fedbc-7cb7-4509-8c12-d62547593a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60e8281-dbea-4475-b56b-abf7138b9c61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504f9ce3-b6b3-4733-b064-c3fafbbed2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded87ccb-1562-4ce1-8c88-51d87e971fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f13ee2c-0bb8-49a2-ae82-ea205366eab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3edd3cd1-1281-48bf-82f1-5d6b144db2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b11ffa-cabe-4e0f-b160-32fd1104f221",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f5611c-2e7d-4878-ad1d-6e47e6d15bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87be353b-f047-4062-b55c-3641637b8b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aff3d6a-3a4c-4674-85e7-4c0cbaff7864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "89deafe3-15b6-4aa3-bf46-9b3d67578841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09ed633-924d-49c9-a454-c0f8757d8a6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84162942-5187-4df8-9c75-cb191f5a4a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a57d5aa-a2fe-42ad-9674-869f0ce70929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11bd408-11e2-4e94-a410-eb0c067a7ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "046949be-ed6b-4128-b535-13c24819be28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde3c807-48c4-4ecc-88b1-6f1c2aae958f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2e0e36-5bed-40de-8208-b0da4da58021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690e3aad-4198-4a41-8910-09a3056e51e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a933a0c-1a99-48b5-a087-e47078f3b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b38c43-664b-4b9f-a69f-3649ea0db4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea69b85-a8b2-4da9-8f43-d5f5ff3c75af",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343ecef0-d8c8-48da-83d8-5feceb5adca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be04bf5-cfb4-419e-a234-54175ae9186a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d68a2a-2247-4175-bfdf-888731b11fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50bd4797-e0d2-4c28-a76e-4cb8dca05f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae5113b-505f-40fd-b73b-9e9b14f6182b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f90ab10-96d9-4e84-b505-5392bb3ba302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36124a8c-858f-4835-affc-54f6a38e45f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc31b02-309b-46ef-ab0b-4cdafb2f2392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecf1a4b-fa2a-4291-9fc6-cdc0bda43875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed11b0a6-7dab-40d7-ab2f-6edc33c1166d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db253fdc-4eae-445a-b10c-a6aecebc518a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46078b08-5c8b-4696-bf97-dc3271887e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d6b940-9849-45b4-99bc-a98c31f7c04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d57a4cff-20b6-477d-8436-9d44613eb85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42571bcb-9511-4288-921f-7840500891d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1e3137-cf20-4d45-9bef-9328183ee1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2cd7e8-e978-434f-a4b9-e24eb568320f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1f9089-9447-4728-a14e-cef251058e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b782c678-114d-473f-954c-d4f602c3e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a31e2bd-46b2-4a9b-b324-2caab7d57668",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100c71c7-2587-4ad6-b042-0fee3551a353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad282003-41e6-402a-b47a-df828e5e2848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1534864-8d6d-411e-9e32-2e9a2ca49c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4587d9-a8c2-415d-8253-4d0bf3718647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704686d2-44fa-4f75-93ac-fbec2772e4cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef27fb75-0aac-4ae8-90d2-99dfc3ced3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac568ac-d347-49bd-8b23-8c16f9e3421b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d936685f-12b9-45f9-8ad1-35f9a330c8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbcb715-85af-430b-8ddc-30a14cc72158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ff79a9-2774-4156-af43-678ce96183da",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d085876a-b049-47e0-84b2-60c327b07e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41bdae1-e9bc-478a-bb12-ffa16c5cf146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde30ace-4f09-491a-b74c-0f85ad3ee085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f6c9fe-90ba-4491-b9d5-9348b4cddc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7a1a54-0577-4fee-846d-99b610c84060",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c981412a-47e4-4b89-87fe-8c993aa061de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc45d06-5eda-4aa1-b5b6-dcb561eb4089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be47121-87c8-4b2f-8d6f-f341f3ccf630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05598000-134c-4a81-b8f9-47307ef96eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda0696d-e331-4482-9212-07d49f7f0059",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2dcc57-1147-4393-89bc-9bf169d1a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c1fbf0-524c-462c-80b4-920704565848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bbec9a-2900-4055-8ebc-14c753c976aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4445735-12f9-4e64-ae95-ee2d1acff584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f2908d-32dd-49c2-834a-5f145b560f96",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2335ca6b-fde7-4805-b5f0-103e5f17f104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec11405-7dcf-4b61-8798-302042d827a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1244322d-084f-453f-89cf-4dae87648aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "771bb0ba-4ac9-4dcb-9ec4-9aba059eb462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c249e4a3-d0f8-4b38-9e76-1a58c3a5d3ce",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846f0527-45d7-464a-b446-ae80c2144ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043c89d2-b218-4c72-bfde-ccef56350708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af17b208-1c7d-41f4-afe1-715ad4c43ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5c11ef-717b-49a9-b612-631b665805aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea452fee-73be-4666-8419-d6f7c5dddc27",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e264ed52-2f89-430a-8ecf-87b1a61d49f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b83dd66-8a7e-4441-9f45-9010fdf6f525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9370d2-3bf5-42e3-a1a0-f218e4f1ab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b86b9b-467b-440f-b2a5-f024e2533e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cb57c5-9766-4bbb-9ccb-d697a09a381d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889c16b7-002d-4675-bb6b-b198e87f938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42e40c6-56bb-4cd5-870b-df949c0bff8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c765488-1422-4988-a367-55283aec79c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b8c403-9b58-45cf-9bb2-518d58117344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae8f4c8-60ed-46c6-9fd5-7943f4e935bf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e056fb1-c4fe-4bf4-8666-04b0e27fd5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0887b727-f37f-4b34-b82f-e73b9549f6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e385b4f-48d6-4c4f-b037-86d02771a284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6f9991-6e78-4810-b6de-294a0bd06481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a4e81-1e3b-4bb5-9034-62f3bbc0ec4e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4a5f32-90c4-4e24-a7b3-10789a98c33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d504d943-1677-4c3d-b99c-4401b9a35725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b30eb7-5756-47f6-adfc-87fef8c8b19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4c669a-f61d-4092-a32b-f76713f3f179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844a9ea2-3d4e-4e56-8b2f-e7c5fbba8cad",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ab2acf-facd-4588-beaf-f9a3d8a92e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b70430-6806-4f42-8224-42f7ae1f2ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b208a628-69c3-4dcc-b40e-f34823988b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e266d0f5-8950-454a-8eab-0721b286e74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14900186-ed46-430a-ae81-20376047aac7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1da60a-d29b-45ab-ba3a-9089da9a8172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10d67ce-a595-49aa-87e3-5937fd9a7078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05c8912-80a5-4440-8877-eed26c32a8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc8b946-034b-4a61-9cf2-97e0e4460b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e938ad5-5a60-4eed-abe6-686a1dcd5588",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac554a0-6d40-4017-bcfb-0d0dbe0e8b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a5afa1-f987-41b3-ba5f-8737d20b0dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2746fbdb-c934-440f-a1e0-9bf72ef475cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff541189-44e8-4b56-b3c6-384531df48fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb6d490-e34e-40f0-a3fb-6cd5a84e27fb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ea9a7c-51b6-4462-8398-7b76f898291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ab1696-dac7-4bbc-ae9c-43a41181bb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e4d335-9d0e-4982-b1b6-a9cb6405fb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "753a822a-365d-4772-8f75-24bba02e0e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a78298-127e-4789-a048-272af6ba40c1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6d942c-ceb5-4728-bef2-fd68230debff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474abb4d-4a25-40d5-9f04-e058ca25c32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c7c911-fa1d-42cc-9c8c-9ba7bfdbf34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53d892db-7b39-459a-b9a6-35c4b6cec61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a010d4-b973-41b4-a41c-a728dd79a666",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec9add3-bdb8-4467-afb7-3c7eaf840dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe93547-018a-463a-afbd-92e866e8c462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b8282a-cb13-4ae2-b078-3965d57e224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7251a725-bf83-4889-8223-a2efa688f068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6cf86a-b230-483e-8a6b-9f1d8639613c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f5ab41-e365-4cec-99a4-3930d53a2fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e220b67-d3bb-403e-91e5-e7770eda55e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5fd95f-070b-4f74-9edd-59085ec99bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c67b5abf-c486-42ad-b231-df15e2e3c293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ab7307-abcb-4fed-a5cc-0bff13587958",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a591ae65-940a-455b-975e-82bb07e71d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfec318-a11d-4c6e-b3f8-8b6962a0610e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cea559-0369-467e-8b2f-9eee3ecdf5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "942d8ebe-1a09-420d-bdd9-cdca9af41b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd2234a-d52b-4cd9-8cdc-004785cff680",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c2129d-b2ee-462b-92fe-0b1323eb40db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bad4fd-a097-473f-95f4-ae845495d27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57606665-c15e-4425-aa54-e2acc44923e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af2c4fcd-f0cb-4194-bf66-475aeefd15e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadfc5f5-c3aa-4ed9-b94d-789967098b6f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb94ce6-a068-4f74-af9e-d56e515ed09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b109cd85-a648-4245-811a-3fd5ae70db17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a3aca9-523b-40ed-99ff-cd84a6a0ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ab7250-71bc-4d7b-ad2d-0e917f2f4a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554f5f1b-5fa6-4a43-b694-d4b77440f13a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87abaab-52b0-4171-95e3-c09ac3facc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e964e8b1-653b-4a50-8110-0495b1dc6bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acba871b-95a0-4530-85ca-d6afda08df80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44e01231-2b16-46d1-ae6a-f524bf3fce5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a596c8-f55f-46e0-b9d9-800cbaa3de84",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbbee2b-e055-4753-afbc-e16111eb88c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ee1776f-ac22-496b-99b4-74188e366573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7447fd8a-e725-4af3-ab15-5da6c5ff72e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "39da1e01-2c7f-45c5-9109-47b6576c5995"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0dd81fb2-7b3b-46d4-91d5-87087de8d71d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f88027ba-9d99-48c1-8f23-519766748cd1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dda00a-ff0e-409a-830c-81182e308c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "166052ee-bed4-4b7e-b47e-534f715739b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607e48d0-94c2-4c74-b7a0-402708d9b627",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "706389ad-8f5e-489a-b9c9-f8f51520bdfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e0f29ce-dc4a-420a-b526-7d8f62a8154b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "855c090c-2a29-415c-8bf7-2164998ab1db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22f2be57-0988-4f89-a0fb-13c7b7a52baf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a7711b7-ced1-4d7e-b191-9681c730717e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a241b40c-2e0c-41ce-907d-e9c65502b7d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32320f29-5e8e-4b97-a8d0-ddc08057c946"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f9dadfa6-07e6-460f-93b4-c1b39ffa3528",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0dbea947-df3a-4ef6-b01e-c259c426f410"
                }
              }
            ]
          },
          {
            "id": "c312db28-16b8-4646-af97-d0dfdc9ee289",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f32c291f-96b1-4636-bd95-d62395900580",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "74574698-2901-46b4-8f9a-c7578ec35236",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abe4a3c-f2f0-48c7-9398-840d6d56ec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c92b366-3dcd-4d1d-b229-3e6cba1ee2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c217fb26-0176-4f04-9904-f5e4e0a4f87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75c9a2d-df48-488a-bfba-c8ffe57d5e39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fabe946f-f185-4e43-9cc6-e6cd3fbc5c09",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15cacc72-1e1c-42cc-aa74-74184c34e5c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a82a35c-ac0a-4397-9a2d-3b92ea7fca47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14ccb21d-d914-48d9-b09a-3f24e34af77f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6c9a3be-dd01-47c4-9e32-d93a521e0d02"
                    }
                  }
                ]
              },
              {
                "id": "90f2896b-f296-4d2a-a5c8-1787d2f226ba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdd19d58-01e6-4533-a962-f447f3166e36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e33c8e96-9f00-4f08-9d60-ec0540a5025c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f826fe8-389f-4556-82b2-b4fb01b26633",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80085246-a16c-4dfe-8743-537049b98bd5"
                    }
                  }
                ]
              },
              {
                "id": "5d6f8caa-3c02-4c71-9f8d-500e36b03fbb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d767da04-5660-4290-adc5-db821701b253",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfd6475b-d67e-48d7-a3a0-6cf0417ac184"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b7e4a94-2bb2-4035-aef7-6b6034079678",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9dda6565-52d0-4dfb-97a5-b3fd80f0ec16"
                    }
                  }
                ]
              },
              {
                "id": "f30506b9-e82d-4b4f-a8f2-663a1f03b6f0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5d9b930-87c5-43a8-9899-49c09843110a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d8b8990-9890-4db6-a3e3-ce1b7ce796b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "accf1c8e-3ed9-4c7e-8683-e689c21a7bce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "74ee5222-4c91-40b4-b252-e5a246ffb6e2"
                    }
                  }
                ]
              },
              {
                "id": "74948473-8ebc-4abe-afa3-d65499172172",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cceba26-491f-4364-9489-a980798bc6b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7f8b0ff-35c5-4466-9623-9b545b146861"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efe2fd74-3a36-4d27-94fc-c0cbcc1d1820",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "20ca2037-16bc-4f07-9e02-4f379fa6d745"
                    }
                  }
                ]
              },
              {
                "id": "f9057a7b-4608-4293-ab51-56ac55c68ea0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a8dd5a8-5955-42fa-b34c-633049bd04b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d138312-834c-434a-bd2b-3b0bcd46305e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ff4ace1-9831-40c5-b95a-73091afc326a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf4f36fd-dd7c-4f15-922b-3d4a78b457c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e50aaa9-8eab-4c97-8c36-de6e3dd44ffe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "128eb3c4-8abd-46da-8df3-c4f3e57c347c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f7bde8e-0b6a-455b-9f3e-9098ada3dc53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d1e5bf5-a58d-4b9b-87c8-74c95532fb39"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d439bc7-ea3a-4245-8721-bdad007827b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "54e3fccd-3ffb-4a37-9b6b-0512dc6dc29b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da4514bc-87e8-4a30-b1c1-f39276006b9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98590b3c-75f8-4b6b-8d31-79612f376269"
            }
          }
        ]
      },
      {
        "id": "9123890d-e186-47c2-a0bf-4337571eb819",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d94e3c46-08c3-488c-bada-807189e1fb07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bae8cf61-3b6d-465c-b6c4-802f3af1133f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "922fc667-677c-4900-994c-e25373005060",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f8aa7c-8420-458a-849c-d67b34b8c93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49860663-c342-4d79-8211-38607cb007ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024d8165-76d3-4a04-b7b0-2efa5b2f1de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0318c1e-52dc-4ec7-8f4d-c70782df9346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35212566-2d73-4789-b50c-15f3d1342276",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcab8b9-3c2b-4d42-94e0-b09c2c77a8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2e160e-d9ec-4140-ad2e-6242f90b0a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168304f9-8d55-45bd-b3d3-96563ebc30fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e1f98b-4ed8-4ed0-967b-655f3fa8c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35bfa47-aab9-44b2-9c6b-7da96ac37f77",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175a9d8-55ea-47ba-b034-c06ba662624e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c52baf-095d-4251-a865-8f399edff139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7197738-47d6-490a-9596-3ee9ffb005a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5ac572-4dd6-4d07-b1d1-e902918825b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047777ee-b898-4320-8f4a-bf9e3660cca5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae37d29-3648-4407-b5d9-1dfdd40851d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0f91a4-0489-4f5e-a71e-49664aec7c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b831cb09-249d-413d-8881-b1793cdc6b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "397b918d-fea2-496c-96a2-a802d058c9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87030b26-d862-4208-a54e-030c08b58558",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1fd3da-1ab4-43a3-bcb6-3c9f9a69c637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314a9c3e-3675-408a-8c9f-ce524359293f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91b9790-faa4-427e-b8a6-6b4e115c37cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c38938e-305b-4789-a653-655bd0954981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1808b7dc-56ea-49cc-bf39-7b9311bb62a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae73d158-4355-4e57-9db6-43f2cca1193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0386dbd2-2ba7-4bbf-a16b-ce2379e4da33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b402c81-354d-48a8-86a2-d5b29891fa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8617c13f-6bd2-49a7-b66e-b3614bd752c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ebd31c-8e9a-463f-b097-d2a8b6899214",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2baf700-2547-47ae-8650-41c50e82af48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3052a1cc-14db-4226-9f95-4800132f28c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eca414-6f3b-4153-8fdc-5d7dd32d3878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aecf1e5-c5ff-48be-bd07-5b121f8bb04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0cd926-83b1-4734-b7c2-1bd876155d27",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1caa331-894e-4c51-b340-64dd7da4cb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983f9bf8-898d-438a-a839-db33b5fc4a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1fbd15-25a9-4cbb-8a75-c0cb8263a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf717b90-6672-4dd4-908f-91846b4df035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c472ef8e-029b-4b5e-8209-fbb083ce824c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25465ed5-36a3-40c1-838a-4e5628a16333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c48a92-652e-4742-8966-75ffb48d1588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1b1030-4b15-46af-956c-45646f19f452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd078b5c-fc17-49b0-b692-32bff79b945d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319db592-5913-4146-9bae-eea00306ca17",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81a7e7b-f270-4073-bc37-0bb2855faca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827886db-d876-4856-a5cc-aabef9856259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ae62c0-7b32-48fa-947e-fc402f0716b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d660da-5c42-4528-b73d-71723f26c7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e4185a-1afa-482d-a2f1-915c48b9a207",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ea5427-97c8-4036-9ce3-5093189618b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d30d27-5cf6-4a5e-91c5-41532025dad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cbe62f-6c1a-4b62-b1e4-ef067d952de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cf99cc-0268-4506-a6f0-ff6d64ea8d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b8eeb6-ee71-49c4-8daa-50e3306b97ad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8fa631-7f88-4de3-aa6e-c611d8e00378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaefd81-2af5-4977-910a-f66785555d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204eb9ee-b64e-42da-b4cb-53dfa30653ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb7702c-dae9-42ec-8261-8a6a6fb02655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080c7f91-b670-4617-8168-c3cfaaa9e0a9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0db9c69-275f-4a5f-8b6e-143f53b666f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce621378-6f3d-4cef-b1bb-30de193bad1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07c322f-0a4c-4f24-b299-d402c526a22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50eb3eb7-818d-4299-b170-34273d73b76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e919af9b-2778-4b33-82f7-26b65e665c71",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f129fb2-50db-4217-96ea-eb045af9f076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66add881-8d67-4545-aff3-4ca3d17ff4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39a3731-9410-4cee-ae1b-cd550c1c4bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f7d5eb-bdee-4f0a-8cdd-237e335cfabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dacb5d-db8c-44ad-9b46-d57584b2ba88",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f9f658-6d94-4fa5-85a7-a4049ba89c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dd28d0-bddf-48bb-a918-b8518ce98abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a9def6-6805-4559-9cf8-531589f43685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9ed124-9acd-440d-a6b9-40bcd333bf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63948e5-ecb1-4daf-8ef1-fa19dce648f6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d42f512-a254-4a48-ba84-2a2c84a7cbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f64862b-fd5c-47a4-9270-58521a7b635f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ea0b64-9de7-4aab-8cb3-4656d1ace013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e947c702-3d1d-425a-ad5a-0c7125708b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3fe816-3eb3-41ac-be8a-49cc3e140aa7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49a90c9-a1a0-4b48-ad9f-3d2dd4b683c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de2bf2a-81bb-4f4c-8e08-d1b4464cca5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a101443-8e82-4e91-bd5b-63cda10d06eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9909fc2b-5136-4f39-ae87-5355f10654c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99f5abd-75d8-4908-ac1c-e8ec9732044d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382c8597-f3a1-4e83-9ecf-f96771831da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def09383-0410-491a-ba54-525f80e9fd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41426830-19c2-4539-87e7-d92507f02618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1365bb-edc0-4784-8529-bff7e88cce0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3ffdc3-2ef9-48c7-9fdb-2366d1b05d38",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b787567-c2ce-4e7c-9fe0-98c854abbc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ec7250-e8a2-4b6e-8943-84b01688ff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e339237-03b6-420a-a21d-2ad0bdfe7fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91961619-61bf-4e8d-b0bc-1b23d2b7e304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54e6932-6d37-4a77-9a1a-7234a6afd223",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b26eab-3e1d-4eeb-b75b-cfc9f9c954d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b3288b-adef-4e1d-af1c-6ef3b0405ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be907b65-5d3e-4bbb-8cce-32307d24284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d7c343-0c70-49de-830b-579cd60bfc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523012d0-39f5-4e2a-8c64-0a2140981124",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5326ad4e-92b3-45de-aa8f-02e16321602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40887bef-f360-4638-99f1-c35980c83a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5e1e9f-da37-4c3f-8e93-ff56be061009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bb13ed-54b6-4571-988e-6d1d3cae4969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f353d34-132f-4362-a3d9-6e8b88473720",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada8e5bf-332d-4857-86c1-2b51a9375548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88720212-bd52-4533-9b07-44266cf0a6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c755174b-2089-450f-9949-d44bd3828936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3762d0fc-e30a-41d6-aa4a-36506a8d8a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898fee94-bb57-474f-b0ec-39e0800e85ca",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba93ebf4-2456-4cc3-acfe-6b203eb871a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5882ea6f-019b-4f52-bd72-e5fbfc177e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44a64cb-079e-49f9-a766-a5fa70b1a109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a061735-7e72-430b-8486-2d4882f25d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52337d4-26c3-4a77-9278-78d59f025f1d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f25da6-3e2d-48f8-ab92-d0308cd59e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa11a9c-50c1-463f-b519-c7d2035af562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a3a15b-2b00-4533-a192-a4ac5d42eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c41813-5c20-4ce3-b70c-a26b4ec6cb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b641d49-fdc8-4fdd-b58e-ce5546631fd1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b56b699-ebcd-4224-b85b-db13a6a3c70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9554fb48-6926-4f32-86ff-ec984e9bc3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfd2485-5340-4f18-805f-94544e7bbeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff99cef-40df-40d8-9e98-07a28baec054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c82ae7e-4b25-4b48-8a1f-1b81254ea451",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e530ed-2b00-4656-a618-510d92979bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8542a30d-0671-4976-888b-125c7da906c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1b2f5c-1d59-466d-a9b0-d8729dd6ac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55fa11e7-d54c-412b-9ce3-4c3cd4494ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826f7078-22db-44fc-b639-79bfce78b119",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef86d638-810c-4fb8-ba43-c09a9cbce8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8264bd79-a9cd-4878-b04f-0d995ad99462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8741d9-d9fc-4468-a5c2-b17feec57aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb05f699-0bab-49e5-828b-5bcbb10fedfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d68754e-f7e5-48dd-81ac-293341cd1784",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda6f95d-9ef9-4f7b-83ff-d640b2576851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b0a3bc-ac77-4918-a058-c5100ba51962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33198be-d1ab-42b8-9c56-d1a8c848ac5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc8448e-6b95-4259-ac4a-54bfc510a017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801877e8-500f-4280-91ee-4032a5a23848",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b0c893-c141-4d9e-99b6-eeeff9a74e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4af5b56-2021-48cd-89b2-7c5284185c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91744ab0-1a9a-4841-9bdc-91b6571e9aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7906576e-e922-4e80-b869-6830c317570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7c14e6-251c-4498-adef-61e95969cb9b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca813286-c698-47a6-9449-9ce93add4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f546be61-c1da-4764-be88-5f4c3ad4815f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eba09d-f01f-4666-9f6a-06ee6193531f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8566ccc-7c91-4035-87f9-468e0a001bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c47a57-7d61-44a1-baff-806dd65b7442",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293fd03e-a5dc-484a-a1c7-6b3a7a642a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba33e0b-49a5-4507-bb3a-3faef7229f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c5423c-a71d-4954-b9a1-5c142c9c8410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb32688-ccfa-47ff-9bb9-052a17c07411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f01498b-260d-4bd3-8bd2-dbed7ba25afe",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbab134b-037a-46fa-8d7e-f2b34d82e36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bef2963-7a8a-469b-a4d8-7a9363e92158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e70c4-574f-4c74-91d6-300bd5a731ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec74d7e-4fa4-45dc-b76a-e1d2ab74a61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad36481a-3b98-4da3-951f-de551a566b8f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ce21f5-2f3d-4a9b-8980-9e614ea74f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca9ee2e-3d44-473d-9fad-5f818c89bb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d0c88e-756a-452b-b2e5-5c4e124bc7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d7b559-60c2-4fff-a93e-057927601d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccdce77-ea12-4d61-93a2-7f37d7aa3e89",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1d7f1e-dc1c-4c04-96d5-8abe4a393d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33baa807-7fd9-4ef0-994d-89798a5dd837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd9de99-5553-4387-aeaf-4be971f5e26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8969b7-7a4d-4b17-9618-a22cc6f29c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86388809-c354-4fd5-b228-39c48a81fa85",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a68006-02f3-4526-8b87-564ca6818114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bf1ad9-6820-4915-99f9-d345bfef03c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f979e2f-7020-4b98-bcdd-5462e3b12a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad21401-ed31-4ddb-a24d-6072dc35b475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462e109a-2812-4257-9d28-92d03e00adbe",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910bcc16-e39b-4733-b940-4cff963566ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cba0377-42ee-428a-86c3-e86a391e782b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03f52ce-80c7-4314-b163-c9fc9c8959c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b9b2fd-b82b-4838-bcc2-11921a7651fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25e8415-3ba4-492a-8fc5-1bd3aba61635",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83fa8f7-b2ce-4060-98d5-f6c2e78bcd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0373cb08-4a3d-4173-99d8-b042a2237817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3992c6-a2d0-4025-bd03-478378515988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf43d5e4-3ee5-42e7-9806-bef49c966d61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8b7ded8-cc96-4989-95b6-364f598a8f4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa763a8b-431c-4818-8f67-9b516672c70a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24d7acd-d5cd-4517-a3e5-2a31174949d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56844716-7a65-4692-b17c-c17b4e5b71c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2717a3-0946-410a-86b4-79378dbe6cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afdaeda5-2552-4ea9-9416-252b30a48ffd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d817935-9b3f-4a5a-8159-28116cb4018f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a9ebef4-c5dd-4dcf-8eac-e08bc118986c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "293289f3-69df-4e14-91a4-c7a201e16fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c96ece5-ed9e-4817-9dfb-2e43253a7d80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b722fea6-4eb7-4e33-bc63-b757cfab30b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7725c36-76d2-4ba2-b85c-a8897422fa24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f074bc02-3fbe-4829-8717-b522daa38f1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "398eb1f4-7611-4762-a1df-0ab6289033b8"
            }
          }
        ]
      },
      {
        "id": "532ba60c-e16b-4a15-a376-0bc6471493cb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a7086935-e049-4b47-b596-0a2fa16daab5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "153aaa6c-0299-4c33-b025-333f249356c6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "499da561-5c9f-425c-b5a1-f4f33e3c60a2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34abe12-0f85-446b-ae51-03ca5cb325e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d83d9dd-d83e-4c14-93fd-ae9d23861015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d4fbc2-02c2-437e-8617-49f6913f899b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc38eb-bd21-4fbe-8367-f2a95c0d0032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058f8eea-a3f7-4e24-97b6-738deb31ab8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802ed744-b0cb-4423-9f9f-ede0c79bc902",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538dddc6-7b42-4db4-801b-62a107344742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bb1efb-4442-4a45-9811-8ee150902004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c372da3a-625c-4534-b535-0a395eda3ab7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5eca04-4887-4f36-9968-47ea38ed6e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4698b7-95c8-4cb5-a67a-6d3167e7610f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca453a97-ef5b-4262-a9a8-76470f6b29c2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2266f4-8732-4ab9-bddc-143bf7599378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26296f0a-e702-4f28-9fc2-004c5fcb05ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96084700-7052-4056-b324-6cb9357b2d5c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2ad723-36ba-457d-9ce9-a5ed05642492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e956f7e0-7647-4a86-975f-b3e10ef7a287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98815e5-7a19-4805-b0c8-c711bc7912ca",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a55be95-a1ae-44f6-b16d-8437d5ae523f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0179c25-77c9-4fe2-80af-e38bfb3e2c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62154c8-2f71-4edf-b3a1-abe0b7b3bea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1434e666-900c-426b-b21e-d5b1f09e10c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faa5440-71f4-44e8-9f63-06981062f3ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6819ea-621c-4fb9-8172-3c7ba32ccd84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3cf79ed-a544-4ddb-8742-39630298b195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ff80fd-a88d-473c-8929-ccfd388466c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cde21f1-45d0-4454-92b1-866ad9d608e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b5a76d-15bb-4149-a52a-39271aced9a6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e4f3cb-ecdd-4f95-a1ea-c9e229a06de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4803b8a-7447-4c1c-b03a-ceefc95f2a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89b3d8b-1add-46f1-8676-38522c063be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6c663c-0cc8-4cec-8974-404db8ff80b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0e09b3-9436-4fee-a35d-f547e645d2db",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116b1e62-7fac-474f-aba3-c833bca48cff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b0056c-ec3b-4c2e-a787-0aedb3c0607b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307391b6-704f-424c-8de1-00682e5e33df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e267bb1-9eb9-447b-b72b-6c1306a22c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc7c3d3-5c74-40b1-b7e1-0f95db953c7a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8461bfa5-6d1e-453b-b820-abd1e84223b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f874b1de-90c9-4169-932d-e4c3e47b892d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34679ec3-bac2-40a5-b529-f833ef2efa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f00391-4bd9-4213-83ad-e010647fcfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526804c9-12f7-4fbe-8c01-93b569d62252",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2a6fb6-10bb-4f5a-a81d-50e3ff80d585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9206a772-b922-4c5d-bbc8-caf871658bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc152dc-935f-4995-86aa-b9c455991089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccf5724-be7b-4ecf-bd15-037209ee95f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201d1d6b-bf68-4304-859e-172b9153459b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc24157-24a6-4d29-8966-c5cd5343d3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed304344-117d-4aa0-8297-0be0a39f9e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a76383-dce6-4f7d-9d63-995b7ae7c176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de8fae7-32d7-4e17-8f86-dd4a2a46173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dbf232-fc96-478b-90b2-d9ff13b291fe",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4114420a-f102-4fda-9764-cc0c47073ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7991302d-669a-411d-8c20-51ba0ac749bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bc2a88-cd7e-42ba-b571-323602a15ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b109fd-35e7-4b65-801b-0a3e8d20b0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec4eb77-fa09-4c13-9167-64ff88781ce1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3103b558-4cec-4b37-a984-d2a49c881c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1bebd48-e6f0-400f-993a-b14f67c2af55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e9ac87-ac7c-4309-b197-031c4ef6e786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2f9688-fb55-49d3-87e0-ffdea16e9b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b28176b-11a6-4fb0-a58c-4f21a7113f9f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbeff0f-9448-4046-b275-8d85b2363333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88d40f9-8ff8-49a0-b60b-ea9f8b121da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420cfe8f-26e8-4023-abf7-eefd5ae4dad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5953d81e-e22c-4329-b8db-1ba0f689c764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfbf133-9b02-4b33-9c0c-e36e2ba70f92",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770291a5-8695-4fc0-a131-4262953c7348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba776d5-c174-457d-9fc2-0ca5bbf897f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d3100f-1db9-4116-8422-fcddce233461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ee1e53-305f-4274-99e0-e592ae35cbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fd1c62-0905-4baf-b80e-d6e81a530eaf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12c404-cd32-4506-b1a4-ef63385fe790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547b88dd-b841-492f-a7ea-ab96d600e5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7135c3fc-fff1-4df7-8c9b-2ff67080adc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55c4986-b657-42ea-8192-b6461b0265fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409eef6a-29ca-492f-b14d-903fc14add55",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae72453-eece-4a51-8f1d-f583a3662dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05e4da6-b9a4-443b-9de6-75578837c9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b271b39-87f1-4272-afe2-0c5d7ec3019f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6b9093-39b2-4719-b19f-ab579f480d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650c03c2-6894-4aa4-b1d3-6b0327b5cbbb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d93292-275d-44c2-a8bd-2739b2248996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1387ecde-735f-4de8-b784-78fab8026b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1792a906-4120-4a77-a3b4-9d977428715d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d479b4c-3831-47a8-af8f-4ecacb646c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45669726-6e17-4ace-ba31-0c9a46e6027c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd39067-454f-429b-b66a-ad51d5c8c8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa26716-1136-41f3-9c8e-69fe54227ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb41ef-2bb5-472a-b9b3-2789eef3622b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a230e519-871f-47d0-9934-29deca7113b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b9e6aa-5d92-42aa-916d-4598a16039cf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a85e15-33ce-4370-b707-e84d52646dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a828f478-58ce-40c5-8706-7ab1dcd89f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeb92c7-3f2e-497b-a4a9-5fc2379579fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1ccebd-3885-456a-baab-2b14e60af0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a24eba-04c3-4324-85da-3d2c39c76473",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9f887-d844-463c-8ee2-3864e8ae44be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51468233-df3b-4e4d-8031-91fa7068ae51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0d7bcc-1e71-4f6c-8950-c43b2bcd0ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a625cd9-a87e-4fa9-8dff-c6ee52954516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe517bd-a7af-40b1-84c0-6bb8cd3d8c58",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7ce5e3-1f89-44a3-96f6-31d3964148ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1328d86-2981-4488-ad93-abe057e492fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff87992-962a-40d0-94f1-35c90e4bd9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea41b2d-4767-4464-9940-2e3f0a22e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca18a4a-4ab4-4f24-85d3-bffc1ccf31e0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0009b45-0f34-4e8e-a085-656be0dc90cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df2f609-3b70-4c00-bf93-9dfea3fe6820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca73056c-3754-475b-ac0f-cf74879bfa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82199358-7e1c-4e58-a2eb-94da1b020c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207a30a6-7519-418c-91ea-84f8e0dd31f5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db69c89-d1f6-4d38-b996-9cedd1fb30f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df99ad69-8ddc-44f3-9bf7-bb59c27bcc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d697dd-07aa-42b2-b443-37b4e604cb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8b9de4-19d9-443e-a543-853d7f9ce802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1da94c5-bf49-432a-b183-3145fae9c2e6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b465fa-5b4b-48f6-b739-bba028e902ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce5baa3-d889-4fe0-90a8-0f1ae13349f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa3fb0-f83a-4d9a-a7e7-b47811bf204a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31672dcb-f36c-48f6-a9d4-0e2c44c516f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6b956f-6e9e-4447-984c-02dad20b18cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff38df1-b362-4835-a643-868b0f5ae8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6be600f-f9ce-4d95-834e-a31c69139adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2798a5cd-f998-4d8d-8538-2705ad9a5148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13ca1e8-e796-4ec1-b743-42d9bd729164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d63a62-22ac-407f-a401-2ad64b919d08",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8712a9a1-c220-45a7-8ff3-4866f16c11a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93f758b-2087-4336-bb6e-5da9686ba32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f3aa79-255f-408f-90a9-80f3c86a16a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29f74a1-72ca-4674-9463-4d479a22efce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb07214-a8e2-4ea5-abc3-5d2123b2aac2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527265ec-f006-471f-a92e-4acb9f596791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbaec142-069b-4e75-9677-55f6d665fb3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8349b8c1-3362-4ee5-a81f-5819294c852d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7172f7bf-47b7-4170-adb5-61328a1f8c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2fb74f-bbdd-4f17-9f5d-65c1a23d3431",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a351111f-999d-497b-90ae-788719872dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc6caaa-c457-4387-b5b8-f1d2b2113a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0c2048-000c-4b6a-89f9-b479f392df6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703391c4-1f1e-42ff-bf55-e92dc74fd981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe324e3-119a-4a63-9a5a-6d5f4a16e9bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bd17a5-edaa-49ec-b53a-5eac60e7b399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f46ce0d-456b-4c3a-99ac-854ed3809e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c11586-e5a8-4637-aa83-1eae5b3d091e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc63e3f-149c-4b4e-961e-6763381dcbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f779e0-89cf-4b7e-9484-e4436d7a50b9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb06b72-167e-4efe-acfa-3f664de3d0d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036d02f1-b8b9-4e7f-bc29-700a122a4181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419890dd-8a58-4229-a2bb-0d629570d4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1bbe9c-81dd-4006-98f1-2e213f2027f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e3ed2d-28fb-40f6-97ae-3bd316c51838",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11d69e1-21f9-4634-b60c-7e547f634db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ab0668-efb0-4b76-9f6b-5fd5840e294b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b28fcf-518b-4c42-8082-d57ab9f4d663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38b0715-5ee3-43dd-9760-a9509e1e6b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8c83f9-15c6-468f-bb80-529b315989fb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b61ed84-5784-4545-9041-bdcd68124d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aeabfa0-b241-4f55-9950-52552f6339e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a206a6-9e69-4054-9c03-481cec55b3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcf261c-d57d-4e6f-95f5-bfe9acd678a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f17bc3-bfb8-40be-93bf-1fb67bda1f2e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b56a49-5989-4b09-b62f-963d51a2184d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da558dc5-08a6-4a1a-9fe2-d1849ff3ce81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daf4d99-111d-46ef-8b5d-f0ec95c31aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7677f764-9763-4ea5-aba2-cd0d4b5d0e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2dd96b-c661-4b96-9ea4-a12a46a7889f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f3b8fb-b850-4ef6-8b04-f822f5d817aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d59fb7-9cae-4f27-9966-346f14182def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945723ea-da68-4e39-b820-19852406e5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72fbd24-2615-407d-9368-064b1c713aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56aae55e-6b68-4f21-8fd7-6b792d76ae46",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502be186-ed12-48ea-b48e-c3cef71dd74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd08f44-e732-4600-8861-f79a3eee7763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823dedea-d0f4-4408-865f-5d2825b1df44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f84a1b6-bc6b-41e9-99e2-73fa69365318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2535a1f2-c85d-4618-8dbd-3f4788825ef1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95421eb5-d1e0-4e7d-b57d-dbb6414ee9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5ddec3-270c-48ca-9fb9-eec214ac241d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfee0841-30e0-41d8-a7ca-62cd03c83e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90652408-5d61-48c8-8ddf-46ccea95ca81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f7d07f-4f43-43e5-b1ec-6f36259be1c0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43913bba-f251-4261-b28d-5539c2fa5148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7683f2af-c70d-4ad4-aa30-4173510ecd15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a1deef-99cf-496e-ac89-76608bc5b264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5040f441-8cab-46d3-86db-6845fc4e9a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48afb32-8785-428c-b4a2-eca0f716c116",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446b440c-b796-43a0-bb85-71eee55032ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda2c7c2-acf5-4e13-a03a-582c059f0d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef979b1-f0e5-40ef-97bb-ef3badf2ece7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfbe06f-e933-42e6-814c-58764374f9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39be83be-4f24-42ef-9a6a-b10da6348b4e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda77b26-af52-4e93-b95b-c95dd9c30117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cd207d-cf4e-4cc3-ac62-dd91b3ce296f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb66f863-dceb-4715-80ad-9726d80cc642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaffbf2a-8d97-43f8-9993-d7132c0252ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13940c02-215b-4dc7-ae05-02f2a1070747",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25e9935-7889-465f-880d-9fe1ca01e274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a2b6c6-3dd1-4a02-8a46-7495f58ec57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64d226c-2a7e-4efe-8375-9b857a21b1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b294f0a3-332c-42d3-8c96-77fbffe9aada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5672175-eed2-4846-a031-1e1ae6cc5597",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d67db81-d770-4068-9c05-1067b6339619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b264d3e-5607-4fdd-95bb-9d90b9e36da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4f6775-6d05-4b68-bdd7-ff1e80699dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baafc9b8-6a56-4e2d-a0a7-36b2eb347689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5c0853-2623-4641-8b6f-294cdf7f17f1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdd0416-376b-4642-8ea7-9fc3bec4ff21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73a6bbd-9da6-4c7b-bbcd-8f665d93c8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d75e316-daa1-4c67-b8ee-a4904acd1bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4b2cfd-d18f-4a89-9e33-b6b266c6a472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e453d708-9c70-40cc-b9d6-45fb0d17a8a9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0842f0-65b1-4e67-8e4f-ca4039469490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c1af99-adfe-4d33-af07-cfe19056e161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d4b907-a032-4bfd-b618-bd29436d7220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281bdace-0a9e-4c3f-9d3e-6c4f39607921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a3e2d0-8708-4f36-9f21-ac5d82b5f69e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f541f1-3472-4b46-be06-62ea285881c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d55791-d2d5-4de0-82f2-0f48dca356ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1440e7f-c90b-4016-83a1-6bab3f96b0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e275a7-2ab2-465b-85b2-00edcffd55a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827ddaf7-4619-412d-ab6a-812afcc4cee9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bc61ac-419b-4543-95d0-8f47fe941dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04bdae8-ad00-4152-8e51-1053091f0bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79041225-3987-43d6-86b1-5217a81b7497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae84129d-3a8c-4b08-9a63-cbe41213a59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416e4439-0517-4f50-b13c-ed9d98b33aad",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6123acb-cd73-48f3-b234-1fe264073bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b2d3e5-7e83-42d2-a1b0-1c1eec0ec43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98806a49-9652-48b3-afa2-d7e34e8b7637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db0b6a1-2a35-43d1-99f7-9a8905fa6920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2cfdf8-8abe-4547-8afe-a27d0facb5a8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc170dc-8de3-481e-8704-e570199159b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1042c1-9e30-4b4c-a4df-04fac0dc5fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4db9f80-7c70-468c-8dd6-9c18d0a8d06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcfa7da-5fe8-4e76-b977-1198d89bff64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca13786-dfce-4ab6-9ac4-c4428e95ce45",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acd787d-f349-41bc-89b0-204e9431329b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f55820d-70c5-4252-a7b8-984acd0a6922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5d0b13-d2c4-472b-8463-13a0ea0ff8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed00dd4-b25e-46f4-ba8f-d1cc26048dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e8562-1113-4c9c-95c0-a2ed27a1a26b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26629d96-756a-4ac1-8a99-3e60d271c5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0771fe66-9f6a-4d29-9c47-090836012175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381f91b3-3678-49cd-9dd1-4f77997ffb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d747681-56d1-4165-8514-625115e108c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a957d0a-f481-46d7-9d8c-6b7003d22307",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff93cc9-8564-497b-bf1e-f8515854c8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8acc04-60ef-4721-bea5-c306528c173d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcf5e80-744f-42bd-8042-28e6ed10f3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ba8063-e4d1-4741-bf4e-a5ada85aff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf273095-ec73-4222-9783-1ae3fd36a585",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe22797-edba-4f76-9ca5-356f8a8487d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e357d5e-5943-4a51-86b8-d3655695b484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cfdda6-656e-42c2-9985-b1a3ead01a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94801111-7407-4db8-8292-a3212bee450c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933612e6-61d3-40d7-a5fa-f6fe2acda3b8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69d5618-3bc8-43b5-a78a-b82c4fb58be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece93b61-cc0a-496f-9a90-fe3c64a9dfcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc5366a-e6e3-4503-ab9a-d71365c92bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c2dd6c-dcb9-4d26-9267-48356a61248b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a29b49e-d3f1-4131-b9ab-eafda260759c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2ebc24-be3e-47ad-9a1b-0469aba601ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbaa09b4-bd22-4b8c-9e64-ff820ce4ffcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8cb1dc-b19a-444d-8937-2401e4a362ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49063a7-52d5-4afb-993a-679d6ef862e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bf65c0-e704-4f22-b342-cb1f127baf60",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5907e547-ffe5-477e-bbd6-0d470dd676d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db44e28-942f-4c06-a104-2202c97c2335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf75b1-acfe-4d2a-b2c1-d10560517120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be97499d-c5e3-414d-aa10-fec95db7dfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f14257-6270-4e3e-9b6f-dc8910980f27",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b33b55e-b64d-4367-8a70-eb3d23423e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cb7b89-9060-4102-b3a6-257bfc4cf62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1873feb-5864-4dbf-980f-02a01bb6b499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09a1385-c564-4e34-89aa-721ee126b52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153edf82-2833-4c90-890d-c5fc5160680d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8957a0-0f0d-4917-b95d-42543b17baff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9f55ea-05e1-4cc1-b797-a3fd9672e0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc20248-d5cc-4505-a0a5-54decfc85e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43154b7f-d386-4097-9849-c6e40c7077a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1802da-0a9e-41dd-8e5e-d932cae6a75e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35483ec8-7d3b-4529-9b85-8c59a7b0be3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33db1f25-831d-43f5-9c6e-6f0979a4398a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ec21e7-8efd-4406-9ae8-6762309d29bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4b34aa-ad5c-45a6-8012-3e9d1c4fea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1405d77f-3dce-48c3-bb06-f509fc8d6f31",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f506fd63-a15c-4c5d-b057-6ba3160dc882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66325399-fa12-4980-b811-2690fe1fbce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45213e8-1692-4518-b4b5-3b025e8e5344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360f1227-356d-4719-81b7-99a2da1592c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d19d921-6791-458a-bc31-1735455403b6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf54ba0-5f9b-40cb-abf1-a0bedfcda6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a25243-a0bc-4f27-b1be-f9525c730a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa26cffb-c669-44ed-8b52-d8704f534eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4049ffdc-7037-4330-a9dd-f9fb69044fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcbba03-6a56-4575-8d68-511e2aaf4696",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889e9129-f65b-4c51-87eb-295a6674c4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60fa065-b9d6-475b-822f-1b57930abd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87a6bd9-97e7-4cd0-bd4d-0cc9ab04eda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cfa95a-1034-4293-832a-6676d96467a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5919d5e-47d8-4c47-a6e3-e0a94809ebb2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de637d7-8728-4f4c-8ece-578f11134f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2d5501-e903-430a-875d-6214abb2d0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98777641-933b-4be6-8f7b-f9ac4b593459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e0ad4a-6bcb-48e9-804f-201433a09400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f0cb91-dc4f-473d-aaa0-226589cb823a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68691f8-c30a-4df3-b55a-fe50cbcb1b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad77d7a-5dfa-43a2-8e9e-22f9228ccaf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea71438-1d8d-4888-a347-f84000856341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1611cd07-7801-4fd8-8be9-563ecd5c78dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6a951b-e2f3-4eb6-80a9-2af1ae0238c5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a867505d-2a96-40c9-b67a-ee2684622142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "428209bb-5912-4279-93a8-539d3fc06342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56243392-9c38-490a-b1ac-ff394813a7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5e2da8-7080-41dd-bdbc-9dc67d5be2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2222f919-a2e4-46cd-89cc-e9e9b840f231",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff32940-bed1-4dd4-8a68-8079f41a80a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f41b4d6-710c-428a-b685-c3cb46f7ca0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1ec449-7f9c-4959-9723-11294fb197c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520b1bb9-4304-4660-bcb9-644da2a75434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f1275c-04ea-4af9-ac45-4a9d06fd5876",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be09d6b-1172-44d8-9cb7-aa54fef35881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43aefc9e-3fd5-4490-846b-9e5b57fc77b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576513bc-e9c2-43f0-b935-a3a6f81c4aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1222bf91-4e8b-44af-955a-67f98dc627a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1308a2-9160-4451-99a5-bba734da5b81",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28203c89-aadc-4866-b6a1-e8f3d2f1773f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a10a3964-d104-4781-983a-8ac6ddc6d1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83989d7-e369-4be1-89f9-9616199cfc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fcd58f-35c8-47de-b34f-3c6481435e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0e7443-734c-4344-a5b6-605b2d06481a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1314a8-acd7-48e3-b82d-ade91ce43998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e023e450-8e06-432f-af7a-8ed16e4e49ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefa0770-256a-4f9c-b4ad-8a6d8362e254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863505bd-5ad7-4ccb-98e4-8fea056bb938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097b90c7-3ec7-47b6-99b0-f22221432344",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4c37d7-eb88-4005-8a88-2e9f3fda2df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1f202c-e101-4ef4-a3d1-20b1f7c1e42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad41fd92-6dbf-4244-a6de-390a394f20a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa1f1f4-cbb6-4a75-b95c-cb9ba0f3a86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568396f-d941-4393-ba7b-366a8d684c05",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debd225f-b24e-426d-acc9-a57e6fc9c36f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfe0756-7a27-40d1-aaf3-ad3b13f453fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56417285-cca0-4b77-a4bc-00c1523140d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54995cd3-838c-4130-a9a1-5ffb32118e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0aac2e-7009-4b7f-bd05-372a370803b9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf9eb6b-ce3f-4935-ab8f-a28300e472ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a67d96a-df78-457b-a2c3-43226f664b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee72cc69-43ab-4b70-be38-4c3b3280ee91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b47794c-8305-4b55-8df4-cd0c7ccf9699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4aac6c-611b-41e7-8e00-513a3e670dfc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cdfd27-792e-4d70-9bb9-f253d0a6bba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c8d7e8-364a-4ed7-9d5b-5060027f8eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606dbaf6-c576-4155-9ccb-3b3e3382bc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fd8f53-eb5d-4ae6-ab8b-0848e9f350c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186dd2bc-e6b5-43b4-af17-70a58a39bf62",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9169ffaa-6571-426c-bff5-23166bb73c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b008a9-67fa-45ab-b5ae-c3952ed7c661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0dca88-d1ed-44a0-a6a5-29a70a8777a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d9dc01-5770-40e9-b23e-7dab639dbeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ec4d9-c068-4458-abe3-ac410ff1669a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb8924b-14b3-48b3-926d-eac88fd347e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfec1384-0f63-4afd-9b7a-a1be3fab6b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb4cb9-96cc-41be-a109-c188980c53cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303b89c5-8b37-4077-8782-98b20700529b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267b4905-e104-4948-9d43-1d4fee3451f2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e330e5a3-1ea3-430a-92c8-894111629410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128f39d9-68bd-422f-ac1f-8220b6966ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ec0f93-3f09-4f5e-8ebc-23264710b56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8d0508-3508-4d54-98a6-7535eebc3d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb29cb4-487d-435a-9cce-fcd581def923",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d26bc1-ba44-4e60-9de2-b3c4e9ea741f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76033096-c81f-4af2-8e01-f51c3825bbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d3786-6a07-4daf-a833-881e648dc7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6767f3-e841-4ec0-86c8-d80f2367d727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c9d8b4-b70c-4aa4-b9bf-1faf0e654c28",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f16ad2-810a-4641-91ca-e0240b81884c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f11060-0e87-45da-bb65-db56bea0211e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1af1ea-69da-4695-becf-90e86062b046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6cf0c7-b317-4c72-b074-e186f84ab0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9e5136-9845-42d2-900e-9520e3a8c88b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd939de9-6c24-4db4-91a9-b2fbf797b463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4544bbab-6cb8-4ad9-99df-c522be6440e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d1145a-c30c-4912-932f-4b79f7eb9ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782ab8fc-2e13-48cf-b4e4-e5936a22a3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d05e4ca-6ef7-4180-8f25-827eb6cf09ad",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a898f389-a330-4008-9775-8a9152249247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b773d5-2817-49d1-8fb1-a2579a0b8251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caec7f95-d247-4fc7-8be6-972740cf2d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307b22df-52bb-4773-8e9a-ac660838d2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543275e4-1f3c-4b17-b90b-3dbee0fcd301",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c83e39-b9f2-4788-aabe-7480c074f499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977497da-90fb-4ecd-b9fa-f86bcfad2c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fbc84-b04a-4eb9-ae66-4dbd9e4bea80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d4884c-db38-455a-8586-4870ecfea06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8aa8c1-3a92-41cb-a8da-ad80e2626c49",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3843c7c-51ae-4277-9778-a9b12fa98df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda7a302-45e4-4986-98b5-294cbaeb69f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53040440-4f69-480d-8743-6fc63cc4595e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ae6d5f-f347-4df2-ad9f-a03bc12ccc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2105d64c-3958-40cb-8340-a5cf5e0e0552",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0354f1-6178-4d17-ab56-9cad15d5f702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5a0488-1dbb-4bba-be64-461ee3254ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0c77ae-8efe-4f23-9195-f01fe405508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661fd29e-bf3a-4c77-8a85-e71b890a38f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d177f6-916c-4caf-a24f-d6b61bbbc0ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943a8677-d46c-43c3-b963-73ec8a595bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f1510b-af4a-4abb-82ca-52eb33e79bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf57d809-d3c7-4fde-8739-66e905d93ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c80533e-6fd7-416a-a168-334c425697c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363acd2f-214d-4b46-8349-a504882f31cf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763e13b0-b654-45e3-889d-a2d375fea505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43dbe768-3d35-440a-b896-19aad850a51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6205fb-80a5-4766-9652-6371fc6878a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda330fe-1497-42ab-b661-bcdfc13ced7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e02bf6-0aa9-402d-ab03-dba650687193",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da405a75-1fcf-4bc6-8963-5d1c131f3150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c12e2fd-250e-423a-8ea3-243f88cd3271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447dbf1a-3138-4f68-b655-967266abf2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821ac7ce-f55d-4cce-8561-bf6e0d84dbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca26407a-b09e-46aa-8cc4-877b16e5b96d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1443b014-c821-44a3-a821-3ac13aaa366a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc2d296-7833-4b34-9c52-2fbf37803f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9730da68-b232-45e7-8f55-8c1c59fc5c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb25e9af-81dc-4a09-9ae1-d93aca24d9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c516c609-bca5-4cdb-b3fb-2db5b76fc692",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714ebae6-b40d-4e86-8e21-9c393d916d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00404410-984b-4dc4-8266-8bedc941e1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4337d26b-2c03-466b-ac84-732696fa6680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c8995b-da70-441e-b63f-f9c76d279521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366eb285-9d92-4fc3-8aa2-848499a04152",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153f7375-c3eb-4541-b4e6-c41b66a78a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558add0e-2eb1-4cad-ba07-927a543a24ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b0a2f1-00f9-4a23-b3b4-e70231c11000",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0d52e6-fa62-4c65-8d83-f6ad2944c11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d310d44-5204-46be-9a43-83e5a8d73b93",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed0baf9-3e61-41db-855c-d4f2da8c7bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd797801-12b9-4671-b3d2-4b242a379939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9106ea87-1f74-40c2-85ff-0d56366b9b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4eb0777-60ae-410d-9d3a-25185c40ad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d47af9-cf77-46da-a3d2-0d3db875586f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00507ed2-47bb-44a5-9e77-1247b65ff322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cec7432-b32a-4750-a52b-1e84043d2241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43203f1e-409a-4079-989b-08d050b43875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523c7eb1-6084-4770-9ed3-2aa18c638c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2eafe3-f077-478a-bc24-c29be13578cf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f6fe2b-f53c-4a79-9e5b-d09d3bee7700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe1db26-67f5-47d8-9758-e79b6aa3bcb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dfeaa7-a1a0-4e48-8d56-44a28893842f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f24a99-e398-40fd-bcd2-4f00f8637b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed6d25-dd88-438e-8c77-f0a3d9838546",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9641bf4a-1435-4eca-937d-2e9a8d683769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da1501e1-e54b-4a2f-bc3b-0923073b37fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1135ee27-f365-42b8-979e-f4c230a359f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151fe72f-3566-4e50-91c2-8f8b7775f81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb1b133-d4a0-4cb0-889e-39a51392e38a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e1e5d2-b89a-4093-a0ec-b541bd3c1069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4b59bd-454a-47d0-a8ef-3b60c920da92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f366e30b-bbc4-4fa6-b777-95ef010248bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea5504a-ccbb-4e24-8385-289a9d663f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57941eea-fff2-4504-a129-dc1befe536ea",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ae8897-c9e8-43bd-af12-a6ab20e94385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00df1978-ba9d-4809-b85d-f43e9fcab2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e95c11-ad09-48bb-bdda-a1e79aab99ae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9d72b8-bd95-4338-830d-c69432b74101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c62d52-0ea2-443c-9a3d-32f0dae2d19d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a24b0f-56e9-455d-892e-769225ed0700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7239b403-51e7-4801-b690-d4b8c4c97167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f156821-76d8-4a31-804f-9e08163b3846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0651a830-8bd2-4877-9efe-4b79172f3fac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ab33381-839a-4fce-a09b-6a1c51fdd9e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4365a5ed-8210-4fb5-a66c-946508c8de8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56e33ded-5d91-42d1-bf47-4e07366cecc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4be7230-1048-440f-8f8c-313bfab74b16"
                    }
                  }
                ]
              },
              {
                "id": "c3904879-67f3-4f4b-8733-7e78687ba81a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c3bed31-d3e8-4273-a495-d69df8e62855",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f5273a-7e87-4337-bf64-b323d3a1c84f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2c84bf21-5625-4b33-9bee-aff3a8c6cdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a64d4ce-0b0a-4eff-a7db-c0c0d9d96fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4afef9f4-0b47-44cb-ba98-62464df11aad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb36389a-0989-4056-a2af-c581247a098c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "965cb6d9-ab9a-4364-a32c-f0066e1896b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b97332d0-07f9-45b6-a9e5-0265d7695efc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bc45479-60c4-4c19-bc22-5b3b2dd5950b"
                    }
                  }
                ]
              },
              {
                "id": "72e2d4e7-61ca-423f-8997-afa25b7ef46f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cfda97ed-0c88-49eb-bc6a-ab3f76370e44",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a46299-6e47-4150-bc9c-952d85cec58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "24614c44-2bbb-4c21-80b9-bb4ea4c198e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cbbbda-c470-4611-92fd-c2a225061c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9524c7d9-444b-4224-a3f0-7f2cbf0fa758"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "48512aeb-6ae0-4367-a062-23d3943737e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33ee9058-8358-46ac-9f35-c4973e37f664",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d30c1301-0f4e-4305-8bf3-b8701d111485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "be511308-ba04-4686-a9b3-6b472d3fff4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0f25e48-3bb9-4d3d-a177-cdad38c015b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c98de9cf-27c5-4b7b-89f0-f2eaa396a069"
                    }
                  }
                ]
              },
              {
                "id": "49f7c7df-1033-4f01-a06e-e63b9a00c476",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "289a17b4-fcf0-4b36-b0ac-b5d5b8e8c786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "856441a3-1429-4160-b44c-9bd975ddb2f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d8836cf-0785-407d-bf13-b187e0e0861d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce3cbdb0-8bca-42fa-90ca-1caf13943331"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30e8a344-c58b-4b53-96b2-93d744552bf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0b36fdbf-6ca9-4a39-a9bb-c790c5022f69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9509e5c-2b69-4118-b33e-3eefd7538379",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e704fe9d-3418-4dab-8828-8bffa3e94a66"
            }
          }
        ]
      },
      {
        "id": "8b6f6bfc-bd2f-42ed-acd8-5c46c33e01a1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "10861a3e-2a0a-4ee3-b673-3b89a7137e25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a817351-0e3c-443f-9eed-c900acb6183d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b897f74-2407-4e2a-89ab-31f1f5f5af71",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ada01e-e29e-4385-a639-4ea6c5cc633a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c8af40db-65c4-4fec-a2fc-bbfe82c5129d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b2ee53-4cb0-4885-b62e-0d78b21696e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56feb2d4-29d2-480a-943d-1080462dfaa1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b5bab8c-a59d-49f7-a599-93e0c324fff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9af994a7-743a-4fb3-8d4b-317827256020"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c279fd5-3b60-477e-9459-9bdfed456d42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f2671ce-5278-4cf6-902c-7314b32f8851"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f674fc1-902f-48ad-9c07-6ba9d7033236",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "314fe963-5554-4e9d-acad-994a6f55e017"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e24025d3-62c7-44c9-9464-8b567887631b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3c14286-a73c-4bcf-8f8a-33a1ba1fcf8b"
            }
          }
        ]
      },
      {
        "id": "df0860c1-59ac-4911-8426-ded4d0f04eb8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0ec7198f-13a6-42c0-b4e4-b6dfee52fdf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6806a97-d3d6-4908-899a-b5b1cda04950",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73c52f55-5b9e-4711-b230-807c59f5d338",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4044a9c8-5fca-4041-a2b6-3fa0504bef10",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e72e3423-631a-4d18-9d29-a5a6fd0aee65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2180e2-d0ae-4786-80ac-fab36cf4364d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5499920-af9d-4ae2-9ac5-1c25f6840f74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7380ffe-526e-4973-83dd-9c1cc69a6a8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3e0305a-bb19-47df-ac33-37b6b80d2b7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28cac9dc-62cc-4dd6-82d1-939e80c99f5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5723d1e-9c34-4c70-b2b8-d28b54f0b47c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b5d54e9-f739-4427-9f96-10ba6383c036",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9aec6494-b095-478d-ad0c-95f455ace376"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb33874c-f4c5-4363-a143-bd030363e64a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2fc9fa7-3a8f-45aa-afed-f1356540e051"
            }
          }
        ]
      },
      {
        "id": "b672d1e8-2306-4f7d-beed-3b9e0ebd53f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a6048d6-6338-4e09-b9ce-c21da553e5f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fd96071-9c42-4c2d-b922-5fae662b66d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d1c8988-4de6-42a0-99a7-deec831ba2b8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f51190-795b-4e8e-b7c9-8e0c77de9e92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9569f4f-11f6-4d75-9acb-dcd508e1138c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aa6469-2776-4d65-8bae-1fa73c46a9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9041eae8-b0d5-47e3-bdec-196029f11a5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df278cf9-c7c3-45d9-9c77-b9c41f981291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "169420cb-9477-47c1-9fc7-e2d726800cfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afbd1c64-4d3e-4ec3-866c-ef9218791654",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fbfaa00-0aac-473e-aacf-c8994bea27c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc2c36d6-a70f-429e-b2a0-d0953e9e4e3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "299efb6f-b6fa-46c2-bdd3-b013ee8420ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2280fd81-15c3-434d-83d6-afd00ee92ad5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "522829a5-a8de-4b9a-9376-08e56fe22cfa"
            }
          }
        ]
      },
      {
        "id": "7c7a202c-3581-4446-aecc-0f52365b0897",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28229e00-632c-4c3b-b045-1fb78285e8f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69d25b02-7500-4abf-a153-99aeb63abf86",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b1e4d5a5-a75a-4080-8d0f-77c9e5b212d6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "305b891b-7071-43dc-ab55-b78afd8985b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1be5913c-3797-48d4-90ac-c4803df1b946",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 83.32142857142856,
      "responseMin": 14,
      "responseMax": 6295,
      "responseSd": 448.0495781288618,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713832532086,
      "completed": 1713832561429
    },
    "executions": [
      {
        "id": "3f2b99e3-f685-424c-adc7-06563cb832cf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e62307af-1215-4f01-aa17-5456e362f330",
          "httpRequestId": "ace6b054-7c91-40ec-ba89-482908269db1"
        },
        "item": {
          "id": "3f2b99e3-f685-424c-adc7-06563cb832cf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5cac7db9-5854-4d6d-8aca-f8743b89cb90",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "c0d2d54c-a049-4304-a6f2-c573763c4da7",
        "cursor": {
          "ref": "e6b459ec-b5e2-47b2-bc6d-0a5ce63dca29",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "66b483e4-c414-406f-91aa-ab03f984ae2d"
        },
        "item": {
          "id": "c0d2d54c-a049-4304-a6f2-c573763c4da7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "40eecf7b-80ce-4b5e-b029-1e96fc460246",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "ddd395f1-ee3f-4a27-81ed-7d63472ea64c",
        "cursor": {
          "ref": "580a5b62-23dc-4db4-9bca-e4585aedfadb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "091162f1-bfcb-437e-9faf-da573a2e6a08"
        },
        "item": {
          "id": "ddd395f1-ee3f-4a27-81ed-7d63472ea64c",
          "name": "did_json"
        },
        "response": {
          "id": "b4803620-60df-4df9-ae24-18615839c85b",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8005aa57-7fff-4039-b46b-f7aa9a059f01",
        "cursor": {
          "ref": "39be88df-306a-426b-b305-b9fb060edd98",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8624c228-f2a2-4edf-9c51-f2d5b0c63de0"
        },
        "item": {
          "id": "8005aa57-7fff-4039-b46b-f7aa9a059f01",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d976448-01f3-4318-8e6c-9e8e3dece2ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8005aa57-7fff-4039-b46b-f7aa9a059f01",
        "cursor": {
          "ref": "39be88df-306a-426b-b305-b9fb060edd98",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8624c228-f2a2-4edf-9c51-f2d5b0c63de0"
        },
        "item": {
          "id": "8005aa57-7fff-4039-b46b-f7aa9a059f01",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d976448-01f3-4318-8e6c-9e8e3dece2ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27226345-35dd-45db-b7f2-6712e76c4b45",
        "cursor": {
          "ref": "4631b564-0c27-420c-bcd5-3038f421e072",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "97983545-d1b2-49f1-a86d-8c00a22d699d"
        },
        "item": {
          "id": "27226345-35dd-45db-b7f2-6712e76c4b45",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f5e3ccbc-d1ff-4f37-bfb8-420369a18ef6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb1ea2d-458a-4427-8b30-63e354211d2f",
        "cursor": {
          "ref": "430798b9-dca2-416c-b039-52efe41d17b9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3016043f-e4e7-499b-a6a4-6bc42e77890d"
        },
        "item": {
          "id": "1eb1ea2d-458a-4427-8b30-63e354211d2f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2b0ac944-d771-4c27-b389-581f24ef3a1d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02b0030-a8dd-4c9b-b815-109768e1ccea",
        "cursor": {
          "ref": "344e27e0-0f4e-47e5-b5b3-b9fb800d7155",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cf01e760-eb05-4d92-a733-533c5fc23ee7"
        },
        "item": {
          "id": "f02b0030-a8dd-4c9b-b815-109768e1ccea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ae51da90-3088-404c-98dd-7c16ff3706d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed55c92d-dcd7-4432-9e68-52edb254691e",
        "cursor": {
          "ref": "abaa1181-40c7-4839-8493-eed045dcfd0d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2c26c9d5-2fc7-4993-a301-d18ed819bd10"
        },
        "item": {
          "id": "ed55c92d-dcd7-4432-9e68-52edb254691e",
          "name": "identifiers"
        },
        "response": {
          "id": "30cb79a6-330d-4f6b-9a61-1ff705d8797a",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea7f7cc-aa15-48b5-9f3b-a8d797b707a9",
        "cursor": {
          "ref": "8076c354-a9cb-481b-823c-f15e2c4f6146",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "252b6af4-7c34-4d2b-bb01-6270cb0eba65"
        },
        "item": {
          "id": "6ea7f7cc-aa15-48b5-9f3b-a8d797b707a9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4b7428d1-dcb1-4aaf-8c70-99585a2bc11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5c159d-f26f-45ac-be38-6afeca3c1f93",
        "cursor": {
          "ref": "cefb63c5-bb3e-4ffa-93f1-e3d042f0cd8a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cabf7ef7-3405-4a98-b9b2-aac381cbd95b"
        },
        "item": {
          "id": "af5c159d-f26f-45ac-be38-6afeca3c1f93",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "81a56d07-e290-4d8c-be23-4d776f68fa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5900965-5d40-45f1-a7e9-9065025c2055",
        "cursor": {
          "ref": "b4567c9e-03c4-4fd7-a9c4-01b3303f6269",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ed5d66bf-1770-4447-ac62-560778f3c651"
        },
        "item": {
          "id": "c5900965-5d40-45f1-a7e9-9065025c2055",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5eea5ec0-dad0-464e-b0e9-e45521a0fee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2e4dc0-baeb-4bc7-b4db-f8a2b1150bed",
        "cursor": {
          "ref": "5d33dabe-30c0-4e61-9c03-8e5fb765ec07",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fc04b44b-b18e-48d7-bc2f-aaa2ceb8b6cf"
        },
        "item": {
          "id": "7b2e4dc0-baeb-4bc7-b4db-f8a2b1150bed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a47ef492-cff9-4ba6-9238-0f406fa9faed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c0209-52e2-4389-984f-d42aeb4532b2",
        "cursor": {
          "ref": "3e7eee87-059e-48d5-a6b5-18aacf379983",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9df51506-7b62-4b88-b7ae-a6bc60f9561c"
        },
        "item": {
          "id": "bf6c0209-52e2-4389-984f-d42aeb4532b2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "916c0f9e-ca0c-4866-abb5-cf41c64ed88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72028c3a-4763-4e97-a6bd-b6483208df66",
        "cursor": {
          "ref": "80cbb261-2376-41b0-9a34-83bc39b16a3c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "66e011d8-7ae8-4169-862f-0ff598ba9f10"
        },
        "item": {
          "id": "72028c3a-4763-4e97-a6bd-b6483208df66",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ad8f9360-0942-4dbf-bdf7-2c6594f7228b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a5ef88-b04e-43de-886d-f9ddd84e9535",
        "cursor": {
          "ref": "114d2616-a426-49a3-a668-d7aac1a5cb03",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b0257ac9-c35a-46cc-9932-e9170ce480db"
        },
        "item": {
          "id": "35a5ef88-b04e-43de-886d-f9ddd84e9535",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3c3eb092-dc85-4d1f-a3ae-548677302039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f33f9-eb76-4f94-a42c-b40dc649324e",
        "cursor": {
          "ref": "6aa082b2-e8e3-489e-8fff-58c5cec6b342",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "96329d1e-72f1-41e9-bf2d-b0117f7a1e53"
        },
        "item": {
          "id": "5f9f33f9-eb76-4f94-a42c-b40dc649324e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ada97217-775e-483c-a732-2da62f5e127c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3040b08b-9586-4556-87b7-669a2290fee6",
        "cursor": {
          "ref": "efb59051-8dc6-4f8b-90c2-5fb51b0f31ed",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ea58b88c-9fb3-49d8-844d-e02a07234483"
        },
        "item": {
          "id": "3040b08b-9586-4556-87b7-669a2290fee6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d4762acf-a79d-4877-8a7d-dc215c1c4fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6062b7d9-7d06-4eb9-a702-098405d43813",
        "cursor": {
          "ref": "bc3ef65d-a04f-4eb7-9342-83d9f6d581dc",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "69fc235f-eab1-482f-b2fe-61bb59d7ab55"
        },
        "item": {
          "id": "6062b7d9-7d06-4eb9-a702-098405d43813",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "57c26cdd-190e-468f-9c10-6c213e6c3a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e402514-7377-4e4e-8b12-39b788215406",
        "cursor": {
          "ref": "1920dc21-2008-49a2-bc1d-64cd93d61788",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1d0f4a87-a79d-47eb-981e-fd8f17cfc22d"
        },
        "item": {
          "id": "6e402514-7377-4e4e-8b12-39b788215406",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2559c73a-02e4-42fb-b075-c8cf844f0ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d26d38d-665c-4347-8dbf-dc782e7c40a1",
        "cursor": {
          "ref": "63cc8016-70eb-4c74-91d6-3d3c954f8284",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5e32dc2b-7f39-4e02-a503-e88abe263805"
        },
        "item": {
          "id": "8d26d38d-665c-4347-8dbf-dc782e7c40a1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bc8c2d1a-fe97-4a39-8e2a-b24bcc7c3743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0cfaec-7673-4735-be43-0bf5da85374d",
        "cursor": {
          "ref": "bfa1e7e0-3abc-4c74-ba1f-e908e3e7693e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "75d209fb-cb5d-423f-8424-313c2ac6d81c"
        },
        "item": {
          "id": "df0cfaec-7673-4735-be43-0bf5da85374d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6adb1e5c-46f9-4d67-be6c-a4680c26f0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ad295f-2f18-4fd2-bea5-a221af9fa1b1",
        "cursor": {
          "ref": "43fe0e30-b9ce-4488-8cd0-779500b14a25",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d001012c-6491-4763-bbb1-f3473814eaee"
        },
        "item": {
          "id": "05ad295f-2f18-4fd2-bea5-a221af9fa1b1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0aa12c29-a6c2-4cd0-a270-cdb8887e4d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbf52fa-2352-4e64-b85d-36a568b99c35",
        "cursor": {
          "ref": "4856fc35-5a05-44f6-a830-3fa9288ac344",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7f53f7af-94f1-424d-b179-f077f24a9536"
        },
        "item": {
          "id": "8cbf52fa-2352-4e64-b85d-36a568b99c35",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eee367fc-fc43-4e83-8a4c-d2cba9a504e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8584c2a0-9660-4ec3-a23c-56ba4240cae1",
        "cursor": {
          "ref": "738b2c30-fccd-4c2f-8e0d-16b63c23d6dd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a947c103-8551-444d-9d40-141c4c426cb0"
        },
        "item": {
          "id": "8584c2a0-9660-4ec3-a23c-56ba4240cae1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "286759bb-75f3-462b-8c02-9e464f0dc730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72606c0-35e6-4c4c-a4d2-b93a233af0c7",
        "cursor": {
          "ref": "7c8a3af5-dd5b-4aa4-8384-7b6180b1afa1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e1d99f23-cc23-4ab0-86f5-22d13b6cf89a"
        },
        "item": {
          "id": "d72606c0-35e6-4c4c-a4d2-b93a233af0c7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "729ba76a-8dc8-4455-a328-ebc33cfa6dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c5db43-4d03-4c01-af2b-25a218c7f8e9",
        "cursor": {
          "ref": "f86d784c-9642-491c-988c-8efe7d82c486",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4e06e2b1-ce40-4419-be3d-f64344883c69"
        },
        "item": {
          "id": "70c5db43-4d03-4c01-af2b-25a218c7f8e9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8beb20f2-1379-46fc-b3a5-fe08a702985a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455d2ae4-e15f-4851-b09c-cbbff56d443b",
        "cursor": {
          "ref": "97b6e990-e8cf-480a-87cf-0538b1582caa",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "66118ce0-449e-4165-bdd5-d8587e3e5e53"
        },
        "item": {
          "id": "455d2ae4-e15f-4851-b09c-cbbff56d443b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "09747a9e-80b9-4f3e-a077-1a527f92b88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d0fc38-7617-4460-8ebb-9915be916303",
        "cursor": {
          "ref": "46e92a16-a7c6-4ffb-b94a-b34d269d58e7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1df8823e-0b2b-46d4-b28d-383ba844ebe2"
        },
        "item": {
          "id": "64d0fc38-7617-4460-8ebb-9915be916303",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7a6a7fb5-c0a2-497d-9a1c-bf2f915d3f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1cb754-d569-4c83-937d-4580f86b23c5",
        "cursor": {
          "ref": "b7a8d1f2-b2c7-4e38-b7c0-948ab3bf2790",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b61fafe8-b511-4067-9187-3f7a7d139529"
        },
        "item": {
          "id": "5e1cb754-d569-4c83-937d-4580f86b23c5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "47c3550d-1a67-45bf-9515-6f2ea2932839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50579089-1870-4d38-8444-46e6b3099cf8",
        "cursor": {
          "ref": "dc4c039d-8f8f-4a76-84c3-ed2c13b7e803",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cfda6b7b-234b-4558-9b51-39c18437a3d5"
        },
        "item": {
          "id": "50579089-1870-4d38-8444-46e6b3099cf8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "688e499c-1ee4-4273-bf91-bd46dfb228b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcba72c6-d931-457e-9406-d704c4d844f0",
        "cursor": {
          "ref": "aced180b-b1cf-4920-b318-1287a8dfdf0b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f876d187-3d94-47ca-ae62-0517c0fe3e8b"
        },
        "item": {
          "id": "fcba72c6-d931-457e-9406-d704c4d844f0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fbb2c4d9-3746-4694-bdb0-b1c4b05e2cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80763a3-2e27-44a7-962b-c5dfb5d92c8c",
        "cursor": {
          "ref": "7c126a09-eede-4bd3-af96-a9ae056a98e8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0efddbfe-5b2d-4c5c-898b-f8cb182a3177"
        },
        "item": {
          "id": "c80763a3-2e27-44a7-962b-c5dfb5d92c8c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "52d840c9-80a6-418d-8b2a-259ddb276aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c852ae-065c-4ced-998b-db0652879d42",
        "cursor": {
          "ref": "9c5dea39-af19-4e7c-91ab-0d0b1743bc19",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "55d0e331-af17-4c62-a498-a9ed7a6c4e40"
        },
        "item": {
          "id": "31c852ae-065c-4ced-998b-db0652879d42",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "10320026-6744-438b-af77-3366322d7195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0763df-1ec8-4dbd-9d97-60d8e397a8e8",
        "cursor": {
          "ref": "1ce6b288-1c39-40d4-98f4-3e83b1b05322",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b9c8219-f34d-4812-9d3d-b9823c1a610a"
        },
        "item": {
          "id": "4b0763df-1ec8-4dbd-9d97-60d8e397a8e8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7de7664f-300e-4e2f-920b-c1dc9df6a6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb0babf-5c21-42f7-a5cb-316f19725c0c",
        "cursor": {
          "ref": "21e95d89-cf2f-460c-9a6a-af4247bc4131",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "60e8991c-8052-4774-946b-1e01f61f6713"
        },
        "item": {
          "id": "9eb0babf-5c21-42f7-a5cb-316f19725c0c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9ca8bcf4-5fce-499c-b08c-4124c01ee821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b586ee-2871-4704-89da-3352853c9eb4",
        "cursor": {
          "ref": "40653bbf-ecee-4ac1-a17d-b12bd86baf72",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "235cdf7a-23c1-44d5-9097-7611131ec199"
        },
        "item": {
          "id": "b5b586ee-2871-4704-89da-3352853c9eb4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dff6a9f7-b06a-4b2d-a411-0381550b32cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca03938-1cdf-4d35-92c8-8023b3c21c9a",
        "cursor": {
          "ref": "02e405e4-05eb-427a-bd60-7f481449d8dd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "85cde6f3-e5c0-4278-a5c3-8d0daf74428e"
        },
        "item": {
          "id": "aca03938-1cdf-4d35-92c8-8023b3c21c9a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4ba2bb60-ab0c-42f5-bc8a-3492a0930044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a6815a-86df-4196-9e77-2c2dc4a7eb7a",
        "cursor": {
          "ref": "22005786-0f90-4141-ada7-6cf0ed236403",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8b7af2a4-5e54-41a8-b9f3-fe6505c4193e"
        },
        "item": {
          "id": "e3a6815a-86df-4196-9e77-2c2dc4a7eb7a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5998651f-2283-4afa-94c8-051030170ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13169f70-6b44-4e83-913a-b59d218fa004",
        "cursor": {
          "ref": "8464481d-2ea9-44e0-a328-18667383087e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9b6353be-07db-4ef9-b2fa-4f9686fa2160"
        },
        "item": {
          "id": "13169f70-6b44-4e83-913a-b59d218fa004",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e9d6c41f-3cf1-4fae-97c9-e8637d7a34f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56c00b5-3ff1-4b10-a23a-ec14e1ea8929",
        "cursor": {
          "ref": "57641131-3dfc-4c0e-b085-7fdd4d350ba7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "83bfa480-f178-46b3-be26-36a94ee919d3"
        },
        "item": {
          "id": "a56c00b5-3ff1-4b10-a23a-ec14e1ea8929",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c6fc0e44-c783-4c84-b10f-fbdab856a75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e838a09d-d183-4a92-a5c8-f18fb41968c2",
        "cursor": {
          "ref": "3629f538-760f-46c0-959a-ccd5d1f477fc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ecece125-0700-4f81-8d60-c9a0e25cefac"
        },
        "item": {
          "id": "e838a09d-d183-4a92-a5c8-f18fb41968c2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "24032ffe-e6a5-48b2-8eca-1f6f4cb80f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12164c35-7a73-4647-b950-241a15200c10",
        "cursor": {
          "ref": "a61adc6e-131a-4309-bfe0-a0d128f0dc04",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "31edae2d-925a-4356-9aae-e3ccfb8021e8"
        },
        "item": {
          "id": "12164c35-7a73-4647-b950-241a15200c10",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e49ae63e-5aa1-469e-86b1-bef824be4c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d59305-5de1-4a95-96af-6582727a6774",
        "cursor": {
          "ref": "54459588-892f-4d7a-8b0c-7a924af19c06",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1a1a52f1-b672-487e-a405-c60e56452b29"
        },
        "item": {
          "id": "69d59305-5de1-4a95-96af-6582727a6774",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2e3217e9-86ae-4309-aa01-fee98c804e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a790b19-43e9-4d75-a842-3e6056bd66e3",
        "cursor": {
          "ref": "93605657-5dc1-4feb-86bc-b9be4bb149da",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bf9193d2-0813-4036-9a0b-11348f463c6d"
        },
        "item": {
          "id": "1a790b19-43e9-4d75-a842-3e6056bd66e3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "168f8059-453e-408e-bd34-d1842777a66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05b9c3f-99e2-43e8-aace-7afbe4319601",
        "cursor": {
          "ref": "3f8433e4-61b7-44e0-870c-d8b8637a7a13",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "550768cf-9d0f-41c4-b275-7f595c88f128"
        },
        "item": {
          "id": "e05b9c3f-99e2-43e8-aace-7afbe4319601",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cb744232-ad6d-498d-b45e-bea54801e541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4541deb7-4f2f-435b-8ea7-de8731e72497",
        "cursor": {
          "ref": "2458b3f3-2c08-4c0d-acf7-4571aead86d4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "25fedd9e-33d4-44cf-a7cd-d9574240b607"
        },
        "item": {
          "id": "4541deb7-4f2f-435b-8ea7-de8731e72497",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3c7d1e2b-a8d7-4e81-9fcb-dfdd46733942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00345cbb-9ad7-4e58-a3b5-8c1c102dd24e",
        "cursor": {
          "ref": "c10b5eac-361d-4004-aa21-95a4b5ebdb5c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3150b10e-3dc1-42b2-a1fa-5279e2bcc8b3"
        },
        "item": {
          "id": "00345cbb-9ad7-4e58-a3b5-8c1c102dd24e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7023386c-5680-4791-b453-79f16889840e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dfc9c7-bd33-47e4-ad80-0eaaffdcf1df",
        "cursor": {
          "ref": "c9612975-a8a5-4857-acdc-4ae707673012",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80d8daaf-8b7e-4b64-8682-0e88b03068bb"
        },
        "item": {
          "id": "87dfc9c7-bd33-47e4-ad80-0eaaffdcf1df",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "87771a8c-0b26-41ad-bb27-9bb9c043a8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34876f11-9f28-4c97-9549-62be146f5ddf",
        "cursor": {
          "ref": "d9ce94bb-701e-453e-8dac-3c4b12e135d4",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "353b6063-f588-42a2-97c6-6137e5933f0a"
        },
        "item": {
          "id": "34876f11-9f28-4c97-9549-62be146f5ddf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "63c5f6b8-5f1d-48aa-b0cf-1c5912e49169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40137ab9-4440-4928-b846-55b540a6d917",
        "cursor": {
          "ref": "fab996f5-a580-45c8-b963-57a340e80ecc",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "32810bbd-8c5e-44df-80b8-4b4b4a98f443"
        },
        "item": {
          "id": "40137ab9-4440-4928-b846-55b540a6d917",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8d148b76-5383-4b9f-8ea4-f29d37624921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ea82c-777b-42da-802f-40cd77fee12c",
        "cursor": {
          "ref": "7b8214d2-c8aa-4074-bb47-fcfb304957ea",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "28991b86-199e-43be-abe6-53dbdeedb021"
        },
        "item": {
          "id": "b10ea82c-777b-42da-802f-40cd77fee12c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "92863d53-d747-415c-8376-055e0998fa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aae7b52-e51b-4f8c-8b64-ddf7bb8cbadd",
        "cursor": {
          "ref": "456b36e9-ed33-4c4a-8444-65b72ab5a3ab",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ea606d36-9e5a-43bb-b2dd-ff9bd1652cc4"
        },
        "item": {
          "id": "4aae7b52-e51b-4f8c-8b64-ddf7bb8cbadd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0f8bef6-b884-486d-a632-708c330fec5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713d92af-eb6b-457e-8cc1-8c558e9dd1f2",
        "cursor": {
          "ref": "758dddc9-b479-48d2-8bd4-c8d4adf272f4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "927d8d47-007d-4b2b-aca5-e5f0d27e0661"
        },
        "item": {
          "id": "713d92af-eb6b-457e-8cc1-8c558e9dd1f2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ac1cb6c-8131-49f1-a181-85b013733cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b2df97-195e-4b12-b777-5a8f9165ebbb",
        "cursor": {
          "ref": "048b6074-7994-4cc1-a558-cd1f815aba1d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fb5d015b-a53f-40e8-b2a7-562463b3dbce"
        },
        "item": {
          "id": "37b2df97-195e-4b12-b777-5a8f9165ebbb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6723ed99-d35e-4310-8e02-c97a3e34e1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b41049-5d6a-41d8-aa9e-d6a1aa5ec34f",
        "cursor": {
          "ref": "04714ce5-ea1c-452b-899b-ca4ed159dbcb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2d2b6418-7053-4965-8222-ea51b85c7a0e"
        },
        "item": {
          "id": "35b41049-5d6a-41d8-aa9e-d6a1aa5ec34f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8250278f-ddc7-4be9-aa38-62998bbe9f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e71d34-c644-43b4-8239-320c3bb09c9d",
        "cursor": {
          "ref": "2b507385-7542-457a-8d47-66fba76d87f8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36f3dac8-eb02-443e-959a-b2e00b012029"
        },
        "item": {
          "id": "64e71d34-c644-43b4-8239-320c3bb09c9d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1019a345-b622-492a-b083-7ac9221e9ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e9c927-198b-4bc7-8308-4cb85ede9ad6",
        "cursor": {
          "ref": "c5f52562-b739-4172-b97c-bd624eed6055",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9276c9f-3456-4c04-971a-f0575047836f"
        },
        "item": {
          "id": "f5e9c927-198b-4bc7-8308-4cb85ede9ad6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "969613c4-d359-47b9-b318-847bd040cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8cbab3-1707-4da5-9417-67a3dd217b29",
        "cursor": {
          "ref": "52657729-af93-486d-9f67-e9b60618fb3b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "87795aec-b516-4672-97e6-afc981b9c859"
        },
        "item": {
          "id": "7f8cbab3-1707-4da5-9417-67a3dd217b29",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "55708f38-de2e-4726-9c16-c55dc37f6423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe45d2a-6b12-44bf-a545-a02dd7731ca1",
        "cursor": {
          "ref": "518aed61-2290-4e40-a1b9-7b45a1b756a3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5bd8469c-f2d6-4575-9c2c-fc7c371616b0"
        },
        "item": {
          "id": "fbe45d2a-6b12-44bf-a545-a02dd7731ca1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e9c526a5-cee9-4876-977c-a9f255bda397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aefe92-2310-4425-95f9-cb92e705274e",
        "cursor": {
          "ref": "73106abe-ac9b-4591-bdfc-8315988d39fa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "37d56449-486d-489b-a268-e0985d1c28df"
        },
        "item": {
          "id": "05aefe92-2310-4425-95f9-cb92e705274e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "99fc9122-8e96-4644-8f4e-af6b148f6366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8336e9e-9a94-47e8-9cbf-2f4df43e4776",
        "cursor": {
          "ref": "1ef43775-dadb-4521-a942-32f50638e007",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7c0f962a-5b37-4bcc-8176-e8c4af34f193"
        },
        "item": {
          "id": "b8336e9e-9a94-47e8-9cbf-2f4df43e4776",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2f720b6a-40e0-4ac0-a999-4e9bccb35f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b183d7-5997-407e-a827-055252d0746f",
        "cursor": {
          "ref": "01dd6fc4-1ddb-46af-9ff2-e0c8580613cf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5dac997f-753b-4385-95f5-173500ad8665"
        },
        "item": {
          "id": "31b183d7-5997-407e-a827-055252d0746f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d1e53e2a-48ee-48e9-b6ff-ec184d537617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df326332-f25d-4d09-ab0f-fadd7afdbd18",
        "cursor": {
          "ref": "1e9cd063-e13a-4f16-8adf-32ec895c53b7",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2b70a725-f5ce-4f61-aaa8-80e23b6920b8"
        },
        "item": {
          "id": "df326332-f25d-4d09-ab0f-fadd7afdbd18",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d2c348de-f942-4faf-951a-5647a0826c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d80483b-99b4-40cb-afca-620f23b6ca00",
        "cursor": {
          "ref": "dfc72249-8e54-4808-a3f8-3039a174cca7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ead0b103-ea37-43a0-8ca1-9d541228ab34"
        },
        "item": {
          "id": "7d80483b-99b4-40cb-afca-620f23b6ca00",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1c61f09c-76ce-454c-b26c-6335e020a278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a50316-d90b-47cd-803f-70f33af020ef",
        "cursor": {
          "ref": "5f776f12-ce7b-43d3-84a5-8b30bc75bf18",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "61e474de-88b0-4f91-9ec4-fe2dece33406"
        },
        "item": {
          "id": "76a50316-d90b-47cd-803f-70f33af020ef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b3eec69c-4376-483c-a0c5-34027aaea148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dd1fb7-ac61-4d9d-8bb1-8bcbb9b4414d",
        "cursor": {
          "ref": "cc01d0a3-211e-4636-b652-3e568b49597b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "73d4a388-47ac-4ab1-9df5-ef554b2a5dcf"
        },
        "item": {
          "id": "a2dd1fb7-ac61-4d9d-8bb1-8bcbb9b4414d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "60c40b26-88a8-429b-b902-e63cbf039a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5043a8-e2fe-4f36-9a35-3914106d76cc",
        "cursor": {
          "ref": "e60a8c05-fde6-4cc3-9965-1ceb0ee2c0f3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "808e029f-3845-4da5-a7b2-5a0d3c9d7e37"
        },
        "item": {
          "id": "0b5043a8-e2fe-4f36-9a35-3914106d76cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2139c5aa-ca37-4131-9c17-e9b6e69edc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feffc354-127b-43ef-b624-fa0339f297e9",
        "cursor": {
          "ref": "167966dc-7f11-4bd5-b815-de95802b4f5e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60460baf-6833-427f-8233-33d14537f625"
        },
        "item": {
          "id": "feffc354-127b-43ef-b624-fa0339f297e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8345ae9d-b8d9-47cd-bcc4-230a499902af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8beb4b7-ed6a-4431-86e2-30b8b452482e",
        "cursor": {
          "ref": "8f085591-fbdc-4e80-98e3-b5ca79c07ef8",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b2312ab9-d655-4d5a-8691-58c8964b943b"
        },
        "item": {
          "id": "d8beb4b7-ed6a-4431-86e2-30b8b452482e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3eb6242a-3624-4cdb-9b6b-2c49424a0b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60e8281-dbea-4475-b56b-abf7138b9c61",
        "cursor": {
          "ref": "709d6ece-2ac5-46fa-9084-edf5c65f0804",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "313be99c-c6da-4580-a4b5-42802d4dfe6b"
        },
        "item": {
          "id": "e60e8281-dbea-4475-b56b-abf7138b9c61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b161e3d4-124d-487c-888d-db953868dcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b11ffa-cabe-4e0f-b160-32fd1104f221",
        "cursor": {
          "ref": "6338ecaf-ba3a-4c58-80b0-5f8706758d01",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b356c865-d91d-4ece-9b89-1e91694ff3c3"
        },
        "item": {
          "id": "15b11ffa-cabe-4e0f-b160-32fd1104f221",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50b4d03a-72fb-414d-a61c-c0aed3e8c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09ed633-924d-49c9-a454-c0f8757d8a6d",
        "cursor": {
          "ref": "bda11aa6-b412-4feb-86e0-f2d8dba7bea3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a0248a8d-cee7-41d4-be43-7869beda00ba"
        },
        "item": {
          "id": "c09ed633-924d-49c9-a454-c0f8757d8a6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "57070a21-d19c-4f32-8c0a-86c7fb9103ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde3c807-48c4-4ecc-88b1-6f1c2aae958f",
        "cursor": {
          "ref": "04fbcc2c-fb49-4ba8-b125-10f1fec5a15c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88232d9a-c6f1-498d-b61f-29d21d09bc5e"
        },
        "item": {
          "id": "bde3c807-48c4-4ecc-88b1-6f1c2aae958f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5b03fe1-6d28-4e8e-8ad3-895f90ff5c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea69b85-a8b2-4da9-8f43-d5f5ff3c75af",
        "cursor": {
          "ref": "856faf6f-940d-4acc-9265-b72cea250546",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b33b759b-edfb-4b9a-869c-c0d4d5393bfc"
        },
        "item": {
          "id": "7ea69b85-a8b2-4da9-8f43-d5f5ff3c75af",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "35056306-3147-4016-8389-f4032759009f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae5113b-505f-40fd-b73b-9e9b14f6182b",
        "cursor": {
          "ref": "893eac18-9acc-484c-aa5e-b0b92e953547",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2bedb084-f6ac-424e-ac95-db150631f323"
        },
        "item": {
          "id": "1ae5113b-505f-40fd-b73b-9e9b14f6182b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dd9fad82-f5c1-426f-a8cb-1e9b3d2f76ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed11b0a6-7dab-40d7-ab2f-6edc33c1166d",
        "cursor": {
          "ref": "95106710-f8a7-4aee-a943-9a3314f156b8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2830e6ff-a927-4d80-9af0-062c265e4b64"
        },
        "item": {
          "id": "ed11b0a6-7dab-40d7-ab2f-6edc33c1166d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1fab6992-f7e5-4d1e-97b5-9a370b336de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42571bcb-9511-4288-921f-7840500891d4",
        "cursor": {
          "ref": "a5dba9b3-62ee-4c55-9716-1aa1d7afac83",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9b4d0b65-bec9-4140-a1ce-233e66f12b9c"
        },
        "item": {
          "id": "42571bcb-9511-4288-921f-7840500891d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b76311c3-963d-40df-897e-0e7b01c4f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a31e2bd-46b2-4a9b-b324-2caab7d57668",
        "cursor": {
          "ref": "c76f4b0f-505d-4253-a00c-a690649b2847",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "30c92e94-28bb-42e3-921d-10e3d32813cb"
        },
        "item": {
          "id": "7a31e2bd-46b2-4a9b-b324-2caab7d57668",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d34e60a5-a8a5-4ba8-85f8-ff495d6c8902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704686d2-44fa-4f75-93ac-fbec2772e4cc",
        "cursor": {
          "ref": "3ed0cc9a-54c7-4efd-ac8c-e688a7c79935",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aa041968-e458-4967-938e-6e1c00fa23a0"
        },
        "item": {
          "id": "704686d2-44fa-4f75-93ac-fbec2772e4cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c361af73-6535-46e1-867d-c4437029863b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ff79a9-2774-4156-af43-678ce96183da",
        "cursor": {
          "ref": "c7982dff-caad-4cb6-a674-c500be478616",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1a9c156d-30c0-44e2-9b0d-88ebd390884f"
        },
        "item": {
          "id": "65ff79a9-2774-4156-af43-678ce96183da",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4d460912-0ba3-4d31-867f-12aebea671ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7a1a54-0577-4fee-846d-99b610c84060",
        "cursor": {
          "ref": "a8cce197-c94c-4b47-bc9d-ae61bad58489",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1b924354-6e90-4e51-b7be-9a386b115546"
        },
        "item": {
          "id": "0b7a1a54-0577-4fee-846d-99b610c84060",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b6d6d657-a4d2-4cb1-85e5-a44ca0d852dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda0696d-e331-4482-9212-07d49f7f0059",
        "cursor": {
          "ref": "2989c263-cae0-4340-bda9-bd6865c20b41",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a50b508e-7933-4e8a-a71c-df5b18a14e0a"
        },
        "item": {
          "id": "eda0696d-e331-4482-9212-07d49f7f0059",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1a1e66d5-972b-48e4-873b-2020f0f241ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f2908d-32dd-49c2-834a-5f145b560f96",
        "cursor": {
          "ref": "d6e59542-0269-4ca3-a9d2-1696ac4c10e3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9f9c548e-3c40-456c-8af2-dee3b2248180"
        },
        "item": {
          "id": "23f2908d-32dd-49c2-834a-5f145b560f96",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "488c28f5-afb0-48d1-a4f9-830c548078c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c249e4a3-d0f8-4b38-9e76-1a58c3a5d3ce",
        "cursor": {
          "ref": "ab29bc49-981e-4a43-a770-63bf45cfcd5f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a12178eb-103e-4127-8bff-634a908ec3d7"
        },
        "item": {
          "id": "c249e4a3-d0f8-4b38-9e76-1a58c3a5d3ce",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "62e8d84a-c3e6-4174-a28f-4e7f4e20433f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea452fee-73be-4666-8419-d6f7c5dddc27",
        "cursor": {
          "ref": "b5751144-fb01-449c-a502-367cd40131fe",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fe30895a-36c8-4c18-846d-9405bc55185d"
        },
        "item": {
          "id": "ea452fee-73be-4666-8419-d6f7c5dddc27",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "81f8000e-07d0-425a-b4bf-f4545bfecdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cb57c5-9766-4bbb-9ccb-d697a09a381d",
        "cursor": {
          "ref": "0c1502ad-a93d-4781-86ec-8477c49c93c6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "da972bdd-9ad9-4c79-9e2b-1e49cf7b55fe"
        },
        "item": {
          "id": "84cb57c5-9766-4bbb-9ccb-d697a09a381d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c9fa3270-f72a-46fc-89c2-c909279b1761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae8f4c8-60ed-46c6-9fd5-7943f4e935bf",
        "cursor": {
          "ref": "cd5f4bfb-da9b-4ffc-9f64-35e53c67ca02",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7f2ee04c-a538-4cc7-b788-8d13c2135c6c"
        },
        "item": {
          "id": "fae8f4c8-60ed-46c6-9fd5-7943f4e935bf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5b1fbee-851e-4e5d-b114-6f1b809b0d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a4e81-1e3b-4bb5-9034-62f3bbc0ec4e",
        "cursor": {
          "ref": "689029eb-d03c-4a5e-b84f-e3a075c02730",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "39e9c045-affa-446f-a1b9-7926b965ac63"
        },
        "item": {
          "id": "ea0a4e81-1e3b-4bb5-9034-62f3bbc0ec4e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fa62d17b-8374-4c43-9ae5-1b80d16412ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844a9ea2-3d4e-4e56-8b2f-e7c5fbba8cad",
        "cursor": {
          "ref": "e7e8449e-2a6f-4ef4-a4b7-233eca7c20e0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2d7d4475-f636-4efa-9d15-d7c1cf06f5d1"
        },
        "item": {
          "id": "844a9ea2-3d4e-4e56-8b2f-e7c5fbba8cad",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4ccd1aa1-1605-4802-acfc-3ff1aca83e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14900186-ed46-430a-ae81-20376047aac7",
        "cursor": {
          "ref": "735c72dd-97f7-46be-a7b8-3602ce259c8b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8b8dee53-08e8-422d-acdc-bf60768c3581"
        },
        "item": {
          "id": "14900186-ed46-430a-ae81-20376047aac7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b2e2e130-7223-4ad1-8384-ef8d4ec479b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e938ad5-5a60-4eed-abe6-686a1dcd5588",
        "cursor": {
          "ref": "60485ff9-c911-49bd-bd6c-85cccd85684b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c4cb831a-cc19-448f-ae7a-b6bf5ec145a0"
        },
        "item": {
          "id": "4e938ad5-5a60-4eed-abe6-686a1dcd5588",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "71fbc954-22cf-4a31-802a-ebe3eced4c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb6d490-e34e-40f0-a3fb-6cd5a84e27fb",
        "cursor": {
          "ref": "bee16863-78f6-45a5-b0c6-8cbbb12638d6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a81e79dd-acc6-47aa-82a8-dd655ef4f484"
        },
        "item": {
          "id": "6bb6d490-e34e-40f0-a3fb-6cd5a84e27fb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bee774b1-0911-4179-a06d-e1b5dcbaf713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a78298-127e-4789-a048-272af6ba40c1",
        "cursor": {
          "ref": "94fb5375-923c-434b-b47a-cec5e024ce02",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9b68da83-cc4e-48c7-b0f5-80e9e8c027dd"
        },
        "item": {
          "id": "16a78298-127e-4789-a048-272af6ba40c1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "734b1eda-255b-4a55-8bb5-89c28db4d650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a010d4-b973-41b4-a41c-a728dd79a666",
        "cursor": {
          "ref": "bc219560-3532-45a5-a37e-050a1eda6988",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bc540a13-664a-44a7-ad00-c3d21fc630d3"
        },
        "item": {
          "id": "95a010d4-b973-41b4-a41c-a728dd79a666",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9fb50b9e-9f5e-4b69-83ec-462064830eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6cf86a-b230-483e-8a6b-9f1d8639613c",
        "cursor": {
          "ref": "831c9730-27bc-4592-b47d-575fe45ea959",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e867b46c-6e2a-4b51-b0b7-55d4939d54d8"
        },
        "item": {
          "id": "1e6cf86a-b230-483e-8a6b-9f1d8639613c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "83c29dd9-3566-4db2-9842-4dc06dfdf0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ab7307-abcb-4fed-a5cc-0bff13587958",
        "cursor": {
          "ref": "33c6de05-e6da-4547-80b6-6529c1ca246f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bd1de4ae-903b-4c34-b07d-bb9ac69b3d0f"
        },
        "item": {
          "id": "93ab7307-abcb-4fed-a5cc-0bff13587958",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "37bbab4b-48fc-4f5d-bcc9-f882a23b46a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd2234a-d52b-4cd9-8cdc-004785cff680",
        "cursor": {
          "ref": "08d74c46-4763-4993-8d4c-546db15ffdb6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e2ccdc2c-63d5-4436-b103-250391050c36"
        },
        "item": {
          "id": "dfd2234a-d52b-4cd9-8cdc-004785cff680",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dff1819f-d5a9-44cc-9788-7395ecdc2a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadfc5f5-c3aa-4ed9-b94d-789967098b6f",
        "cursor": {
          "ref": "433ac575-26ea-47bd-8861-a33ea282b527",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bd37164c-b283-458f-bc28-63869ba5f0a6"
        },
        "item": {
          "id": "cadfc5f5-c3aa-4ed9-b94d-789967098b6f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e3bc8e5a-2088-40d1-b04d-705def6fbd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554f5f1b-5fa6-4a43-b694-d4b77440f13a",
        "cursor": {
          "ref": "0e79da5d-bac9-4a8b-8265-f23fe30a2190",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fd04abb5-0970-414d-a957-b9f81be742fc"
        },
        "item": {
          "id": "554f5f1b-5fa6-4a43-b694-d4b77440f13a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9c53bcde-fbcb-4e83-b98a-ffeac4cfeee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a596c8-f55f-46e0-b9d9-800cbaa3de84",
        "cursor": {
          "ref": "faeeb1de-1329-44c7-8bc9-d64c976cd422",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a559d1e3-f505-407d-88fb-940eb72adc6e"
        },
        "item": {
          "id": "76a596c8-f55f-46e0-b9d9-800cbaa3de84",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "64a3c025-1b5a-452b-b9e2-0b3560d4e696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88027ba-9d99-48c1-8f23-519766748cd1",
        "cursor": {
          "ref": "f5b56d97-8612-463f-af37-17d8913f51e0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0d42faf7-d560-4d92-80ad-08254436af89"
        },
        "item": {
          "id": "f88027ba-9d99-48c1-8f23-519766748cd1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cf1e5dbf-55ce-4d1c-b1d6-d15799a10195",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74574698-2901-46b4-8f9a-c7578ec35236",
        "cursor": {
          "ref": "a19df2e0-065d-4300-9491-feca7cbbeef5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a2c9fbcb-db36-41eb-b77e-aeeb5c3075ae"
        },
        "item": {
          "id": "74574698-2901-46b4-8f9a-c7578ec35236",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8f8ad43d-e0f0-4b80-b1b2-ef10e01d35e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fabe946f-f185-4e43-9cc6-e6cd3fbc5c09",
        "cursor": {
          "ref": "bdc17157-623f-48b9-9564-bae7d4003c9b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "85a9ae10-634c-47ba-a3bd-ca32be4c0020"
        },
        "item": {
          "id": "fabe946f-f185-4e43-9cc6-e6cd3fbc5c09",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d0ef1ac0-e592-436b-bd3c-d7c453001c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "90f2896b-f296-4d2a-a5c8-1787d2f226ba",
        "cursor": {
          "ref": "8cb0d568-78a9-4711-8ee5-5374afce8829",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "47886468-18dc-49a8-a8e6-7d5b5ff88d7c"
        },
        "item": {
          "id": "90f2896b-f296-4d2a-a5c8-1787d2f226ba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4db94498-0289-4f8a-a4cd-e64d4db3c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5d6f8caa-3c02-4c71-9f8d-500e36b03fbb",
        "cursor": {
          "ref": "e899a758-591e-49b0-931e-521515c3c700",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "04c13a7f-d9b1-4f36-bf9f-4439f68c53dc"
        },
        "item": {
          "id": "5d6f8caa-3c02-4c71-9f8d-500e36b03fbb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bbc0e711-6b31-4bca-a7c7-02f7ca43f535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f30506b9-e82d-4b4f-a8f2-663a1f03b6f0",
        "cursor": {
          "ref": "130ec061-ae2b-4a1e-bc26-5d41372a2bbd",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "744e7511-7486-4d09-91b8-dbe9ba46f060"
        },
        "item": {
          "id": "f30506b9-e82d-4b4f-a8f2-663a1f03b6f0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0dff0384-4a67-4b91-9f46-2ec82d87ead4",
          "status": "Created",
          "code": 201,
          "responseTime": 6295,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74948473-8ebc-4abe-afa3-d65499172172",
        "cursor": {
          "ref": "2e9d4cc6-1986-45c2-87ce-04f369ec267f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6a537afe-28e7-4a8b-bfac-0ba64126abc3"
        },
        "item": {
          "id": "74948473-8ebc-4abe-afa3-d65499172172",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bd28cfb2-d8b1-4222-bbe4-2c13cdbe6f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f9057a7b-4608-4293-ab51-56ac55c68ea0",
        "cursor": {
          "ref": "0a11df01-230f-4c83-aa36-e93eee55e308",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "115454b7-eac9-4869-8fea-bf147e2dab2a"
        },
        "item": {
          "id": "f9057a7b-4608-4293-ab51-56ac55c68ea0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f027cb6c-06b3-4791-82c2-6c82688cef33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "922fc667-677c-4900-994c-e25373005060",
        "cursor": {
          "ref": "7dab6501-e65b-46a8-b4c9-f6f4f271d361",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0c8eb3ff-e99c-438c-b4b5-cb296ec9c9a8"
        },
        "item": {
          "id": "922fc667-677c-4900-994c-e25373005060",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60b6462c-0f87-49c0-ab9f-0f22f8eb0360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35212566-2d73-4789-b50c-15f3d1342276",
        "cursor": {
          "ref": "e6c4deb5-0461-45eb-b242-2cb39694326e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59e5ff21-d269-46df-b5c3-66c8d6e3e189"
        },
        "item": {
          "id": "35212566-2d73-4789-b50c-15f3d1342276",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a6923071-7d66-44a3-acf8-d190523e1046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35bfa47-aab9-44b2-9c6b-7da96ac37f77",
        "cursor": {
          "ref": "6e64fce7-f4fc-40fd-b17d-db96b95957d8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "961dba7d-6b33-4ca0-8490-4862559dc523"
        },
        "item": {
          "id": "c35bfa47-aab9-44b2-9c6b-7da96ac37f77",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3a6910e-d74b-45fd-b11f-c3b1f499d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047777ee-b898-4320-8f4a-bf9e3660cca5",
        "cursor": {
          "ref": "40bf31ab-c9f5-4686-a04a-16147f5ca6a1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "39088818-78ad-4ef1-8364-db4f6dac5de3"
        },
        "item": {
          "id": "047777ee-b898-4320-8f4a-bf9e3660cca5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "06dc9d6c-b28a-4f92-93ee-52b16f30b6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87030b26-d862-4208-a54e-030c08b58558",
        "cursor": {
          "ref": "2994c57e-ec50-4210-ba07-5363227ec4f1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a7f0c926-ab4f-42a1-8f52-3430a85cce5d"
        },
        "item": {
          "id": "87030b26-d862-4208-a54e-030c08b58558",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ee978b00-0ac9-4093-b013-4a16a3fab618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1808b7dc-56ea-49cc-bf39-7b9311bb62a8",
        "cursor": {
          "ref": "a64b54f9-1d5b-4531-bd2f-ca41c3556512",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e7b638d0-82f1-423e-b94e-404866657247"
        },
        "item": {
          "id": "1808b7dc-56ea-49cc-bf39-7b9311bb62a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dca33119-d457-459f-9267-b495648a6353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ebd31c-8e9a-463f-b097-d2a8b6899214",
        "cursor": {
          "ref": "b24fc6e7-c155-4cf9-bac8-1dc2efd922fc",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9661b65a-7061-4937-9dec-4dfae57724f0"
        },
        "item": {
          "id": "06ebd31c-8e9a-463f-b097-d2a8b6899214",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3248f1d1-6426-4b0a-ad2d-196157e84e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0cd926-83b1-4734-b7c2-1bd876155d27",
        "cursor": {
          "ref": "cd1198a0-a76b-4924-a591-3ce22b57040e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c2a7678f-9128-4f77-ac06-870f32ec536d"
        },
        "item": {
          "id": "7f0cd926-83b1-4734-b7c2-1bd876155d27",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7754d818-abae-4020-94fd-5acdefa85deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c472ef8e-029b-4b5e-8209-fbb083ce824c",
        "cursor": {
          "ref": "2b836f2a-b703-4b7e-913a-3b5d82f07b83",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3816cb01-d83d-4d74-97ef-694fb8b505de"
        },
        "item": {
          "id": "c472ef8e-029b-4b5e-8209-fbb083ce824c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5cca6395-ba11-40c1-a88d-12790da571b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319db592-5913-4146-9bae-eea00306ca17",
        "cursor": {
          "ref": "967058d7-04f9-4bd9-b3c4-b702b0051330",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f255a123-65d5-4873-ab94-475a71f093f4"
        },
        "item": {
          "id": "319db592-5913-4146-9bae-eea00306ca17",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "32867a59-bd2d-481b-a380-9e02830a8472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e4185a-1afa-482d-a2f1-915c48b9a207",
        "cursor": {
          "ref": "d20eb5ac-c4b3-4060-908c-c29452a646c1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1d376890-4997-4183-ba17-99b703a8895d"
        },
        "item": {
          "id": "d0e4185a-1afa-482d-a2f1-915c48b9a207",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c93d0137-6f28-41a8-a0fc-47e721e00112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b8eeb6-ee71-49c4-8daa-50e3306b97ad",
        "cursor": {
          "ref": "ea7b5d30-4a0b-4a60-a650-e460bb7336dc",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "382a8a42-0c4e-4036-802f-4bfba38a8680"
        },
        "item": {
          "id": "c0b8eeb6-ee71-49c4-8daa-50e3306b97ad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "319851f5-7990-4b9c-8986-ef2b8560e1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080c7f91-b670-4617-8168-c3cfaaa9e0a9",
        "cursor": {
          "ref": "20d0eaff-fcf6-4de6-9ca3-d22a603b0d49",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4b0da487-6670-444c-a388-7c529d392f62"
        },
        "item": {
          "id": "080c7f91-b670-4617-8168-c3cfaaa9e0a9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "80240508-2588-4037-b21f-df81036ee132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e919af9b-2778-4b33-82f7-26b65e665c71",
        "cursor": {
          "ref": "a51d2d7d-61c9-4f20-ad5f-c88b34c7ff2c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6ada11a7-585e-4dad-8154-a62edc3625a6"
        },
        "item": {
          "id": "e919af9b-2778-4b33-82f7-26b65e665c71",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0cc5578f-dc67-4bd9-8fda-50f697ab8d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dacb5d-db8c-44ad-9b46-d57584b2ba88",
        "cursor": {
          "ref": "d651bbf9-a3ac-403b-a15d-390bd3460f8d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bae1e4cb-1fd7-442d-ad22-956ea39dab63"
        },
        "item": {
          "id": "99dacb5d-db8c-44ad-9b46-d57584b2ba88",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "130a8473-9172-4800-8ea8-bc3c0f106740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63948e5-ecb1-4daf-8ef1-fa19dce648f6",
        "cursor": {
          "ref": "e15244d3-d7b5-45f1-bfb6-8cfceabd6cb4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5513f045-dbea-4945-8334-de4db53b9884"
        },
        "item": {
          "id": "d63948e5-ecb1-4daf-8ef1-fa19dce648f6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7dfc31db-9ead-49b8-93a1-0c21cac9ab2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3fe816-3eb3-41ac-be8a-49cc3e140aa7",
        "cursor": {
          "ref": "3d0461a7-a3f5-4394-a488-56d258a8ed70",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8e6a2a31-9416-43ca-87b2-55ab7366623d"
        },
        "item": {
          "id": "2d3fe816-3eb3-41ac-be8a-49cc3e140aa7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f57c48ee-15ef-46ae-9f65-d2300eb2ea15",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f99f5abd-75d8-4908-ac1c-e8ec9732044d",
        "cursor": {
          "ref": "6bd4b4e8-d651-4c7e-9710-bf3a20135eeb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b624f6e5-1623-4b28-8942-6cee937f0924"
        },
        "item": {
          "id": "f99f5abd-75d8-4908-ac1c-e8ec9732044d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17d05a3f-d5b5-4471-b2a5-2f6941cabfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3ffdc3-2ef9-48c7-9fdb-2366d1b05d38",
        "cursor": {
          "ref": "ceefbe78-ccdb-44c5-a4b3-7f2d96070897",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "378cb766-d678-40db-864f-32bffe885708"
        },
        "item": {
          "id": "cf3ffdc3-2ef9-48c7-9fdb-2366d1b05d38",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dbb3ca07-4aff-4bc1-ac85-b43bd49dd326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54e6932-6d37-4a77-9a1a-7234a6afd223",
        "cursor": {
          "ref": "98b7667b-e784-4bde-9b49-62e30048026f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "40e7edb1-155a-42b1-843d-97767478840b"
        },
        "item": {
          "id": "f54e6932-6d37-4a77-9a1a-7234a6afd223",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ad46e2f-54d8-4ee5-b693-374304291221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523012d0-39f5-4e2a-8c64-0a2140981124",
        "cursor": {
          "ref": "810d58f7-df0b-4955-80da-58612cf1d814",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e1e7eccc-d772-4a66-b4f0-6a68149ea31e"
        },
        "item": {
          "id": "523012d0-39f5-4e2a-8c64-0a2140981124",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8fdc2cea-ee15-431d-9c07-0d03d71be2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f353d34-132f-4362-a3d9-6e8b88473720",
        "cursor": {
          "ref": "bb270024-a4e2-4b9f-9602-32c212a641db",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d7569de0-6ae1-4bff-b26f-220c8b899b1e"
        },
        "item": {
          "id": "9f353d34-132f-4362-a3d9-6e8b88473720",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "00a8eead-4552-4b50-8485-dd56e197d3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898fee94-bb57-474f-b0ec-39e0800e85ca",
        "cursor": {
          "ref": "19610290-da48-48a8-9dd4-3dbde45cfc7e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1a6dab73-ca5c-43fc-96a5-9b90e544e60c"
        },
        "item": {
          "id": "898fee94-bb57-474f-b0ec-39e0800e85ca",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6347c2a9-71f4-4be1-96bd-c1e0415a0567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52337d4-26c3-4a77-9278-78d59f025f1d",
        "cursor": {
          "ref": "b2fe1987-66ee-4356-8e58-57f98f738a02",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "710d04ca-f345-42e6-a8f7-70b063c623f9"
        },
        "item": {
          "id": "c52337d4-26c3-4a77-9278-78d59f025f1d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "859eca4b-5081-4855-b9cc-551ec068dd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b641d49-fdc8-4fdd-b58e-ce5546631fd1",
        "cursor": {
          "ref": "6d764027-4319-4b3b-864f-e33e75a46d70",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4f3c8efb-403e-4e33-9d19-6bc564a89e78"
        },
        "item": {
          "id": "7b641d49-fdc8-4fdd-b58e-ce5546631fd1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "284fce6b-2a05-4b60-a5f9-a63c10d70ea1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2c82ae7e-4b25-4b48-8a1f-1b81254ea451",
        "cursor": {
          "ref": "960c9447-1300-43b5-936b-6e68e732bcff",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "464fbb4d-befd-44e2-a920-220e1bf401c6"
        },
        "item": {
          "id": "2c82ae7e-4b25-4b48-8a1f-1b81254ea451",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d54eaf07-cd44-4acb-825c-eb67131e5a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826f7078-22db-44fc-b639-79bfce78b119",
        "cursor": {
          "ref": "4f126a65-8e4b-4916-8cab-7f1e2b3f2117",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "66f2805e-222f-4966-a553-d3b7fb65083a"
        },
        "item": {
          "id": "826f7078-22db-44fc-b639-79bfce78b119",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c5f9b8fe-05e7-4f79-860f-6156c72e04d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d68754e-f7e5-48dd-81ac-293341cd1784",
        "cursor": {
          "ref": "c03fae3a-5c5d-4e28-91d4-e48b679425c0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1f6c7a3d-e4d3-403e-88b2-fadbbec3c68c"
        },
        "item": {
          "id": "8d68754e-f7e5-48dd-81ac-293341cd1784",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "261b9342-97de-45aa-a34e-dbac5c6fb40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801877e8-500f-4280-91ee-4032a5a23848",
        "cursor": {
          "ref": "649144d7-95ac-4014-a143-43798098b6ea",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b464409e-38a6-4239-af51-a74fa1deed47"
        },
        "item": {
          "id": "801877e8-500f-4280-91ee-4032a5a23848",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f0c1ae23-077f-433d-87ff-118072e7e1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7c14e6-251c-4498-adef-61e95969cb9b",
        "cursor": {
          "ref": "df0feacc-6310-4a1b-839f-eb6c791e3537",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b547aab2-7323-4816-87ea-e28c0832a68e"
        },
        "item": {
          "id": "4f7c14e6-251c-4498-adef-61e95969cb9b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "916e0ba8-4f7b-49f2-91ba-d41702c5f209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c47a57-7d61-44a1-baff-806dd65b7442",
        "cursor": {
          "ref": "864a35b9-13f7-4b8b-8798-6a0c0d5e9ba2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "97091328-f71e-494a-b19e-c1e484603ad6"
        },
        "item": {
          "id": "29c47a57-7d61-44a1-baff-806dd65b7442",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5ba35062-f638-479f-82cd-94295d8315e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f01498b-260d-4bd3-8bd2-dbed7ba25afe",
        "cursor": {
          "ref": "568f1832-10b3-4e2e-a77a-52963d8f096f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ce7ff5c1-f7de-4fa4-9734-a2b1facc9e31"
        },
        "item": {
          "id": "1f01498b-260d-4bd3-8bd2-dbed7ba25afe",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "39b5b165-f23a-4d1e-bda2-0663d644862e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ad36481a-3b98-4da3-951f-de551a566b8f",
        "cursor": {
          "ref": "86a276cf-f908-42ec-b203-90114d5a0541",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b49a206b-8f81-48b2-9b09-30c718691d1e"
        },
        "item": {
          "id": "ad36481a-3b98-4da3-951f-de551a566b8f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "17b8b86b-c418-48b9-9960-a0c27945eb48",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0ccdce77-ea12-4d61-93a2-7f37d7aa3e89",
        "cursor": {
          "ref": "66801efe-37a7-4868-b95a-35e7b5b864fb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "533423a9-cd05-4094-b48c-5487f6595851"
        },
        "item": {
          "id": "0ccdce77-ea12-4d61-93a2-7f37d7aa3e89",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "30883bff-ddad-4ff7-a14d-ea387209e939",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "86388809-c354-4fd5-b228-39c48a81fa85",
        "cursor": {
          "ref": "2fd9d757-91e0-4e06-8825-c64cb8cac5ee",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2ed0a38b-d9ea-4a4c-985c-58aa3a33f8c3"
        },
        "item": {
          "id": "86388809-c354-4fd5-b228-39c48a81fa85",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cf9fcfef-d3b0-44eb-959b-a8c667147ac3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "462e109a-2812-4257-9d28-92d03e00adbe",
        "cursor": {
          "ref": "6c6b0bc6-dac1-4e18-8f35-59273627dcfc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e437f472-c7e6-432d-b26e-327100598fe9"
        },
        "item": {
          "id": "462e109a-2812-4257-9d28-92d03e00adbe",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "000ee2f3-a859-444d-a064-338c84e83889",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d25e8415-3ba4-492a-8fc5-1bd3aba61635",
        "cursor": {
          "ref": "fd9cc275-4800-4077-8148-ef07ca011f5a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1ed0b823-ef1c-4d20-a9ed-eec64670ca22"
        },
        "item": {
          "id": "d25e8415-3ba4-492a-8fc5-1bd3aba61635",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "19c2cb83-0e1c-46e7-abbe-e1b9e5657514",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fa763a8b-431c-4818-8f67-9b516672c70a",
        "cursor": {
          "ref": "875a2ec7-61b6-44b0-81c7-d57400c688af",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e7d63600-4245-4fd6-9db0-fad7a783adbf"
        },
        "item": {
          "id": "fa763a8b-431c-4818-8f67-9b516672c70a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b382580-23b6-4fee-898b-780e0847eaba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499da561-5c9f-425c-b5a1-f4f33e3c60a2",
        "cursor": {
          "ref": "f00314f4-e7b0-49eb-b7f4-08d02a719fb6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2e0a3f8b-b370-4d31-b48d-250a99bd85a0"
        },
        "item": {
          "id": "499da561-5c9f-425c-b5a1-f4f33e3c60a2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "966d98a0-bafe-4d92-9461-82d03a67059a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d4fbc2-02c2-437e-8617-49f6913f899b",
        "cursor": {
          "ref": "932880f4-336c-4b3d-a601-a24078ea0932",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c91a2c96-c8b8-479e-b221-4237b8c93d52"
        },
        "item": {
          "id": "61d4fbc2-02c2-437e-8617-49f6913f899b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "35d12ad2-5398-418d-ae1b-c3e517a032c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802ed744-b0cb-4423-9f9f-ede0c79bc902",
        "cursor": {
          "ref": "405ce659-8bfa-4ed6-b51a-77ec161a43de",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bb4043ba-7513-4c96-9b0b-0d354e95f5eb"
        },
        "item": {
          "id": "802ed744-b0cb-4423-9f9f-ede0c79bc902",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8f089a44-9b30-45bd-b5d2-c28146c96917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c372da3a-625c-4534-b535-0a395eda3ab7",
        "cursor": {
          "ref": "0c4bf17f-5bfd-4e75-92e2-07850ee5a27b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a764da3-f39d-469a-967b-a15b1ad1fb17"
        },
        "item": {
          "id": "c372da3a-625c-4534-b535-0a395eda3ab7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "244976f6-1080-493e-b01a-4aef620e70c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca453a97-ef5b-4262-a9a8-76470f6b29c2",
        "cursor": {
          "ref": "4c28afa2-0047-41a5-b347-181f62e2201a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c2015b7a-cd34-42ac-b151-d6df0f6075bf"
        },
        "item": {
          "id": "ca453a97-ef5b-4262-a9a8-76470f6b29c2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a04ce816-1123-483c-83c2-c58309b09c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96084700-7052-4056-b324-6cb9357b2d5c",
        "cursor": {
          "ref": "db0341f1-3b56-4f4f-9aca-db930fc1469a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "023ef45f-fcdb-4234-85c7-f3ad82dc9edf"
        },
        "item": {
          "id": "96084700-7052-4056-b324-6cb9357b2d5c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "57614a0a-76a6-4261-87f5-5fe50fcd6071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98815e5-7a19-4805-b0c8-c711bc7912ca",
        "cursor": {
          "ref": "5f00d570-e1cd-4f1d-8326-dead9d568844",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fc9db8de-3b05-4b1a-ab4c-60efb28be6d3"
        },
        "item": {
          "id": "d98815e5-7a19-4805-b0c8-c711bc7912ca",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ec2ed80a-40e0-4c61-bab7-30e79164e80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faa5440-71f4-44e8-9f63-06981062f3ca",
        "cursor": {
          "ref": "d3b3737b-1295-4091-98c7-3380ec7b8902",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "52309bdc-e4a5-4786-903e-1e9dba88c4d8"
        },
        "item": {
          "id": "1faa5440-71f4-44e8-9f63-06981062f3ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d153a505-5d0a-42f5-a553-c035305ab789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b5a76d-15bb-4149-a52a-39271aced9a6",
        "cursor": {
          "ref": "581602a6-5eff-4934-889d-b1d416d5db92",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4426e90a-98df-4f46-97ce-9c62633a1227"
        },
        "item": {
          "id": "49b5a76d-15bb-4149-a52a-39271aced9a6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "978cbcfd-c998-451d-ae34-8193f7082ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0e09b3-9436-4fee-a35d-f547e645d2db",
        "cursor": {
          "ref": "9bc4b465-7abf-4ac5-9cbe-9bffae78284a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b3e97f7f-36b7-4024-b283-24f1553382aa"
        },
        "item": {
          "id": "fd0e09b3-9436-4fee-a35d-f547e645d2db",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0d74b4d3-6355-4d03-9c10-69ed774a84e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc7c3d3-5c74-40b1-b7e1-0f95db953c7a",
        "cursor": {
          "ref": "202a7c0f-ce10-4595-aa93-af976abe16bb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "36896a59-1f0f-450e-857b-2dd6d75c3c07"
        },
        "item": {
          "id": "3dc7c3d3-5c74-40b1-b7e1-0f95db953c7a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6efd8869-74e7-404e-8ef6-2a255872eb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526804c9-12f7-4fbe-8c01-93b569d62252",
        "cursor": {
          "ref": "0a1f66eb-648f-4607-bead-a51046ea4358",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "946c3a69-1255-4338-8a0f-d3fd026c3bde"
        },
        "item": {
          "id": "526804c9-12f7-4fbe-8c01-93b569d62252",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ae61a5fd-bca5-46ef-8f5b-778114999cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201d1d6b-bf68-4304-859e-172b9153459b",
        "cursor": {
          "ref": "2277b0bd-4722-4c64-8568-1af7805a3db5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f2c7e834-e3d8-461e-803d-c1bdd53044c2"
        },
        "item": {
          "id": "201d1d6b-bf68-4304-859e-172b9153459b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "246e745a-f730-49cd-9b83-380e37958a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dbf232-fc96-478b-90b2-d9ff13b291fe",
        "cursor": {
          "ref": "5a14af65-84e5-4ab8-8ce9-826cba58acf5",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "03473dfb-17e0-46e2-897b-fa8c5aa59e0d"
        },
        "item": {
          "id": "38dbf232-fc96-478b-90b2-d9ff13b291fe",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "145d9ac6-b31c-4b99-9050-14e19fd0df15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec4eb77-fa09-4c13-9167-64ff88781ce1",
        "cursor": {
          "ref": "b3e85924-22ea-4a58-9ad4-5b772e4ac20e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2f4db6a8-a6fa-420e-a9de-ae6f937717e5"
        },
        "item": {
          "id": "6ec4eb77-fa09-4c13-9167-64ff88781ce1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b8428fb3-c997-481f-9d8f-3cd7e802394c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b28176b-11a6-4fb0-a58c-4f21a7113f9f",
        "cursor": {
          "ref": "4af1a167-fd20-4c7d-a866-1a9015fd2663",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9da4e297-c41f-461d-aebd-bebe06072c74"
        },
        "item": {
          "id": "4b28176b-11a6-4fb0-a58c-4f21a7113f9f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eec80271-5d91-4255-9f90-db19d71c31e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfbf133-9b02-4b33-9c0c-e36e2ba70f92",
        "cursor": {
          "ref": "241e38e4-406d-440e-9559-a4bfdc615a05",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "73ac9319-6015-4b9b-8eae-f6997673082d"
        },
        "item": {
          "id": "ebfbf133-9b02-4b33-9c0c-e36e2ba70f92",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d94365ff-76cb-4561-81a6-84cbc559e766",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "20fd1c62-0905-4baf-b80e-d6e81a530eaf",
        "cursor": {
          "ref": "b4db9f81-aa12-45dc-91f7-9d1df491f1d8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e8f1b9e1-0d32-4dd3-87b8-1913f637246f"
        },
        "item": {
          "id": "20fd1c62-0905-4baf-b80e-d6e81a530eaf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "94f3d2a5-42e7-43c3-9445-10ec39f33c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409eef6a-29ca-492f-b14d-903fc14add55",
        "cursor": {
          "ref": "7ab911d0-9ad5-4eac-b4f4-7293955668e4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b05a5846-b5b2-4cd1-bb90-6717e45b3bd4"
        },
        "item": {
          "id": "409eef6a-29ca-492f-b14d-903fc14add55",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "10f46f95-b86a-4f82-ac28-df1effa673b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650c03c2-6894-4aa4-b1d3-6b0327b5cbbb",
        "cursor": {
          "ref": "2f4798ee-8205-45a9-a647-ebc8a5a4620c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9edf6c28-fc8b-4b22-8516-4e8c8e35d1be"
        },
        "item": {
          "id": "650c03c2-6894-4aa4-b1d3-6b0327b5cbbb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e8206591-200e-47f7-8dd1-f95489976671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45669726-6e17-4ace-ba31-0c9a46e6027c",
        "cursor": {
          "ref": "49a6cfa2-65dd-407e-8774-cfa2721fca23",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "337eb7f0-aae7-4d8c-8ae2-d6d94f8350aa"
        },
        "item": {
          "id": "45669726-6e17-4ace-ba31-0c9a46e6027c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2b5cf13e-9277-47f6-b797-f98cd5a4f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b9e6aa-5d92-42aa-916d-4598a16039cf",
        "cursor": {
          "ref": "188962df-7787-4fea-914f-de6e38717648",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "108de844-2b1a-457a-b07a-1b71d1e0a2ff"
        },
        "item": {
          "id": "34b9e6aa-5d92-42aa-916d-4598a16039cf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "39db8eb2-dc6f-4b95-9d34-074f8300ea40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a24eba-04c3-4324-85da-3d2c39c76473",
        "cursor": {
          "ref": "9d3bccce-69fd-482a-88d6-0014ad28812e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b1b4c54e-3451-4d5c-9696-f56f88f2fdac"
        },
        "item": {
          "id": "c3a24eba-04c3-4324-85da-3d2c39c76473",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "018f2bb4-8a6b-4010-b852-33431be061e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe517bd-a7af-40b1-84c0-6bb8cd3d8c58",
        "cursor": {
          "ref": "0fa8bcb8-0097-4975-a1f8-240a54eb7d2e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1d7f7a4e-3589-40e5-98f6-7712878079da"
        },
        "item": {
          "id": "3fe517bd-a7af-40b1-84c0-6bb8cd3d8c58",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7c33da3c-1627-41bd-b214-8a68ae089176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca18a4a-4ab4-4f24-85d3-bffc1ccf31e0",
        "cursor": {
          "ref": "c9c59822-c399-461b-9f17-5718a8fbcc9a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7cf2447b-5b88-4bba-8fdd-89d40f6444a9"
        },
        "item": {
          "id": "0ca18a4a-4ab4-4f24-85d3-bffc1ccf31e0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6d3dbfdc-c02d-47ff-8224-57d7e261fdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207a30a6-7519-418c-91ea-84f8e0dd31f5",
        "cursor": {
          "ref": "1fdeffec-1556-4980-93f2-f0b9eccbccf2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7794aef1-9e54-48e1-afa1-35d277e36c18"
        },
        "item": {
          "id": "207a30a6-7519-418c-91ea-84f8e0dd31f5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "155399c5-498e-4f03-89c5-9574fea52319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1da94c5-bf49-432a-b183-3145fae9c2e6",
        "cursor": {
          "ref": "780cfabc-6896-405d-92d3-1eb06054de77",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ca48a13b-342b-4d5a-ae4b-af695240acf6"
        },
        "item": {
          "id": "f1da94c5-bf49-432a-b183-3145fae9c2e6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "80fd14e4-a363-4a32-a4e5-4ab5df34b78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6b956f-6e9e-4447-984c-02dad20b18cf",
        "cursor": {
          "ref": "2f44e0d1-f27a-4b11-af64-d5988c35be41",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "83f720b3-9948-40ae-aad2-cbeea685ec34"
        },
        "item": {
          "id": "6e6b956f-6e9e-4447-984c-02dad20b18cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "87764518-f483-4525-9f79-64faaa3d4bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d63a62-22ac-407f-a401-2ad64b919d08",
        "cursor": {
          "ref": "45f167cd-917a-4abc-9941-20d7ee4e9bbc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "51b20e61-76f7-47d0-a8f9-352e00f58f8b"
        },
        "item": {
          "id": "91d63a62-22ac-407f-a401-2ad64b919d08",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "44ed4e3e-54cf-48cf-a115-2d81ec83f2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb07214-a8e2-4ea5-abc3-5d2123b2aac2",
        "cursor": {
          "ref": "7a8c0260-e053-4763-9b1a-deeefd7b91af",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f82555a8-bf53-4b7f-8ec0-ed3f3a1ab916"
        },
        "item": {
          "id": "4cb07214-a8e2-4ea5-abc3-5d2123b2aac2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c653ed4b-fb7d-4ab7-a0f2-bde263cc5d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2fb74f-bbdd-4f17-9f5d-65c1a23d3431",
        "cursor": {
          "ref": "aa571415-fc2b-4cff-b9d3-090e2f2544ac",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9095935b-4dfc-4016-a094-f39287e7ee46"
        },
        "item": {
          "id": "6a2fb74f-bbdd-4f17-9f5d-65c1a23d3431",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c738910f-5cbd-453a-86d2-b917ab1208de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe324e3-119a-4a63-9a5a-6d5f4a16e9bc",
        "cursor": {
          "ref": "30715389-b1ec-405d-b201-f8fd799953f4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "32e41007-cfae-4c8e-8894-aedf401522a1"
        },
        "item": {
          "id": "bbe324e3-119a-4a63-9a5a-6d5f4a16e9bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6ff393e7-dab3-4e37-a49c-813f55e78058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f779e0-89cf-4b7e-9484-e4436d7a50b9",
        "cursor": {
          "ref": "05feb484-8db6-4b7a-a1ad-b444b8e35102",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b7e1d824-eb22-4bba-a44b-c6df810d3219"
        },
        "item": {
          "id": "f3f779e0-89cf-4b7e-9484-e4436d7a50b9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "48645c9e-2f44-4246-809f-7bac5f28519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e3ed2d-28fb-40f6-97ae-3bd316c51838",
        "cursor": {
          "ref": "adb4a2ec-8e9a-485f-930d-f52f842405fd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c0da785b-046f-40e4-8933-1ede5856888f"
        },
        "item": {
          "id": "05e3ed2d-28fb-40f6-97ae-3bd316c51838",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "09ebe880-6b92-4898-945b-da55fc7f7d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8c83f9-15c6-468f-bb80-529b315989fb",
        "cursor": {
          "ref": "be78fba1-07ce-4bc2-a698-62c96dab53da",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eac47037-8f6a-419b-a486-399be2f0e0a5"
        },
        "item": {
          "id": "0a8c83f9-15c6-468f-bb80-529b315989fb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "030469a6-c8a4-42fb-9e44-4a822e751000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f17bc3-bfb8-40be-93bf-1fb67bda1f2e",
        "cursor": {
          "ref": "e9a871d7-86e5-4b94-8b3d-d7d8a7a76248",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5bbc3771-f55b-423d-b62f-7771b84b70e6"
        },
        "item": {
          "id": "42f17bc3-bfb8-40be-93bf-1fb67bda1f2e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "47d8f678-e04e-489d-ac68-e645916d0a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2dd96b-c661-4b96-9ea4-a12a46a7889f",
        "cursor": {
          "ref": "b7b1d916-dc6a-4eb9-9af1-d6139c4993b0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3d3a2fdf-e0fa-49ea-9a35-5b7ca86352bf"
        },
        "item": {
          "id": "4c2dd96b-c661-4b96-9ea4-a12a46a7889f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3187bcc9-ae47-4760-a0f7-ece22d3f0906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56aae55e-6b68-4f21-8fd7-6b792d76ae46",
        "cursor": {
          "ref": "e9e895b2-2532-49f9-add7-108989dccad7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3b59e369-f991-47b9-b0c9-93a548392a55"
        },
        "item": {
          "id": "56aae55e-6b68-4f21-8fd7-6b792d76ae46",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "25c2b622-5c0e-4bd5-9857-fce5c0c6301d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2535a1f2-c85d-4618-8dbd-3f4788825ef1",
        "cursor": {
          "ref": "796a79fc-fbe4-4841-a510-bd808fb67c10",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "65dbb686-f714-4e32-9ed7-5970c09fdc69"
        },
        "item": {
          "id": "2535a1f2-c85d-4618-8dbd-3f4788825ef1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "08bc4634-30e6-4352-b90d-7e81a6d4ba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f7d07f-4f43-43e5-b1ec-6f36259be1c0",
        "cursor": {
          "ref": "f8ad9da7-b3b5-42e5-b36b-3dbeef5757c7",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fe59d5e7-a2d3-4dd7-a265-07c4d1c9ddd4"
        },
        "item": {
          "id": "a2f7d07f-4f43-43e5-b1ec-6f36259be1c0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5bfdd36c-9f74-43fe-98de-6ccd9a3fcaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48afb32-8785-428c-b4a2-eca0f716c116",
        "cursor": {
          "ref": "6587cc64-7255-4c8b-b3ce-27f4698cd08d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5610b6ac-f3c3-474c-b066-4bdcd6dab1b1"
        },
        "item": {
          "id": "a48afb32-8785-428c-b4a2-eca0f716c116",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8f1b544c-8bbd-4501-b74c-8745c1c00100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39be83be-4f24-42ef-9a6a-b10da6348b4e",
        "cursor": {
          "ref": "aec87b3b-2012-4e6a-bb44-c1c8ce8dd9e1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "30cb3fe6-6137-4914-8a95-b3692af2fe32"
        },
        "item": {
          "id": "39be83be-4f24-42ef-9a6a-b10da6348b4e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ef194744-809a-4a12-a66f-ed9dbdb0e4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13940c02-215b-4dc7-ae05-02f2a1070747",
        "cursor": {
          "ref": "cf6c3cfe-cd3c-40bb-9109-e8a18745be7e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "12bac6bb-0fc2-4b11-8917-1292fd76cd98"
        },
        "item": {
          "id": "13940c02-215b-4dc7-ae05-02f2a1070747",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "97f14633-f9d6-4729-a93b-dc3e6426c45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5672175-eed2-4846-a031-1e1ae6cc5597",
        "cursor": {
          "ref": "27001016-c12c-4365-a552-ff5c0f3b5923",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "501077bb-ed76-49af-a406-500e8cfbb811"
        },
        "item": {
          "id": "d5672175-eed2-4846-a031-1e1ae6cc5597",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d2cd5b82-31c2-4b72-b60f-23a4ce9a8882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5c0853-2623-4641-8b6f-294cdf7f17f1",
        "cursor": {
          "ref": "52059710-3a9b-43bb-937f-f27f52305f6b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d1139466-c8e9-4bcb-b41b-4c07fcc942da"
        },
        "item": {
          "id": "8d5c0853-2623-4641-8b6f-294cdf7f17f1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d1d80df0-4659-4ef5-9603-609f5e56565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e453d708-9c70-40cc-b9d6-45fb0d17a8a9",
        "cursor": {
          "ref": "7a80339e-2cd2-4b4d-89e9-5d988f46af82",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d6fd8f53-c3c9-41a7-bb41-89d81d1d30e2"
        },
        "item": {
          "id": "e453d708-9c70-40cc-b9d6-45fb0d17a8a9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "71e4a0fb-6b4b-4b6b-be64-ee37caedafe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a3e2d0-8708-4f36-9f21-ac5d82b5f69e",
        "cursor": {
          "ref": "d8bbfd94-bd77-4564-b37b-c29a387db88f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3ac993c8-da11-4a28-8197-dad9951e90ad"
        },
        "item": {
          "id": "29a3e2d0-8708-4f36-9f21-ac5d82b5f69e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "29f4c64a-6d1b-4f0e-b67a-ca00acba0b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827ddaf7-4619-412d-ab6a-812afcc4cee9",
        "cursor": {
          "ref": "c2286957-7fa1-4c89-bd0a-2914cf1b2af8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7cbd9da8-dd39-4656-8dfb-e76de3815936"
        },
        "item": {
          "id": "827ddaf7-4619-412d-ab6a-812afcc4cee9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3f26477a-cfc3-4bd1-8076-594d12ed4cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416e4439-0517-4f50-b13c-ed9d98b33aad",
        "cursor": {
          "ref": "5d36a3ea-ab15-4b1f-a043-932caf0967e0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ee82527-f507-4ea1-a1c2-6b3d93d20c2d"
        },
        "item": {
          "id": "416e4439-0517-4f50-b13c-ed9d98b33aad",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "93a65b1c-3b98-42a4-883b-7fa62ce69154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2cfdf8-8abe-4547-8afe-a27d0facb5a8",
        "cursor": {
          "ref": "1988356e-6cba-4daa-b21b-8a74136f7591",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0702d1d0-6f0e-4399-8781-595f12a1cef8"
        },
        "item": {
          "id": "1d2cfdf8-8abe-4547-8afe-a27d0facb5a8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "70b86a93-6cab-4752-a839-b064c70deb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca13786-dfce-4ab6-9ac4-c4428e95ce45",
        "cursor": {
          "ref": "786577ff-b075-4dbd-a996-c9e92d5ffd64",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7776e078-b204-4a93-86f2-081d5b90dbf8"
        },
        "item": {
          "id": "2ca13786-dfce-4ab6-9ac4-c4428e95ce45",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fa222967-7d65-4217-877c-2ad7ed67d49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e8562-1113-4c9c-95c0-a2ed27a1a26b",
        "cursor": {
          "ref": "2020d90e-9c43-498f-bdb8-65611313d37d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7b4982f1-3791-40d2-8a37-288fdf9fbcd1"
        },
        "item": {
          "id": "8b9e8562-1113-4c9c-95c0-a2ed27a1a26b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b7e60b0f-0f7a-4bcd-934f-0e1efeab3f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a957d0a-f481-46d7-9d8c-6b7003d22307",
        "cursor": {
          "ref": "b6d012bd-1c7a-4ee7-a6e9-2ee0616521a4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "52356923-43d2-4f87-9867-48aad9d1e37f"
        },
        "item": {
          "id": "0a957d0a-f481-46d7-9d8c-6b7003d22307",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e977f6eb-d4f8-4c39-a6b1-39469d6d066c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf273095-ec73-4222-9783-1ae3fd36a585",
        "cursor": {
          "ref": "2de1c04e-7344-425b-b42a-776998c4e89e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3e97476c-0c21-42bb-8c74-f1967d6cff78"
        },
        "item": {
          "id": "bf273095-ec73-4222-9783-1ae3fd36a585",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f92c7495-fabc-4ab6-b26c-b231a6f4023d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933612e6-61d3-40d7-a5fa-f6fe2acda3b8",
        "cursor": {
          "ref": "fffec1d6-588d-4b30-bae0-34aa864d9cfd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1a6d4b98-2ea6-4db3-a26f-d5abb00e6b53"
        },
        "item": {
          "id": "933612e6-61d3-40d7-a5fa-f6fe2acda3b8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "727a5790-e8a1-4f4d-a377-42abf6cdeaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a29b49e-d3f1-4131-b9ab-eafda260759c",
        "cursor": {
          "ref": "0ae8214a-354a-4482-ba1e-9cf527bef2cd",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2b806a50-fd8f-4c1d-8e96-c6136b87484b"
        },
        "item": {
          "id": "5a29b49e-d3f1-4131-b9ab-eafda260759c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14f8f02c-0fe0-4d53-a9e7-5b7e3481a868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bf65c0-e704-4f22-b342-cb1f127baf60",
        "cursor": {
          "ref": "f95a6df0-8a36-4506-b501-15f82fbb9225",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4c43c1c0-cc70-4ee0-93f5-1bded1911092"
        },
        "item": {
          "id": "e2bf65c0-e704-4f22-b342-cb1f127baf60",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "698d6886-ac0a-4ea3-a50e-e3a75e1957a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f14257-6270-4e3e-9b6f-dc8910980f27",
        "cursor": {
          "ref": "fd0ac235-55b3-4af3-a9e1-910907b6b3c9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dfbc70c3-1107-4c8f-91b8-77f8a6eaf464"
        },
        "item": {
          "id": "97f14257-6270-4e3e-9b6f-dc8910980f27",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b57099aa-9138-414c-871f-0cf488df0049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153edf82-2833-4c90-890d-c5fc5160680d",
        "cursor": {
          "ref": "e5416b60-007b-48a1-9e92-38a38d17cb86",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aee57d74-e3c3-4a4a-a9a4-295a54e7e68d"
        },
        "item": {
          "id": "153edf82-2833-4c90-890d-c5fc5160680d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f696c490-0546-410b-9ef4-8abd7f165888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1802da-0a9e-41dd-8e5e-d932cae6a75e",
        "cursor": {
          "ref": "ef8aa83b-8a40-4c65-9d54-cfa9c8656cf8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "818764d7-d301-43a6-b7dc-21785e9781dd"
        },
        "item": {
          "id": "7e1802da-0a9e-41dd-8e5e-d932cae6a75e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1befd201-6b56-4f4f-be10-822342414c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1405d77f-3dce-48c3-bb06-f509fc8d6f31",
        "cursor": {
          "ref": "3e71a308-58b9-4509-b491-d46dac505507",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "456e48c5-1ca5-426d-8a8d-56ce3b3bc7a2"
        },
        "item": {
          "id": "1405d77f-3dce-48c3-bb06-f509fc8d6f31",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2aa277e4-733b-401c-9f18-66f89bb2e2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d19d921-6791-458a-bc31-1735455403b6",
        "cursor": {
          "ref": "5377c935-87c4-4090-8c3b-5ef7a3a88f62",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "64980a61-889e-478e-af33-e0cc8bccb674"
        },
        "item": {
          "id": "0d19d921-6791-458a-bc31-1735455403b6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e493c354-3fdb-4f8e-a25e-3456775c227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcbba03-6a56-4575-8d68-511e2aaf4696",
        "cursor": {
          "ref": "4d95121b-6d0c-44d7-8f98-7793deb2a585",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3b00cc78-e022-4f77-87e0-9f6ff668cd16"
        },
        "item": {
          "id": "0fcbba03-6a56-4575-8d68-511e2aaf4696",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d23ce392-51e3-46ec-b53b-40838d315563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5919d5e-47d8-4c47-a6e3-e0a94809ebb2",
        "cursor": {
          "ref": "463646db-7bd3-4a13-b609-c5c1461d9a0b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "af8ed2e1-e81d-42a7-8aef-9bec6d712e6f"
        },
        "item": {
          "id": "a5919d5e-47d8-4c47-a6e3-e0a94809ebb2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "442b4fb8-cb23-4389-88fe-6b6708b007e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f0cb91-dc4f-473d-aaa0-226589cb823a",
        "cursor": {
          "ref": "68734471-eb4f-489f-87a7-ccdc7fdf994a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "41a63641-6956-499a-9ae5-15ae8b988dde"
        },
        "item": {
          "id": "35f0cb91-dc4f-473d-aaa0-226589cb823a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b78c89fb-af48-493d-a192-02fd996184f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6a951b-e2f3-4eb6-80a9-2af1ae0238c5",
        "cursor": {
          "ref": "947d61cf-ad7d-49ba-8f05-7f3d3ba08d21",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a140e1fe-3fe1-4b19-a705-b84aac54cd2c"
        },
        "item": {
          "id": "6c6a951b-e2f3-4eb6-80a9-2af1ae0238c5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e2a12bb4-6693-468f-9b88-db28b5118245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2222f919-a2e4-46cd-89cc-e9e9b840f231",
        "cursor": {
          "ref": "a9175abd-71b1-42de-bc39-c3ab7b3a1b58",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "04fd3648-d31e-47fa-81fb-ef84b3ab93bb"
        },
        "item": {
          "id": "2222f919-a2e4-46cd-89cc-e9e9b840f231",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6092de5-5f6b-4fa9-aa9a-ad0699dd5b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f1275c-04ea-4af9-ac45-4a9d06fd5876",
        "cursor": {
          "ref": "719dc649-a2d5-4f14-b6b1-f78876a9761b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5f91a421-51c5-4c8d-995f-d301edf6d0e8"
        },
        "item": {
          "id": "01f1275c-04ea-4af9-ac45-4a9d06fd5876",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "105c8a88-3dcf-4acd-84a1-0b1c99d65585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1308a2-9160-4451-99a5-bba734da5b81",
        "cursor": {
          "ref": "b2f0fde8-8133-4832-8c53-3026ac156362",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99215bfd-0b3f-48cb-a3c0-1515ad320815"
        },
        "item": {
          "id": "db1308a2-9160-4451-99a5-bba734da5b81",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "14f48f1c-1c53-4173-9f42-aebbb62a4eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0e7443-734c-4344-a5b6-605b2d06481a",
        "cursor": {
          "ref": "5416a5c2-00c7-4380-9c41-8cb9b7a021c4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e1102216-7158-4ad4-b488-5641d55b65f2"
        },
        "item": {
          "id": "6b0e7443-734c-4344-a5b6-605b2d06481a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c4871f57-52d0-4e7a-afd4-084435d1373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097b90c7-3ec7-47b6-99b0-f22221432344",
        "cursor": {
          "ref": "177711a1-aff0-455c-9a97-ed61ca50c378",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fbb56b0c-924d-4f22-83e1-f7c5abd797ed"
        },
        "item": {
          "id": "097b90c7-3ec7-47b6-99b0-f22221432344",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5e4b73a1-8aa9-4d97-addb-1ff8b06bf387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568396f-d941-4393-ba7b-366a8d684c05",
        "cursor": {
          "ref": "4591ee7f-f7bd-433d-9dd2-46591e7a799a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9f7f8641-c556-46cd-a763-e71cc4fc34b0"
        },
        "item": {
          "id": "1568396f-d941-4393-ba7b-366a8d684c05",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ce614f2c-4780-4d8a-bcc6-87c9a624e9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0aac2e-7009-4b7f-bd05-372a370803b9",
        "cursor": {
          "ref": "86880fa4-d1bc-4f5c-85b9-4df395751fbd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "48e0cae0-61e1-452f-bc8a-506115f8555f"
        },
        "item": {
          "id": "9f0aac2e-7009-4b7f-bd05-372a370803b9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "21829a38-7faa-4659-90b7-7be123e33fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4aac6c-611b-41e7-8e00-513a3e670dfc",
        "cursor": {
          "ref": "931f776c-de3f-4a07-86d5-3b94a51c488b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a273a187-3221-43fe-91cf-0eadc9783a04"
        },
        "item": {
          "id": "1d4aac6c-611b-41e7-8e00-513a3e670dfc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7453d2d2-52e9-4118-a280-a275ec69cfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186dd2bc-e6b5-43b4-af17-70a58a39bf62",
        "cursor": {
          "ref": "04b59ace-137a-48da-8ea2-0b12ae52e49a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5d975c2c-d1f8-4657-95ad-5d15e2673c9b"
        },
        "item": {
          "id": "186dd2bc-e6b5-43b4-af17-70a58a39bf62",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6b0f7bfb-b16a-4b21-8d03-a900ce1280b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ec4d9-c068-4458-abe3-ac410ff1669a",
        "cursor": {
          "ref": "281509e0-41ee-48b6-bf9e-899a539fde00",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2776ff5d-1f11-4c1a-a70e-86b939b4280c"
        },
        "item": {
          "id": "ac6ec4d9-c068-4458-abe3-ac410ff1669a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "43b03a9d-cdcd-4a72-910e-b84340d157ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267b4905-e104-4948-9d43-1d4fee3451f2",
        "cursor": {
          "ref": "3a894570-d9dd-4148-855a-868d6b8f30d3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ec23586b-465a-49fb-b31e-8268ac4d2764"
        },
        "item": {
          "id": "267b4905-e104-4948-9d43-1d4fee3451f2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7f63f302-f21b-4308-aca7-633d3b3b8bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb29cb4-487d-435a-9cce-fcd581def923",
        "cursor": {
          "ref": "fa255c23-a221-4476-a198-ecb05ba4c160",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bb254ef3-e87d-4cfc-a4f1-fae02debeacc"
        },
        "item": {
          "id": "0fb29cb4-487d-435a-9cce-fcd581def923",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d236e5e3-3799-4491-8c68-5eb4abeebd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c9d8b4-b70c-4aa4-b9bf-1faf0e654c28",
        "cursor": {
          "ref": "26f27616-8562-4bb6-b4c0-2eddfc5537c9",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "96f5fea7-11f9-4b6c-b589-9570076b1058"
        },
        "item": {
          "id": "36c9d8b4-b70c-4aa4-b9bf-1faf0e654c28",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c946f8d1-200a-4188-b607-3eb56292840d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9e5136-9845-42d2-900e-9520e3a8c88b",
        "cursor": {
          "ref": "88f228a1-5890-4391-aba6-ddabf21da861",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "750eed1e-76a6-45fd-9ed0-40752cdd8fce"
        },
        "item": {
          "id": "1b9e5136-9845-42d2-900e-9520e3a8c88b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b13ffc67-b9cc-4088-a838-2a72a0639cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d05e4ca-6ef7-4180-8f25-827eb6cf09ad",
        "cursor": {
          "ref": "b4d458b5-2121-48c1-be68-22d581fd94a5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "09fac2ea-7d1e-4d7f-9770-d94fc6d95f08"
        },
        "item": {
          "id": "9d05e4ca-6ef7-4180-8f25-827eb6cf09ad",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d9220a4f-46e2-4e67-b69d-3899e61f5a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543275e4-1f3c-4b17-b90b-3dbee0fcd301",
        "cursor": {
          "ref": "c94e635d-007f-4964-a0c0-f3c7bde36b24",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "807ed5de-7ee3-48b4-a4f9-4f927ac6e417"
        },
        "item": {
          "id": "543275e4-1f3c-4b17-b90b-3dbee0fcd301",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "94199950-cdc3-4cb7-813b-0508ac23b46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8aa8c1-3a92-41cb-a8da-ad80e2626c49",
        "cursor": {
          "ref": "47ceaff9-8b71-491b-9af9-20dd4854f4c5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "31ec2b4c-768a-4d9a-9ca5-fd9689ff9d05"
        },
        "item": {
          "id": "8b8aa8c1-3a92-41cb-a8da-ad80e2626c49",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3b5623f5-8994-474c-b4b4-f43035ef52c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2105d64c-3958-40cb-8340-a5cf5e0e0552",
        "cursor": {
          "ref": "357324a5-5c97-493d-b5ef-edfd995d9594",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0298119a-d2d3-4441-a04f-7647b779317c"
        },
        "item": {
          "id": "2105d64c-3958-40cb-8340-a5cf5e0e0552",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0e7c40f8-9223-419c-9b23-ba30a6bf2a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d177f6-916c-4caf-a24f-d6b61bbbc0ec",
        "cursor": {
          "ref": "f951057f-9e09-467c-ac80-6dbaa979db2c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ab305f5-0452-4a55-abd9-9885345d00ae"
        },
        "item": {
          "id": "02d177f6-916c-4caf-a24f-d6b61bbbc0ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32cace9b-3071-4848-93fd-9c928aa598a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363acd2f-214d-4b46-8349-a504882f31cf",
        "cursor": {
          "ref": "ab4fe35e-d894-43df-b2b5-32d5b08f77a8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6c693060-bcba-47d0-9214-f8d0dac9fd23"
        },
        "item": {
          "id": "363acd2f-214d-4b46-8349-a504882f31cf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a082aff4-b1b9-4d6d-82b3-387ce2e8b887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e02bf6-0aa9-402d-ab03-dba650687193",
        "cursor": {
          "ref": "7d4d3fca-2d42-4f06-b863-af9c629d1217",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "19669e76-d78a-4dfa-a5b7-ad7a7cd1f192"
        },
        "item": {
          "id": "95e02bf6-0aa9-402d-ab03-dba650687193",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2741b81e-f017-44ef-b17e-631617e0ac30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca26407a-b09e-46aa-8cc4-877b16e5b96d",
        "cursor": {
          "ref": "fc8c608f-e7fd-4cc1-b995-caa3bca48f19",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d4b0ad03-ffd2-463a-b62e-198a4969ea96"
        },
        "item": {
          "id": "ca26407a-b09e-46aa-8cc4-877b16e5b96d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0ad77294-c41f-4f31-ab9b-eb6c881bbeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c516c609-bca5-4cdb-b3fb-2db5b76fc692",
        "cursor": {
          "ref": "bf5056fc-317f-4209-9f4a-832dcd37e808",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ecacc9b2-ec6f-44a9-8d33-be583906e338"
        },
        "item": {
          "id": "c516c609-bca5-4cdb-b3fb-2db5b76fc692",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d3c0e9d4-13c4-4749-ba42-8de8027cb73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366eb285-9d92-4fc3-8aa2-848499a04152",
        "cursor": {
          "ref": "5f016a5b-5d98-491d-936f-f1ad7efc246f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1d2960ed-1060-4ad9-a498-2983044875bb"
        },
        "item": {
          "id": "366eb285-9d92-4fc3-8aa2-848499a04152",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "28ec94bf-e9ca-4a97-9ef2-0fd0f9ec8787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d310d44-5204-46be-9a43-83e5a8d73b93",
        "cursor": {
          "ref": "d2bfb20c-f042-4e2e-a1c6-4b42f9d6076d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "959456b0-acbd-4cd2-bdd8-b5b256e6c7d7"
        },
        "item": {
          "id": "3d310d44-5204-46be-9a43-83e5a8d73b93",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5cc6a9b8-f15a-49ba-9498-92c28ca13b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d47af9-cf77-46da-a3d2-0d3db875586f",
        "cursor": {
          "ref": "8efcf902-0b85-4195-bba4-03a80d877f04",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "50b15b7c-e112-4ea5-9682-1c43336330f6"
        },
        "item": {
          "id": "53d47af9-cf77-46da-a3d2-0d3db875586f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2ecb0089-2a20-4ad9-a829-e2939e1dba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2eafe3-f077-478a-bc24-c29be13578cf",
        "cursor": {
          "ref": "883e02e8-ffd2-4a4f-8e9c-bcc93f5e33e8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "01fedd1f-b5b2-47da-8bf2-a6326ffdf088"
        },
        "item": {
          "id": "8d2eafe3-f077-478a-bc24-c29be13578cf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4e9ec8d8-da93-4707-ae5b-be4dd1fef7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed6d25-dd88-438e-8c77-f0a3d9838546",
        "cursor": {
          "ref": "ea41635b-bfe1-4be8-aa94-4acb4812ea0c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "17a609af-8260-4aef-a88d-03058186f9bd"
        },
        "item": {
          "id": "45ed6d25-dd88-438e-8c77-f0a3d9838546",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bc4797a6-1090-4941-b5a5-91ef0a25df76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb1b133-d4a0-4cb0-889e-39a51392e38a",
        "cursor": {
          "ref": "ecc6e891-5d70-48f8-8ac8-13c773a148ac",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7a6cb9b6-357b-4ff6-b48b-37691a3cf9d4"
        },
        "item": {
          "id": "4bb1b133-d4a0-4cb0-889e-39a51392e38a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8d150d7a-3125-4e07-8b50-404c25e72ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57941eea-fff2-4504-a129-dc1befe536ea",
        "cursor": {
          "ref": "7b3682b5-a956-42a5-b24a-cbdca5fe8cbe",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "07522966-6a33-4249-a44d-e5e2604a115e"
        },
        "item": {
          "id": "57941eea-fff2-4504-a129-dc1befe536ea",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "31bc0511-02fb-48dd-a4e6-4d5c08bcc763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c62d52-0ea2-443c-9a3d-32f0dae2d19d",
        "cursor": {
          "ref": "5ab824d5-2ef0-45e0-bfb0-c49dd20cfac6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5c2c2ee0-5ad4-4479-bcae-8a9d7defa1ce"
        },
        "item": {
          "id": "b7c62d52-0ea2-443c-9a3d-32f0dae2d19d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4183071d-bda6-4840-99cf-dd2580cd2f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3bed31-d3e8-4273-a495-d69df8e62855",
        "cursor": {
          "ref": "97cd699c-eea9-44b3-9b08-d56231e2caa7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "40226ccb-3743-422f-8155-af0a63e7fcb1"
        },
        "item": {
          "id": "8c3bed31-d3e8-4273-a495-d69df8e62855",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7e273e84-4cf9-40bd-a452-23d7421ada57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfda97ed-0c88-49eb-bc6a-ab3f76370e44",
        "cursor": {
          "ref": "cfc09d3e-497e-4010-bee7-0ec06e7d0801",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8728bdbc-4f2a-40c2-8763-adf4097c1bde"
        },
        "item": {
          "id": "cfda97ed-0c88-49eb-bc6a-ab3f76370e44",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8952694d-8949-4b15-a96f-1588ef51995e",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ee9058-8358-46ac-9f35-c4973e37f664",
        "cursor": {
          "ref": "aab7a24f-517e-46d6-8fc5-34f69f35cd5a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "767cf153-a741-468a-98bb-379b1a4eb0d8"
        },
        "item": {
          "id": "33ee9058-8358-46ac-9f35-c4973e37f664",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a481f18b-4894-402d-a780-421bc834908e",
          "status": "OK",
          "code": 200,
          "responseTime": 3023,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f7c7df-1033-4f01-a06e-e63b9a00c476",
        "cursor": {
          "ref": "fe82db0b-9b2b-4a72-8adf-aa9ebc2ee801",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "670723a6-565a-4724-85b2-ec1cc88aa888"
        },
        "item": {
          "id": "49f7c7df-1033-4f01-a06e-e63b9a00c476",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "10e6d48d-6e1d-47ee-888c-cec100b26a9c",
          "status": "OK",
          "code": 200,
          "responseTime": 1509,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b897f74-2407-4e2a-89ab-31f1f5f5af71",
        "cursor": {
          "ref": "26b40649-5f2d-41be-858d-fdfaa838b340",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "64c939f4-a62e-489d-a65f-beb0aa489736"
        },
        "item": {
          "id": "6b897f74-2407-4e2a-89ab-31f1f5f5af71",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "abbc7f42-8607-4260-a765-682fcdb811c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 109,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b897f74-2407-4e2a-89ab-31f1f5f5af71",
        "cursor": {
          "ref": "26b40649-5f2d-41be-858d-fdfaa838b340",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "64c939f4-a62e-489d-a65f-beb0aa489736"
        },
        "item": {
          "id": "6b897f74-2407-4e2a-89ab-31f1f5f5af71",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "abbc7f42-8607-4260-a765-682fcdb811c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 109,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c52f55-5b9e-4711-b230-807c59f5d338",
        "cursor": {
          "ref": "4c10ae34-bb2f-4c46-bbc5-2e7dcb03b13e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9b3d6259-23c9-40f1-be9a-0124ade11b7d"
        },
        "item": {
          "id": "73c52f55-5b9e-4711-b230-807c59f5d338",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b86292bc-6eab-4872-bb2c-cc6c30857dcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1c8988-4de6-42a0-99a7-deec831ba2b8",
        "cursor": {
          "ref": "3d24754f-5635-4f01-8613-72dbdcaad170",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8bfac64f-174e-4204-b1ea-409fe2a2598a"
        },
        "item": {
          "id": "5d1c8988-4de6-42a0-99a7-deec831ba2b8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "769bdc22-6da1-4124-9b70-4167949220d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}