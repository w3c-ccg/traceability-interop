{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "69a30805-199c-4687-80cc-5f4d2b542395",
        "name": "Clear Cache",
        "item": [
          {
            "id": "00b74d91-67f7-4334-a4db-04da44fc177f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8bae62dd-f661-4725-9d54-2baaf4d509bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6a8bddcf-b96a-4224-a4da-676f718d6eca"
                }
              }
            ]
          },
          {
            "id": "10ec3ce0-2dfd-427e-b03c-ab3a35063cba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64294511-918b-420f-81b6-713c23b4b72f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f95f9be1-93fd-48c7-860c-bb976e4ea36f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "938a2287-5b5d-4dba-afc8-0ec50e166a9c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1395f8d9-b37a-441f-b748-2c5ba3bc17ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a315f693-ef84-4403-89aa-0e59d2455f8f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aee5b04-e5e1-4c8b-8b58-d9230e1e6d32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4194dac8-7db2-4041-b082-c847b1ea644d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0c709f0-d281-4637-8dc1-bc1e26608302",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2184c235-6a0f-4fad-869b-87f8bee2ef36"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1379de2c-ba3f-41f5-a325-306b57695b8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f201cde3-2863-4efa-a083-9d73846eadd0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cd1e46e-a106-44f1-9334-de7e0acbf078",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a99ef5d3-d26a-4fd8-a643-ae9542342589"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c46b209a-96ca-409c-ae20-7edb1a2cab25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "651fae63-25fc-449e-9b42-f4aa15e1d0d7"
            }
          }
        ]
      },
      {
        "id": "1ad58e37-9f17-40ed-89a8-c9cacddc26fd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a87d6f55-646c-4ce6-9741-da960353f780",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a504e0bd-19e8-4033-a4a0-51f7f1b8faad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "148e3fa4-2a53-451d-a0e5-91c7786d2e54",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4467c1cf-5517-47e0-be1c-ecc1f97fa516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f44cb130-098b-4ac5-84ee-a6ab851d9d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67817520-2f71-418a-9c26-a4c691a5f8fe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e9a663-ade5-4cb6-ac9f-c34c0fa1f125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dde1ba1c-a68f-4c0e-80b8-1762731f3546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36737d25-4661-4e81-93de-c59b0bf61878",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0679d9-64e3-4b06-9924-d48c8403c624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b40e51c0-4190-47db-81cb-18d9585bed5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17217a0f-ccbc-45b6-ac67-ad8a41ec9f93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "121a72a6-873f-407a-8524-52016cbaba82",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8de3d8-81b7-4fe4-a603-a8e28f683e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b38fdbe4-b26b-4a28-8b44-8bd7da8f549e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b74f63-52d5-45ff-85d5-ebfe33e218f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5799b68b-f2be-4b9f-b574-7ba1105353dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef7bdae9-92dc-4d71-a6f3-a55daf5b3a55",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a19adfbe-19af-4059-a9fc-390bb48204c4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21297310-bb8e-4486-8c80-c6b2487cdbd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6f26e9a3-9c2b-44f3-a133-b9c9b2ecac26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6200be09-a6f5-4b03-9c5f-2ff80f17bfb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1d771be8-e51d-4965-8868-ae8bc259946e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a5f9b5d-d11e-4888-9760-c4d2db771d84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "895e3689-4133-44ed-82e8-f82069d7e6e4"
            }
          }
        ]
      },
      {
        "id": "b12e7814-6863-4782-8544-1e59a58bb48e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6b342958-4be2-4426-9210-c3244e76f064",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56c0f2b9-1130-4896-b478-486a72f70828",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3fc0dc0c-a6a8-48b5-baf0-a218e43d8f21",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7205418d-faa1-4d06-b54f-5ce9cfed84b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4141ab8d-ddbf-4f5b-b813-6f82a6a1e7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5b659d-676d-418f-a73d-81042b778cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7317cfc9-b370-4109-a44b-d4e2f2e991ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d828b5-5ff5-460b-bf74-bf8d04c46fc6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eba8a5-4338-472f-b812-a2f49baa9835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d2762d-83b1-4fa3-9d11-998a55a682cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c1316e-1eb6-4fda-9d73-d0e5096bf697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386c7082-f328-48b8-85d0-c9c031b42f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc76f76b-89ca-4005-97d6-8e49f061b8fd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a66668d-fc23-4729-934d-79a7f0573bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548d7f13-8edd-46b4-9bd0-2f19e63c7991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b89e538-c909-4610-9dfa-c5445e9f55de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1467a112-2dec-40b0-8269-d2fcd62a99b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adc4dab-877b-478d-beda-e7351961636c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0755f9e8-d6de-4d29-923c-7c0b8bbf71e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef69e27-b655-450d-b45b-95db308ce978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c474ff1-3745-4089-aac4-d96eaa2c0c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77665448-63fb-47d3-b4e6-1ed21b39b8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2232b3ad-e5b0-4f18-9a6a-4a8f2aac4056",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb7698a-a309-428c-9f19-8d318d81d130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3e6c8c-e02a-4145-a240-16185e806287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5900a2e7-212e-44c2-925d-5e5f917f70f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbb3e675-6d04-4b27-bb6c-7f387a55aa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75da418d-fb64-4600-b046-1ec96ff337a8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4d74f0-a575-47df-a149-60bfb71d8987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a803f4b8-9372-4c70-9a8d-a07ad108e421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd82785-30d7-45e8-8ce6-219c2192e803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f7e1348-d67b-42f3-a425-4371887660e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c8925e-c4ca-491a-99dc-6e68875e846c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e872648-2bcb-443f-a508-86323d0421f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0ef79e-daf1-4333-9d9b-9131bbe3b842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aa9ba0-f942-42d3-a6c5-db6a13675537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acaf554b-a087-4589-8de2-2ab3869dc726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8c3cd4-88a9-47b9-8745-2b00c65fe389",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cb05a2-736b-4882-b3f1-51ee0fcd5b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb84e025-5838-4368-ac8a-534df3df7748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78ba945-407b-41c4-873c-56d874dbbe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "711533d2-ec80-4ec9-aed4-b9ccf8981cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b9ac36-9bed-45a1-b3db-2772a0255aad",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8607e25-956d-4aef-85f6-8b40b1078920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca13666-4c2f-4212-9a0b-c381205aa184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f9a6ae-0efb-4a92-91ff-bbc9b314da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af421803-afe7-48c7-9053-fbcfe99a7aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcddf4f9-de3d-40c7-9478-a43a98b01b30",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8b8be2-7594-44d3-af2e-7d276bd9cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84622679-ffd9-4792-a438-f72d925412ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc38fcd-2a7b-46c3-bd62-4546e209afd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd0bc029-5ee9-4fea-bb5f-188e69516b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94182f62-c230-4fb0-938d-10268e0e0310",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4bf139-a50d-4022-9fd1-657de8ad9bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5fd571-2b3d-48cc-a555-c78a3aaf6bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a68a22-64bc-4009-bd73-0fc5896cccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62096131-be07-4350-8648-57d1049d86fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829647ae-6ee1-49d9-b779-a99628af7aab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11917b3f-847f-4ada-bd94-b17e3053406f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788abb20-b850-49e1-87b1-d8136ed5d24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1831317-2db5-44b2-a8c4-3e15cbd1c6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67874395-51d4-473f-8b3b-862971613a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb4a44f-57fd-4c1b-a8e3-f8f32bf7432a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f90f3b-0285-439e-a04f-8e279ca16403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98d9f60-fbe9-4ec8-b34f-eceb1e54fb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcd79de-6434-48d4-b019-3a675e6ff688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c25dd51b-2c1d-4e90-bfc2-88772f41d662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a646722a-416f-4966-bd2b-ca4381f921fa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00026b9a-f752-4f4a-a9b2-9cda78058cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12fb798-3bde-4454-867c-812d54d78504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235f1c6f-a85d-4074-87e4-0d73104cdd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ae716b7-98c3-4b70-a4eb-d829d79a5ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dc7b26-dcc1-4d90-ba4a-f10c69d7ed27",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae5c191-d417-4c12-aa26-da51c7c558fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d872d2d-71ab-4c54-aa4d-c44a1b95ae79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2745cc0f-cf82-4bc2-b828-2ee378ad2267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7ac46c4-d9da-49d1-9cd6-192e70a6913e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7261c7-cbb5-4421-9b3e-6ce57f09d373",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d138e7-2cb8-439b-96ae-ade056a33917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f59243a-ffc5-43d2-b0e1-25e048a1b2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c23b8d-de50-4440-a644-707f553d209e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da2a4789-3381-4fb5-87fe-dfe49c036b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddd3dc7-3e10-45d3-8159-1a056c05a8ee",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c356e40-c745-4314-a50b-267542619fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bf77f2-0272-4a02-95d4-aab1597d838b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9102616e-0072-4260-86a4-428188a9cadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "806059dd-b3b5-4185-8d1c-93531f5ac8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4d164c-fbb9-4664-a08f-a48772c700bb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea34220e-30d3-4dfc-aa5c-6e26ba909386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86123748-8f64-426a-85d6-f8df4bb20267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802cb1c3-ee35-4943-bf47-219f4702ed8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "781f04f4-7423-441d-a353-7d6d6adb6b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fa20b6-0f0b-47ab-94cf-042d68c5a140",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc86012d-dc83-4d3a-b0c8-981e2670004a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6ad65c-9ac6-4147-a504-563c67066938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87091a-a619-496c-bff5-211883e51845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46db7522-f183-451f-93bc-99c73a505ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb09aa41-883e-472d-bf5f-7f267d586486",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7243e253-700b-4477-b282-a57860fe9c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621a21cd-d4e0-427f-ac7f-35c8c6ec7be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d8422e-6590-4a84-b0da-b7ca457de3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1432022-4244-47ac-ac47-e1a23bcad3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb34fcbb-d514-48af-a23b-592abf1d738d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4001807e-4019-4a05-9254-b9c04df3b358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31216f67-b43e-48d4-b854-5d38cfeac264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d1828-109d-4671-9a9a-b64d06b1889f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf45e5e-0745-41fb-b226-9d3066b1c5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3f89e2-7eef-49c4-89ac-b32e3a1b2029",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286a710b-7364-4a7f-a25d-be565037c49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19b03c3-48fb-47bf-aa52-0a6bba28bd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11510287-2ada-4aa7-8778-fdbad617af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef62a78-03cf-4e80-991d-f5d08a0e429b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7368702d-1ead-478e-b67f-e6f2587cb912",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42764f4b-4bec-4e2d-b8ef-ae9373a83192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6e9dd2-df86-4672-aa2c-d54adeb1de6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdd876a-499c-4535-b283-ea4e764fb162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0af965db-9f95-4ec0-af28-870fdf42f4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f6dd26-4a96-4ec8-8e14-05078087265f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a00900-b266-4096-bc18-6c3c4f3d9d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b866959-c3aa-4a3a-980e-aed75d0b3532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ad687d-5d51-4cda-9ec6-329ca581e4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4737e615-1e6f-49ab-8723-85d226fe1cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32faf8e8-4ffe-46ce-8796-c0578ea1b3a4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d556fb-9070-4da4-826c-bef2e362f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11cb1f8-d714-44df-babf-5e4783e5a8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ed52ce-6805-4473-a00f-d75612f7efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "232fd0a8-4b08-478a-a9cd-ebcfb3448622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4604e4ad-3495-45a3-92fa-dcd334d97c14",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbaa36e-1c77-49c0-95de-3f4d8d0bf1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a56ac0-48fc-4a5b-b720-fc9aff7a578e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22120d4-6849-4a83-83e5-80ddd9a427d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec6ca8e-c65f-4839-84d0-3089f3d6caff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0a6e92-e2c3-4c90-8f78-4fefd5818a99",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb570a1f-6372-43db-a11a-8fe5c2f123d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4905422a-3f19-4008-9313-1bb68de95ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5adb57-fedf-4a18-aef0-2ca4a7e7e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2989b336-c342-4186-b34c-6b669b7cdd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9175e953-a52a-4846-956c-bba9a2f8f902",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eaea51-d595-418c-a014-ff025edfabab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c55eb2-49ca-4a8b-bd38-9d52a0a7303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428382dc-7620-40d1-b077-30128ebba751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5f5b0c-14e2-4040-93c9-6110da34ca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b4b7f8-dc8e-486a-9758-632ae6af0b33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1d636a-d42a-451c-8429-c8878a751ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feac7c7d-1c21-44df-9afd-63ec3f5802b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb73019e-5248-49ed-8da7-61124e1eae7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54139d7-86d5-462d-bfd9-a0d3e81ab92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a38943d-ac07-4f38-8c4f-82ae857df9eb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe2583f-1315-4d21-a4c9-1207022b914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6dfff3-1b2f-4b9c-adc9-204293f9f3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6866a2c2-f4a4-434b-8f3c-a106504e26ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f28461-c31e-4c43-b3c9-484650ec26ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f663c5-0699-4456-be65-b4f71db4df01",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e551c7-0433-48bb-ae8a-7da9ac6e7a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ccfdc2-aec2-475d-b4ee-14b14f37529c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a5a1e0-907e-4851-9902-55b7605788cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df63f799-fa78-4dc4-bcc6-638a62507a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8af4b17-285b-4e08-b6f0-630e7b364b1b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941dcf12-d532-4d7f-8d7b-5e7b733d69ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5011786a-1b5c-4980-aa8b-dccee3f21c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd7d21e-2ff9-4d27-bba7-44a33a638f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68028b9-79bb-467c-863f-40ba3c745d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c33edd-31aa-4bd8-be4a-dbcc3963051e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a4e706-7b57-4f78-b9d1-8a69d37089b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c5ec2f-ae23-4a93-9889-5247d5cfc338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b6704-d561-4a3f-9043-13334ad2b557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e440d0-afff-46d2-9c0c-a868b2a99835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de74b28-a497-4775-ae53-1db21d4f282a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7721c5d-315e-4ceb-b741-bb6cf811bc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032a2d82-085f-4c85-b6b4-274af4bf4e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3284cc6a-c4d8-4082-a500-c4c47da975f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "985855aa-c6fc-4f9e-b919-6b09b3abf370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b3388f-8f72-42c3-b949-3dd2aba34b3a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa56d0b-f561-4fdf-97c5-5227f9c5b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f24c9af-835a-441a-8f32-1633cea0b78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e44100d-2318-448b-ac01-8f3091d7feeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a22a8616-6d10-4aa4-89a4-e681a7abaf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c839c4-281d-4f90-802c-488cd3522c97",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99638807-2e98-4a45-a4ea-b26c56be3152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fe8f379-880e-4801-a796-fa0ce5ef5f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48046a9-c464-4d90-9826-52d9f37fb4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03682bbc-d123-4957-bc95-7c843e567c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78171e77-082a-408f-989f-725413e6835a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a939f90e-2975-4186-9616-f2711da90e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48f34f5-5a99-4dff-a80c-6a62e6c13137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdc61a0-b6c3-45bd-8ad1-8ba2fa308a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "454134be-3f82-469d-b9ee-b76e9f5e0388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4bc8a0-81af-4256-87df-dda0065e2d30",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026e5c1d-af04-402e-9225-849555561030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3648a9d4-355e-4e68-b624-72df6edd9156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d853ea85-d9fc-4d70-ad87-7ab5c2627784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "02d5fd21-7a8a-4552-b815-56c761cc9475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace356ff-7188-468e-a13a-31d1df051403",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41517e56-4c3e-4cbb-a5a1-065343c654d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1402627d-7c8a-47d9-8c75-d01ac8665c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6faa76-a33d-4397-ad57-690e2af65339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8b325e-830a-4597-8339-ce1e718f5b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22e843b-1c1f-40da-974d-51d3f7d9afb1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b9a2ed-b03f-4bd8-b2a1-6e09f67e6378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97481dd-7a74-48ea-abc5-aad336c4911f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee34c2ff-ad59-415f-8490-7d94ff6f0b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9761dc-a51a-4c2e-8dd6-da5646610c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0e7e7e-3fc1-4fc6-9be0-1a3e28f6db62",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b868fdb0-2063-4ae0-a124-78f369fc8dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6335d49a-f3f4-42a2-86de-ef049e36be11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b30f08-9895-40bb-a054-bd99eec872d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6b45c9-a151-4a4d-abb3-0afa8f4baa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680ee308-ec4c-46cc-96ec-6bbc52f4c697",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e89c93e-8197-4209-994b-4f06fba6fb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2959d18f-65b3-4f74-8fcd-e5c81ed5c75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76423c62-f46d-4826-a490-bc34dc959765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2ba453-13a6-4bad-9392-db19672c00f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15024bf7-2cbe-4f63-a598-c09359089cec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02525ab-b635-4f69-b661-be825666c4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4f30fd-d9cd-491c-bb1e-ab444e66d283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b770e62-7992-4c9a-b576-aee483f90a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba2b698-90ed-4d8c-8d32-e82b91755513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad79ea8-898b-4512-be4f-506de4357016",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e0e1ed-d8c8-4f37-8721-1ff6808bf54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c6fe66-5a39-4c94-bf74-f0faa73d39be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235c6657-6716-452b-b094-634b2b236e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "59b1b4a3-89c5-45d3-a50b-fa9fc62797ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97939cd2-5881-4d38-b16a-57c3131b714d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d27a171-5fd4-4b4f-88b0-f6b9daa58327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0b199e-2502-4918-b982-e837efc225fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc3d57a-cc96-4ad1-8611-4b0129a8c859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a901bcc1-b130-405f-b7bd-ae24538e6a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2ef5e7-b916-4636-af3d-a1c76dbf4e65",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d7ac69-9d6c-4d23-9fdb-d8a7162159af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571f95c6-fc53-4ea4-8fa1-38d65ed712fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb7cf35-d81b-4655-a748-1f856acca2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdac631-b55c-467e-8240-e4e784ef940d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faf5344-16cf-407f-8bf7-9329075b631c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00f61df-36d7-4ff9-bf45-10184d6f6302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea1ac3f-3994-421c-9b3c-c5fad443f2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f19d5f-545d-467b-ac64-c977266d5503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d36499d4-ab50-4259-9714-ef1b820ad917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f560ee1-1369-4855-8c6d-0aa24c629b18",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa96409-b3d1-4866-a02f-07e37d74b0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45385838-366c-4179-b827-6a0f370681f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273869f2-58a4-4c66-a480-ba9844ba4af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f06a7110-62ae-4ab7-97e8-77961b94910d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220ae431-d1c3-420e-a915-f4a724170469",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eb0a1c-0b20-4a84-9a47-bfe1ab89da44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd6199f-868f-4cf1-baf9-90103a28b7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72a35d8-a911-4214-96d8-ffc7dd65defa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a923b5-018c-4503-b07e-0520707661a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31d722c-cded-44ba-9ff4-f53647ec91be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e7504d-9a02-481d-af76-3c6a403d8b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe2af9a-38b8-47cd-a430-188ca89a4e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d785f26-ad79-4dd4-ac5a-f29a1d2be255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e39bbbb-e38f-43f8-a75a-a15635eb260d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71379e19-d6a5-4e47-b1eb-f37a10279262",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4953d9d-43d6-486c-b0bd-4fcc96334b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a42362a-8254-4ddc-8ca7-f1ad75947e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887558df-7a8c-4467-b799-248a8b0b30fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3968b0-16bc-4255-ac45-0e0062664dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e9e4aa-c196-4d0d-ae7f-eeac17b5ab8e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afac75b7-4743-44f6-a9af-0be6ca1a69b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c917d700-cb2b-40d4-9ad1-c7b622031feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db82dc24-9fd7-4477-8785-9f5cac3c803b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17167d66-d493-4b5c-b4f4-e5ef1607684b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc17cd75-180d-402b-b279-4f91550b9bce",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34270c2e-8dfa-4c1b-98c5-ccfb78993b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8f7297-5d98-45dc-8142-7d5e0dbd38c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ea03e9-788c-4bc9-868e-863ec14dbce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d319f0-9d16-4e42-b824-e2c1af292c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043b5cd3-61c9-4fe6-b557-59b0a47a2c40",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fa035a-ef52-4848-b492-6bba6188232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac19e006-8829-4d66-8488-82ef48632557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6c94b3-bd27-40bf-8af7-0aa4bd9cec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd884538-683d-4a95-a87d-fb34d998dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe847329-0070-404b-a33e-c7541dbe8108",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0dda7a-51c9-46fa-b230-3f3df1f892c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5fc414-fdc8-4d93-95c8-270221f59a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b1af3b-ffe7-498f-9a17-73d03ece9149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72a923d2-f553-498c-aca1-c6f10bcdc05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d726a6dd-bf85-4d17-80b5-c116607aecdd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d06765-f82e-4142-a5bd-928b43f609fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f0dece-a940-4b24-a0ec-f9b1460a7aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aa950d-7cb1-486b-a282-276faa93432a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2fabbe-d7bb-4f9f-9abe-ef859e4ce23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fac17e1-d14c-4fc0-b21b-a8da6674e54c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fb3e1e-0eeb-45c2-8c33-c8de33163686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99a9646-02be-4fdc-b511-2a89208a9280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0893df-97d1-43cb-b416-7324b4fe4fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfb7ecf-2576-4f80-b280-7ca5c9fd55c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a317db-a01c-4f8e-8e6f-721857e8f954",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313d6b16-9ef3-49fd-833b-3999a7ac6ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2616fb-3a7b-4100-b7b0-fd3cd622e19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f535ca55-18c0-46c8-8298-0d2777d6f8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb99a31-e62d-4850-968a-1e67fc325a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997bc81a-5cf8-4b4b-95a9-4e1421cf8997",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a7c6ce-bb55-4a95-a5f5-e9ac00f9fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0753a0d-b543-4c38-9ec6-da7322d1ba14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d63342-93c3-4f24-8a2e-ca9e162a9c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "50691724-8dea-4cf1-a1b1-6b5b3222d48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5c4441-e8d4-4fa3-a76d-ee9ef0c07293",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc6662f-af48-450d-bbcd-1a541e573670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ac4fe9-69b6-4533-8ec2-83c299ecdc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb598f2-bab7-4b44-8553-789bb11498e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffe84cc-3b4d-48a5-9b17-d3ca73913266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3864ed3-b159-49f4-acd8-dc7757632c69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b79b78e-517a-4456-a2af-dcfd9f12fd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3da5c6-65be-4b9c-915d-cc46259f82ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb67598e-2193-4742-89a1-5a0a922f5833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d008081-6d61-470d-9e07-e2802a9ed224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc69f05a-86cd-4572-95fe-77b80cb01e0e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b89fd4-d779-4849-a34e-8dd78f2bdd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71bb989-9bff-4713-b693-3088ab91fc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8329cfc5-ca17-4850-b32c-fdd88795bbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "829dd3f8-8e67-4628-9381-5dfcc2e0e8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120abf28-274f-40e4-a4c0-8bb49412e910",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dd20e6-72f3-4514-a2a2-a143606a7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b577fe0-d19c-4a15-974b-9d36a9aa8837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684dd543-ebac-4dd3-a001-f096eba056cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc9fe3a-eae7-4ddc-a5fa-985db2bf56f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e28922-620c-4a1b-8aee-58d821839e9e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b95da1-4d1d-4dac-b1ce-6138893b1235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce9f568-52a1-4ade-a43a-f9c5bdb7ffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48102c78-a3d7-4089-987a-29a9d69f0ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14496f8-6db8-4691-bc91-2cd3e1285e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9902ff-6220-46dd-b415-9d0431bf949f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bd863a-8db3-4ae6-a7b0-9a46116574b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347ee9da-791b-4354-8b18-e5bd8c8925b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1e9f38-eb6a-4c2e-813e-3dcde2a1cbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1fbf08-545e-4289-bec8-ed05bcf1da5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e081b39-9e06-4000-9547-7c9b0f2cc09f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395ab2e2-2b91-405e-8f80-4f92c386ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998601d3-6556-4033-b50c-f6949f2aed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7690f1d-7a85-4e9a-9d42-00df6659dca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b274a1ed-9a5a-4bad-9691-a7a1fd83d4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b979da16-133c-47e3-88b2-94640c6509ae",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ead1ca-133c-42df-9f4b-302ba7bcb86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e828f7d-3a93-4397-a0cc-14ba1db3ab1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea24f3c4-c9b2-47e1-b5bd-1fc8907e8687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "086b283b-37fc-4108-8bc0-6c8162c95bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5526b9-67f2-419f-b6c0-7794271e1893",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7516b65-8559-404a-9c78-733eb3901e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45257ac-5605-483d-b9bd-31d89f263c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2254e18-4a57-4fee-8307-5f16cec5883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e98914-7843-465e-836a-d703c4fbe460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc096ac0-054d-4325-9830-505b566f266d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f808781d-8405-462b-9088-1db6fd285ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cb0b4b-0f94-45e5-899c-47a8cb5c1a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5ada45-0116-4315-9261-30307c8ce70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06e73dc8-4885-4710-8fdb-b1d5c15fd7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa497eda-5d8e-4327-be7b-7593f130bc3a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddd2fac-f6ce-4597-9833-83d507efd704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3dceaa-14a5-428a-9c99-dd601886b595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d14d55-155e-4df5-9e0e-9f34288f0e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b75b973-399a-4f8a-8d71-5344a5ccb219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b676be5b-edb3-4b86-ae12-f48a93a534ff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8fedf6-6efd-4e97-9dbc-753001f4161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25357675-2ba2-4c4c-8705-8e914fae1adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04976ac6-210f-4049-b3a8-53e279e041f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d90b81c-9363-4f8e-af77-47aa7a354acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546f91e3-48e8-44e6-a0db-5383ed7106ef",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad7f48e-9bcf-43cc-93da-f0966a527f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad79dd8-b454-40e4-ab4d-1607724b0298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea78c905-565f-491f-acbb-daa0ac7b7237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04e06cab-a294-4a1f-bdea-3f7d26199e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29359a16-11e2-44af-bdf5-63b638c0c680",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7dc90c-02e1-4dd9-a0fb-4a46257b93a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4edd4a0-2dc7-4e8f-baba-c3118e9b631a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28b3f6d-c860-4d48-b798-4fa299fc85c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ce6983-5539-400e-93eb-e7b03a01e463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8c1768-c747-4da8-9cb7-fba19dd1ac9a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf71432-08ed-458c-8643-02c872d8d400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89dc6dd5-d488-4313-b501-2be526498128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bfe275-e9c6-40c2-8c25-a5c1f723ac34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d57282-6c66-43cc-9d5b-46b7a12afdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e01a414-24fe-410b-8bd4-28301db09ebb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b736c0a-6a88-4f0f-aca5-9e3c2d0864e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e706b2-7c54-48e1-881a-7c9dbbbcd270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d37b5c-2ed2-46c6-b944-725f9031de97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "851a93b5-e2fc-4313-8614-636869741530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6394fc2-6dc9-4e4e-b0b4-f337677bb551",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1891598-82a6-4c5d-a5a2-c0cb4b120823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdeed89e-c0c2-4725-8490-589a517b389e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f778f4b9-af71-4965-8e58-fe33b5a3cab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b74b167-a156-4b82-84eb-65faa2ac8468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602aba77-34a2-46f0-a19e-dbf699348908",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e3c3c5-7af4-4a35-a710-191002b6796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e21125-c771-4016-8cdd-c5e25867486d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15201f8c-baed-416b-8436-26a211147f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a6c946-0aee-44d7-9833-df3240d66edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511daccf-8954-42d6-84f3-88dad092c273",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e55f554-5b3b-4d47-842b-fc305bf3d2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6812701-8520-4e71-8987-7f110ab35fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b8b0ab-f7ca-45b6-9f9b-b9b9d7dd52b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdaddf78-922f-469e-b193-0f4f5e9ca606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02242f83-7634-4480-bf6a-d2836197bf28",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3be55c1-8109-4deb-83ab-5ae9371007c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb71a8b-46c2-4685-84c7-a12a4cf8a665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd126a6-a542-4aa2-8ed1-60a01a7c6807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63702223-001b-4364-bc2e-5154788aa8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902a4866-1b9b-4ff7-a7e4-5a62928980e3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed22f03d-ec90-4f7a-9e3b-be8b4938cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10748aab-575d-4ff8-8d68-161b254e2233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aff85e7-8eb2-4b06-a9ec-d0d87a781966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f9cd9e-10a7-4997-a8c7-e052d3532519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be76918e-42f7-4d57-80e1-d3d73aa1f89c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06a1fc1-99af-457c-bfe2-ab70c28ca22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2436f4b4-5b8c-4846-990f-1605696582af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc236c8e-3cea-4cf6-b2c7-1faad7670762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c40562c-61a0-4b7c-b44c-226f9ecfd669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3be0c13-82ea-4dbe-8fd6-42e06481f9e0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1e8a57-ec7d-4dd5-b526-3460bd7f89fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95758a36-b786-4beb-8c3b-907ae2e17c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56a2920-4631-4c44-b752-e50803824ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "595f047c-44f7-4d93-b53d-77f8ff54cf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0efab4-2edb-4432-a0a5-3b6e4c110029",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e7ee5c-fc10-469a-8de4-20d6a1fef36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b38a34-da1d-4732-ac73-43236a384f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7661cf15-7d48-40d6-823f-3aaa763b96eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81351244-6dd4-4ff2-8492-ad64459423f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9509e65f-c6fe-4f4d-add6-af63d06441f7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea5b187-dbe0-40ed-9b72-05d7a1809d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eefab3b-5dbe-43c2-9524-f8bf5e1dfc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b815a55d-c254-4fff-8cf8-394dcb11fb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "565c95c0-8d75-40a0-ac02-988f245c3b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cc762d-a837-4103-95ae-86a422f7d627",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62408f24-0d9b-407c-82e4-35c0b6a28a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0781854f-1444-41f4-b097-ce007aa61eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcd4341-52d7-40e1-ab44-f1f870ee8794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "799725e0-9f14-4ff0-bef7-3127698d668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fe0c9f-3345-4673-8c0d-256397bb8e06",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca23bb07-d3b1-49a3-b65c-8a66bb989b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e877edba-daa6-4814-942b-dae90047b276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da07a5ee-1c64-4206-9ab0-e26930a41e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05e8552c-56fd-4517-8e05-76c87a08bac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27338055-1def-4f94-8532-e8ea72915704",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7bf8a1-4208-4939-9f51-cbd2821e8dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e040e014-4c66-49b3-ba6b-9e4ab65ff08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47de9d-cc70-4549-ac66-348304eddd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4571756f-24d4-46dd-93ba-62b6e6e90124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3f219b-e509-42cb-a899-b69a14c36db3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4c67ae-e2a1-404d-b06a-a5a62fe9f355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa204f54-5164-4a0e-ba8c-92428b96e03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8c9e00-d7a2-4d31-8a7e-5e80347dc468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d108dd-565f-4866-b06d-c674732b5093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275c745f-09ff-4e12-b060-2bc570e11456",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452929bc-2fd6-4d44-ad52-dec568138f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cf4715-49da-4578-b928-98db5073c23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89ab0fd-245b-490c-b5e1-97a939ce7c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "912905a6-bda0-4c82-a7a9-a62a5677f0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9b274c-cb9c-4496-b3db-73a4a4c24bf2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f005c2a-4340-41a6-89be-26f12e46b6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8860c44b-9282-4da4-a042-470ad69e27e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6927f4-a4f2-4ff4-9001-b425b0d1abcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e80ec1f9-0e07-403f-af40-bbd6f74c94a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae4eb58-86bc-4abd-8daa-577ecc0c0cf7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76d4bc8-6a8c-434f-afbe-f53c73415514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5717e22-3077-4c5f-ab6d-39ab3e8a9998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeeeafb-7d47-4966-83ba-775829784297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c769880-8484-403f-a075-c5e94e256acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e9ef33-76fb-41c1-8051-7e7e9f7adee0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6a8a4d-4126-41f7-9740-d13419b74a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a04d8aea-d3e7-4216-b1fe-5059c03da67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944ced53-db83-48c6-8542-72d3483ab48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "492b609f-fef9-465f-94f8-03a645224497"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12e5f185-3444-410c-8f29-c6922c3e4306",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94f2875b-aea3-48a2-9a29-53ef60f2aafa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6723317d-2fc9-4eda-9014-d6cc82f86bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e92d6238-734a-4b76-852e-8b0ff9716abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a34dee-d374-4806-89f3-fc0b2e0593d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60bb78f6-edb9-4cf5-88c1-a1cf33c872ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4263f597-9cea-46c0-b7d7-a69161894f6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84724f85-f292-4610-bff0-c0dd1cacbbc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93a18fea-a83d-40b3-acd0-5b0824cf09bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32ee6214-3f69-4326-b9f2-1c7d7f27bb6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ff43df3-7392-41c9-ab29-5d5f8e73b647",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55a0c663-9be0-4c09-a86e-5e7fc37ac7b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9cf5779f-46f7-4b40-9d85-138b4d477a87",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58e6ba74-bef4-4393-9d75-ce54c8eb2b29"
                }
              }
            ]
          },
          {
            "id": "32afc852-6662-4d77-9f50-e4697cf30c6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "425f9990-bacd-4568-b0c4-fe109179f78f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7f403925-86bc-4356-b9b3-e74f42e848f1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44f1532-7598-4027-8fd0-2009474598df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5a8f4d23-462b-413c-a3f4-f465bbf4a3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28a8565-2c75-49bb-b4d8-a98e5efb1748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8e713c-0056-49b9-acf5-4e84fc0c9064"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25f9294a-ec9c-418c-8dfe-de84a92aa34f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cee3182-941b-4f5d-a2f9-5ddf38f2ffad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7ecacf3-9bc8-435c-8588-d930a06ab2a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ba412d6-68b8-48a7-ac26-5fdfd946e433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91ab3223-207f-4d0a-9dd7-1125fb02ad23"
                    }
                  }
                ]
              },
              {
                "id": "f5be46d5-b415-49c0-bf64-4efd18d759d2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c3e0e82-a73c-4594-8d92-6193868f37b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7d90b44-c609-493d-8ebc-bfa783685493"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee8cc49-74fd-4b21-806a-2827c9729ed5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d6ca179-5c3c-4f0e-810c-ee11b94edbd3"
                    }
                  }
                ]
              },
              {
                "id": "886e4c11-15e2-4d62-ad8f-6495c6d47094",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "577127a8-cdf7-4dee-bb90-073f37a78d0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41bd7430-2431-4c0d-ad37-910b8c7c1783"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdb4cf96-639b-41d2-b0ea-d9c2b7cddc15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f71e8a99-2c03-40fd-a3ea-03b4bbdfe1a8"
                    }
                  }
                ]
              },
              {
                "id": "f3181772-e49f-4339-afa4-97f8493edb48",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b04af53-ff62-4891-860b-4613019cb59d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "222b12c5-ffba-43af-a47d-b8a76be6b8af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab791a12-d2af-4e75-b7ed-2a334d6a1522",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5f8fe4c0-b89f-4ecd-95fc-24f60f1419d3"
                    }
                  }
                ]
              },
              {
                "id": "a16bfdbd-1c58-4f25-bc36-8b57b3914f4a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25ab2601-0d09-4ce1-bf75-14fa9d971bb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcb355ba-16f9-49f2-b414-7af3e9b362d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22ef12ad-4ebd-4141-9f6e-e975ce5d4564",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3bcca10b-4836-4fc8-931c-a831dd5ce465"
                    }
                  }
                ]
              },
              {
                "id": "b62635bb-8759-4087-a655-5e3fb4a23d1f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c9b66a-5ecc-489d-a9b4-47597ae2d480",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "370efa08-f307-4d86-aee2-25acc383bbbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67542d04-2d42-40ad-954a-9e8cbe7498dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9f33c1f-3dfc-4614-bbba-0399216dce4b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73a11bce-e8e3-4dee-b818-b0489a0e1eb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4932173-535a-43b4-8a7c-3a958d33e039"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec575ff6-c33d-4ad8-8ff2-f053f215ef6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87c0ed98-0f12-4277-a25b-f1a33dd60868"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dae4796-759b-45c2-95a3-bed6eed1155f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3358e595-f15a-42fb-b0e3-13600121e54b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ce1f889-847f-4c35-9bba-231c55d2e7cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3b828b9-a766-4309-8941-dc975eaadf25"
            }
          }
        ]
      },
      {
        "id": "7342c221-653d-4e72-8ad9-f3281a24f33f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "703a156e-27e6-4f03-9e7c-3c01284fba4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fea39ef-937d-4f13-8245-a00f175854c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19d4f55a-f17c-492f-a818-41d99dd18698",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9ac589-9b18-4661-8060-68845e7b8154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6240a59f-dfb4-43a1-85a1-b461256b4076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dddf9a6-1096-41d8-8529-808b14a47cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0865f363-1438-48d9-9160-f7f7b68240c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8654f0ed-b7f9-4f65-aba0-87f662701450",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaacb45-8612-48b7-98d2-a5592be68837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7734d45a-1255-4c83-ba45-00e55c9964a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6f9fa5-ee55-4148-9d1a-b0fd977e510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f717e092-91dc-4d95-9b4e-fc3600f87d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3f620e-eefb-4608-8077-065ad2e0c613",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f83abd-3c40-4681-a081-a0151b7ebcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa7d91a-c594-4868-a51e-20677274c13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff6bdef-eecf-45eb-97a9-17f3798a9837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92378574-39bd-4020-b30b-e1760538a1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2bc4fc-f40f-4685-94aa-ca6e742bb4fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b94edf-97ea-48ee-8a9a-013d9e39a70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c0bc83-2dbf-4267-81c0-67702376c2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4375ac45-fe1a-4f0b-9de6-17ac1f70d54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "167d1ae2-332b-4a75-a9ec-af5b093ea382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de770da5-1a6e-4268-ab8e-a9268b841da8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9ee9fa-2ea8-4d4e-a382-7e95a95e6622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502b0884-054e-41c0-94ae-8046509eafc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acfec71-7ce6-49b5-a3d5-d55b42faf031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2600484b-9c36-491d-b4f7-d3ab35ff17ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17910d6d-7de0-4560-98f7-784d4039aa79",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71ff23e-cc85-4aa3-b872-33ba37c21bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b134c9-3660-47f9-853e-800b96496f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc0bb00-0908-477f-9453-f4284ab5fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1bd150-0772-4507-b49a-a63d8d5e76c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a76e2e2-e547-4e9d-8ad9-9aba41eaa648",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b5b338-78a6-4686-9a40-6b5cd38eee87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4780bdc1-6853-4274-a930-a3aa2b0aba88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e7447d-d9de-451e-8507-eadae8285959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3728fc7-3242-4d4d-baa2-93224f4e85af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fea843-97ac-476f-a4e5-2da1b7cb631d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee26973-f968-49b1-b382-6c01c026872d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47f9b93-3cc7-4c92-a4e9-f8561d38835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e76570b-c628-4dc8-993b-f5413699c06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec3002e-1592-476d-8ee4-a6fa15bdb4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c87b424-c12b-4d02-8fa7-863fa32c2c2d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aabba0-2104-48e5-be6f-7b9d80199cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614311a5-e820-484d-a8a2-e48388219a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6667ad-a84a-41f9-9d05-f93a6ae7b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0dad74-c28f-458a-9cae-38d6cb595674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae82c8c3-5d1d-4e56-be6a-238503ebd08e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78575019-bc99-4dc3-9393-0ff0621dfb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab88820-2634-4534-9296-ff57bfa94a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806ee795-c4a7-428a-9aa9-26d706e4e415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9eb358-dba9-4e1f-baf4-a3a1507db18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55aaff0-c07b-462f-ab4e-6e67735d3611",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab11ef88-0e92-4e5c-a958-2039e948550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3633d1d2-feec-441e-91fa-5b7ae6aafe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f169e7-5ecd-4614-a492-ae3524b5e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb12962-fcfd-4493-a5bf-79fbc3d47d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185d6290-eabe-4eae-bd3a-16e13b972758",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c96119-8e98-4fd9-a82e-3704e9c2dffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17daf191-e354-44b0-911f-fb464bf1b158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaefc235-1bbd-4b64-bd42-17744accf2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79e18025-2d05-4d5a-bdac-3204a72cd9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bce1b8c-7e58-4e00-a763-40bc8e956083",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4f7f93-1631-4ad6-8e64-6a9c11709b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f69df87-4227-4443-89de-ace2ca173bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26c954b-5ec3-4c53-89b9-c35a9e8746e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37771de1-1277-40ac-afd8-3408e964329e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6e31e3-d9fa-482a-8359-b1321c835500",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8136cefe-1be6-4d85-bb8d-2a15895d153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbad0ae-f2d4-4183-8ec1-26738766a818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca9b71c-987c-47e5-a9f4-c0fbbf76a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e9351c-42ae-433e-a9fd-4d34f3029213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe42e36-608e-44c9-99c1-44065ab30df6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6bb8ab-77a8-4910-b111-f13305215e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce34e56-c82c-4da4-8bf6-82dd790b2392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf4e66b-05dd-4503-967c-983f147a3d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a5c6e2-61b4-4f72-927c-e1794199ea24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bea33c4-d529-430e-a21a-6a382ead509f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6fea6a-57ec-46eb-963b-1a900a1acf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb9dba3-9dd1-42f6-a8f5-afafde5bc60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2af5128-2d28-4601-a2d9-1b481fb19dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dced7445-fec6-4464-8c5a-dfc680f20a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d35b032-0958-49a1-b36a-37deb2157a2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad12bea-ad3b-41a5-a827-5fdebefae474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa14079-2984-44eb-afb9-9392315902e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bfc7de-c391-4be8-b7cb-3ab1a243d893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3525630d-083d-4bba-a67f-f4bbf79e0f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa32a16b-c253-497e-9b27-7953fb4885e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca987f24-9331-44eb-abde-12310d79bbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38205374-d41e-4cd9-a38c-fd6ab9d24fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13db7386-fb39-44b7-be0b-6eb2593a4f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "411bdd46-f081-4909-8f0d-a382c730ee1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8686fcd8-2154-4193-be91-f6f02b2b8a6c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a68b22e-f3ef-4a5b-8cb7-7a4944cb1920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480e24c5-1c23-43d5-8d97-56552234c9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd00f3b-f0d7-4df9-868e-f845dbd03375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d6018a-4db0-492c-9ea1-63162252821f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b71f719-a3b4-49ca-9a97-83dc4867fd08",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732ed2ab-f168-4574-9a39-9724804688e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061ce8f2-784b-4241-b8e0-f3d2b05d9634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4c33d1-ceeb-4da1-bb10-19243622052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb2a62e-9eac-47fe-af26-9e0c63f252de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effa8a81-d661-4a03-b166-3b1d4d633457",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b85a039-0f44-4675-94e0-52e4ad188242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8ed4cd-9572-4b47-8ac2-e9696c056597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89969cdf-a336-4def-b711-2a286fce400c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05562396-e473-4d75-a8bd-3e6b83550c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b8b740-9142-4343-89d6-3141935e3b4e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628a65d3-e1bc-4a5e-a196-6c7a4eebba4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8722bb19-dd64-44db-91d1-544fb4c576b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db84ff8a-048c-4f71-9c8a-24bcd8482385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea579ef8-4b18-4a84-a850-c371b168cc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7382cf-9af0-4ebb-bfe3-2acab09e6a17",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab83f6e1-1ed0-4cce-b659-8b86088652df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723d5b92-8dcb-4902-8d75-9a69c373f8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987d8a37-326b-42e0-a500-534b392c37a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0404331-dda8-4e95-a637-32aa3f06d534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f8e305-e4f1-4f96-a9d5-3ac0ece05a9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8616cb55-7792-470e-af53-2a5f092af290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0381f285-2319-49e6-a499-c24c05ae4ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a12eb62-b7dc-44f5-a9c9-83534dee3cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ab62ce-50d8-4019-a4cb-2ffc0700ee22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c9032a-65a3-4a2d-95e6-24d6bb813c81",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2997759e-73ae-4589-912a-05345bfb01b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61014982-c827-46d9-b23f-562e9d15d003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de192ad6-1b91-48da-bac9-de2f19bc56b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad76be14-dc1a-4386-a7dc-e8411d8ee78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc64b25-a8ea-4246-92e1-ddd6ecff8ddd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658dbd4e-3de3-4a8f-adcb-c716af0dab87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872d7e7e-d7e8-4af5-8fd0-0747ccc94e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db5b22b-8e4b-4690-a44b-e31eb4efce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6be401a5-f843-4e98-925f-ce25e59a5750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f560b577-5467-404c-9157-5ff78e452ce1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd58c0c6-2dbf-4400-b00c-7a4cb871792d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66804322-a191-496e-b700-e0956518237a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982ee7ca-ca5e-4f8b-91e5-31ffb88dc40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da0eef7d-81b4-470f-834d-8772cb6a4c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153c3823-5408-49ab-880b-afdadcd2ed8f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31876fb8-f4d5-4469-b3b8-01a212b32a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcb5d44-b945-4260-a02a-94c16d2d6ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e3bc26-9e0f-43b3-ac30-d1e412e4baf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5a3c5d-7d13-4e5d-bd99-dadb05b2930c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e889ae2a-6c53-4f9c-b99d-36a9cd509500",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9964f5-8756-4e0c-b412-04a757e48d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c449cc-0e74-4f91-b9e5-7764da9ebb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d86c80-ffc0-47ce-ba1d-e75c8c4559e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12ae4695-9fe6-4a16-80e4-8f95ef391455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6f2ec7-08e8-47f5-9189-38e41281138b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a301f87-e400-4981-b7a4-9efe1f3296fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028cc747-74b7-4fc9-9b6b-31ae9cb45f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7919e7-12e3-4b82-a781-d682cc9ba298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4f7334-5319-4b4a-a3ce-3825a52f001f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeeba2a-09cf-4f67-865b-8b7e12c5657d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cd939f-ea76-4e2d-8971-f5b699ad2099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65b3b4d-cfbb-4f6d-bb54-d156859c4580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0e7922-31d6-4f94-b521-b3673b31cb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490e833c-cf31-4113-9fc2-ea393704c0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f56ede0-5c11-4cda-a6fb-da4760dc7fdb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f0c1c2-9b5e-4a33-bc07-29aa5c4f1062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ada191b-d2fb-4828-a6c7-76989fed71b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8929e088-3ce7-471a-b832-4e742b87b771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ab7fe9-4e7d-4bca-af7c-fb3492e9cbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e23e23-a5f0-47d1-9d1d-4a7ec790ee46",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a817455d-b427-4892-ad2f-060ed36b0c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da51712-149c-47ac-9c63-91fb5e510bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e11e61d-1b84-4864-8412-02dc4623d837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0862501e-3de2-4c69-99b3-a60bc2bdf3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577007d8-877f-4413-a087-a8a03d3a5f69",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9aa473-2bd8-4b4f-b461-c5fdbe10936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac61e24-8ff6-49e6-a2af-1b2402209ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f519c6aa-9631-4cc9-82e1-3fb68f44a948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d9e956-70d9-4b47-ba84-ac1361215202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a569c33a-b94e-4c25-bab5-f83b5b5c50bb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a793c5d-2cc0-4d46-9bcf-79b8495fbc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bfc560-18da-427b-8257-d2ae9c0eff18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560f15e6-3938-402d-813b-0499a109f84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fc3f8a-7c8c-4185-bed1-cea5369e3bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245da1af-db91-4e88-ba57-dd07e3665db9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b3191a-f01d-44a5-becb-3f2bf90c9226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc1671c-ebcf-42d1-91a8-896671f511f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b45870-509b-4775-b78c-db5f0395e862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be8a5eab-1459-43b2-8850-cdec3632b8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aebf38-66e1-4ace-b66f-07e99d5d6ef9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed03a8d5-9c2c-4612-8d04-0e879fc798b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4617f0fb-2581-456a-8c99-64aa5b3582e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc92a07-e2de-464d-a752-97e5488d7252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7449d617-9a01-4cf7-b7a8-322181c4321e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f483fd80-9645-4193-b08f-6ae88626455c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc9ceb7d-a380-47ab-9908-f1baaf35cb9b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfec778c-f77a-4b52-9495-c84079071fb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "50303931-b569-4721-9485-2cbc93c1c440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e74f68-f68f-4566-915e-3ae4112154c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e4e1bf9-7086-481b-88cf-cb997a91fbf5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ec26003-2474-45b7-bf5a-82367e7547b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42b150f9-1870-4fd2-bbd0-6f89c971f6de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b321e6c-1a0e-44f6-859f-98edd9712409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bccff78-0668-4d71-b163-95ce7340ef89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a36285ad-187c-42fb-98cc-c4e43d8c66ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b524582b-8605-4ef2-b0a4-bacd4cffdef4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1bf37ef-d43c-4bfd-b178-0a13c6099c27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4591f1ba-4893-41e1-a592-afddbc05b059"
            }
          }
        ]
      },
      {
        "id": "13f3ff2c-607b-427c-a4df-4e9aa5000346",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "60c69ef3-36e0-450c-bc05-93f0f226c2ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bf71002-1609-48d9-b76f-861d36799eb1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d3c4d87-fb0f-445c-ac35-a20b09ed90d4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819d6979-d4c5-4d20-ae2a-34a66cfccd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa963ed0-61c1-405a-a7da-0236ee4067da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c37447-ff20-4989-9628-be77f9acde18",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a91a96-18a4-4381-bc1d-b3a96d151483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529e61c2-6f2b-4b28-8c0e-5588ac49d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d00f0f6-7920-4379-a538-e072b6cd6a79",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72005fb0-e16a-4cd8-be5c-580554dcf33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1cec90-baf0-4435-ac44-cd791b86913b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbc12f1-0b93-4099-a3a4-57c482ade2d3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5326aa-10df-4c32-9059-c80552ce4ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28978af8-67cf-43f1-b139-062b18a40aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338ca8d5-b30b-45de-a2b0-68c5b5ef3509",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eda2c2-b146-4b21-a456-f5fb50ce2757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9d0c26-c3d6-4b01-8b37-87e73c03ae33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fdcca4-fc20-4404-9d74-d3a5b765f17c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c8f9c6-616c-4e8d-847e-76a945b3e944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f097cb1-3fad-455b-8d72-f35f352f681a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f406f05-0f6a-4183-85e0-c52ae6d5e1da",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4d76d0-d389-4c10-9d3d-933b018789d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc3d638-8379-4ae1-84a3-0fbdbb94ded3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e2fa5d-7be2-46b5-8694-5f13993cea9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec9e102-ba80-44a3-8397-bf6f93e0d4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4c90ec-0d2c-4bfe-971a-023a4f3b5b07",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcc9ae7-17f4-4beb-913a-5577ead1d30d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d68a85d-a518-4933-9070-e73de1de0bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61a6256-4806-4634-a918-29a2343fbcd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d4bdf7-1f66-4db9-b062-995ac5374863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fc9a23-5b46-4163-ba6c-1db5727e9f3f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3ded16-550d-4669-a630-305a981aec4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0cf973-8707-43e3-a6f6-2d73f37783ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc58247-1982-48a6-8d06-4b70b6d36ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efd7c58-cbc6-4d72-8dde-be59c33e95aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55831009-8440-4288-95ea-71d9969f4b5e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62f70f8-1ffa-41d7-8aa6-8828905d0c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f89c2cb-deaf-42a5-b47b-808a9e4bc558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a3103c-4cec-4cde-830e-ee298bbc7bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2f44de-7e2d-4cc9-9f5b-29212be51605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06716c50-7237-4450-be53-deeb4d337b82",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698455fd-2072-4b27-800b-c2b682d94eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0056b942-3f5c-43c2-9b4b-d8d5c12daeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660299e1-fa58-44b9-b180-2df10dac0f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c1d0f0-ee46-4f8a-9b92-1c4e99e0af12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5fa987-8e3f-4338-b3a7-9cc9f9c458a5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055391f3-4f15-47c8-8d1e-fd04bea4b2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979724dc-f760-4429-b68d-8d2db2b8a59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cce92-2d33-415a-90fe-9e8b538c3046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f853a6-9612-4342-ac50-8ea8a4b4a9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca4e946-d317-49a3-ac81-fde960763e82",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1050e1-d9c8-4f49-bbfd-57dad99817f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd23cf0a-6f30-4af7-9ea8-3b3795dc1369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543e23bb-5487-41f2-91d4-2ac52a8f9f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1946a2-e853-4e5a-baf5-6b3baad9361f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dfb9c3-6822-4899-a3e2-caa31e624783",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19053ac6-b2dc-4bbf-b951-db5a10d6569a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e586cc7-bc34-4618-8786-1ea5394bb1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596f5b14-8956-4c2c-90fc-4d7939cd2a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ccd6a2-6d2a-4f17-a239-e6b929c3462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216fc5c5-4b26-45da-9cd4-a31d7dd22fdd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988db2ec-bc43-4d6c-9800-63be3006e19d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ebd3c5a-0ff3-49cc-96c1-0af9fa9b2909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c76b3-e0a5-4a32-b4b6-075161e8650d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce7a1be-f32d-49f5-9cc9-4404235225d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e6a48-97a4-4534-b5a3-5fe985a79113",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c060201-0788-4a63-8aaf-e33b58d6cb65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35d68a8-340a-4ede-8703-724b93d6fec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f16629-2dd9-4de7-b4d9-e3f280d79cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d234c13f-3f75-4e54-b4d1-348a887dc2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae20dd0-4806-4ede-8624-f63f66435041",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fbebbe-b1cb-4570-b014-76190a001faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd40ad2d-a3e3-4244-a00d-49fa31752004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199bca77-807d-4dfe-a90e-447dd5846212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ec8637-96cf-42d5-8d37-d87a3a1bd55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b45a6c-4257-41a6-884e-0aa2dfde8c04",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf50dc8b-b739-41d2-9731-356b57970510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5befecef-5a2e-41af-94d9-dfd4dee607bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689f4475-09b6-45c5-8f32-3af206346056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f83b67b-d26e-4ee7-a464-f5f3bcd60819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e373d318-ff82-4097-a1fa-72a5b860bb0a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9312d7b4-0796-40f3-ae2e-270be50454f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd206ab-7a5f-48ca-9d88-f7105c585c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebbc9c2-bf09-4cbe-bc81-e481fc08b7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495d1f33-ad57-48d4-902e-197f5ff73311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0482675-3141-4d8b-aa75-cb21a84e8af5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6d67bb-be54-4eb0-8f05-d1c28cec71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a73ff59-0909-48ac-8bb8-4213c4cc1f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be6cd88-9941-46d6-a275-ac88d21d33fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4fe102-a5d6-4182-bc24-1f2bf53b9169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60669466-e3b5-43b0-a85a-628f394ac2af",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c43273-3965-4ffe-a3da-218e751f8d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fae7967-5b3a-44c0-8c7d-6cfc679e1a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca2f9c3-0f19-4ce0-8a26-ff8146d9aa8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cdddfd-412e-46e4-9c43-2897ae81a624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3f3688-d9e7-42ef-8727-124060ee2e5a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3303c7-7898-4ed3-9419-dc86d00725ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3f649c-5a33-48f0-a7cc-f182c3a5ec11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a2f7b9-1547-46e7-a796-a25132d8ef90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ee9c47-2345-40c7-9a6e-64b75309d7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145dbd7d-b137-46cd-934a-7b326f6a0b59",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45c0d85-39ee-4f05-a125-cd035cfe2972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07363933-a827-4a4c-8bc1-e6b65059ee46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f86037c-cc82-4163-995e-ee36ab092cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987a1804-4487-49cd-a3fe-b42d3eb9b0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288f2656-35a6-4602-a38b-5ddda7a5d6eb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3853671f-eaad-43de-88a1-efdab9cf94b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b2e0fd-b291-4662-95aa-a090dab5d4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59438689-e88f-4aa3-98fe-b645581c173f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d10141-a9e5-41ff-b28f-a40f3d6fc0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a074dd-a359-47bb-b025-8e7dc4d5a9f1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c019f74-b6cb-4c1c-9091-6f5c6687e864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4099249b-3487-4ee4-a5f0-59e247a7e554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a90aa6-b500-4c0e-bbdd-3dd5a6cf4134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b862b37b-b107-46eb-8e64-205600a5a35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e7fce5-8e10-4350-92fd-de676f87d918",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d04486-607d-485b-868b-6f8ded75594b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "646ee5d5-4abc-4665-97d8-56d9880c9ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89b3ef6-9d4a-444a-a956-a2f6e9af7cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c0410c-d534-4348-abfa-86989b1050c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05984f5-2a06-4ae5-b39d-d5de5802377c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783d0c5e-1763-471f-a6e8-92747f8e7a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d8810c-7ef1-45c0-b8b9-4741aa5708c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46ba919-19de-42bc-a44e-9570a8af331a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9efd505-1266-4936-80f4-e291d9bf9dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdc2eb3-57db-4af3-8779-d367d31f1c0b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acdbfd5-dd3a-4d1d-9364-f0c92b2e9467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f246467-78cc-4552-97fe-ac5301237e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190e18ce-8fb8-445f-9869-50436e379f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1af7f67-e080-482d-b48d-59b94428ed29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eaf609-6fbe-42a8-90ac-dc020ddd3b01",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994172b0-638b-4b9f-a8ad-323dab7b3d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e76399-0ea0-4457-bec4-30c6d60e963e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503e8cc7-59ba-41f6-8cdc-c9778112d4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18619df2-f925-4ec7-b1e1-7289701b06ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51e19f3-b81a-4f23-bc75-bfd0a63e64d2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4106bf58-3bc2-4808-beae-697cf22bd25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc81be4a-bd3a-4263-85d8-001be83cc679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f322c11-b767-4486-979f-67ffc70559a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391c7e21-f8ca-44c8-b110-02da61cf4c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76466ac5-8ad1-4c17-9c4f-0ebd7600c7ab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6a23b6-f420-4540-ade5-79cd6826245e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0779b1c-f774-4021-a8bc-bfc70fcea364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0436de6-47b7-42d1-8590-33a7d94b8120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a79e17-a2a2-4ba4-be5d-ec45938eabe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c081c49-d84f-403d-9c35-ab0960612d4f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb64b39-a8d0-4886-b659-7551d8e9f13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48224dcc-5d50-4cba-89de-60ec2e354dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d04c33c-2d85-454c-ae4d-37fd7c087486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68a197a-21f0-40e0-9ad2-a6af33557239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b20fc5-667e-4bde-9969-6bb33230c62f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a413b0-e784-48f2-b364-e5200c5a4bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba66060-3f5a-4850-bdee-ddc230bc2ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1474bbc6-6adb-4a6a-b926-7c062f767515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526ad51a-de76-42ca-a0c4-35cf0e90ee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a742170-e3e6-4cd1-bc0c-bcc332807606",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39d9432-b147-463b-93c6-4a9971560011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201a1ab2-22f6-496a-9b61-4e119041d693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb86b085-a51a-4753-a1f7-ef8ae6add018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8036d670-1773-4781-8dc6-66b1a9736e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facef7fc-d296-4851-b210-cfc7bb45d3fd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2942d6-c4b9-459b-b77c-3d171e23e551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c04e57-72c9-48a0-a0a3-12277462715b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4f9568-d62a-4e22-b0cb-ba540d7e7eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b201bf-2769-4712-9313-fbf1021f29d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277b03dc-d437-4eef-aaba-90f589d74d2f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f53fed8-456d-4c5e-8afa-49a17d868061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932229b3-5f30-49fa-affe-8917215c153e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe07f77-90fb-4901-bdfe-d194ad37b966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9b3715-1caf-4cbf-ba71-d994c06270a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b910c77-2bbe-4312-a106-91f3fe8ba21c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ec9dcb-55b4-49d8-81a4-1ceba09be9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7648319e-18d3-4708-8664-359deaaba9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab0ab7e-dc9c-4d65-a6bd-6c6d8f1f4f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5b4679-9c14-43f9-a5be-ba455bed1836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526b0e34-897c-467e-bef3-69b239fd9bc7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa6789b-6ec6-4eb5-a04f-4375f6e8a84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae13614-9ace-4699-b049-aab826d4aca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ae53c6-28b7-45e4-9142-7be730e2d6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9234ed19-f544-4377-95c9-9ad1c82646bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d5af39-695d-408a-aea3-d1475d611c65",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02512b21-5608-46a9-9bd1-face58be7d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961935c3-40de-4de9-b53e-e41384e0d145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968039ec-1bff-4439-968b-563ec3881447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e664075-8071-4bbc-8265-df8a0344e5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4656f9-9e9f-4726-84df-e2b231615f69",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe38fcb-2281-4a29-99de-5cb1bf38d263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ffe8b3-ea13-4ad0-9389-8519df4e9823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a626192-069c-4f9f-bf45-d26f6227ba8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd7debd-ecd1-4869-af02-767f7cd070aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0917374-c59f-4da5-bba7-2339a6df5b14",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2eb6bd-4132-44e9-89d8-173679f9e470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11958f1-b342-46e6-aa06-9a03e81733c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e02fa5-13af-4db4-a62f-973b3fac505c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfb2a30-a7b3-42c2-b716-fcbc0ac45c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b16ca90-d238-48b3-80c5-c619a8693958",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e452c62-af24-4456-b48f-422a81482eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c434be3c-a5f7-40f2-b69c-7b22242247a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f12ce65-6a45-4f70-ae50-a4fad09a6990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e02f70-da3f-4cf5-9220-7bea95670f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad1ebb0-993e-4362-b3d5-d7fb6d08d0a7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4925ae-f0ae-4b83-a6f1-6422bf5f5a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf6e316-5fcc-4c2f-9ab2-26964874dc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce59999-3fd1-462e-81e9-73e2aff61f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ddb85c-a4b4-44e7-9157-8c437229c37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd75e0fe-4237-4cdb-95b7-3d7ebb3af2ca",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da135ae-8fdb-469e-9c37-6e5c2af268f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0e2aa6-de50-49b8-845b-69ede3471955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2e8b67-111e-4500-978e-f391a9cb7a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ffbcec-1242-455c-b611-5ae8bb0fc28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54d55b1-6889-4eaf-b64d-573328461810",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90afb878-f3d7-492f-8f7c-7aca860258c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153dd673-408a-4911-8a88-8f95bfd55420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66882fe-d236-4029-bf18-f91648052667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b229269b-da84-45a1-8f98-0fea745a8016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dda442-32de-4417-bad6-8cb36b2314ef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2603ab-d859-45ec-be99-8e582c394e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286e803c-b3aa-40d4-9468-919e1dac870b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1205dd89-c13c-4412-a2ec-39cbb7fadb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09afbba7-0de2-4050-8013-dd9a064a8f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b988eaf-3dba-4a7d-8782-4097f8f04156",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90cfa6f-07c4-4dbb-b352-3d83109ef75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf8f9a2-f215-434b-988f-5ef913f2f959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d976b9-407d-4130-a227-fdb241c6f814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef53ba35-8e1f-4d35-bdbf-8ee6610a6ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac14ace-dd23-474b-961c-54c43a1dfa0a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe24a8b5-eeca-4295-ba3d-346e3cedcf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bfc46d-6c2c-448b-aa07-b87e4dcea5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6894275d-856b-484d-8bf0-7dc7267e1340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91f8d80-74a8-4eb7-b552-01ff7f8d4b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce4cd2-48e6-4762-b8c4-e808a076a005",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf583a58-85b2-4513-b375-31d14afa8090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb1bf3b-8bf3-4a3d-8f16-43367795a2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750cbe46-e7d4-4b75-8171-99e9fcc4a688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e74dabf-7929-463e-92f8-68bcb0654319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed6acdd-38c6-4f1b-a638-056413955a2e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e38187-45aa-4603-afd1-bd7f9648ada4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d093e4-cc16-410f-9284-e3898f5752f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c550d4fe-9df6-4f46-81d5-21feea9a4491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dd2808-aa99-47db-b54e-c0d937a32477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e19e60-1ebb-46c9-8733-7bdabe0df7f2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5cbf41-550b-44b6-95b3-c18d03dba93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd90dfe-9bea-48a7-9399-42110566f3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1feb62a8-89eb-4f97-a30e-965c796a9424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed09437-4d69-4e46-a2cd-26eac7aa72b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a6f00c-6783-4223-a95d-0f10c7b2a0e4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb96e299-4a7b-4857-84a1-6a42afac6668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79837ba-3058-4639-b2c8-bc3f3036b82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6913a266-d6ca-4270-9e23-20fae5016c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b499fd-e277-4c10-a730-92cdfa4a5764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f25d1bc-c842-4ab7-9564-ee280b8db479",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a99ca30-6ee8-42a9-8475-dc7a2c321768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63893aa-9102-4cbd-9bbb-d3e87da5ae39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d475623f-4f4c-4ebf-8ab8-8ca44440e406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19a121a-2c59-4d09-a841-67cc9ded10df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c999b39d-a728-43b1-b4ed-5be4dc36b742",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319ccf10-18c2-47d6-9554-cd4b46a5d860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73fe3f6-1edc-4929-89df-7b2d3a84dd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47984f72-c136-4f44-bdfc-0b82127d2f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6491e829-5a42-4850-9dff-0f11678760e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796060f9-7f9e-4ff7-a1cf-2a613f111068",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec37d83e-4a44-4906-8645-cd4d848d8c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35408ff-ab7c-44f8-ba1b-27cea784b80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6867959b-2c6e-4e49-b500-7b77657a8dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05c6e1f-f173-4d7a-9942-57ffea0704b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988537d9-86f2-461d-9ce1-a2826bf61eb5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8749eaa9-8a3e-4504-a716-01a23073c1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b6784e-0e5b-4972-b7db-8e01bf9eb817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67030642-5782-4443-93b3-6e745b538788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9216cfe8-10c7-4e9c-9034-817c414fa7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a725a33-ffc3-44d8-a150-abd183e4cbb6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884e3cee-3698-40a5-b61f-fcac61ebdc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a049ea-007a-4b2d-b729-f5285de15feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016d39f3-1f79-4390-8a14-e02e6d0ee79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec74b4fd-7e4e-4b5c-9b8e-82caecdf7748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e61842a-18b3-46b6-8d4b-4fb3a050400d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b731a580-569d-45c3-8273-3c3a6cc29b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3828f77b-404e-4899-bf47-29a8514b2169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1b7e88-bc13-4b89-b99a-e5a01d6681ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f28e43-2d7e-4b48-ae53-b676e289e745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7d0e56-271f-44ee-8bdb-c870447c6658",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23518c06-03af-4fc0-93ce-c69c7975bf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c5bcdb-5114-4a44-9be8-ebf900a093c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ae26df-7880-4f34-8d7d-f347de6efdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36048fa7-f57e-42c7-b931-3b7ccd1e7daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd55144-7bef-4773-ae72-ec7f6ff23f48",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170f161f-9636-41ec-89de-44ad99643504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be62ab46-b20e-44d0-87d3-aa6d48a3875f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf6779d-cca6-41d4-b681-f0ff9aa86c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc03933-7539-43be-811e-2d69a581d94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca0a61a-b0cc-4d48-945f-f3c4f8749467",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04f73bb-5ac5-4fbf-ba8d-906515ae0520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c08173b-cb0e-4d58-a71c-011017dd165e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2001eb12-2a26-4cb1-81b4-a9fdb1313511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f58914-ec27-456c-bfe8-5a74338c0d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2f3086-a355-4269-a2a3-a8ed9b6ae546",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103a81ca-6e3f-4708-ba99-f95d0468b2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691f7e03-7020-417c-a275-acbcd80f67c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9915a4ec-1840-48da-aaa5-521e2a19e59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab02da69-3831-43ed-9518-66a41dc55316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858b153b-539d-4055-b3ee-076031bc0e1e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd7654c-e5e6-44dc-8b2b-f07b6e142d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8b089b-159b-475d-aee4-8fe3b2146db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed60790-5866-4029-b1db-8ca020eafb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2febf60-51c6-4d47-b0ea-c4f30ba3e265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70557609-3207-4b68-b912-9ba86df223cc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8032f81-3bfe-4157-9feb-fda41a69f342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88c4e6ea-2441-4d68-99e1-86ce1dd6df00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e40e95-9223-42ce-a026-74ff1c60f328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa52613-3bc5-4f63-9dfc-628f4ca2d611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629370a7-e138-43dd-9f14-e2617decfc90",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45efdbcf-954e-4bf8-848b-6f1f2878df5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d379793-a82f-4a2c-9ea8-fe01149745b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164ad087-d782-49af-8449-afa56fab0e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f245a2-4d0b-4942-a54b-d043cdc1b03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59339d2-7df1-429e-a5bd-e429e5355630",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b3f0f7-d4f0-42d8-baf6-d870e00a8aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abb264c-1250-4009-b8a3-12a41f1c6aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5838da3-5137-4e15-9b4f-8897d3c85d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28802d69-1e4b-48d5-9e30-4f4354d33b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2034675-20d5-4468-a5b1-761eb749a353",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2a7b98-1a0a-4f7a-8161-0abdf7409c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9b3fe9-5046-4c96-a76d-760aca6a088c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1d6193-5767-4a63-98da-0be2034b1ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51b45e1-5502-4cbe-9aeb-ef588e1fbcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a77c4f6-9833-4d7a-aa54-6d02ae8b1aaf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2489a8a2-9b26-42a5-9f38-e4be1f82e3d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5460ae20-7c1b-4553-89c6-60cd3407748d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da0dc68-e593-497d-bc08-f682ea4ab207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0977e0a-5176-4ae8-9265-bc3dca183da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9213a6e6-d883-4b14-8f3d-aa689155b191",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d398c2da-63e5-4ca1-bba2-48b26930f8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f293c8e-c889-44c2-91e2-3b510f985b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3778a57-08fa-4a7c-97c0-86683a83ea71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6bf863-2846-4358-a65c-79930549b384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c272f3c-50c9-4e35-93e1-d17ed7dbf455",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabb496e-73f4-4542-97c4-9a90e91ec149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05fe115-1d93-48ad-ad6e-10ebac515a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876ccc8d-3775-435b-b86e-392d113fc9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9271586a-dcb7-4b7f-8b4d-39547a33fa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee363c8-019f-4a3b-8b4f-4687c6ceb99a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74f57da-bf61-43eb-a60a-15ac52478a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3238dc-a201-4fdd-bb5a-cffdfbf9caae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da64406-043c-4976-9ec6-3869fd23cfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68f8bb5-e21f-4774-b1ac-49c897d9627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be03eb72-caf9-4237-a542-468bb6fd9265",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a01956-07e8-4ee2-bdd8-c8db772bf830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b4ac5d-080c-490f-9414-06b8f7887efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2890d4-f341-4b2b-9a06-5813e5fd3299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0e49ab-60f0-4aec-973f-c314a4c8d137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b05d99-415f-40d1-a83d-1e79e4afb149",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026681ec-be35-4766-bc1d-dcdba4509405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e9f504-e4eb-4404-a9f2-782e0bed9588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadd24bf-fea8-4f91-b292-9f20d15346aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a281aa-2c7f-4549-8c80-6a4851dabed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b607cad-7a94-4b25-a172-fc9683cf2cc7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1a9a53-16ec-4c0a-afd6-1968a302011a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "784368bf-afc4-4fb4-967b-c3146e97167d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dca0cc-7233-476b-ab34-d1d4cdffc03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ce4cfc-a874-482a-8945-add43caa00f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea4aab9-1088-4497-9963-840df050e505",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d4cbed-ba7e-4bb4-adce-32794a5e4659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f91bdc9-7da7-472f-9e69-1663df41fbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a275b68a-7e79-406c-ace6-e098cf656071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dfe2f6-b59f-4b27-b598-e17f914ada15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77e0c32-78d0-4a69-8d16-c3b09a59fff3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af12f9bd-8446-46fa-835b-0e0c47f5b58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aaa23ad-8ab4-4a1b-b672-8afce64f71b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79d82aa-89e0-4650-a2c1-0a1163f93dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d76379-da11-4456-9a70-c31a473f0542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b224a5-8388-435a-bb86-975a8685e695",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de78dd10-09a0-49ed-8aa2-033217abf0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca627b7d-5fdb-43fc-bdbf-ef6927fe5ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1222df1-082c-437b-a596-f1bda7ab3b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb9c64d-1a55-4adf-9b70-9c000623715e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bc7678-e533-4f56-bd62-3dfe4ec20375",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36b660b-c8af-4032-baa0-f9d4f65d8651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0a5101-8fd2-4e89-a027-bf079beb5cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bea3064-816f-4b98-9805-cc914ba3760d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43843028-4b37-460d-ab03-8299858e4c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639792d8-bdd2-4511-8d49-fef85a010e5e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83035e24-7475-4f80-960b-a4a8a6452465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf8007a-106d-4e55-a4dd-e333927b6012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdb92b1-58f5-4aaa-9913-cd232312877b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ea82f8-81e6-41bd-9090-673826902f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8754728a-ec85-46ec-b657-57288e173b78",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f993157-8b8e-4ae3-a3e3-1d4ab743bab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c72cb72-9ab8-4b28-9352-86ec4b722a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982f8c20-5a77-4c76-81a8-06a4539aeeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56592648-4023-4bfe-8cc6-e0ef819e0713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c028f109-4969-49f6-b29f-5a67943bfe06",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4544d55-052f-4e2b-b8a1-c72ea3ead7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a5edd8-29ec-46cf-b8a6-f6c9bb19eade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af960733-5e88-4a13-acda-da92159965c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d66978d-2c44-42c0-9beb-9dd6bf294a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a387a09-90e6-457b-80ef-359d38a05914",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b394c964-7134-4a08-afc1-15cd01e14500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa83081e-08a8-4e54-a8c4-dadaed595963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad15ec23-9a12-4857-8061-768eb9087ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db7e1e5-e5e6-4b9a-adb9-5652656a8bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916b09c5-165c-4bd3-9c3f-d7fcbb0cc370",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64b4fc1-ebfd-4d43-86ee-20137acd12d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd734c92-da44-48bd-adaa-06804fbf207a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe62e6a-a731-4cf1-955d-c229a7daf723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e60a0e-10b2-4dd4-b306-8b86d34276e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b5818b-9ac0-43b6-8b79-6161c8a7906c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3c1df2-2d47-482a-a661-34a659648ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee03039-f5dc-463f-a572-052a20ccd85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9915e185-1a30-42a7-88e3-49e982e5982f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c339a739-bacf-4323-996a-6e6f4d929320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9656c561-0113-4f78-afea-3e948f0c7c8b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8272264f-ba9b-481d-bb43-5ccbf3662011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b47e4f-f538-49d8-b828-440aa795840d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cd88b7-d8ec-446d-81e4-6785104d4562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292fba27-a031-44a9-aa19-6e6623c85c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac2ca72-46a7-4e09-a47e-70d4c96cdeee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18803226-a9e0-478b-8b68-0afa5f480339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87db36b6-1c60-41b8-b303-cc5d7bd395bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e6c3f0-6662-427d-9c45-40b99483e8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1604094c-0077-42e0-a77e-483cb5ffc47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac476b6-5689-4e5b-94a8-4d76ff14de80",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc256881-83a6-4997-9dd3-a7f149371b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc58fae0-ce96-41c6-85d5-aa8187d4d1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb33733-8849-4c4c-8708-3a03ef1fc940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9e54cb-05b4-4a7f-9f7d-fba6313211dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdd6119-87fe-46c4-8acc-82b0948a4a34",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cde771a-50dd-433d-8b41-8b3fe3fbae2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc305d43-1be4-4377-b28d-d765c2190abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13887398-3e38-4890-a8b4-03c50deba7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05d05b4-db46-48f5-8905-5775e1cd7765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9eed76-e05c-4f8c-853c-064207cb55a7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48fc17b-d89f-4025-a9dd-53b128043edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04285233-bc8c-4ee8-9707-7970e7b5ed1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54d8f3f-178d-4a2e-b8aa-52f650ab3f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c525d36b-af56-4fca-b506-a8cc4ff4e013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34836ebc-1f82-4487-8d45-f44be103c70e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cdb2f6-c7ee-416b-845d-a967a2d1bf73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d3ba4f-91ef-4203-88a8-64a6c1b78a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ea18c5-4d91-4046-8845-da8fcb11ab52",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79bc0cb-3f48-4a9a-9c47-969f43e9f2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12305948-10e4-4a5d-83dc-dd5247e3a133",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61938547-5d35-4632-9c14-fed83d704e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "271b1d94-25c5-42c7-a7f7-7fb276d8715b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72e8523-7c53-4945-bbfc-8a5d39f0e3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7339ce24-5c72-4d4a-af08-aba12dc37a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879bc985-0dbd-4a85-8da2-3ad7e2f8de47",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6b9189-d08a-4951-8dc8-7c93e1594efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa6ffeb-77f4-4b26-bf39-4c4531a98b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf898cdc-ca19-41e5-b5fe-6bb56d3af445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eda171a-11ff-4229-ac9c-70709a3c0e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acee19a3-0d6c-438e-8368-b291875c3030",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ecffa7-7055-4e43-9cd7-d5c228486cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8a36c4-d641-4f02-b13b-076cf9b0ba70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4641fb01-0d70-456a-9f43-b5753483cfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354b65f2-1ae5-41a7-9d4f-5f8c57d6fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee672a5-d45e-461c-80d1-170c2fe7c49b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d3416d-1b0c-4eb4-bde7-3d4a1b1907f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38cdee13-d1cb-43e3-8297-7b2f50b460fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89053fa1-d5ad-4c7b-8f82-cdcad028d756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a232599-56c0-45c1-953f-d4bcae49c6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0281babc-e38d-48ef-bcfc-5589f422dc66",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8436ee8a-e34b-4bc0-a864-5c1c18b52574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1518e0a-8a5c-4261-9c25-149a147605f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a953b1-4489-44fb-be48-144357f6aec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e5fe5c-cd11-4076-9d7c-3f288dfde93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168540b8-859b-49f3-9f47-9f14841cedc0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5328c824-1bb4-4477-901c-99f3dbdde4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d17bf22-f672-40ed-b74c-ef59c12074fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d55ca5-b3f7-467c-afc2-964085ed00ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4818da-0f7f-452e-b714-d63053645569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b935ab88-9896-49d3-a19a-5ed787a422ea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a6b5ab-8915-4aa9-afac-5d68f3629862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8784ca04-565c-4f3f-89f3-51c6c60cf367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf05b62e-2b02-4ecb-84ca-09da06c72652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89fbe53-68f4-43d8-9e08-30132fc8cc9a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76619544-ca5a-4405-88de-84553744b020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cce0e1a5-d6c2-4589-832f-fe3bb6ea02c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e96ef16-dfd8-4fa0-8adf-260909948774",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cebff02d-9166-493c-8cec-0ead7c87c8a6"
                    }
                  }
                ]
              },
              {
                "id": "b846ae34-f5de-48bb-a226-6f58a85189dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "601d5af4-08cc-4e66-ad71-a698471951b9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82d8571-8fad-4b90-aeda-ecd6c57c56d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "795feda3-2557-4fbe-b967-29bf5f1fa515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c6db2d-a6d0-41ee-bac6-871ed81e6433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfdcd7d9-8d3c-4ced-9b78-e7f09a896e77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9478610-f202-49b2-bb49-76625fdb5deb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36313bd8-df42-437e-96af-58e20642cab6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f85086ba-2e22-4fb7-80a9-a1961925c146",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43f667ae-dded-4bdd-8060-db286d297726"
                    }
                  }
                ]
              },
              {
                "id": "06b530f9-601c-41e7-ba24-0a1a6c0be9a7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c3e1973e-e1ed-4a73-8b44-6c24c1c1465c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7bb834-5be6-4cd6-a50f-c7f4e88c19cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4c59c171-a357-40d8-9d32-c4f089e433a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93be6401-0281-415f-a328-7bd9e5a24442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e83200-2049-4ac5-8d79-b8a22c380112"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96a0dfb1-f5af-490f-9703-69f9494f55c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99e31b31-3d48-4a79-b899-ebdbb1b28baa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c85d021-ba82-4a2c-9706-27a496e0bfc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5639ae9b-9e3a-4b9b-b709-52177ee52d0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf96a049-fe9d-4cdd-a54b-2e0c7046ee50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7256e6f4-f96c-41e2-922b-b0bad8df6f07"
                    }
                  }
                ]
              },
              {
                "id": "ece3cefa-cab2-406e-be24-c0f00edee2b6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda71903-9e08-4af8-b1aa-56805e7c454f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d535bc70-7090-4ef8-9ca2-00aa4a6139b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3ddbf88-7245-438e-a449-9d3ad9283963",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8e3e11e-f9c2-4cb5-87db-f03a849cb73d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6342d424-1951-41d8-bd30-5033c1ce176d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "70e0d080-9749-4e09-8c2d-fa7c49f9dfbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5be21ff9-399a-4952-9454-d2d74fe91f23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abeb0606-66d1-4720-904e-09039c8dafb9"
            }
          }
        ]
      },
      {
        "id": "e4f94647-18fe-4731-927f-d26d6b7a9f2c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c1b95db1-ce1c-4fe7-8365-0d735d0d1d2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "397fba3a-ef58-4094-aedd-260b4d68c5b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea81493c-e3ce-4f82-a173-33afffa7a35b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f54d12-3cd7-4753-9f32-5014fde10a61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "faad2bd6-347a-422b-9058-3d58bea31bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea0ad32-7415-4090-be81-1438dd0033c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7de2f17-6e27-4ea4-880a-2e2425d1a08b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "034833fd-35b1-4f15-9304-a8bece07aa89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0e8e803-3471-4767-b62e-130f8b4bf509"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "942025ed-5b86-4545-8289-1cc525bce58d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f700cbc-eca8-479b-9cdf-fcfe3cc3939b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e18e5387-0d3f-4f89-936d-3c3c66403ca9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "70476c7a-c37c-4181-97c9-17f294a4765f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b56bedf0-ffbd-43f9-8526-48298211d780",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fcb5b0d-1c0d-4a8a-a686-efcc7bce8deb"
            }
          }
        ]
      },
      {
        "id": "b074d675-623c-4803-9880-bfe4b0a1492a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "239277e3-319a-4d70-b137-f4ac44707356",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4faeeea6-9593-4707-8d8d-7393b3783d3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "713449ea-526d-40f8-a4dd-ceabcab4c7d6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9ac795-4881-4225-bbd7-518cab27a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8edf3ae-dff2-4c65-a534-96a5bf462602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32414f8e-22d6-43f1-b670-4c2a5d0825b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c7e42fc-0e31-4d01-b3e6-13209b99a7ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d490c1a-97df-4211-93b9-f14f9a1ef544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e63705-83d1-4ba8-9fab-b4642a8ff378"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67edd74a-4e68-4ad0-bb18-4c419c7b5b6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52bd38ec-5f29-4191-9f95-ccd23d1c1362"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "428605eb-29a2-411a-91d2-8ec4c1fa220a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a1b7cf6-3a47-4e33-99ae-3c32cefd25fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dccfaad8-54f3-473f-9d1e-0e2fb2ec0fd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bbd874a-44bc-42ed-9d58-954fa26f416d"
            }
          }
        ]
      },
      {
        "id": "79c2a6af-f536-47bf-bb50-bbbbfac974fd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6fcf3ff5-6899-4323-b9cd-d9b5f3c69568",
            "name": "Negative Testing",
            "item": [
              {
                "id": "493231d9-fd0b-4dca-8fd6-aa5a59f48527",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bce7bb24-7c7f-465f-9482-40498f326a72",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633e5bfc-5690-4a4f-9f8c-7e5507d58a65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e9cd7a8-d9aa-4b3e-8d94-56101add9b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dcfc89-4a55-44fc-b544-e6e1176b0034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e8cad7d-d075-4cb9-92f0-1f3bf94d7ace"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4b33da4-4bf3-46ae-9b2a-e4361d92411d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53650c12-f19d-4aa9-9c52-7893739caf14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e62e8e9-6031-49e9-b0bb-db7a0c96c943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87f812ac-9e85-4c02-9247-2583e3906491"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d1f5f90-0156-40a0-8b0a-5419ed06ce4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f1e468c-31a7-4cfd-9372-6ff7d23ec411"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c19f8bdd-c8b8-475d-8712-ffbbcacd87b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ea3bda3-ab61-41d7-b3d3-f73d75b88b99"
            }
          }
        ]
      },
      {
        "id": "719f21a0-5035-406f-b0d3-6f1d405c099d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6603b05-f9bc-4a92-9dfc-b1aa173ffa93",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d41265a1-2713-4814-b61c-2cdd88d1beed",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e0710160-65c6-4443-bc85-264193ad6f48",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "294c380d-193b-49fa-baea-45f8680ba099",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0cdd0ab-4942-4b0f-a3a6-88ba9d08830f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.5793650793650755,
      "responseMin": 2,
      "responseMax": 297,
      "responseSd": 28.900583059588552,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721608885951,
      "completed": 1721608896324
    },
    "executions": [
      {
        "id": "00b74d91-67f7-4334-a4db-04da44fc177f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cb1c0b1e-80c4-467d-9c3d-1c6f1cede1a5",
          "httpRequestId": "0cb95251-03bd-4671-920b-310016f5c525"
        },
        "item": {
          "id": "00b74d91-67f7-4334-a4db-04da44fc177f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5b999521-f491-4ea0-affc-fa81dfc97f49",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "10ec3ce0-2dfd-427e-b03c-ab3a35063cba",
        "cursor": {
          "ref": "edec412f-8bf7-4802-b497-f9d76927639f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f94e85fa-4be8-47be-8b3f-c0aa966be869"
        },
        "item": {
          "id": "10ec3ce0-2dfd-427e-b03c-ab3a35063cba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "569c5aba-057f-44da-859d-d5f229e2671a",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "a315f693-ef84-4403-89aa-0e59d2455f8f",
        "cursor": {
          "ref": "59ab3f6e-5326-47e5-aff4-b61e49f978a6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "039e4a88-bfb3-4bd7-9424-a9779097fbc4"
        },
        "item": {
          "id": "a315f693-ef84-4403-89aa-0e59d2455f8f",
          "name": "did_json"
        },
        "response": {
          "id": "c912868f-3c46-41df-9fa6-33d50cda3f89",
          "status": "OK",
          "code": 200,
          "responseTime": 215,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148e3fa4-2a53-451d-a0e5-91c7786d2e54",
        "cursor": {
          "ref": "12ed3dbd-09e0-4ccd-87a8-258e52932840",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3c410809-8f65-4347-a0a4-f8ddedb740e6"
        },
        "item": {
          "id": "148e3fa4-2a53-451d-a0e5-91c7786d2e54",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6910a12-07e7-4fe0-b8be-5f093b762411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148e3fa4-2a53-451d-a0e5-91c7786d2e54",
        "cursor": {
          "ref": "12ed3dbd-09e0-4ccd-87a8-258e52932840",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3c410809-8f65-4347-a0a4-f8ddedb740e6"
        },
        "item": {
          "id": "148e3fa4-2a53-451d-a0e5-91c7786d2e54",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6910a12-07e7-4fe0-b8be-5f093b762411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67817520-2f71-418a-9c26-a4c691a5f8fe",
        "cursor": {
          "ref": "71e5df7a-a1fe-42c7-9c38-ebf1b9329a1b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a4caa66-f571-4c3b-8fc2-27ce3ce04042"
        },
        "item": {
          "id": "67817520-2f71-418a-9c26-a4c691a5f8fe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ac49623d-b08e-4c8e-94ac-916ced2fadc9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 175,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36737d25-4661-4e81-93de-c59b0bf61878",
        "cursor": {
          "ref": "b4d129d0-4fdb-4bcd-840d-8f19d37f1f2a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2b1bc2dd-7592-4bed-b0bc-e73051dac134"
        },
        "item": {
          "id": "36737d25-4661-4e81-93de-c59b0bf61878",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "985a14c3-b99b-405e-a662-5dd955bbd4cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121a72a6-873f-407a-8524-52016cbaba82",
        "cursor": {
          "ref": "e3c44170-8dc2-4a23-8518-1d115ed64724",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ca9c2ea7-9b99-4e23-b86b-a01f70b2f35e"
        },
        "item": {
          "id": "121a72a6-873f-407a-8524-52016cbaba82",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d701435a-3294-4b03-93fa-347c7318af12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19adfbe-19af-4059-a9fc-390bb48204c4",
        "cursor": {
          "ref": "59afb086-86e1-43d5-964f-87012ee10820",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "059ec9c5-f8a2-47af-8c6f-41c12e9587fe"
        },
        "item": {
          "id": "a19adfbe-19af-4059-a9fc-390bb48204c4",
          "name": "identifiers"
        },
        "response": {
          "id": "0615a031-aa75-4268-a18d-3d0672ce72ce",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc0dc0c-a6a8-48b5-baf0-a218e43d8f21",
        "cursor": {
          "ref": "ae57f7bd-1e88-456f-9642-4c6d67ee412b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fbb98c5b-b639-4940-af29-e120f9677293"
        },
        "item": {
          "id": "3fc0dc0c-a6a8-48b5-baf0-a218e43d8f21",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "167e66a2-5145-4da9-bb17-c4df2dc68e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d828b5-5ff5-460b-bf74-bf8d04c46fc6",
        "cursor": {
          "ref": "116b5763-d0e0-41ee-a10f-bcab378fe0a3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c0d5dad3-94a4-48ea-8652-89b87874c711"
        },
        "item": {
          "id": "02d828b5-5ff5-460b-bf74-bf8d04c46fc6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c2559c05-fcf7-40f8-985c-cc0b0cac236d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc76f76b-89ca-4005-97d6-8e49f061b8fd",
        "cursor": {
          "ref": "743aa08c-23fe-4b77-ab78-4e37ad861391",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "92d09615-2ee3-405e-937d-d38321f765fd"
        },
        "item": {
          "id": "dc76f76b-89ca-4005-97d6-8e49f061b8fd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a462396a-ee8b-4b92-9bac-a42e0559a83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adc4dab-877b-478d-beda-e7351961636c",
        "cursor": {
          "ref": "3759bd12-6212-48b5-b1f8-dd5506abf9c7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f091797f-5462-42c3-b8ec-1eb2da79f86e"
        },
        "item": {
          "id": "9adc4dab-877b-478d-beda-e7351961636c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1d7c2865-8634-4177-852e-9a19fec49be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2232b3ad-e5b0-4f18-9a6a-4a8f2aac4056",
        "cursor": {
          "ref": "6053fd36-f7ac-49f5-a66b-d2f8b5f0fe40",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cf36b824-219a-465f-8b2a-6f2323e51ecf"
        },
        "item": {
          "id": "2232b3ad-e5b0-4f18-9a6a-4a8f2aac4056",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d2114ae-6d0b-44e6-ac62-3262dd14646d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75da418d-fb64-4600-b046-1ec96ff337a8",
        "cursor": {
          "ref": "6d8e26fe-1e5b-4012-8c30-674cde5eb80d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d31467d2-98af-45d1-8fcd-bccac11b5b2d"
        },
        "item": {
          "id": "75da418d-fb64-4600-b046-1ec96ff337a8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "24f4d8fd-1145-46cf-9e26-fff4997c46df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c8925e-c4ca-491a-99dc-6e68875e846c",
        "cursor": {
          "ref": "bc28f5aa-c316-440a-b362-9b703e298167",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "21ece08d-dc3b-456c-b901-6724a855e05f"
        },
        "item": {
          "id": "17c8925e-c4ca-491a-99dc-6e68875e846c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6d8bf446-3c0f-492a-9282-b039b3b6af75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8c3cd4-88a9-47b9-8745-2b00c65fe389",
        "cursor": {
          "ref": "9be266b6-e58a-4fd3-9774-b8d218fdf603",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2323749c-e32b-48cc-94df-c6ee857a44f0"
        },
        "item": {
          "id": "4b8c3cd4-88a9-47b9-8745-2b00c65fe389",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eb0d6a24-f548-499f-b5da-f6f932670ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b9ac36-9bed-45a1-b3db-2772a0255aad",
        "cursor": {
          "ref": "543849bd-7fb3-427a-a197-acba71d9adc6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "82f2133d-8f21-43ca-90a3-8c21ecfcb62c"
        },
        "item": {
          "id": "06b9ac36-9bed-45a1-b3db-2772a0255aad",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f48535de-c8af-4ad4-9ebc-bc630eec41fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcddf4f9-de3d-40c7-9478-a43a98b01b30",
        "cursor": {
          "ref": "b54d07b6-9d39-4d1b-b7b0-fa3327c544a0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "799e6924-1ef3-4ef6-ad53-31a72539aa0a"
        },
        "item": {
          "id": "dcddf4f9-de3d-40c7-9478-a43a98b01b30",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "76246020-c51f-43d4-9714-a859cf6b52e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94182f62-c230-4fb0-938d-10268e0e0310",
        "cursor": {
          "ref": "f1c8af86-3f1b-4262-8496-16786e2a8ec4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0ce0c460-71dc-4a36-8ee1-ec571843506e"
        },
        "item": {
          "id": "94182f62-c230-4fb0-938d-10268e0e0310",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cfa23ca6-b7a7-4f8f-8c40-c4fa470209cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829647ae-6ee1-49d9-b779-a99628af7aab",
        "cursor": {
          "ref": "24f25c2f-95a9-4c5d-887a-a646a32e3255",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a697a0e4-1078-42fa-b227-23f0092efd62"
        },
        "item": {
          "id": "829647ae-6ee1-49d9-b779-a99628af7aab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8753ee12-c26f-424f-84d0-c2113fbe1622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb4a44f-57fd-4c1b-a8e3-f8f32bf7432a",
        "cursor": {
          "ref": "51bbdec9-70a2-4de8-89f7-3b6869b6d121",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a70fda1e-ee40-4d5e-90f6-02248009287a"
        },
        "item": {
          "id": "8fb4a44f-57fd-4c1b-a8e3-f8f32bf7432a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b4b63d82-cc96-4849-9c0c-b1bf6c3859d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a646722a-416f-4966-bd2b-ca4381f921fa",
        "cursor": {
          "ref": "71d00f45-cb01-4bff-b7f6-353f93707901",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bbf78abb-ea0d-4451-9ec8-6bba03a98bf0"
        },
        "item": {
          "id": "a646722a-416f-4966-bd2b-ca4381f921fa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "92516429-896b-4603-a9f1-61a6f096bcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dc7b26-dcc1-4d90-ba4a-f10c69d7ed27",
        "cursor": {
          "ref": "b24c55be-ff08-4f17-b88b-e372cfa3648b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c2238574-886d-43bc-927e-f58475cfb2ee"
        },
        "item": {
          "id": "00dc7b26-dcc1-4d90-ba4a-f10c69d7ed27",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "598a472f-4437-4289-9509-4930a71a0d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7261c7-cbb5-4421-9b3e-6ce57f09d373",
        "cursor": {
          "ref": "8982a63a-db06-4c3f-8b7f-4c9dfaefd09e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9ec919e1-40be-416d-b04d-284fbfeeedf1"
        },
        "item": {
          "id": "ce7261c7-cbb5-4421-9b3e-6ce57f09d373",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8eae4f11-c5b0-43f7-87fe-3cd47b29b960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddd3dc7-3e10-45d3-8159-1a056c05a8ee",
        "cursor": {
          "ref": "9d508a96-5687-4f80-81b0-8dc256dcfdc2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "10af32c3-6b4e-448c-9f88-af4c5c6fdedc"
        },
        "item": {
          "id": "cddd3dc7-3e10-45d3-8159-1a056c05a8ee",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fcf5c7e9-cc40-4835-b496-654a13a0e345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4d164c-fbb9-4664-a08f-a48772c700bb",
        "cursor": {
          "ref": "25ecb355-2ccd-4485-90d1-d08c00895fc6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1c1b6580-466a-4c2f-81e4-7040bf4a30d6"
        },
        "item": {
          "id": "4d4d164c-fbb9-4664-a08f-a48772c700bb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3dcad481-2a27-45e4-be23-acb8e3f97656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fa20b6-0f0b-47ab-94cf-042d68c5a140",
        "cursor": {
          "ref": "0f3c7c76-e86a-4dca-a6cc-1dc36c3c52ba",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a22d9c96-5331-4cca-befc-4c2dc74e3e12"
        },
        "item": {
          "id": "44fa20b6-0f0b-47ab-94cf-042d68c5a140",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "76321d63-e43b-47f2-86e1-849cf8968211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb09aa41-883e-472d-bf5f-7f267d586486",
        "cursor": {
          "ref": "9e8dfb99-e1e9-4a3c-ac20-7fb6b84092e2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "53356c6e-91d2-45d7-ad98-033b3756d535"
        },
        "item": {
          "id": "eb09aa41-883e-472d-bf5f-7f267d586486",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b116039a-4577-457b-8f8d-0d11d984b3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb34fcbb-d514-48af-a23b-592abf1d738d",
        "cursor": {
          "ref": "eece0c78-3a2f-41d3-a955-d767c38aff44",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5179e140-a728-489a-8f0c-0e4377d30895"
        },
        "item": {
          "id": "fb34fcbb-d514-48af-a23b-592abf1d738d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "17deb53a-1471-459f-a57a-617460245d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3f89e2-7eef-49c4-89ac-b32e3a1b2029",
        "cursor": {
          "ref": "c1bede47-a328-4daf-9083-604e1ae67044",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bcda9d90-74a0-435f-9003-c77f35e5ee8b"
        },
        "item": {
          "id": "5f3f89e2-7eef-49c4-89ac-b32e3a1b2029",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0200fc06-054d-4052-963e-95d8ac28c52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7368702d-1ead-478e-b67f-e6f2587cb912",
        "cursor": {
          "ref": "e63a04a6-3ada-4b1f-9f21-a802050e106d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "da75b802-6e1c-4580-81f8-62f7e1d8cd2b"
        },
        "item": {
          "id": "7368702d-1ead-478e-b67f-e6f2587cb912",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d483bb68-7f34-4aa3-bac3-d8f4ecf3d3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f6dd26-4a96-4ec8-8e14-05078087265f",
        "cursor": {
          "ref": "9bb9bd67-33d7-4fee-a228-f35ca051dd84",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e2b6ca11-f0bb-4073-a8e0-f12be6fb1185"
        },
        "item": {
          "id": "30f6dd26-4a96-4ec8-8e14-05078087265f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9a920734-ebc0-48e7-922b-26441b1f3b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32faf8e8-4ffe-46ce-8796-c0578ea1b3a4",
        "cursor": {
          "ref": "b7b3ed7b-7ba2-4192-a94c-ae02c0fd625b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e0303caf-1096-44f3-a33e-07a9ca2ed406"
        },
        "item": {
          "id": "32faf8e8-4ffe-46ce-8796-c0578ea1b3a4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8a864ff2-73c2-4215-a626-b7c069be8f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4604e4ad-3495-45a3-92fa-dcd334d97c14",
        "cursor": {
          "ref": "c36a5084-08f8-44a7-ad0f-5573a6029961",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "39bbc0e4-9a67-4fab-b196-a584df6df661"
        },
        "item": {
          "id": "4604e4ad-3495-45a3-92fa-dcd334d97c14",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "89f3ae8d-b1e8-4b75-bf59-1ab3ab0eaeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0a6e92-e2c3-4c90-8f78-4fefd5818a99",
        "cursor": {
          "ref": "37d4b719-ba1b-4243-ab51-b0f8eea64c13",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "67d82faa-1cca-4e1c-8679-77c06fb49a10"
        },
        "item": {
          "id": "1f0a6e92-e2c3-4c90-8f78-4fefd5818a99",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0c8f384c-c123-4804-ad46-a5b0027125b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9175e953-a52a-4846-956c-bba9a2f8f902",
        "cursor": {
          "ref": "c31c571f-7d59-47e0-8ea3-34e9ee6859b1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "43fb03ec-808b-403b-855f-4468fcadc940"
        },
        "item": {
          "id": "9175e953-a52a-4846-956c-bba9a2f8f902",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fa651917-2ad3-4528-be1b-b3952f36de8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b4b7f8-dc8e-486a-9758-632ae6af0b33",
        "cursor": {
          "ref": "ff6a17b1-5699-49e5-9b97-8d308ac81f4e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1b89164f-aaeb-450c-a518-4c93eac388d3"
        },
        "item": {
          "id": "35b4b7f8-dc8e-486a-9758-632ae6af0b33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e79b96a-03ed-460b-8455-b9a59b9c4a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a38943d-ac07-4f38-8c4f-82ae857df9eb",
        "cursor": {
          "ref": "2a6c12a1-6603-48ef-9553-e165e127ba19",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a2a3201d-099d-47e4-83c1-f577e7f67bb4"
        },
        "item": {
          "id": "7a38943d-ac07-4f38-8c4f-82ae857df9eb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f500cc41-6494-4c51-ab71-f9341cde9e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f663c5-0699-4456-be65-b4f71db4df01",
        "cursor": {
          "ref": "95d72034-e599-49c0-ba60-470737e55cce",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a5725628-289a-4812-8ac6-6055002d576f"
        },
        "item": {
          "id": "15f663c5-0699-4456-be65-b4f71db4df01",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "80fb3815-b268-4c4e-8d04-968b7ef0f4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8af4b17-285b-4e08-b6f0-630e7b364b1b",
        "cursor": {
          "ref": "f1425c39-9ccf-41d6-a1d3-8424c1616c12",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3e41f786-b0c0-4bb1-ad73-5d7929a539ca"
        },
        "item": {
          "id": "a8af4b17-285b-4e08-b6f0-630e7b364b1b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "87007e30-e51b-4ca8-b2e9-3d3e1fb6fe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c33edd-31aa-4bd8-be4a-dbcc3963051e",
        "cursor": {
          "ref": "f3264b88-d17e-47c6-9659-a8c2ebb41fc1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c41ef601-d98d-405d-bc9f-2af75fd6a85f"
        },
        "item": {
          "id": "87c33edd-31aa-4bd8-be4a-dbcc3963051e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "75810fb5-e47d-4b6e-93b6-11924cb26777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de74b28-a497-4775-ae53-1db21d4f282a",
        "cursor": {
          "ref": "e0370914-4e9d-45aa-8ff4-47b9ccb252c1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f85ae211-6433-4415-af57-e444c7100276"
        },
        "item": {
          "id": "5de74b28-a497-4775-ae53-1db21d4f282a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bc15ce8a-d2f8-45c8-b9d0-a70aab51c1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b3388f-8f72-42c3-b949-3dd2aba34b3a",
        "cursor": {
          "ref": "a3e00eeb-2e48-434a-8a7a-4179b52b26b1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0da223da-a78a-465c-b1ec-899f26f442d5"
        },
        "item": {
          "id": "69b3388f-8f72-42c3-b949-3dd2aba34b3a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "05ecee06-7ff2-4921-ae93-d0e731fdda09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c839c4-281d-4f90-802c-488cd3522c97",
        "cursor": {
          "ref": "a8da1ba9-f0ef-4b9c-b6f8-ae5e5f9563b8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "310abe33-f122-4125-b877-a9d63857312a"
        },
        "item": {
          "id": "f1c839c4-281d-4f90-802c-488cd3522c97",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f5408a0e-15fe-40e6-9086-818316683089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78171e77-082a-408f-989f-725413e6835a",
        "cursor": {
          "ref": "818028d8-3f88-48c4-a98f-1b5443334984",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "69f2ef38-4fb6-4c8a-9d41-7cc17f871e9a"
        },
        "item": {
          "id": "78171e77-082a-408f-989f-725413e6835a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ae82c055-76f6-426a-adad-881f38b2886d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4bc8a0-81af-4256-87df-dda0065e2d30",
        "cursor": {
          "ref": "1d93b67f-70ba-4d60-8317-31b58dbb30cb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "49f84f6f-fd68-4371-920e-8976bb662817"
        },
        "item": {
          "id": "ef4bc8a0-81af-4256-87df-dda0065e2d30",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6913dad0-cb44-44b8-bc12-f986d0134c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace356ff-7188-468e-a13a-31d1df051403",
        "cursor": {
          "ref": "c0f0116e-ff33-4ee3-81a9-16911ca32d7a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "50a2a35d-4de1-4699-8d2c-4dfec05d140c"
        },
        "item": {
          "id": "ace356ff-7188-468e-a13a-31d1df051403",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "18dcf81a-5a24-4f8f-be43-014d37fc6a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22e843b-1c1f-40da-974d-51d3f7d9afb1",
        "cursor": {
          "ref": "33fb4f49-c6e4-40e7-958b-d31433388ed4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0eff4d1e-63ba-419e-993b-5d03d3f784ff"
        },
        "item": {
          "id": "a22e843b-1c1f-40da-974d-51d3f7d9afb1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "25dfab0b-5efd-4ead-8dab-e142d13b6331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0e7e7e-3fc1-4fc6-9be0-1a3e28f6db62",
        "cursor": {
          "ref": "0fc766f5-f295-4fb5-8efb-35680d2ec5b9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "88872a85-fb54-4106-8fae-084bcf34f84b"
        },
        "item": {
          "id": "8b0e7e7e-3fc1-4fc6-9be0-1a3e28f6db62",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2601df01-eecf-4dde-b658-347edfd66546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680ee308-ec4c-46cc-96ec-6bbc52f4c697",
        "cursor": {
          "ref": "9784d07d-2ced-470d-a54c-1bc334fee85e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "767bc5a7-62d8-4860-ba38-9abea9a80ea9"
        },
        "item": {
          "id": "680ee308-ec4c-46cc-96ec-6bbc52f4c697",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "78bfbe08-5c8f-4a1c-8c5a-8e64a690e1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15024bf7-2cbe-4f63-a598-c09359089cec",
        "cursor": {
          "ref": "fd9eae88-5f8e-458c-b538-229cb3242bf9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ce8f2d45-235b-4c36-a347-f5d033517c6e"
        },
        "item": {
          "id": "15024bf7-2cbe-4f63-a598-c09359089cec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "56c0f7f8-64f5-4e9e-a05a-0738d5b62b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad79ea8-898b-4512-be4f-506de4357016",
        "cursor": {
          "ref": "f4ca0109-13d7-46fc-9a62-eceb0a9e1024",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fe859cd7-5f2f-4d1a-a040-ef2060f7ad6f"
        },
        "item": {
          "id": "6ad79ea8-898b-4512-be4f-506de4357016",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d64a804c-4e30-4e19-8a59-dcf505eeb15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97939cd2-5881-4d38-b16a-57c3131b714d",
        "cursor": {
          "ref": "c5d1f9a0-ca1e-45d6-b808-488bf28ecf4c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ef80b6cf-4301-40f0-9ca3-5b69e281f759"
        },
        "item": {
          "id": "97939cd2-5881-4d38-b16a-57c3131b714d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "48069105-7d92-4f2b-94a2-5218523f725f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2ef5e7-b916-4636-af3d-a1c76dbf4e65",
        "cursor": {
          "ref": "e92436ad-4279-4126-9e58-47c09a09aa40",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "95adb52e-c74d-4131-97c9-b22690562d8e"
        },
        "item": {
          "id": "dc2ef5e7-b916-4636-af3d-a1c76dbf4e65",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1801b9bc-6e0b-4237-b037-07619266e103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faf5344-16cf-407f-8bf7-9329075b631c",
        "cursor": {
          "ref": "aef2fe0a-a637-4289-aab2-47ac72536457",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e824d08-8058-4dd2-a7be-4be4fbe05273"
        },
        "item": {
          "id": "9faf5344-16cf-407f-8bf7-9329075b631c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "af1dc51f-754e-49ee-8ed8-5c2b61028d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f560ee1-1369-4855-8c6d-0aa24c629b18",
        "cursor": {
          "ref": "e86aa9a5-e45b-401e-8171-5773ca2710c8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e3ca561b-4f08-4824-b8c8-c14c8f3e35c7"
        },
        "item": {
          "id": "2f560ee1-1369-4855-8c6d-0aa24c629b18",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "96ec4941-12b7-474d-90b6-65a2a201d7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220ae431-d1c3-420e-a915-f4a724170469",
        "cursor": {
          "ref": "a54af155-9351-43c8-b5c5-79db8c0fb226",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0a0b89af-fd2a-4ade-a466-48b20b071b98"
        },
        "item": {
          "id": "220ae431-d1c3-420e-a915-f4a724170469",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a4157b36-ed7f-4f4b-84f6-72f477a1652f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31d722c-cded-44ba-9ff4-f53647ec91be",
        "cursor": {
          "ref": "252bf24f-af4e-4908-87b2-1bb6a748997e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2c7af04e-de62-47e0-bc9e-70358b9f0a0d"
        },
        "item": {
          "id": "d31d722c-cded-44ba-9ff4-f53647ec91be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d1272abd-a477-4a3e-b904-757bd67ede4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71379e19-d6a5-4e47-b1eb-f37a10279262",
        "cursor": {
          "ref": "2eced033-3098-418d-ac34-74bf0ac1d18a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b27ffe59-8c0c-478e-9409-a2b0b325d5d8"
        },
        "item": {
          "id": "71379e19-d6a5-4e47-b1eb-f37a10279262",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33e7d1c2-b348-4b78-aae9-623bc78e875a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e9e4aa-c196-4d0d-ae7f-eeac17b5ab8e",
        "cursor": {
          "ref": "9441c0ec-2580-4370-a0d6-8c973317c037",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e966f342-fe18-428c-9738-d54cdf91a3a3"
        },
        "item": {
          "id": "e7e9e4aa-c196-4d0d-ae7f-eeac17b5ab8e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bbc2521b-c42c-4538-9b8e-bfc02d231d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc17cd75-180d-402b-b279-4f91550b9bce",
        "cursor": {
          "ref": "0367d2bc-7e3a-4a1c-ad89-d16e232c86df",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d21f684b-36e6-4bd8-96fe-ce4b9a71f460"
        },
        "item": {
          "id": "cc17cd75-180d-402b-b279-4f91550b9bce",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d990842f-5a4a-4a07-b9a6-ace7cf8d0cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043b5cd3-61c9-4fe6-b557-59b0a47a2c40",
        "cursor": {
          "ref": "d15210f7-0f54-4b83-b3f3-bed0ed55f17f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "472bd6f6-446a-4ed5-96cf-150095b103cb"
        },
        "item": {
          "id": "043b5cd3-61c9-4fe6-b557-59b0a47a2c40",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "27dd2b48-8c03-43b8-ace5-69df56381aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe847329-0070-404b-a33e-c7541dbe8108",
        "cursor": {
          "ref": "7d9af08b-25d4-4510-8631-26cfc81bbe1e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e69ad0d3-8387-45eb-9bc1-fa2cc9689641"
        },
        "item": {
          "id": "fe847329-0070-404b-a33e-c7541dbe8108",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "31b08e62-bed9-4a5d-bd94-7c932835671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d726a6dd-bf85-4d17-80b5-c116607aecdd",
        "cursor": {
          "ref": "1307ba1f-d99c-4674-89f9-0d888fd6130c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "41505d09-ff15-437c-8ba1-4a68fcfd1679"
        },
        "item": {
          "id": "d726a6dd-bf85-4d17-80b5-c116607aecdd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4eef41c0-eb70-4439-8ca4-564af52c90c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fac17e1-d14c-4fc0-b21b-a8da6674e54c",
        "cursor": {
          "ref": "08e9f858-dc92-4323-8865-ca9fa1396863",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2b4b8686-b7f2-416a-91ba-1aa862e2d8ae"
        },
        "item": {
          "id": "0fac17e1-d14c-4fc0-b21b-a8da6674e54c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2168240f-8726-428f-b6b1-1169f4cc5c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a317db-a01c-4f8e-8e6f-721857e8f954",
        "cursor": {
          "ref": "443bcdec-4360-42d6-b3e0-7de007098b7c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3cba5186-5eb6-474d-ab6c-d0efafa64249"
        },
        "item": {
          "id": "42a317db-a01c-4f8e-8e6f-721857e8f954",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9dd39189-8ad3-4e90-b5f8-1bca3e7df365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997bc81a-5cf8-4b4b-95a9-4e1421cf8997",
        "cursor": {
          "ref": "c0bcb03d-48ad-4c87-a6ad-697492966f66",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e02ab53c-9ad6-4307-99a7-be1909373f90"
        },
        "item": {
          "id": "997bc81a-5cf8-4b4b-95a9-4e1421cf8997",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a2585a21-f662-4a55-b06e-167416c21f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5c4441-e8d4-4fa3-a76d-ee9ef0c07293",
        "cursor": {
          "ref": "abbac9ec-37e9-4577-8b42-065ccfe07d54",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60ac6e74-9706-444c-9e3b-7df65fd8743e"
        },
        "item": {
          "id": "6c5c4441-e8d4-4fa3-a76d-ee9ef0c07293",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e20b0211-6965-43bd-b369-09e3bd82c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3864ed3-b159-49f4-acd8-dc7757632c69",
        "cursor": {
          "ref": "270b6ba3-0e05-48e3-bc7b-e9416edddc37",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "944d30aa-4463-400a-9f6a-18c002dac6e8"
        },
        "item": {
          "id": "c3864ed3-b159-49f4-acd8-dc7757632c69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f11c6443-b2f8-4444-a329-cfa4577d79a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc69f05a-86cd-4572-95fe-77b80cb01e0e",
        "cursor": {
          "ref": "896388a0-7694-488d-a049-99f978a8a654",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "23bb3f3c-9434-458a-92e5-366878ed5b4f"
        },
        "item": {
          "id": "fc69f05a-86cd-4572-95fe-77b80cb01e0e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8beb8a49-f8bf-4670-9fb7-7ec2452d53bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120abf28-274f-40e4-a4c0-8bb49412e910",
        "cursor": {
          "ref": "007799ff-c480-4cec-98a0-2c2cdd9862e7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d3ba0efe-cf45-4d56-a617-c9be43c6f9b1"
        },
        "item": {
          "id": "120abf28-274f-40e4-a4c0-8bb49412e910",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dc6c0b54-cffa-43fe-9ce3-b2eb60d2e96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e28922-620c-4a1b-8aee-58d821839e9e",
        "cursor": {
          "ref": "5d28c48c-6c92-4e7b-b43f-61c0f46f64d0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "37221814-4d25-462f-ba97-f37a6c8c3727"
        },
        "item": {
          "id": "58e28922-620c-4a1b-8aee-58d821839e9e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aff8e633-4eda-4c7a-a135-04fa7230876b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9902ff-6220-46dd-b415-9d0431bf949f",
        "cursor": {
          "ref": "65d5a90c-b8d1-4a41-a2ff-6d9e49c4cb23",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5b56a17b-e3d2-4909-a3c9-879e7fe5a82a"
        },
        "item": {
          "id": "ba9902ff-6220-46dd-b415-9d0431bf949f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6a548b90-d202-4bac-9f78-c703fa219e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e081b39-9e06-4000-9547-7c9b0f2cc09f",
        "cursor": {
          "ref": "30a4f4b6-525a-427e-a0f7-9d5051aca638",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7e10c8e8-5c9a-4b65-9d34-896abd6d09c5"
        },
        "item": {
          "id": "3e081b39-9e06-4000-9547-7c9b0f2cc09f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "05db9d7d-439d-4ae4-af7b-6abb3cc8ab89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b979da16-133c-47e3-88b2-94640c6509ae",
        "cursor": {
          "ref": "ddaaa010-279a-4327-ad45-ce61b678d53f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "17ddf6fe-16b1-4b4a-937b-8e0b5bd1947f"
        },
        "item": {
          "id": "b979da16-133c-47e3-88b2-94640c6509ae",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1c51eea1-0495-4302-aa27-0560edf97a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5526b9-67f2-419f-b6c0-7794271e1893",
        "cursor": {
          "ref": "718e94fe-8c5e-4605-89af-dd647a9ec2c3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d00f37f5-134c-4e89-88d4-fff6cabdbc7e"
        },
        "item": {
          "id": "3c5526b9-67f2-419f-b6c0-7794271e1893",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a7754a5e-6c86-4a38-8dfb-57c62aba0431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc096ac0-054d-4325-9830-505b566f266d",
        "cursor": {
          "ref": "1c46fba9-979e-4262-91d6-590abc4179b3",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d4996f7f-0ddc-4226-8467-2f62a476a74e"
        },
        "item": {
          "id": "fc096ac0-054d-4325-9830-505b566f266d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "eb31d80e-d04d-4999-95ca-7ca05e4b0293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa497eda-5d8e-4327-be7b-7593f130bc3a",
        "cursor": {
          "ref": "21c069f7-5ee4-4672-9755-bce18af261b8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "73f4e6ce-ec28-4a82-9af7-cf432a7bf4d7"
        },
        "item": {
          "id": "aa497eda-5d8e-4327-be7b-7593f130bc3a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8b1a3448-5c43-4c5d-947f-82eb5f6bda2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b676be5b-edb3-4b86-ae12-f48a93a534ff",
        "cursor": {
          "ref": "1a91431c-734f-445f-98e0-b327733df7cb",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "29ed0846-9c5d-4971-93d1-879afc472227"
        },
        "item": {
          "id": "b676be5b-edb3-4b86-ae12-f48a93a534ff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6ef11fd0-b9e4-49b3-9127-7682a877c0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546f91e3-48e8-44e6-a0db-5383ed7106ef",
        "cursor": {
          "ref": "b05b9e13-d88e-4ba6-8f82-6fe3f52809ac",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cb1907fd-4288-4b5d-912b-1c582321a927"
        },
        "item": {
          "id": "546f91e3-48e8-44e6-a0db-5383ed7106ef",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1d3dc71c-9ce6-40de-ad12-de5963e73e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29359a16-11e2-44af-bdf5-63b638c0c680",
        "cursor": {
          "ref": "e91b0ddb-ab16-495b-b103-88f9991e1464",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "53b63cd7-d88e-40f2-b2e8-917901f867ae"
        },
        "item": {
          "id": "29359a16-11e2-44af-bdf5-63b638c0c680",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "86d4aa33-b3bf-4b7b-818c-85c98b4a9c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8c1768-c747-4da8-9cb7-fba19dd1ac9a",
        "cursor": {
          "ref": "ad75f2fa-de0d-4b76-8edc-8a225a540b83",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b44a0738-7ec5-462c-9870-276e1f39e7fe"
        },
        "item": {
          "id": "ff8c1768-c747-4da8-9cb7-fba19dd1ac9a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a00c5cc8-4e60-4fe8-bc7b-33c0b006d4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e01a414-24fe-410b-8bd4-28301db09ebb",
        "cursor": {
          "ref": "91a051f6-498c-4100-9f45-7118841681bf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2819d24c-d972-4068-a16b-e8acc4ea5a59"
        },
        "item": {
          "id": "4e01a414-24fe-410b-8bd4-28301db09ebb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d434dba2-b4f8-4f32-8ea5-8e87b9e29318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6394fc2-6dc9-4e4e-b0b4-f337677bb551",
        "cursor": {
          "ref": "11ceb535-88de-418e-b57e-41325f4bc05c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "40a30fad-f074-4887-acf2-bf8923b623f6"
        },
        "item": {
          "id": "e6394fc2-6dc9-4e4e-b0b4-f337677bb551",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "94bc9908-0409-4b49-bd90-ff5510dea0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602aba77-34a2-46f0-a19e-dbf699348908",
        "cursor": {
          "ref": "33a3d5af-a9bf-481e-812f-33b790810abf",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fd97b4b7-8882-47d6-94e9-60c6cfe43a11"
        },
        "item": {
          "id": "602aba77-34a2-46f0-a19e-dbf699348908",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "41c7fb5e-c9a5-4675-8915-27cecc627bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511daccf-8954-42d6-84f3-88dad092c273",
        "cursor": {
          "ref": "d81c4d05-d6d5-4be1-8f62-eed744b30589",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3060ed96-26fe-4c2d-a07c-d13e45a62772"
        },
        "item": {
          "id": "511daccf-8954-42d6-84f3-88dad092c273",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9b4f6fa5-6f63-4b82-81a6-295bc5a8dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02242f83-7634-4480-bf6a-d2836197bf28",
        "cursor": {
          "ref": "f781346f-4c51-4a33-ae47-0a42bfb4b049",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "55c99c6c-2872-4b83-aed4-4829cfe1e5c4"
        },
        "item": {
          "id": "02242f83-7634-4480-bf6a-d2836197bf28",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "728f8074-e696-41f4-a243-be15a418bc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902a4866-1b9b-4ff7-a7e4-5a62928980e3",
        "cursor": {
          "ref": "b0cf138e-cb6e-4fd2-83ac-6c40842cfba3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3cd9ef9f-7a89-4aac-a6f3-ea4d2fc5f16d"
        },
        "item": {
          "id": "902a4866-1b9b-4ff7-a7e4-5a62928980e3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "895aea9d-786d-4668-89c6-8634e1a29c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be76918e-42f7-4d57-80e1-d3d73aa1f89c",
        "cursor": {
          "ref": "c3f532f1-7c6b-44be-a8f0-9968047ad666",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c703105c-1f8a-40f9-bc8d-082d44267950"
        },
        "item": {
          "id": "be76918e-42f7-4d57-80e1-d3d73aa1f89c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6c9e8b48-60b5-4abf-a025-312ba82ba9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3be0c13-82ea-4dbe-8fd6-42e06481f9e0",
        "cursor": {
          "ref": "2d0925b7-5699-498c-ad4a-10703033aa3a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2f36c3d2-dfaf-4c8a-b52e-e1a3890ac25c"
        },
        "item": {
          "id": "c3be0c13-82ea-4dbe-8fd6-42e06481f9e0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "73fd5755-cb59-4f43-8d8e-97450ae99e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0efab4-2edb-4432-a0a5-3b6e4c110029",
        "cursor": {
          "ref": "70de7083-f377-4f84-b779-cfaad3e123ad",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eb63ea44-d0fb-410a-899e-679430fbe752"
        },
        "item": {
          "id": "8c0efab4-2edb-4432-a0a5-3b6e4c110029",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6ec46ad1-5a81-4afa-8574-055995015420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9509e65f-c6fe-4f4d-add6-af63d06441f7",
        "cursor": {
          "ref": "bf3e938a-3caa-413f-b912-d22ed9efb73c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "94a3b3de-3f85-4de6-a748-aa2990a5c8cd"
        },
        "item": {
          "id": "9509e65f-c6fe-4f4d-add6-af63d06441f7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c2f9f70f-8c54-4ce5-960e-ab243b0affde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cc762d-a837-4103-95ae-86a422f7d627",
        "cursor": {
          "ref": "f318498d-83ac-49cf-a2f4-a5ecc5aeee38",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a6f56da8-bc07-45cc-be0e-ee31f1327ea8"
        },
        "item": {
          "id": "b2cc762d-a837-4103-95ae-86a422f7d627",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8b0997ed-c84a-4086-bc46-d7abcab6b696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fe0c9f-3345-4673-8c0d-256397bb8e06",
        "cursor": {
          "ref": "e00b07d1-6b46-4ad7-bdbe-42931fdad2eb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "11dcf818-4a0a-4d7f-ae16-5e2c5b501ed2"
        },
        "item": {
          "id": "f1fe0c9f-3345-4673-8c0d-256397bb8e06",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f3532679-6bcf-426e-a126-232edb366df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27338055-1def-4f94-8532-e8ea72915704",
        "cursor": {
          "ref": "4e9f2890-292d-4a27-9bf1-0413eb5e3fe8",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f3d5a913-950a-4920-b7a8-fc2530896049"
        },
        "item": {
          "id": "27338055-1def-4f94-8532-e8ea72915704",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a5fc740f-abca-464e-ad40-14d60bd886c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3f219b-e509-42cb-a899-b69a14c36db3",
        "cursor": {
          "ref": "7841b7a9-7789-4f2a-99fc-54d3bbaae3d4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a7955a1f-8d64-4291-b314-f2603c441bc0"
        },
        "item": {
          "id": "ae3f219b-e509-42cb-a899-b69a14c36db3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "74aa19cb-fcb9-4396-b8f7-dedeb808c16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275c745f-09ff-4e12-b060-2bc570e11456",
        "cursor": {
          "ref": "1ab7bbd1-7deb-420e-a9fe-d54a5fff13fb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d4992053-a252-40e7-83b8-1d781a370503"
        },
        "item": {
          "id": "275c745f-09ff-4e12-b060-2bc570e11456",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1a395564-8696-4ad4-b784-d9cb0ed0625c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9b274c-cb9c-4496-b3db-73a4a4c24bf2",
        "cursor": {
          "ref": "07341a28-6c52-4a23-823c-6ffd1351bdea",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0a855635-64bf-4e08-a28a-5b12f19ee3da"
        },
        "item": {
          "id": "2e9b274c-cb9c-4496-b3db-73a4a4c24bf2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b8699ad1-879d-4150-8150-93c29bb52269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae4eb58-86bc-4abd-8daa-577ecc0c0cf7",
        "cursor": {
          "ref": "7c4288b9-b30d-4012-bbaa-d0a8ad179a11",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18a49b19-2aaf-449e-b8fe-97566a2239b7"
        },
        "item": {
          "id": "1ae4eb58-86bc-4abd-8daa-577ecc0c0cf7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e6c0f74-2146-4d68-8a26-3313afdfa387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e9ef33-76fb-41c1-8051-7e7e9f7adee0",
        "cursor": {
          "ref": "1921c09c-b645-4236-9bd4-47fa72c86d8e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c680daf1-25aa-4b8f-9f89-e3abcc52dcee"
        },
        "item": {
          "id": "35e9ef33-76fb-41c1-8051-7e7e9f7adee0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eb19173a-107b-4681-abe5-f1bd07307fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f2875b-aea3-48a2-9a29-53ef60f2aafa",
        "cursor": {
          "ref": "a3f55f26-9bb7-49c9-87a4-31f5d268b06c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b866de22-706d-4aa4-b57d-a8c5fbb35e6e"
        },
        "item": {
          "id": "94f2875b-aea3-48a2-9a29-53ef60f2aafa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5418072a-66cf-4ee9-99e9-af0aa245c3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f403925-86bc-4356-b9b3-e74f42e848f1",
        "cursor": {
          "ref": "bd136a6a-81d4-4a74-95f0-326b88bfaa5e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6fdb5792-4f93-44d1-88de-ce49b7d8f04c"
        },
        "item": {
          "id": "7f403925-86bc-4356-b9b3-e74f42e848f1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6196d740-4705-4e66-8c2a-4bd4b5fc9d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "25f9294a-ec9c-418c-8dfe-de84a92aa34f",
        "cursor": {
          "ref": "9eb3b5f0-fc62-42d6-85a2-a5a43b1e9001",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "69aebfad-fdea-4fde-b389-3cf4a8cf67a7"
        },
        "item": {
          "id": "25f9294a-ec9c-418c-8dfe-de84a92aa34f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ca7b2f0b-d160-419e-b5ca-617035854c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f5be46d5-b415-49c0-bf64-4efd18d759d2",
        "cursor": {
          "ref": "fbdec499-371f-4e52-82c7-d1b9b10aec7b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1bb25c44-9cfe-472a-bdb9-3cc81d803827"
        },
        "item": {
          "id": "f5be46d5-b415-49c0-bf64-4efd18d759d2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed77a101-8b0e-4591-9f35-eb4303b860a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "886e4c11-15e2-4d62-ad8f-6495c6d47094",
        "cursor": {
          "ref": "d4bbc658-db49-485c-86d9-156b1e379a08",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4658b41c-25c4-489c-a0c6-7cf1e268b2e9"
        },
        "item": {
          "id": "886e4c11-15e2-4d62-ad8f-6495c6d47094",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0dd4b47a-70a8-4b19-8243-f1fed1f49299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f3181772-e49f-4339-afa4-97f8493edb48",
        "cursor": {
          "ref": "ed7df3d7-8772-43ab-8a54-10806ef3212a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "238533b1-ee21-444b-a195-b96c69df5d5e"
        },
        "item": {
          "id": "f3181772-e49f-4339-afa4-97f8493edb48",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "db7b2a40-e154-4ea6-9102-21cf76510e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a16bfdbd-1c58-4f25-bc36-8b57b3914f4a",
        "cursor": {
          "ref": "989b0789-a7a5-49d0-8eb0-c492045b19a0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e01b177d-c2da-4d67-a012-6f75df3773f1"
        },
        "item": {
          "id": "a16bfdbd-1c58-4f25-bc36-8b57b3914f4a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e6927ca8-d99d-4cba-840e-68f7a8f3ea15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b62635bb-8759-4087-a655-5e3fb4a23d1f",
        "cursor": {
          "ref": "42b89579-d338-4fb4-9f5d-52ce7c96154b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9e04dd3d-2cf3-4c20-8f0d-a779b1f148cb"
        },
        "item": {
          "id": "b62635bb-8759-4087-a655-5e3fb4a23d1f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "707f25f2-ea4c-40bb-a258-4a9ff3124788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "19d4f55a-f17c-492f-a818-41d99dd18698",
        "cursor": {
          "ref": "6528e88f-2a99-43b6-88ad-2779d8d5425d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2f8ab69a-db2a-42d0-a4b6-351e5ac106bb"
        },
        "item": {
          "id": "19d4f55a-f17c-492f-a818-41d99dd18698",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "426c8805-3e27-424e-a9d1-c13f845c2753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8654f0ed-b7f9-4f65-aba0-87f662701450",
        "cursor": {
          "ref": "aea272e9-0a1a-4d66-af56-7b2cbd28c8e8",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a4161444-e597-4d7c-9e4f-933c55d927c8"
        },
        "item": {
          "id": "8654f0ed-b7f9-4f65-aba0-87f662701450",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e9396666-42f6-4271-98a6-c49bea3a67c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3f620e-eefb-4608-8077-065ad2e0c613",
        "cursor": {
          "ref": "2d335157-9a85-4432-b252-1d72b5388a25",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ac89c9aa-4bf3-4fe5-b413-b564c9d4bb27"
        },
        "item": {
          "id": "ab3f620e-eefb-4608-8077-065ad2e0c613",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ed7bc7c-367b-426c-8770-7e97f440b367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2bc4fc-f40f-4685-94aa-ca6e742bb4fa",
        "cursor": {
          "ref": "241461b7-f67d-43f4-abd1-9afecf905163",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "722d8214-95a8-4ba1-ae22-f8b6596e3e46"
        },
        "item": {
          "id": "7b2bc4fc-f40f-4685-94aa-ca6e742bb4fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d98a1938-d3fd-4362-98e5-c0a32c7f212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de770da5-1a6e-4268-ab8e-a9268b841da8",
        "cursor": {
          "ref": "d04dbd34-d6ec-4dd6-ad86-dcede3877b06",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d1bef317-c0ba-4380-a1e5-9d037b471a9b"
        },
        "item": {
          "id": "de770da5-1a6e-4268-ab8e-a9268b841da8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7566fc29-9baf-401e-ae45-f44662a2333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17910d6d-7de0-4560-98f7-784d4039aa79",
        "cursor": {
          "ref": "244635c7-06e0-431e-8667-07b4db67cf41",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "05823c2b-dc38-4d90-9bd3-51d85fa8cbdf"
        },
        "item": {
          "id": "17910d6d-7de0-4560-98f7-784d4039aa79",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "11ad218a-d449-43b1-9517-52f52865dcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a76e2e2-e547-4e9d-8ad9-9aba41eaa648",
        "cursor": {
          "ref": "fabedee1-ec3d-49ad-9a92-c5838e2526c7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "93654c21-5b75-421e-a13c-25ff65d09f12"
        },
        "item": {
          "id": "1a76e2e2-e547-4e9d-8ad9-9aba41eaa648",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "942dd56b-b689-48be-9b28-9c429d9cf334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fea843-97ac-476f-a4e5-2da1b7cb631d",
        "cursor": {
          "ref": "e471d84b-39c6-4494-aa56-5a0559b1bee0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "252637ae-00a4-495e-a537-9689418e91db"
        },
        "item": {
          "id": "09fea843-97ac-476f-a4e5-2da1b7cb631d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d30b9ab5-a52e-4fb9-b741-b98154b3c782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c87b424-c12b-4d02-8fa7-863fa32c2c2d",
        "cursor": {
          "ref": "93262a39-2b29-446f-8d74-ba2d260838bb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f1467447-7ccb-4ca4-871d-49913bf5f6b3"
        },
        "item": {
          "id": "0c87b424-c12b-4d02-8fa7-863fa32c2c2d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ef9248d3-af7d-44f9-9da2-0046ab4eed75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae82c8c3-5d1d-4e56-be6a-238503ebd08e",
        "cursor": {
          "ref": "97f3e865-dddb-4c75-9da5-5d14ee8d2cc9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "66186f09-8485-4d89-98ea-87aca32462f2"
        },
        "item": {
          "id": "ae82c8c3-5d1d-4e56-be6a-238503ebd08e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1ae59306-94aa-4d0e-8024-723e6173059a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55aaff0-c07b-462f-ab4e-6e67735d3611",
        "cursor": {
          "ref": "f18023b9-e791-41f7-afbe-edbaf07b0fe2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4afb67d8-6493-41d1-95ad-739f0e879ab9"
        },
        "item": {
          "id": "d55aaff0-c07b-462f-ab4e-6e67735d3611",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "73928f1e-1cc5-4e55-b7aa-795cf3add325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185d6290-eabe-4eae-bd3a-16e13b972758",
        "cursor": {
          "ref": "a63e847b-b868-4aa1-b7c7-4cd30e53831b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0adf2c2e-891f-4543-8201-e0dfba2c068b"
        },
        "item": {
          "id": "185d6290-eabe-4eae-bd3a-16e13b972758",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0b218721-abea-4bad-84ef-6ae282185606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bce1b8c-7e58-4e00-a763-40bc8e956083",
        "cursor": {
          "ref": "b64e790b-42b4-4149-97e4-ff066264d099",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "61633744-14bb-44c1-b763-3535ddf660dd"
        },
        "item": {
          "id": "6bce1b8c-7e58-4e00-a763-40bc8e956083",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e80f30c3-ea44-458c-a3d1-db2e3b1f32cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6e31e3-d9fa-482a-8359-b1321c835500",
        "cursor": {
          "ref": "e794d5c2-ce07-4672-afd6-77016fb900e0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6b8ebd65-4158-4899-92a0-a2df4a6103ec"
        },
        "item": {
          "id": "ab6e31e3-d9fa-482a-8359-b1321c835500",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d39450bc-11a7-4b2e-8be4-a3a8026d733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe42e36-608e-44c9-99c1-44065ab30df6",
        "cursor": {
          "ref": "6a180347-b179-4b61-ad84-57dda07ba401",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2b8daac0-d0e2-4cd4-8fa6-af442ced53ad"
        },
        "item": {
          "id": "cfe42e36-608e-44c9-99c1-44065ab30df6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5c16d76e-9adb-41c8-be85-1bc1db2f0cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bea33c4-d529-430e-a21a-6a382ead509f",
        "cursor": {
          "ref": "bc5d5d08-9da8-4379-803b-b0952331b450",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cd2ac5a7-e0ce-447f-b1c1-e17891bf795c"
        },
        "item": {
          "id": "8bea33c4-d529-430e-a21a-6a382ead509f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "407c125f-723f-4bc7-80ee-4d2463b096ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d35b032-0958-49a1-b36a-37deb2157a2e",
        "cursor": {
          "ref": "6d888a5d-2a51-4a9b-9c91-43648dd4335a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "78ce3fe2-abc4-4d78-84d8-c7261a26ffb0"
        },
        "item": {
          "id": "3d35b032-0958-49a1-b36a-37deb2157a2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f331143-6ad1-459f-9fb1-76e92778df73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa32a16b-c253-497e-9b27-7953fb4885e6",
        "cursor": {
          "ref": "c229bd59-97b9-4a6b-8437-2133c0042fee",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dff12450-d314-403e-aadf-756d3286268c"
        },
        "item": {
          "id": "aa32a16b-c253-497e-9b27-7953fb4885e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e28e9b03-874a-4817-bb7b-d3f49c23efb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8686fcd8-2154-4193-be91-f6f02b2b8a6c",
        "cursor": {
          "ref": "c0b5429d-6781-4978-ac54-fdb790916281",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2e42dfb6-b205-4faa-be21-883398b5b569"
        },
        "item": {
          "id": "8686fcd8-2154-4193-be91-f6f02b2b8a6c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5fd971ad-36e7-4f2a-aead-2974bb01bb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b71f719-a3b4-49ca-9a97-83dc4867fd08",
        "cursor": {
          "ref": "45a5ab51-4520-4228-9e3b-63041fcd4447",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "163f9cb0-84dd-4a4b-b7a5-9505d755bdd7"
        },
        "item": {
          "id": "1b71f719-a3b4-49ca-9a97-83dc4867fd08",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "26e53059-6557-4019-be27-82f4466bc012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effa8a81-d661-4a03-b166-3b1d4d633457",
        "cursor": {
          "ref": "0ec2e71f-0a8b-4932-95b2-d53a1cf14fce",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b5c2d60e-07b0-4bac-bda0-6c11a549df34"
        },
        "item": {
          "id": "effa8a81-d661-4a03-b166-3b1d4d633457",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24bf1e0c-27d7-49ea-8c8e-ce1d2dcd07fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b8b740-9142-4343-89d6-3141935e3b4e",
        "cursor": {
          "ref": "97314e9b-182b-4c40-bfb1-1efc41b86331",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d07433e-22d7-4a19-891b-cb771d9120fa"
        },
        "item": {
          "id": "57b8b740-9142-4343-89d6-3141935e3b4e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f0484e5-d30f-4726-80ea-9ea5808d4b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7382cf-9af0-4ebb-bfe3-2acab09e6a17",
        "cursor": {
          "ref": "61e33949-6bb2-4b58-aefd-030db9798d09",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "25f5cb9b-4042-49aa-8418-3c44f6ea74fa"
        },
        "item": {
          "id": "7b7382cf-9af0-4ebb-bfe3-2acab09e6a17",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0c7643dc-9e6e-4bd4-9b8f-3dcc13c65a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f8e305-e4f1-4f96-a9d5-3ac0ece05a9b",
        "cursor": {
          "ref": "d4ab374a-b7f1-4e1e-9f7f-fcc870836e32",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0bc87771-2fec-486e-a149-ca1c99f56a65"
        },
        "item": {
          "id": "05f8e305-e4f1-4f96-a9d5-3ac0ece05a9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a1763124-6e7d-4067-b2cb-3f98d4036c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c9032a-65a3-4a2d-95e6-24d6bb813c81",
        "cursor": {
          "ref": "12f2bfac-c3b1-4985-b4a1-63f67d96c5e2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a980584a-6bb3-4e4b-b846-0f736833fbc0"
        },
        "item": {
          "id": "04c9032a-65a3-4a2d-95e6-24d6bb813c81",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c589a64-6fe8-458f-8296-b42f74540ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc64b25-a8ea-4246-92e1-ddd6ecff8ddd",
        "cursor": {
          "ref": "1a3e5377-35fd-4091-957c-18e031e1fb3e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "edd5c2e7-6430-41aa-9f63-015319a3f8f7"
        },
        "item": {
          "id": "1dc64b25-a8ea-4246-92e1-ddd6ecff8ddd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "05914829-01ff-4807-b7d1-f44340d83d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f560b577-5467-404c-9157-5ff78e452ce1",
        "cursor": {
          "ref": "adaf7db3-d401-460c-aba4-63cec31ceb7b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "383b75a1-810e-4e6b-b8db-0a76453f7105"
        },
        "item": {
          "id": "f560b577-5467-404c-9157-5ff78e452ce1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cef05905-da5e-415c-becd-4800a694841b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153c3823-5408-49ab-880b-afdadcd2ed8f",
        "cursor": {
          "ref": "1e5a5981-eb7b-460a-83dd-606c7d61bb72",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "66e0e01c-10fc-4530-ba69-4915d4880728"
        },
        "item": {
          "id": "153c3823-5408-49ab-880b-afdadcd2ed8f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d93c376-643c-4859-85b2-75a5ee19510b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e889ae2a-6c53-4f9c-b99d-36a9cd509500",
        "cursor": {
          "ref": "270653fc-e225-4577-b8c1-c12521e113d7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb7da11b-59ab-4694-bd0b-2c63dbba1482"
        },
        "item": {
          "id": "e889ae2a-6c53-4f9c-b99d-36a9cd509500",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d270326b-a1da-4b45-aaf3-7b07def9bad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6f2ec7-08e8-47f5-9189-38e41281138b",
        "cursor": {
          "ref": "e0c33e2c-ef4d-4293-b9ad-036444fbbd70",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fefc10fb-91e2-4646-8798-4df03a2f58a4"
        },
        "item": {
          "id": "4b6f2ec7-08e8-47f5-9189-38e41281138b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bfe3864f-09f6-4083-9c69-47af87c1962f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeeba2a-09cf-4f67-865b-8b7e12c5657d",
        "cursor": {
          "ref": "ab30c028-fa7d-4f7c-a89f-49984a7686f3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0ad36c9c-9313-42e5-af1a-ecca3d101fe7"
        },
        "item": {
          "id": "8aeeba2a-09cf-4f67-865b-8b7e12c5657d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e3dda508-5f25-4d69-8c7e-4ac4ff3fc530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f56ede0-5c11-4cda-a6fb-da4760dc7fdb",
        "cursor": {
          "ref": "a019aeee-2337-4818-9132-c51afcf442cc",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b97a58e2-aa60-441c-805e-9544b61a37e1"
        },
        "item": {
          "id": "9f56ede0-5c11-4cda-a6fb-da4760dc7fdb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "705b2b5b-454c-43c8-a4f1-44898ced756a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e23e23-a5f0-47d1-9d1d-4a7ec790ee46",
        "cursor": {
          "ref": "44b29bd0-0214-491c-ad16-28414a4ddc18",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2fde0822-c93d-4726-9c83-c725073c482b"
        },
        "item": {
          "id": "d7e23e23-a5f0-47d1-9d1d-4a7ec790ee46",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "05b55dc3-d0fe-4414-85a1-219e1e6c5f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577007d8-877f-4413-a087-a8a03d3a5f69",
        "cursor": {
          "ref": "e54055ab-bc15-4a5e-bfc7-8e83a239ee26",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9083205c-4b3d-4a76-86b9-a03e8b4eb5e3"
        },
        "item": {
          "id": "577007d8-877f-4413-a087-a8a03d3a5f69",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7b0b0587-5397-48af-8803-5df680d1ea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a569c33a-b94e-4c25-bab5-f83b5b5c50bb",
        "cursor": {
          "ref": "7c87b94d-9dc2-4311-b586-d55b4f82db11",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1f1b358d-a250-4017-abf1-57aeb5d6b1b9"
        },
        "item": {
          "id": "a569c33a-b94e-4c25-bab5-f83b5b5c50bb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a1ab3c90-69bb-4302-9367-f279a4ca8ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245da1af-db91-4e88-ba57-dd07e3665db9",
        "cursor": {
          "ref": "d79e9bc8-4ca6-4111-b9dc-05304a1dcb09",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "943ce0d3-a20e-4bff-81ad-5a4c909ba748"
        },
        "item": {
          "id": "245da1af-db91-4e88-ba57-dd07e3665db9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e317b7f4-81de-4bc1-b3b2-e558e718c8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aebf38-66e1-4ace-b66f-07e99d5d6ef9",
        "cursor": {
          "ref": "2b95483a-a6c9-46e3-a009-db1b59305009",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f5fad201-94cd-4416-b5a5-330ec06a0467"
        },
        "item": {
          "id": "42aebf38-66e1-4ace-b66f-07e99d5d6ef9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6d7214c2-7cf0-426d-b81b-9992df2394a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9ceb7d-a380-47ab-9908-f1baaf35cb9b",
        "cursor": {
          "ref": "bc366de9-cc1d-4802-9e3a-375b401a95d3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3690f269-0b14-4019-95c4-1ac4a67036ca"
        },
        "item": {
          "id": "fc9ceb7d-a380-47ab-9908-f1baaf35cb9b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9476daf7-2ae1-4f98-aa81-8d3403ab4fe4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c4d87-fb0f-445c-ac35-a20b09ed90d4",
        "cursor": {
          "ref": "d20740e6-c220-4326-9215-21be4f125930",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1a439863-adb5-4249-b1af-751b2d10fc54"
        },
        "item": {
          "id": "3d3c4d87-fb0f-445c-ac35-a20b09ed90d4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e61dab52-8045-4153-b0bd-a61ca2fbc8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c37447-ff20-4989-9628-be77f9acde18",
        "cursor": {
          "ref": "e9a75b48-8894-4aa8-a346-635023071383",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "372393de-61af-4e52-ba7f-2b63026e9178"
        },
        "item": {
          "id": "54c37447-ff20-4989-9628-be77f9acde18",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e9788564-2df1-464e-9830-23831250fd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d00f0f6-7920-4379-a538-e072b6cd6a79",
        "cursor": {
          "ref": "fa06b511-ac8d-4e8c-a6e9-fa9470b82be0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "939fb3ef-5b32-415e-a111-928febbc8eb6"
        },
        "item": {
          "id": "7d00f0f6-7920-4379-a538-e072b6cd6a79",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1bcb2d84-654f-495e-ad7b-a7ab5cdc98a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbc12f1-0b93-4099-a3a4-57c482ade2d3",
        "cursor": {
          "ref": "de578f95-ccd3-45c0-96bc-83af73a42f52",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3355b938-7fed-4539-acbd-ce6d027a48f2"
        },
        "item": {
          "id": "7fbc12f1-0b93-4099-a3a4-57c482ade2d3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ed572946-c06f-461e-a1bd-431e4a685d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338ca8d5-b30b-45de-a2b0-68c5b5ef3509",
        "cursor": {
          "ref": "9f9c62b2-f3de-4908-aff1-d9770f6d3435",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e77a1043-3654-4570-a7a5-8cc182e58866"
        },
        "item": {
          "id": "338ca8d5-b30b-45de-a2b0-68c5b5ef3509",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "01f9bce9-5cb5-4297-b842-c4e27f91a675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fdcca4-fc20-4404-9d74-d3a5b765f17c",
        "cursor": {
          "ref": "04d17ccc-a56e-46e7-a836-b10cfff0b698",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba4bd88c-9985-4c62-8cba-511b12209e9e"
        },
        "item": {
          "id": "b0fdcca4-fc20-4404-9d74-d3a5b765f17c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6d7805a9-a862-4391-9a7f-268a896dabc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f406f05-0f6a-4183-85e0-c52ae6d5e1da",
        "cursor": {
          "ref": "646f9abe-e248-4493-9d55-ae040d3246b1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "81b7cd93-6610-4c27-ad0e-6ee45dccbf2f"
        },
        "item": {
          "id": "3f406f05-0f6a-4183-85e0-c52ae6d5e1da",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "91cafec4-83ba-42f0-8826-c5712a3a5f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4c90ec-0d2c-4bfe-971a-023a4f3b5b07",
        "cursor": {
          "ref": "bcfccf42-f029-4f82-9453-4da6c245975a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "20f96e23-f0b0-437f-b167-2533d08aa9c5"
        },
        "item": {
          "id": "ee4c90ec-0d2c-4bfe-971a-023a4f3b5b07",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7a4941aa-389e-43ec-ac4b-b9cb06c4f6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fc9a23-5b46-4163-ba6c-1db5727e9f3f",
        "cursor": {
          "ref": "73856af2-78f2-40a1-9072-de6ee14d6c2e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cc3e2e43-e11f-4be8-b215-f516240396e8"
        },
        "item": {
          "id": "e7fc9a23-5b46-4163-ba6c-1db5727e9f3f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e21a7bd5-04c5-4f89-8830-ce1489e263bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55831009-8440-4288-95ea-71d9969f4b5e",
        "cursor": {
          "ref": "bbca4e02-604b-4fab-9d5d-2ac03936bb85",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e7a52860-5b62-476f-884c-068f2133ffcc"
        },
        "item": {
          "id": "55831009-8440-4288-95ea-71d9969f4b5e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "79b5b5ac-f6b0-4f53-a26d-4c2c3905b8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06716c50-7237-4450-be53-deeb4d337b82",
        "cursor": {
          "ref": "83133d63-235b-4fd2-b835-2a7f7f3e73c8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "94dc0d73-dbbb-49c9-94a6-f4d096e19df2"
        },
        "item": {
          "id": "06716c50-7237-4450-be53-deeb4d337b82",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0cd4e582-7d42-48eb-875e-dc9df1a97bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5fa987-8e3f-4338-b3a7-9cc9f9c458a5",
        "cursor": {
          "ref": "c9bd6e01-c7f1-4916-9ace-e670a3a84159",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "da152348-1e4b-47b4-9bb4-7ff1099f78e8"
        },
        "item": {
          "id": "cf5fa987-8e3f-4338-b3a7-9cc9f9c458a5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5b4d3fdd-807e-4a67-88ab-44c2e9013af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca4e946-d317-49a3-ac81-fde960763e82",
        "cursor": {
          "ref": "91e7024e-7659-4d9d-aab3-7a7b9a8db31a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad7738ca-6a39-425e-918b-e24215e9307c"
        },
        "item": {
          "id": "eca4e946-d317-49a3-ac81-fde960763e82",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6c69f5b0-2c35-491f-9298-db5083316008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dfb9c3-6822-4899-a3e2-caa31e624783",
        "cursor": {
          "ref": "e2c082cb-5663-42f3-b52a-c18f4843b8af",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2b4977ef-9293-45d3-b263-8dd879da0c52"
        },
        "item": {
          "id": "37dfb9c3-6822-4899-a3e2-caa31e624783",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6d8ad466-5263-409a-8193-9671a6521a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216fc5c5-4b26-45da-9cd4-a31d7dd22fdd",
        "cursor": {
          "ref": "b34f1d27-1661-4e59-b1fd-df4cfad2387e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d6355e9c-e53a-45ad-b14a-8f0ba2f7b870"
        },
        "item": {
          "id": "216fc5c5-4b26-45da-9cd4-a31d7dd22fdd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "378a48ec-03c9-47de-a81a-29c7a8ad4509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e6a48-97a4-4534-b5a3-5fe985a79113",
        "cursor": {
          "ref": "a7d946b7-fe3c-408c-8e65-ab64e9527a66",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8434a121-7a34-4386-93fa-30ada028e1ec"
        },
        "item": {
          "id": "a83e6a48-97a4-4534-b5a3-5fe985a79113",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3c6d9381-8041-4204-9a7d-4cdaeb580965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae20dd0-4806-4ede-8624-f63f66435041",
        "cursor": {
          "ref": "5cd4bbfd-c898-48ec-bfd3-187a019e5779",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ba4baae2-a0c4-4ca2-b870-7f82859dd937"
        },
        "item": {
          "id": "3ae20dd0-4806-4ede-8624-f63f66435041",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "76ec2870-1384-4b56-a7d0-f14e08627a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b45a6c-4257-41a6-884e-0aa2dfde8c04",
        "cursor": {
          "ref": "07fbbb13-f9d0-4eee-93c9-a610c38f6c16",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "17259046-5e10-4541-9497-483b8b189629"
        },
        "item": {
          "id": "d8b45a6c-4257-41a6-884e-0aa2dfde8c04",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "67f1da39-f134-4cdf-bfca-0f5438885820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e373d318-ff82-4097-a1fa-72a5b860bb0a",
        "cursor": {
          "ref": "f0606b16-e190-4532-a11a-ef7f708be79e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "edaf85b3-3fac-4803-9525-4102ff446c59"
        },
        "item": {
          "id": "e373d318-ff82-4097-a1fa-72a5b860bb0a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "05aba8cd-8e9f-423c-a410-c8699d513971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0482675-3141-4d8b-aa75-cb21a84e8af5",
        "cursor": {
          "ref": "0462bce7-1583-46f4-a073-501864ac93e6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e7e88494-3390-4a56-8cf7-f91c59588d36"
        },
        "item": {
          "id": "d0482675-3141-4d8b-aa75-cb21a84e8af5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f79130d8-6ab7-42e5-a897-f74958a4286a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60669466-e3b5-43b0-a85a-628f394ac2af",
        "cursor": {
          "ref": "0d18c735-b8a8-47ba-84dc-ad337802b7de",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cf85d9c5-475b-4af4-a3d0-ca852572116e"
        },
        "item": {
          "id": "60669466-e3b5-43b0-a85a-628f394ac2af",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "01431649-9aa0-4f9b-a74a-4e2098989325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3f3688-d9e7-42ef-8727-124060ee2e5a",
        "cursor": {
          "ref": "42a704f9-ca9a-4329-960b-743b06f9da30",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "db26701b-7e64-4201-8c84-b167e23f5114"
        },
        "item": {
          "id": "fc3f3688-d9e7-42ef-8727-124060ee2e5a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c38615b3-4b2c-485f-993d-f5b940c40fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145dbd7d-b137-46cd-934a-7b326f6a0b59",
        "cursor": {
          "ref": "29346727-ad37-4488-bf1f-6a0530d436ae",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "89a4efc3-a33b-4e01-87d7-a279dfa6eb7a"
        },
        "item": {
          "id": "145dbd7d-b137-46cd-934a-7b326f6a0b59",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e78aaf9d-0934-4d03-8e6d-73bbabd85cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288f2656-35a6-4602-a38b-5ddda7a5d6eb",
        "cursor": {
          "ref": "19fa962e-2d5c-4c0c-aaa9-e2024b29e4b8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d1204b13-1ec1-42d6-a1e9-243b4c5719d4"
        },
        "item": {
          "id": "288f2656-35a6-4602-a38b-5ddda7a5d6eb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bce6bdfd-9765-42ce-bbfe-30ee4419d014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a074dd-a359-47bb-b025-8e7dc4d5a9f1",
        "cursor": {
          "ref": "850c03da-3460-4cf3-9381-b5f002bfe772",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a33de9f-8d7a-4f70-b17f-e684ee2f984e"
        },
        "item": {
          "id": "92a074dd-a359-47bb-b025-8e7dc4d5a9f1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5ec66ff0-79c4-43b5-9581-ed736bc9bcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e7fce5-8e10-4350-92fd-de676f87d918",
        "cursor": {
          "ref": "040f3410-1e2d-4c94-b56b-8d2d661e64f3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "78ffdcfb-741a-4344-a885-d0b16aece478"
        },
        "item": {
          "id": "d7e7fce5-8e10-4350-92fd-de676f87d918",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "40d05ccd-bf73-4048-8544-b06b3501e2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05984f5-2a06-4ae5-b39d-d5de5802377c",
        "cursor": {
          "ref": "ec3fcb5d-8bc0-458e-a2f2-941ec77030c6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "78205b8c-ad59-4edb-aea4-a0789d2f28a4"
        },
        "item": {
          "id": "c05984f5-2a06-4ae5-b39d-d5de5802377c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7aa62ab1-7ba1-42d9-b7c1-6cf2b6a02b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdc2eb3-57db-4af3-8779-d367d31f1c0b",
        "cursor": {
          "ref": "819b9d43-d78b-4e94-b83d-ea8408f41f11",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "af823834-296c-4176-b3b0-c97fa3f6e5ac"
        },
        "item": {
          "id": "5cdc2eb3-57db-4af3-8779-d367d31f1c0b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a17c0b2-6116-46f6-9366-a9be049efc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eaf609-6fbe-42a8-90ac-dc020ddd3b01",
        "cursor": {
          "ref": "8a6d703c-9cf2-4dc3-80a0-f1409320c5c2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6afa2602-4549-4d9f-9857-8e9621409660"
        },
        "item": {
          "id": "32eaf609-6fbe-42a8-90ac-dc020ddd3b01",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "38cfe620-53f1-4b37-b048-25b1a5e5498c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51e19f3-b81a-4f23-bc75-bfd0a63e64d2",
        "cursor": {
          "ref": "e4c5cdf6-a525-49fe-92c9-58e7cacc4837",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "774e6eb6-29c4-4bfb-9f8f-8df0260a9f18"
        },
        "item": {
          "id": "c51e19f3-b81a-4f23-bc75-bfd0a63e64d2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bcf2bb9c-5bc7-4921-9c36-9e70b3d9c931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76466ac5-8ad1-4c17-9c4f-0ebd7600c7ab",
        "cursor": {
          "ref": "4e520288-514c-4deb-b084-c4253c43bfec",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "395f5633-f4ed-4e71-8518-d555c7fd8371"
        },
        "item": {
          "id": "76466ac5-8ad1-4c17-9c4f-0ebd7600c7ab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "97ab6304-d684-4226-b65f-876d275b0327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c081c49-d84f-403d-9c35-ab0960612d4f",
        "cursor": {
          "ref": "055b72d3-abed-46f7-b637-c78061c29b05",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0aeee1d2-7dc5-44e8-aa11-71cb37060899"
        },
        "item": {
          "id": "0c081c49-d84f-403d-9c35-ab0960612d4f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fce6a87d-a9f8-45f2-b02a-7e9dc99d13f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b20fc5-667e-4bde-9969-6bb33230c62f",
        "cursor": {
          "ref": "7b676971-d74f-4b9e-b350-75dafabe6b77",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "741a465e-54a5-463a-896f-7c8ecd406b32"
        },
        "item": {
          "id": "23b20fc5-667e-4bde-9969-6bb33230c62f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f012189d-1266-4d72-a903-196cdff30d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a742170-e3e6-4cd1-bc0c-bcc332807606",
        "cursor": {
          "ref": "8b8cd304-8ee3-4ae9-b2e4-a1c4702c6ddc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f5df1fbd-d686-4a9c-8368-b9ec450e3734"
        },
        "item": {
          "id": "6a742170-e3e6-4cd1-bc0c-bcc332807606",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "373f2d64-2850-429b-b3ee-7cc78c1ee41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facef7fc-d296-4851-b210-cfc7bb45d3fd",
        "cursor": {
          "ref": "7a650f8a-7cce-4baf-a125-60255144c2e7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cac9dd68-fa93-433a-976f-4817dde27e00"
        },
        "item": {
          "id": "facef7fc-d296-4851-b210-cfc7bb45d3fd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dd1eb78c-b65c-49d1-be19-ba73614e80fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277b03dc-d437-4eef-aaba-90f589d74d2f",
        "cursor": {
          "ref": "a358ab5b-e14d-41b9-821a-f1a7a0ad67e2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7c84cb97-1fba-4636-949f-4ef8491dfcfd"
        },
        "item": {
          "id": "277b03dc-d437-4eef-aaba-90f589d74d2f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b4a108a7-4065-4c08-915e-85e88a026bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b910c77-2bbe-4312-a106-91f3fe8ba21c",
        "cursor": {
          "ref": "16b2e361-4085-47ba-bc2a-56bb1c25802b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "94d4f24f-0010-4903-b532-5f8a773f0d3f"
        },
        "item": {
          "id": "7b910c77-2bbe-4312-a106-91f3fe8ba21c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f2fdec76-429b-4b2c-9c9f-5cb171796166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526b0e34-897c-467e-bef3-69b239fd9bc7",
        "cursor": {
          "ref": "f7897273-ccdb-4814-8407-7eedb5818f38",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6113a795-791a-4de0-882d-658e8b58604d"
        },
        "item": {
          "id": "526b0e34-897c-467e-bef3-69b239fd9bc7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ed68bbb7-0ff8-4942-9fb6-3f70a56c2f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d5af39-695d-408a-aea3-d1475d611c65",
        "cursor": {
          "ref": "4bc98fca-ec32-4ddf-8688-a4b10f9c6342",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b8909f23-d953-4bcb-a57f-fa887e594d7a"
        },
        "item": {
          "id": "17d5af39-695d-408a-aea3-d1475d611c65",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5d9482f9-cc3a-44ab-803d-f67573704998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4656f9-9e9f-4726-84df-e2b231615f69",
        "cursor": {
          "ref": "6984daa2-15a5-4713-83da-c589034522bc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "74acaba5-cb1f-4306-8b59-c908c4b80e62"
        },
        "item": {
          "id": "ea4656f9-9e9f-4726-84df-e2b231615f69",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1886aba2-342f-4731-bf8b-799b736239fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0917374-c59f-4da5-bba7-2339a6df5b14",
        "cursor": {
          "ref": "ffeba052-8ff3-4550-baf0-0e94bd3933c0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4d29995d-a2fc-4003-a511-b2688a54d8a5"
        },
        "item": {
          "id": "e0917374-c59f-4da5-bba7-2339a6df5b14",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d4b11d6d-012d-4cce-9976-7c3911227a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16ca90-d238-48b3-80c5-c619a8693958",
        "cursor": {
          "ref": "68de024a-1560-457f-851e-be05c8db3085",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "27733fdd-bdd4-4f74-8b24-061e73a9b450"
        },
        "item": {
          "id": "0b16ca90-d238-48b3-80c5-c619a8693958",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "355f0017-7ad5-47e2-8e69-051daed1843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad1ebb0-993e-4362-b3d5-d7fb6d08d0a7",
        "cursor": {
          "ref": "f55d9017-bca5-48bf-856c-ceb848851f88",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "63248908-91a4-49e8-8121-0b46c0ab9ab5"
        },
        "item": {
          "id": "3ad1ebb0-993e-4362-b3d5-d7fb6d08d0a7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "979af857-59de-4e1f-b67b-602573fb5f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd75e0fe-4237-4cdb-95b7-3d7ebb3af2ca",
        "cursor": {
          "ref": "91958b0b-c12e-40f9-b4d6-6506b45d9a15",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "521af3d1-09c1-4239-b521-dc8f3e8a2dd4"
        },
        "item": {
          "id": "dd75e0fe-4237-4cdb-95b7-3d7ebb3af2ca",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e3a945ee-e408-4bca-871a-8acdd757a191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54d55b1-6889-4eaf-b64d-573328461810",
        "cursor": {
          "ref": "30b8de7e-e1de-4183-aa01-b78497ecd04b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c08bdafa-c794-4521-9d72-89f4ee540b60"
        },
        "item": {
          "id": "f54d55b1-6889-4eaf-b64d-573328461810",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "64902d59-edeb-440e-85ed-d3249249785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dda442-32de-4417-bad6-8cb36b2314ef",
        "cursor": {
          "ref": "0a4582f4-49ae-4a9c-8714-593b4f2af586",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c1e7ed13-d421-4073-9c87-fa155ccbeeb4"
        },
        "item": {
          "id": "24dda442-32de-4417-bad6-8cb36b2314ef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "63973cfd-4d50-4dd1-b41a-f93d24dc0615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b988eaf-3dba-4a7d-8782-4097f8f04156",
        "cursor": {
          "ref": "06c2a2c9-468c-4fb4-8db9-79a021a61b1f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fe5e3486-45f8-48b9-b737-8ce4d24cb1b9"
        },
        "item": {
          "id": "7b988eaf-3dba-4a7d-8782-4097f8f04156",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "62ed872b-b271-4d9a-9572-629de2b5b743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac14ace-dd23-474b-961c-54c43a1dfa0a",
        "cursor": {
          "ref": "770e60e7-48d9-4204-8d3d-a2602bb8a92e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a88e8654-9dd2-475b-82d7-5e650bd26d6f"
        },
        "item": {
          "id": "6ac14ace-dd23-474b-961c-54c43a1dfa0a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6957d661-efe5-4210-b681-179f3fccfe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce4cd2-48e6-4762-b8c4-e808a076a005",
        "cursor": {
          "ref": "390df205-0d67-4daa-b9fb-832552e5f829",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14271423-828f-4f82-87a2-afaafd94e4e7"
        },
        "item": {
          "id": "f2ce4cd2-48e6-4762-b8c4-e808a076a005",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9bacb74-4cd9-4be1-898a-d542b322242a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed6acdd-38c6-4f1b-a638-056413955a2e",
        "cursor": {
          "ref": "25aec662-f1a9-42cb-9a6c-0d92ecd96612",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "28c949f7-4e5a-4663-ac12-fe4a5346a219"
        },
        "item": {
          "id": "bed6acdd-38c6-4f1b-a638-056413955a2e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b9e58968-4caf-49d8-86e0-ea3472d26052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e19e60-1ebb-46c9-8733-7bdabe0df7f2",
        "cursor": {
          "ref": "d5a68bb2-bc35-4930-a6ea-dd3cf2fd63eb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c1c0fa5b-8158-407b-9601-974dfadaa845"
        },
        "item": {
          "id": "14e19e60-1ebb-46c9-8733-7bdabe0df7f2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46eb58a3-2371-4dc9-8f29-520b6aab033e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a6f00c-6783-4223-a95d-0f10c7b2a0e4",
        "cursor": {
          "ref": "07e986cc-27a3-4ed4-9ff1-1ea422ca83ce",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "60dc728c-4018-4f6f-9977-1a4b877734b0"
        },
        "item": {
          "id": "64a6f00c-6783-4223-a95d-0f10c7b2a0e4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b03c63c1-eda5-4d96-ac2b-e7c31c02f224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f25d1bc-c842-4ab7-9564-ee280b8db479",
        "cursor": {
          "ref": "8745ded3-f98b-4740-aa2c-19c92b0ed1a8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a004bdd0-b1c0-4ea0-8b51-d2f09d2f51a1"
        },
        "item": {
          "id": "4f25d1bc-c842-4ab7-9564-ee280b8db479",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "aac9e8bc-23db-4f8a-b90b-b085384c13d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c999b39d-a728-43b1-b4ed-5be4dc36b742",
        "cursor": {
          "ref": "26f10f8c-15c5-4825-baf1-2e6bf4268f57",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b0cb3855-7cb1-4a1b-a283-8f3d2be200d8"
        },
        "item": {
          "id": "c999b39d-a728-43b1-b4ed-5be4dc36b742",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "92c1f765-01a8-44ef-be81-af094a87819c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796060f9-7f9e-4ff7-a1cf-2a613f111068",
        "cursor": {
          "ref": "f0109c0d-cea2-42e2-b5b8-dbcc456409e3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cf730559-cad3-43e4-b207-58f6a9978077"
        },
        "item": {
          "id": "796060f9-7f9e-4ff7-a1cf-2a613f111068",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "77bfe997-9a8f-4ff1-b1db-ca01067d8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988537d9-86f2-461d-9ce1-a2826bf61eb5",
        "cursor": {
          "ref": "2883f40e-263f-4f17-8f44-1ea57ae13ebc",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "23567017-67a0-4e28-8850-423754297c13"
        },
        "item": {
          "id": "988537d9-86f2-461d-9ce1-a2826bf61eb5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2faaa7c0-2859-4562-bc5e-5b728771ab84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a725a33-ffc3-44d8-a150-abd183e4cbb6",
        "cursor": {
          "ref": "47ff4f06-d3ce-4671-bdd3-aa61a9abd2a6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4a676b6e-4a77-43b3-879c-bd77576588c6"
        },
        "item": {
          "id": "0a725a33-ffc3-44d8-a150-abd183e4cbb6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bac95f41-71b3-4f90-a247-6b6332870fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e61842a-18b3-46b6-8d4b-4fb3a050400d",
        "cursor": {
          "ref": "c3bba7e2-43f1-4075-8e8e-da97b3425a5f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9a1cbca0-2cac-4515-9217-c279658e4961"
        },
        "item": {
          "id": "3e61842a-18b3-46b6-8d4b-4fb3a050400d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "321dd2d3-944f-4531-9ea5-2c5bc6d8e8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d0e56-271f-44ee-8bdb-c870447c6658",
        "cursor": {
          "ref": "ee9e5026-39d7-473b-85a5-d44fb01e004c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "90bd4438-86c6-4243-a90c-91dc527de7fb"
        },
        "item": {
          "id": "4a7d0e56-271f-44ee-8bdb-c870447c6658",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "96634a9c-75a3-4acc-b4b5-35d7d69127bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd55144-7bef-4773-ae72-ec7f6ff23f48",
        "cursor": {
          "ref": "b1c262f5-1da9-4d8e-a791-6921976de407",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "23a9f841-45c4-4435-b88f-d2f3ed45fa69"
        },
        "item": {
          "id": "fdd55144-7bef-4773-ae72-ec7f6ff23f48",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff2f98c6-38e1-4ea7-a26e-824d4f88da9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca0a61a-b0cc-4d48-945f-f3c4f8749467",
        "cursor": {
          "ref": "c84d705d-065d-427a-ba0b-b9aaed97e859",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "665f183d-8f91-4de7-9b62-5ed1dc88d57c"
        },
        "item": {
          "id": "eca0a61a-b0cc-4d48-945f-f3c4f8749467",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c4039181-8f20-48ed-ad49-48593d3de3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2f3086-a355-4269-a2a3-a8ed9b6ae546",
        "cursor": {
          "ref": "d9bd87ad-2fc6-4741-b0c6-e0e042f27166",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a191fa40-f39b-4980-ab31-72f6c1eb3d4b"
        },
        "item": {
          "id": "bd2f3086-a355-4269-a2a3-a8ed9b6ae546",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9657362f-e2d7-475d-a81f-85d7b0a4008e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858b153b-539d-4055-b3ee-076031bc0e1e",
        "cursor": {
          "ref": "591e7989-ef36-4c05-a865-abd0fe04a537",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "61eacb25-c9b5-42b5-86bc-d9705c156c54"
        },
        "item": {
          "id": "858b153b-539d-4055-b3ee-076031bc0e1e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9ca62135-617a-43f8-8568-7f1f1d57dfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70557609-3207-4b68-b912-9ba86df223cc",
        "cursor": {
          "ref": "3c4781a3-c036-49fb-bb7e-462cf1d5fb97",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "183301cb-4401-492d-8dbd-34e672845f77"
        },
        "item": {
          "id": "70557609-3207-4b68-b912-9ba86df223cc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2b4968af-6c77-483c-bc22-cfb243bcfefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629370a7-e138-43dd-9f14-e2617decfc90",
        "cursor": {
          "ref": "4117cb97-1bd8-4299-923d-d137070402df",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e7d5ff43-ede8-49e0-b185-81f68737357f"
        },
        "item": {
          "id": "629370a7-e138-43dd-9f14-e2617decfc90",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "24739e71-6240-464a-9636-529def3f3b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59339d2-7df1-429e-a5bd-e429e5355630",
        "cursor": {
          "ref": "597c7d0c-21a6-4a89-a35d-f51f2e6a76c1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b3b735eb-67b0-47f0-a62d-4a40e9a5e810"
        },
        "item": {
          "id": "f59339d2-7df1-429e-a5bd-e429e5355630",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1b1a7ec6-b5d1-4769-ba3b-4f8088a4db11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2034675-20d5-4468-a5b1-761eb749a353",
        "cursor": {
          "ref": "cb62b741-8f52-4914-8ac9-03e43b9f9c7d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "977df2a9-87ad-409e-bc2e-275d1fc6dc22"
        },
        "item": {
          "id": "d2034675-20d5-4468-a5b1-761eb749a353",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "50c2cbd4-f496-4548-bcfb-25d3470160e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a77c4f6-9833-4d7a-aa54-6d02ae8b1aaf",
        "cursor": {
          "ref": "61d569ae-4002-4395-8ea4-ac1abbdfdfaa",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "798af3c9-6d50-40bc-afee-c24c9587d9d7"
        },
        "item": {
          "id": "3a77c4f6-9833-4d7a-aa54-6d02ae8b1aaf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ae4124ca-0869-48d3-a732-a7baf9dbfe46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9213a6e6-d883-4b14-8f3d-aa689155b191",
        "cursor": {
          "ref": "37cb6f3e-2f9a-48fc-8c5b-1049333e9e36",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5add00e6-7940-4173-a1fe-0e1bfbfc415d"
        },
        "item": {
          "id": "9213a6e6-d883-4b14-8f3d-aa689155b191",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f6a5338a-da24-4d2e-acef-d3ac749ab408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c272f3c-50c9-4e35-93e1-d17ed7dbf455",
        "cursor": {
          "ref": "c2597187-92a3-4c77-b3d3-d484c592bbc7",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d1d29113-be8d-4420-ae2b-86937e2b7ba2"
        },
        "item": {
          "id": "5c272f3c-50c9-4e35-93e1-d17ed7dbf455",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d19187f3-1f12-4ff9-88bb-8aa99bb66211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee363c8-019f-4a3b-8b4f-4687c6ceb99a",
        "cursor": {
          "ref": "0bf2318b-63ef-4a14-836c-ba784f7ff091",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5c875bdf-6c4b-4bbe-88d7-7b224058a51e"
        },
        "item": {
          "id": "9ee363c8-019f-4a3b-8b4f-4687c6ceb99a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "754d28b5-04a3-4557-bc26-66db4817bc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be03eb72-caf9-4237-a542-468bb6fd9265",
        "cursor": {
          "ref": "519d4d7a-adba-4d46-930f-e4916cde01bd",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3d4c4d9a-c864-43e0-ae4e-d8dd77087f6c"
        },
        "item": {
          "id": "be03eb72-caf9-4237-a542-468bb6fd9265",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6bd2e4f6-b5de-4e7f-905f-d8253113e243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b05d99-415f-40d1-a83d-1e79e4afb149",
        "cursor": {
          "ref": "fdb59ab4-d983-472e-9246-d61c2466b3bf",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3387e413-2f9f-49df-8eca-6a6e952f0165"
        },
        "item": {
          "id": "60b05d99-415f-40d1-a83d-1e79e4afb149",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fb20c434-451c-4079-9754-cb89237b0b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b607cad-7a94-4b25-a172-fc9683cf2cc7",
        "cursor": {
          "ref": "e2c88b63-fe35-4516-9778-ab6109fc3330",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cac10bbb-5b98-4f2d-8632-b8d7d1d44334"
        },
        "item": {
          "id": "5b607cad-7a94-4b25-a172-fc9683cf2cc7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d8d1492d-3d38-42d4-9d90-5f01c4bfc003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea4aab9-1088-4497-9963-840df050e505",
        "cursor": {
          "ref": "a772913c-1462-404c-9ecd-02fdf0ad84d6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "24a04360-948a-48a4-8297-a63f4750b0b6"
        },
        "item": {
          "id": "7ea4aab9-1088-4497-9963-840df050e505",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3c2a28d9-8f6e-44b6-a195-819cf8d8f524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77e0c32-78d0-4a69-8d16-c3b09a59fff3",
        "cursor": {
          "ref": "5f82c8e7-dd32-4529-826d-ff99ad43b06d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f8b0be16-7c1a-462b-88ab-04d53fa9db4f"
        },
        "item": {
          "id": "e77e0c32-78d0-4a69-8d16-c3b09a59fff3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8a5ee75a-617a-465f-a7eb-6b990156cb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b224a5-8388-435a-bb86-975a8685e695",
        "cursor": {
          "ref": "90c21129-c8f6-4e39-80e7-b7f0cba61747",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "789c11f5-7a82-4d11-a3f2-852eae601d34"
        },
        "item": {
          "id": "d5b224a5-8388-435a-bb86-975a8685e695",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eb35b3ec-5f13-49d8-96d6-ecfdc63e675e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bc7678-e533-4f56-bd62-3dfe4ec20375",
        "cursor": {
          "ref": "31dce85b-95c8-4bff-8cec-e3a6f73739fc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "44ca3dfb-80ad-4964-b4bd-d0c80d490dea"
        },
        "item": {
          "id": "77bc7678-e533-4f56-bd62-3dfe4ec20375",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4e3a9c16-1007-4cc4-9727-52c69f849acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639792d8-bdd2-4511-8d49-fef85a010e5e",
        "cursor": {
          "ref": "0eee93f4-487b-4d9e-b332-f57a38568840",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4e9516a-fc42-4f86-9082-e08958991428"
        },
        "item": {
          "id": "639792d8-bdd2-4511-8d49-fef85a010e5e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "64a326e6-9616-4070-b85a-90134ac9a3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8754728a-ec85-46ec-b657-57288e173b78",
        "cursor": {
          "ref": "bd7aa9aa-90fd-4e25-b3a7-56e5be21d450",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "30ee9a1a-b724-4ebb-bfd3-5f460a553b43"
        },
        "item": {
          "id": "8754728a-ec85-46ec-b657-57288e173b78",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "25858161-5b74-4142-aa26-d59e79769c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c028f109-4969-49f6-b29f-5a67943bfe06",
        "cursor": {
          "ref": "2953d0b8-d3e7-46a1-8e95-f7c11f4899dd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "32800f37-45bd-4f77-8005-916973ae026c"
        },
        "item": {
          "id": "c028f109-4969-49f6-b29f-5a67943bfe06",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "805a60bd-4a5b-436b-982f-1ededc03f65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a387a09-90e6-457b-80ef-359d38a05914",
        "cursor": {
          "ref": "05302f83-ee05-419a-8605-fd3010b91b46",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e05418cb-6ff1-4ae5-8e6b-1bd61f458071"
        },
        "item": {
          "id": "8a387a09-90e6-457b-80ef-359d38a05914",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "15ca6922-a0b1-49a1-a722-2a7965e1327c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916b09c5-165c-4bd3-9c3f-d7fcbb0cc370",
        "cursor": {
          "ref": "2e17ee3c-0c86-4c56-9e13-87dccabad1bb",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "52bd4b0b-009e-4b49-8774-99c39e0908c1"
        },
        "item": {
          "id": "916b09c5-165c-4bd3-9c3f-d7fcbb0cc370",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a7db7404-dfa0-4f93-972e-0d7d446e6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b5818b-9ac0-43b6-8b79-6161c8a7906c",
        "cursor": {
          "ref": "dd58ff3f-332a-4987-8f06-665859c3981d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "becfa767-5298-43c7-8f9c-4addce14d34d"
        },
        "item": {
          "id": "04b5818b-9ac0-43b6-8b79-6161c8a7906c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6e155835-5c16-4b2d-8dd1-af6880f697e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9656c561-0113-4f78-afea-3e948f0c7c8b",
        "cursor": {
          "ref": "f1893f65-c146-4a3d-befe-02a1d5f03cc4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d7ad9156-0d17-4cb9-bf5c-1aec042a49d1"
        },
        "item": {
          "id": "9656c561-0113-4f78-afea-3e948f0c7c8b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9654f226-046d-4e77-97ac-f35c29a9e372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac2ca72-46a7-4e09-a47e-70d4c96cdeee",
        "cursor": {
          "ref": "f7a07226-150a-4c25-9435-fc5d2aec1b69",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "beb16c77-1688-4b53-bd86-da7fa84545fb"
        },
        "item": {
          "id": "7ac2ca72-46a7-4e09-a47e-70d4c96cdeee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "653a1e86-4568-426b-a77a-29ef1d62accb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac476b6-5689-4e5b-94a8-4d76ff14de80",
        "cursor": {
          "ref": "55be3835-5566-4136-a266-df696abb6175",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8d2ee7ae-698d-48b0-9123-17db8a7b3a8f"
        },
        "item": {
          "id": "aac476b6-5689-4e5b-94a8-4d76ff14de80",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "010b8bd4-925d-4a5c-871e-1b402c6e4176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdd6119-87fe-46c4-8acc-82b0948a4a34",
        "cursor": {
          "ref": "11dcc263-fc85-4ae2-8d8e-dd67ec64516d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a79f1e55-d67a-4ef2-8e35-32c2992d8427"
        },
        "item": {
          "id": "8cdd6119-87fe-46c4-8acc-82b0948a4a34",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f5af93be-10dc-4d96-9781-7dd8b3965baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9eed76-e05c-4f8c-853c-064207cb55a7",
        "cursor": {
          "ref": "1e8b66f6-be20-4036-8bf1-16f6279cd15d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a9a4f39d-bdac-4c41-a413-e3f4be7cdc8d"
        },
        "item": {
          "id": "3f9eed76-e05c-4f8c-853c-064207cb55a7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cad4f6c8-b266-4e12-af45-fee16b223855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34836ebc-1f82-4487-8d45-f44be103c70e",
        "cursor": {
          "ref": "0d0b217e-87f4-41ff-aa05-189c5eed5ddc",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ce3168e3-5a2c-410c-a477-916d1677a815"
        },
        "item": {
          "id": "34836ebc-1f82-4487-8d45-f44be103c70e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a8aff251-1848-4745-9f13-359509dc7ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12305948-10e4-4a5d-83dc-dd5247e3a133",
        "cursor": {
          "ref": "909a7584-b44f-4a5d-90b5-6b8c1a6e4cf8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4064fe15-c5df-4a38-8914-a2c2196929fd"
        },
        "item": {
          "id": "12305948-10e4-4a5d-83dc-dd5247e3a133",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "12f41e5c-1a1e-4693-be6e-b178c996d3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879bc985-0dbd-4a85-8da2-3ad7e2f8de47",
        "cursor": {
          "ref": "deb3ce86-a920-40e5-9dff-cc703f2ca01e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0cd8799c-1f40-46ed-8370-26221533dc8d"
        },
        "item": {
          "id": "879bc985-0dbd-4a85-8da2-3ad7e2f8de47",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ecce931c-e0bf-4126-8161-706572b2b91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acee19a3-0d6c-438e-8368-b291875c3030",
        "cursor": {
          "ref": "e99714f7-f3b6-4b17-aba0-af6158c8d1d0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "32a0338c-dd3f-40a2-b644-9088bd14eca4"
        },
        "item": {
          "id": "acee19a3-0d6c-438e-8368-b291875c3030",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "43a908b8-c630-485d-b584-90efb380a26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee672a5-d45e-461c-80d1-170c2fe7c49b",
        "cursor": {
          "ref": "a09bd4c3-5295-4383-851c-23f89e3e74ed",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fbc141a1-d3c1-44e3-8d90-29df0161d144"
        },
        "item": {
          "id": "dee672a5-d45e-461c-80d1-170c2fe7c49b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "87f54066-76c9-45af-824e-b9f622a74a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0281babc-e38d-48ef-bcfc-5589f422dc66",
        "cursor": {
          "ref": "2d11626e-a900-4570-b4e6-252e82059893",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e2494000-9f9b-4f4e-9503-043342ae1dfe"
        },
        "item": {
          "id": "0281babc-e38d-48ef-bcfc-5589f422dc66",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fabf7498-7c53-4acc-b4da-991c2f91d8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168540b8-859b-49f3-9f47-9f14841cedc0",
        "cursor": {
          "ref": "81869003-10a9-4c8e-b1fb-639067e791c7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eaa68ee4-33b2-4caa-ae4f-d6ec5d4e6a23"
        },
        "item": {
          "id": "168540b8-859b-49f3-9f47-9f14841cedc0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3aef470a-fc49-420a-bd90-885a802c2f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b935ab88-9896-49d3-a19a-5ed787a422ea",
        "cursor": {
          "ref": "e3d059e8-84bf-4ae6-9241-6eb3b07ab370",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6fa94697-3987-4f55-8347-82804912ea47"
        },
        "item": {
          "id": "b935ab88-9896-49d3-a19a-5ed787a422ea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f9050ca5-10c6-4b90-ad50-1658241e7cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601d5af4-08cc-4e66-ad71-a698471951b9",
        "cursor": {
          "ref": "bd78e36b-02d3-4858-b4ac-e52fa201537e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ad91d14c-00f8-416c-a521-eca27b1d4e3e"
        },
        "item": {
          "id": "601d5af4-08cc-4e66-ad71-a698471951b9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d7830a04-4af3-4ec8-829c-57742df9d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e1973e-e1ed-4a73-8b44-6c24c1c1465c",
        "cursor": {
          "ref": "d44400f2-7ecd-410d-a64f-8886ed5ab618",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0259ba46-28da-4d7a-bcad-d4dd75c0133b"
        },
        "item": {
          "id": "c3e1973e-e1ed-4a73-8b44-6c24c1c1465c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4959064d-1419-4b13-b1a9-e0899f04471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "99e31b31-3d48-4a79-b899-ebdbb1b28baa",
        "cursor": {
          "ref": "721db5f4-156b-405c-b843-2f2c476b068d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aa5e7be5-034c-4d7b-bce0-1f5278b73729"
        },
        "item": {
          "id": "99e31b31-3d48-4a79-b899-ebdbb1b28baa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7c320f44-d049-4d5a-930d-9f88ff2e18a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "ece3cefa-cab2-406e-be24-c0f00edee2b6",
        "cursor": {
          "ref": "b73e9580-1037-40b6-ae96-cf3bcbcd9715",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3917f768-fec4-4f66-a307-9b646b317bfe"
        },
        "item": {
          "id": "ece3cefa-cab2-406e-be24-c0f00edee2b6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "18689add-7d47-476b-a5e2-d126f15490c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "ea81493c-e3ce-4f82-a173-33afffa7a35b",
        "cursor": {
          "ref": "4054c1cc-b787-4890-b8a9-015125d65fce",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "51ff651d-0e95-4cff-9b94-20f5e5cf7e3d"
        },
        "item": {
          "id": "ea81493c-e3ce-4f82-a173-33afffa7a35b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72001963-f84e-4735-8f61-ac84852a16b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea81493c-e3ce-4f82-a173-33afffa7a35b",
        "cursor": {
          "ref": "4054c1cc-b787-4890-b8a9-015125d65fce",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "51ff651d-0e95-4cff-9b94-20f5e5cf7e3d"
        },
        "item": {
          "id": "ea81493c-e3ce-4f82-a173-33afffa7a35b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72001963-f84e-4735-8f61-ac84852a16b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713449ea-526d-40f8-a4dd-ceabcab4c7d6",
        "cursor": {
          "ref": "7228a785-a237-44ed-a07d-df8936b285fc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a00ce11f-5e6f-4b70-9873-a8fc1a39977c"
        },
        "item": {
          "id": "713449ea-526d-40f8-a4dd-ceabcab4c7d6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c95f1546-bd4d-4cc4-9d98-0fb5586eceed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce7bb24-7c7f-465f-9482-40498f326a72",
        "cursor": {
          "ref": "16ae1efe-7b61-45cf-ae1d-3f6ac61172c6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "67ec65ed-e151-4f82-a26b-b4313892f5ec"
        },
        "item": {
          "id": "bce7bb24-7c7f-465f-9482-40498f326a72",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "77a4da63-2f36-4d20-8445-686c3908ff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}